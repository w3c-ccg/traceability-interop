{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "54048186-80c5-4436-8e95-26075ef91b89",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bb7b5345-f47a-44d6-90e2-df23e673bb7e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c8444ef-abb1-48ae-9852-ded38644e03d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad4b6914-9370-438c-98b1-9974ff7fafe8"
                }
              }
            ]
          },
          {
            "id": "0fe05139-eca5-43a4-bb05-bca007e2a382",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5511d7b9-5e20-454c-af22-a8ab8856bbf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe2bf499-1e8c-46fb-82b4-c1bed2129a31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b047b650-a884-4096-9e70-810b6d593c4d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e158af70-c2bb-4ede-8ff5-328dad64a506",
            "name": "Positive Testing",
            "item": [
              {
                "id": "941b2866-7961-472a-98be-049abfbaffb1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "209e55a7-0e4e-47a8-bf01-f08f1ff722d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76bf087a-8314-448b-b693-03e415aad68a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87a3181f-8973-40fd-859e-cd74dbad3ee5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cac5aa1-c6af-4776-8ad4-396014e72093"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e773a52-5f76-4e6a-8661-690589cccc1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7413b87-eec7-4925-8cd6-135abac4c070"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400793b6-05d1-4986-9fde-6872ece4698a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fa0ffe2a-1c6a-407b-a29f-348df1b73da4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "894afa34-cfdb-4fd9-a702-678bde3bd86b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce7c3250-e00d-4669-b2a5-5789f81ed997"
            }
          }
        ]
      },
      {
        "id": "ed0182c7-7459-4bd2-8216-ffdf9d908c3f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6ec25ef8-0c5a-4a65-933b-a1fc91fff337",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cb323b0-0bba-41d8-9649-d733ef70069a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c34bfc52-6863-43d8-ba3f-e4366cd8a145",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65990351-9710-4c84-bd24-da12424ff75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0d583f1-b172-4c60-bb58-aea451ef2f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d2e09f-0a2c-499e-9cb5-ac2d4a48e7e9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2424b4-2015-4362-9595-3106443aee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "388cb81f-ace4-4a46-b222-7767e36bc548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8bf36d-1db5-4f0c-9238-45ccbe477b1d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceafe18-5907-49b4-8e06-c753b8e55fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b45a872-eaec-4518-b77a-53a0d23fd96e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2820f367-d67b-4877-b679-c6641f7efa41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dc13ab7-2e0f-457a-9771-b70cbdd41f84",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8467dfe8-e35f-40f4-b679-dee9612512ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f84f546-c1f4-4168-9d51-0493567ed785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9733d1e2-008a-481f-b757-82edbcae7fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7accf906-bb04-4ca8-905f-37ddef9b0875"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8aea2949-9cf4-4a2b-9432-cd93cd52fbff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7975b1c5-b156-4b91-aa2c-84f70fd02233",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e478db8-7127-47a2-b5bd-f3274b489bd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2061601e-a257-4eb9-b410-a88acf9a0ea8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "475bbdbf-dbd4-43e2-8f39-05994186a883",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f5117887-624f-4580-8116-65c660f330ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86ea1721-eac6-4c0e-83e5-849f5fe7320c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c9c5948-40d8-4f79-a82d-ccd308298d93"
            }
          }
        ]
      },
      {
        "id": "b5165b7d-796c-4012-8304-9dcfc0edbb6d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6580cfff-367e-4a6d-92eb-452bf0565c2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fbc7a22-7399-4cdd-9856-7cb15c608933",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "16bfefa0-c8c2-45fb-8daf-57c0f31758f6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67d7185-3d8a-428d-b927-64fdd370e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706dbe03-57c8-4bc9-8f41-95a3a51a11bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4421f5a1-2950-4c82-b4d0-1fafe94ee1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7500e237-33cf-4444-a871-36ff86a76cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c36af3-cf6f-413e-ae11-952c4a690b68",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cdcfc-7d20-414d-90c9-449126c738db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020e4891-4018-4bed-8879-3810c36e3d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4292098-3294-4a9e-94c3-e064780df641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1f3106f-3257-45c8-96a9-fd97c09075bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5260476a-4af3-4ba3-afe2-72058380f3a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e1e79-4a71-480e-829e-7fcc6e10bc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baa8ff5-fedf-402d-9c58-7e12ff0da4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcbe226-cf1a-4537-8e27-234b212e7638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f8a887d-955e-4b78-8544-dda76288926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714d23fa-d949-4bc3-905a-19e145593b52",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59d4e73-0a85-47ba-87e1-1e4b58acd66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbd2849-2756-4115-a320-b88f5d035657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e1a66b-930f-450a-8f30-42df3674ee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557d7902-f104-4834-8913-d68536f033a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42559891-fb17-4e6e-941b-ca46d036611e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1ea42-b592-4b27-b0dc-12632868c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd2a7fe-11ad-4ec2-9da6-b3ab82d5f8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5a287-8356-4fbb-bbbf-41e4cab9b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7bb3e5-9817-4fd9-a48b-75d0ee170a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c71a3b8-df61-49f6-bf81-6b6c2064c849",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a9812-1e17-4210-bf09-284ec84e33e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06c1034-7122-4fbc-8328-d970a35b62d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbffa4ea-b293-472a-9f83-d35f0251c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16d57b40-8cc4-4324-9068-3e957d39517a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da07e7d-a19d-4082-8084-e9f8456b8467",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb96ac8-7e2b-4726-8468-80923fe7eb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1921497-dcea-4027-a420-989fe2750507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be46bb63-9572-4665-9c38-ce4c3b5b9d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6947060e-4ffe-4c6a-bb29-b44ea4f4abe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda8652b-62a8-44e3-9a56-68706d361d9c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802fd879-d6d3-4739-a7fa-14d3e15fee2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13184fe5-bbd6-4dd7-bfca-48b85dbc8fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6736fb-71d3-4ab4-9b3a-d61276da98b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d225af-eea8-411d-a7bc-998b119d118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ebf511-e395-4e1a-8bec-7024dc303b7b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c872be1f-1ca3-4619-a22b-025f8f32e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e3dbb1-a389-440d-891e-b3d92ee0a574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e68246-9afa-4704-b222-7dec2baff566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "715376c6-7838-4592-a925-3ea81e0e5379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69688c5b-f0da-4a7d-82b2-ac05236abf2a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5b59a1-c26d-4ce1-ab15-edc160c2f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587a8f37-31b2-4d22-af71-7b0fc724bdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72633d35-98da-43f8-9606-89d1f5d7ce71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b8c9de2-a232-4c87-bc1e-6ec4aaee8e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5f8efb-b741-4c9b-bf55-75b67e95c967",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eb5801-c77e-47e9-9a26-30b494c029df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db472f55-64f2-464b-8777-ccf84469b505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5bdfcd-3797-4bee-9196-6acd9ffca031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bbefd6d-bc25-44f6-b43d-140caa2a35e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fec4b3-1798-45ad-9288-74acdc40e02a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff73c847-e597-4dd4-90b4-98fa68daeffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cfdcf8-f23a-45b7-8137-0edea8570bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88798d-dc5f-49c9-839a-cfb35ed2fa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a3ec6e2-7313-401d-99a7-6384a84ddb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021dae62-ce8c-40c4-9a34-c8755bc3b5fe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84743ca-0ce6-4e85-9d79-a44434ec58e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f965fb-f7bc-4a3d-9e34-f4e9837245d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321691e9-47c5-4862-bd76-a6f609aa9d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb2cf515-b766-4a0b-86e5-54b1061f1163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f1767d-808f-4b1a-810c-9b2496e63051",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61250d6-7a94-4547-a753-30a1acc4b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685ded60-5407-4e43-aead-2d7f5e137e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1f32c1-1f42-49f6-b57b-22cb16e79567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb8d3ae-c7ef-46b3-8957-51667694644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff9b280-f5aa-47ea-aee9-1f28a0abfa20",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e5ec92-5d09-4146-8cec-3608ddf2cb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa14aa60-bca5-463e-a165-319c555c5b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b271e2-99c6-4372-8af3-78c8f5d87dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "173c8e78-30e0-4081-b050-f63546a91353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4b604d-2abc-4eca-a0e6-85c0a20ef5ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e1c5ea-e097-47ca-b83b-7ff964294a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f4b6a6-9166-4e11-a5b1-6352532ba9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0fd05-cb3d-4adc-b307-98c4b59a6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd3f0b7-e247-4273-84e8-817dbc883764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d280375-692a-41a0-9dde-f0eaaf152ae0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd29ed8-72b4-4596-9255-dd095d3e0727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ecd6e4-c42b-4220-a07d-c1abca271ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97406fb8-ed54-4111-9de2-bf1f7e7edb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9748384-b844-44d8-a2c2-e4c63a813041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb816bcd-165a-4935-bc43-b5968b240e32",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f29334b-115c-4b21-a1bc-cfc4aafbd6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5203de3-e145-4663-bac8-0a6801a7b40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb5b785-c317-4aef-aac3-19279dca6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce01b6b7-51b5-4bcd-8ddf-0f80095f17ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ecc51e-c627-4cd2-95f0-a7889d81e412",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c07f6e-22db-46ec-836d-4dc1b77787b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fcb544-41da-4d71-b67c-04266644d5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c763c6-6ec2-4e6a-a837-773d12de7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5955ccaa-2664-4867-b9d3-b77146c7bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2fadd2-0383-4a78-9f6e-bf7a49b946a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a325e04-fb39-4111-9391-33b93e2534cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636e2de4-1e9c-409e-90f2-57f244c1d8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49447b3-8818-49ff-8879-13de90b20778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5403f070-be8f-482d-a0cc-d81686f85f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f608bb-b7f0-43e1-a4a8-71d72f3d0188",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fd7db2-b341-48a9-ab63-4aa71b86b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81266789-a3fa-46be-9d09-63d19a339264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f40345-709b-4d78-86c2-18527d2546a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bee01ea-797a-4010-9a6b-2a16000e59fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b955e-967c-42c3-ba26-ec47aec959e1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cb29b8-8df6-466c-9835-07441e83d351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f583fe-c056-4e69-9312-9edca752b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e813532d-2ab6-487b-80a7-4382d9cb341c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "313c686a-6a6c-42ab-9af3-f70192b1ecb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9977051-34c8-40e5-b39e-5c7826a6773e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b35121e-fa45-489a-b42d-9a6056e70765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf06e855-daca-4ebe-af10-a7d2ea9f2190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ae1171-a666-4f40-b7d7-e5afeb428bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d65f8a-ca83-42b4-996b-d102f89e5e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0ac1d9-6e1d-41fa-bde1-8c2cc84af15d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc748c6-e444-4c7f-8bb4-060a4649ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffeeec52-5c38-4346-9c43-1be65a919646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e5c74d-78ae-4525-b51b-19f0dbe95685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8415606-4606-43bf-a504-8a8903246f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545072f3-9ed8-4ed5-a769-7f3a10da1549",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f22ce4b-de15-4e50-a2ea-093e2cfcbd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bda5c07-8648-4ce9-a8bc-bfc250481f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13687a76-a32d-4714-85b3-82eb2ed13c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a3a08d-b665-4a60-9706-d2fd3ed7b18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2982716d-88a1-4b4b-8047-1706a2fcb578",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd9fce8-4ff8-472d-83e3-b1e88feede70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6285b1bd-f05b-40f5-a2c1-9dab282865f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df81bd0a-caa5-4bd1-82f1-5073e502c66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1d6707-5ef5-43ae-a9f7-f1b8fea3efc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef24f178-036e-4afd-ae15-e04c4b9cc71f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2fba4c-3a75-4c31-b02b-c41883d61ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864362d8-d100-42f3-8581-49aa1c70dd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ca9412-ce6d-4a05-aa1c-56da0d115743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d6c25e-81a6-4202-b98f-d587c040a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575dc55e-736e-4fd3-bbaa-f3b0ffc7c37f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c16a055-71e3-4e20-bf31-50319cb3904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0903bbf3-740d-44dc-900b-19937dd3c322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9c35b0-6f9f-4ccf-8071-bb483e91d975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89153f81-48f0-4991-aed1-732367278f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2118fa-8ede-476d-a175-687704eb15da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d644c2-5baa-4282-898e-f44844183744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6041e576-bcad-47bf-9c8b-505113096110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ad7c2d-e44a-4465-8a32-69cf8bcb1c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3eea324-4ea5-4284-95f5-f4717acef35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52854372-b7cd-417c-aed6-db91b0919992",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc11eace-5757-4e68-bdc7-be83480f7852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2cac7a-9402-4910-b4e3-ad40646fce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7453be-c8f5-4e1c-9f0a-6a22d1df3082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64915f5-2a9d-470a-810c-a819f5cd7074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb481a6-c24f-4a51-bfd6-527f5bfc9841",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5c8de2-17bd-4f0d-8d95-9becf37d492e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1bce6a-fb46-42a7-8b4b-0c86c6fc3986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e05c92b-6d76-4bc7-965b-e0c4a07bb66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bed965-dcbb-4089-8f71-8e445b8d7991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c21138-f128-4b47-b0c1-a82875ce6b3a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6de1a89-e1ad-4045-8d56-0b381e65f18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0195fe-6679-43d9-9951-9f7af8b58972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb29f9d7-b96b-4cb4-b6bd-f390582fff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "924151b1-f78c-434d-a8a5-3ab010d65326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ba176c-109a-4ffa-adf8-3c0e9749340a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be413f2-2f98-4fe3-bf93-2bb03a2e0188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e569c855-417a-4e44-994e-703cc5672734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79701b9b-e9d6-4cae-a283-3f1f1b32ae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b267e3cf-6a1d-44ea-97ec-d7c4b1d49f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689e8c38-9522-47c9-925a-9d9ee5ee8eca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f551a34-c53f-4901-a2af-5c2d295487cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32370988-3ddf-4df0-8275-5fd9a7b9bccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d124c1-7a27-4049-a4d5-d6488bd75588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2ca637-e80c-469a-a08b-bcfe0b44d824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910579ef-f889-4bc3-b329-dce14e7984e5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e6f03b-2335-4613-89b0-06f547496238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1261a58e-8aec-4b14-8f12-05d7ae114f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3853c1e2-dad1-47e4-b977-ada877da5843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "990aba32-c6e7-4494-8342-ce80aa6d9f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4581d3aa-03bc-45df-a431-1a495393a95d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f092a5bd-fb29-40c6-8969-d43a2daff6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e87c1861-d7f4-40f0-ab88-f0898c8f1c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ffecaa-78d3-4e1f-8c9a-41f2223c8061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "662dab7e-c477-4e7c-a5f7-5d65eade9a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc58fb7-7b47-4cf1-9b27-aea807bdb85b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88a5e49-4a67-40d6-954c-d026974bf361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfaadfb6-2c8b-40f4-b2d6-161f18d1a745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d2bf18-5bd2-4994-be5b-f87723e91686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a8658e-bbba-4c52-90f1-cd400e206058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858232bc-cc59-4fa8-9aa6-309d485d9204",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6915ba63-95c8-40ea-8af3-410975a01c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac46b48-ff06-4da2-831e-c87bfa6947a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4052334-e055-4313-84c6-5e17c5852e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b25a1882-441e-415a-8b44-97514000cc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03ca444-1994-4b60-9062-9e6ce1b6028d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26b9f3-32cd-48b8-8e52-59f02b9978f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f792b185-3b74-4810-8b02-2fc49bcb94b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe8a97f-d79f-4c69-b83e-fb1acb949008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15d0c76-a008-45d8-9aea-969e37875fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b93a79-ecdb-48b8-b84d-7bafa54c6b4f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73247307-4a72-41d9-a541-1ed3c036bea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203e50aa-99ff-4b9c-ac4e-d5fc70d8aaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada882bd-1bfd-4853-9164-b3a564699977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c913e0-8ed6-40bb-aec1-21a41d0e904a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5297d776-c708-46d7-9167-4f3efb931d4f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c7a21d-459a-44c3-9ec6-e2f5bbfbc1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22f91d0-de5c-43f2-b48f-5b397ef08512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff98c7-5c0c-46b1-8ed3-7aeac670115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffab72ca-d994-46d5-904d-e4eb9b2af32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be397252-a725-4d0f-b724-1c3d35dc1353",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ce8137-7861-41da-afa7-4af5418712e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9573e5c9-4f3e-4602-91b3-33d91422d3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685b77ed-ae96-4d8d-ae67-89103b8a6a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "99270925-e604-4724-b337-a1c61f0abc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb20cf39-40a4-4540-8cc4-0ba298a920dc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575ba199-ae88-4377-88fa-c0c5eeef68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd3a413-92a8-4d52-a64f-abdacb99bf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369cb3a5-4faf-4745-a529-a85ae9668266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87059030-2e38-4b47-b195-d170ef064b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29db3244-481b-4225-b24a-36e8eb1475b0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6e0c1-21f1-4caf-8897-31792b76c78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bedfba5-f30b-4fa0-8ee2-2f83e6627f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f93036b-48c2-4d5e-b731-9552cd67cab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63e4fc3-068d-4cef-bd27-ef330a35883f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6252b2ac-715a-4271-8b97-48c4561ab6f0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee0061-5a61-4ad0-adbc-17686fe062e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5bfc17-b8bb-453d-b02b-db790490299a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d42305-577c-4d97-a7b5-370b52e9b602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48302daf-d6cd-4b62-9bcf-fbfffbf74dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c366f5-2562-4faf-88a2-d082d7789a56",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ba3ee8-3bea-411f-898f-2c8738a9298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766928df-a53c-4e36-808f-4e0c93866a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c8cc1-0677-499f-a219-5da78ad1b61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a74c46-e082-483a-bfe3-0fb959ec9633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a86f20-5117-49e1-a38f-ae8407fe6a7e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2f0216-c275-4b3c-b31a-118b18a4b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7efc485-d61a-4d72-a8a5-9103bf920bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef246529-5fde-4ce4-8bca-471e076ecf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "004f9a2a-05b1-41c5-8cb5-f9d73af52612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b4fb81-c8dc-41e0-a6b5-82b2841ccc50",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d59104d-c17c-48b9-a276-8db2128a724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3425c1d0-5713-47cd-9ecf-fcf12f417455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbebc576-0c6d-47d5-9530-7d0c71532e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23411d52-d2e6-4c17-bc6a-a4b4ced0519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce3134-6211-4235-8b56-614375f5351b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f290f71-59ec-4f84-80f5-2af705327762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3ad8ba-8886-4c0c-aa55-6848b722dfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80607148-a134-4889-8bba-4d4a8a40a1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c33731cf-0fdf-4969-b794-1ca03981fb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f40908-c127-46fc-b7df-dc716e0b8d67",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211c15b4-5d52-4b7f-a6ab-f13d82880d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6bf4a3-d9dc-49aa-916a-ab67a1ae7034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aebbe4-35dc-49e0-87e3-f9812cf2f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55717448-d5c0-437d-8f7b-faa11b6c41a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760b7c85-828a-4acc-8607-1f277c1f55a1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55897128-fc2d-4b65-ac73-30bb6e529778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a7f336-c8f5-40e1-b1d6-7ddc2443e151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e8d82a-cdd9-4f2c-afe4-2ca6d330b6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "416f0166-e057-4212-b88f-25f757b3b20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c548d90-3d83-43ba-b679-8c49aaf1f0c5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec486a4-d34d-4516-b9d7-ec48ed494fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36824f34-6d6b-489c-8c79-ece99e8037be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a783c97e-2790-47cb-825b-f31ba959d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22e54d8-6da9-495b-ad71-e2dad6fd9e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5192b2-fee2-43a9-aefd-d9964887a9cd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab2744c-675d-40c6-91a3-b13f12f99208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fc9005-25ca-42ce-b98c-b6a30c71695b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c23713-e9d3-470c-bacf-9a2750d84222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dd6370-d7a1-4d36-96dc-b99f6c8160f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc22995-8705-4e84-9ab1-7ba012322465",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd45cef0-f3c0-4a06-a26f-379533220480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f62569-e3d5-47c0-86e8-bb7a2ea9443e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d529981f-1c1f-44fa-b70b-a23e64dbd5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "829d6d47-3ab1-4254-8b1a-01fba3f58806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c8188-f084-4fff-8d74-20f930d4a15e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb4a883-711e-4898-b5be-628619ade1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81a74cd-a770-4cc3-ae2e-38a4073d9fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9d8090-d5e6-4560-8d10-63241fd19d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ea8b6c-7a25-4a6d-bfdb-cde1109d4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f4fd73-2c8f-416d-a0ab-ea8a67e6a3b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc47be0-6425-41ca-92f4-69abb1e2c030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0aedee-f54a-4ab6-ab6a-c9ebb39f6596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be251895-987d-4608-a0ac-af0d29978c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdfee60-a50d-4cb0-a1c2-d47f12ebee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e05039-5306-4633-b619-d363b4c897ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c46267-bd6b-44c5-8be7-532c05e6c529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d6ce29-6052-43dd-b8d9-61e9b57f0998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5146edf9-cd8b-4a8b-9b19-f9a383118de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19fb1916-e245-474d-8c7b-27a1c81ac59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1735cbdf-a60d-4f61-b378-120050a5cb97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df026a4-66c3-4ecc-8263-3c7924fe0495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b740331f-a33c-4445-97aa-838411840308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba04c340-7ae6-419d-96ea-f3ad60b32fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d091710-00da-4ec4-898d-4c0675b86ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e0096e-1229-41f7-b1ff-065da9d652c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b899279e-e615-4f13-a124-b5cb883daec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc6e3ec-2eaf-496e-8aff-c3a3957df486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ec3c2a-3edb-43f2-8d76-7f44318af9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9842d60-d0f7-4de9-8035-af4208bb3788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d15e675-19d4-4471-9374-cf9830e6c1c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a19890-33ba-4ecf-ab2e-8572f2427d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbc9901-1226-488f-a47d-40ffb56f14a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdeb575-a067-487e-843d-ef1914382e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae6c749-1582-456c-9088-b35b6f611c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3807f767-c799-440b-843d-8cfba172e1a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d249ed30-6a70-441c-8e61-34ff0964ec06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b1daf4-75db-4ecf-ad63-00d7c6fb2d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b253c222-4ef6-4a50-9831-3c2918898e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bd5194-6014-4f6a-be10-979fad562095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4668fc-7572-4333-a7f0-ed2585733efb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acbce4-0051-4477-b41e-5e832b32f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0baea0-f34b-4d9a-b40f-3d94967b042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb550cf-b295-4aef-b74f-2b7047b98de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f738690-5ae5-48a7-a1ba-1adaa7c117bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c5464d-1c63-4f95-b027-aa8b55305b50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b54a9-d3b0-4b45-8b7b-d7e42f11b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870c2b63-6069-4a3a-8735-10a18bb89ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b467818-0495-4867-929c-a12401255e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "019ab72a-5fa1-46ef-a0f7-d8eebc6d260e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a36a18d-685c-4c41-8a19-ff2e59d1bcc0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f9ec3-898d-4f30-8915-3c3ebf300e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6742668-7453-4ca3-8cc5-00ed2eb99d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371576ee-7dbe-4206-a9ab-94833c2cd547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc5c2c4-6849-4036-a75e-65dc2c07125c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1991dfa-89cc-4d09-bc2a-f2b740aa3dc5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ce74a4-d5b6-4aaf-85fc-bb5a142b6087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e8a78-ad9e-4129-968f-b17ef1b4049a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5620a544-fe85-480e-86c9-bba85f43269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd818c9f-ac4a-49bf-a5bb-8acf017bf858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e8a59a-26a3-491a-b040-7b842964b608",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a223606e-07f7-4ed1-bc57-1554e9c849dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4bcce3-f8e8-4df5-bd11-95eb123d4471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3757d1bc-c10c-4e92-b0a5-9a9c7c10c38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "915649f1-4d4d-4908-9bfe-92975e45acae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de7947-34fb-42c7-923b-697b6d5ce1c9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77edad8e-76c4-4b00-9c55-a37730138285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194d4f8d-99b7-44aa-95b8-62922c54b871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c6f858-5d2a-48b4-b3b6-dcd56c7db83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "076ef548-6036-4342-a8ac-7f5457fb45ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7773d95a-641c-4d0e-b4cd-f5f515b13481",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68977213-ade6-4a96-96ae-115e760d0b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11e08fa-9abc-48ed-b940-1b5a099a4acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41b8a42-2b74-4c7a-a033-b84da07ccbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b7bc01-678f-4184-a92f-6ab647d51a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741e2b09-19e1-47ff-9581-afa718bad88f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9249ab00-3934-4b2d-8c91-229ecf51d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de3c117-6f1b-4af1-8d60-db8985814682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9237f4f6-343c-410a-859a-e97b33419872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b79895-33f9-426b-be2d-3fcc3c527e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b9f616-7318-4144-9d2f-a6e128172be5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619b5e19-7971-4139-89ba-de8cf5abd2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cbb4b0-8927-43d0-b4b3-9ac3f3d73823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4191b8-db94-46ca-8d79-d72351a0a4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf3b6a5-76cc-4228-8f95-e5259b057b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee866b2-0a7b-4278-8414-affa37f377ed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a3d16b-da3e-4102-80ed-76062535f6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361883fb-2d5c-4fb7-91c1-38a589ecb07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe4f6d9-0820-4108-a264-7f9b17374cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75dbd641-744e-42c6-aca8-aa7de10b94b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a533cb5-4c21-4d0d-8ce7-b09c846bca23",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57316e10-5c62-48f5-b4a5-0ad5551b11c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d380c3-946f-448a-9ef8-21f775cd2849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1172765-0bb7-4f69-9461-01f6b85dd37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50859a75-4ec1-427d-bb20-aee4fc1cf8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb33964-32fb-4b70-853b-e42da4d41162",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a790a70a-a11b-4a1a-912b-55463987f7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2a8c02-80c6-429c-8703-c3676d5fe3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5710100-bfbf-4210-b219-44ac2ad823ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f72842f-bfa9-4641-9d26-de4f8cc88e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae5f5e1-644c-47d0-b9b2-dab2a86f83f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbd4dd2-52fb-45fb-9a69-cb1f351b329f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d92d0b4-b16c-4329-974c-9a3de8128814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f227e22-ba0b-48e5-a0b0-fbf6dce20b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85e26426-351c-4a3c-9d4c-f999962d7e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7670cd21-e44f-4ddf-984a-0a0dbcee2571",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690af143-4e8e-4b9b-8f7a-81a8daa0243d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccad21d-1a88-4c84-8431-d90122b66810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339503d-7132-40b7-a7e8-24403b398308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1243be-cac2-45e6-adfe-74721f9886e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02653aa8-2094-49a8-b497-049bfa5764d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c076970-f880-42b7-a6c9-59e4ab28eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8d18c7-198b-4cc3-8d9d-6396e1df9982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ead87-2b7e-4a10-a21e-f617524d9c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a8b023-43ab-481a-ace9-8d6c507c655e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25635061-d610-4ee1-b8af-b59bcf03b156",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3fe44-8a31-4c09-a2c2-cf18c0daf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df1a477-d98c-431e-b3a8-24938e66b3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de360aa4-31a7-466e-b734-cba11b67d94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0caffa14-6c74-4480-824d-040d8efa3f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c2aa1-906e-40d0-a0cd-4d9bb2ae05ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fbc115-bc23-4a49-85d6-7679ecc97eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958f7e10-3475-4ebb-a44a-65fca721ae3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b6d6ed-64a5-48ac-841d-d5e5063b2912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5a2e95-68e7-473e-a331-466471a46be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bee338-baec-4449-9e39-a27a357fb6a2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e703c68-869c-41af-8ce0-123e5b20c06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628d6a65-6087-41d1-bf2b-90ad43e0836f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb8650-ea66-4937-9b8c-2da6ae93cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8855f966-a8d1-4c81-b73a-ac8d2786692c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f40a131-b6f7-4b2a-803a-b38f27171a8f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408993c3-ed2c-4ec0-9076-6e3eceaea903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58682784-b0d2-47a4-a09e-ff916af3c533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba400780-9151-4dd5-8f5c-1d4d043a4066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "835d25bb-55e9-4110-b7f4-b8bca5aaa74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87469491-977d-4026-87a9-9f53ce2f22ad",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cc1380-5455-4b12-9fe5-3094808333e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a96872c-b744-4e0a-be07-272d16cc4246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d9526d-0925-4a99-b0a2-26e09d870a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec896f9-8bae-4ee4-945a-b89729ed77ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde87814-debd-4770-8ec1-21db3456d925",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5d2735-2099-4f68-a713-b15b83ded7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323a5d72-808f-488f-95bb-f4c6e1c2a14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f219747-d54b-4b09-a384-177b0ad596e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb57eb21-2798-4497-83c3-cfdf0f54ff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fdb50e-3bcf-403c-b32f-ae196f0e5639",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ff654-91e5-4ce0-a830-0299bb79e657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed021c37-f803-4788-a733-f4f22b1b6072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e28172-417e-4e57-9a6c-4d67aff58dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e49b4f-eeac-4f31-840f-f84214bd78e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001fbe50-f107-4bb0-b0e5-753de688b017",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff70cce-f874-4c83-b649-a9e046ad8788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa555eba-e11f-43c6-8157-e505078a02e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e346509-28ba-4baa-9da7-6aaade1f7e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70115b24-51d0-46ab-ab34-e5a9cf3c8f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8345a9-60ce-4179-a027-f9befd0e811d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce635f28-1559-45d8-9d07-d9d6f905807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57829be8-283e-4cad-9878-26b9d335be13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a767eb-d01f-4bc9-b3d4-c9801d2316e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b336e4-f9e1-4835-a763-35c2ca416c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6723c6-ce12-440c-bb49-8313ee4dbc3c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f7b8a4-53a9-4212-8264-fdfe39034223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb381873-cd5f-4bf5-b3ae-cf1eb9f95490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046c6c72-2f9c-4360-9cc9-13b2794373ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a07ee-707e-430a-bf2e-3602e084a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0df0a1-3e15-4894-8f45-f630934d72a5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27661062-87b5-440a-82cd-97d75d325175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d79b4d-d9cd-4ce5-9bc4-ad45f2fede5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca030a91-abbe-4846-aaae-7f90a7f45669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "640e32a7-eb52-4ceb-a8a4-646c96816d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118d3669-f2ee-4343-96c7-2d47737af222",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb6c9c9-b6a4-413e-8ad8-74dd2286ceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991e562f-eb0c-4a6a-9a92-8b033cd2dc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26d3e45-227b-4475-a165-b7088dc95120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7423262c-dbf2-46c3-a48b-9be0ee825a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d17ed9d-3017-40fa-9eeb-696205613338",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b228f4-d13a-442d-bc3a-522449b8bb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1957c99f-b9fd-48f2-9caa-6fec60274cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36db41a-ac35-4bf3-81ff-612b4c9db84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa26ea6-90e7-4a5f-9d3e-2580e446d2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1511860f-b3c7-4a72-9d58-2a6087891029",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b511bd8-a7c1-4281-bfed-cd5b4f4ba1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7064b6f2-752f-49e9-82f5-85ef26af3018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b03307-db18-4424-b7aa-a6617570d84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3768e664-a228-4ec1-be3d-23658dea50b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c37042-f6b0-4915-a758-c67a1a0d6c53",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b110d94-24f6-45b9-ad68-6256087cf673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b75b919-ba9c-4fbe-a701-ae886d8bba18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99984c8-e200-4021-929d-8f104b893b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8496c634-61fe-4a8b-b240-71984b1ba6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771c15af-ebe2-41d5-84aa-40c11ca1b9a9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70926878-17c2-4204-83ed-55866d99a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77586502-ce67-4c7f-a273-efd5421558e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682c025a-b913-4469-8dd5-ed50fba5b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75e2a28-dcef-4daf-872c-1874200be6c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0409a7e2-b397-4c4e-a394-6c46c9228e38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdd965b8-8557-44d4-b21e-3a46f332c13a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334cf15a-0ba8-4131-896f-bc1cce5017e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65937326-7f2f-4cad-a8af-1695f8a14eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca7ae2d-563d-4f37-a574-2a23e85f5d06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6acd0fc6-6741-463d-93d0-38410ec8152d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc3b0fc1-e964-401d-af24-766fefdce5bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f477a1c8-7e03-4062-9bb8-f38dcae4dc03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "715b969f-f495-48ef-adea-62693b55ac6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c4b48ba-ad0b-4535-9946-37d604144466"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f05600c-3458-420d-97c4-a454fcc57619",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67727b72-63cd-4504-b00b-2832e7f7f817"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9657202-0710-4b33-b91b-1691dc78ea08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b98c7f0e-c68d-41f3-a8e6-4b583286db47"
                }
              }
            ]
          },
          {
            "id": "0f21cdcc-ed5e-4532-962b-83974622603e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f11d0fbc-daa5-42ae-9263-72e917620040",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "03b43ab4-9439-49ff-99f8-7d956b136c96",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a8dfcf-9eeb-4563-8d02-67f82c669cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a4b7cb86-9f71-4b8a-a543-72a0c45126bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a58c90-2e76-4e7c-8825-234c3b309a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23182870-50ae-432c-857c-e411e2b9e389"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18b394c2-c2b7-4265-aeec-938509eae4d2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0adff0d8-56b6-42cc-bdbf-f2a6fd609e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b72e2d3-abb8-4a25-8718-2407ab326da6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87c27735-994e-4ea0-a175-3165ffaa15a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b967507-07eb-40f2-9e4d-805b0f91d4a7"
                    }
                  }
                ]
              },
              {
                "id": "0a1e0144-6ad9-4987-a151-f464349c88ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acae5168-d881-45f5-8ebf-3d5792318ec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbc4b05e-0d74-4929-a602-e34f85d72be8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7472f6a-d5d3-4814-944c-84f7a7e35e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4c0a2ba-5ec2-4de2-b171-d7075037a094"
                    }
                  }
                ]
              },
              {
                "id": "490ec649-6278-4e9a-9e7d-794e4c08c886",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ae4e54-3ebc-4ad9-a0db-292f2e6636c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d980ad9c-bcb2-44ca-8da4-0f16a0b1a2e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c859b495-0a20-4752-8199-e1cf889f30c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f8976dc-6596-42b7-bc5e-8628636ba0f0"
                    }
                  }
                ]
              },
              {
                "id": "6b0dac72-3595-4cba-8d69-cfb076213005",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0067385-1abe-4a8f-afc6-4cf67dbf9357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32506425-d939-4ef5-8ed2-837cdfd06246"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dd24789-9005-40e7-8b34-d23d511dacef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ef934938-524c-4719-a950-b64fd8762592"
                    }
                  }
                ]
              },
              {
                "id": "c9c90379-18a4-456b-9a15-6f775f387804",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e2b721-905c-422a-8176-59335460eed3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbe21114-1e17-4b92-924c-44329865d8f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ffbb18c-35d5-48cd-a442-8f284f426acf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63bf8d27-0f89-4ecb-8aa0-8ab892d1c543"
                    }
                  }
                ]
              },
              {
                "id": "0247b173-86ab-429b-acc7-4840da3b88a4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0763ac7-1de7-40e2-9437-362277a358e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adde42bf-b775-40cd-8de3-655accef11f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19723466-b41d-4a65-a608-36accbad5bde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a06e863a-8184-49e9-9cc7-96cd012da89e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfd81a93-884c-4e9d-bd43-5fce1202d33f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b390498c-798a-4bd3-9cfc-ea65ac955daf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b350bc6-6854-41ec-b1d5-d6eb8ee6e9a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d8d6f8a-33fd-49e8-a61a-6bf25ef5d749"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38ea04f7-5eba-44a4-920d-b0d41af6f8b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8bc58145-8a33-4ad6-96bf-7538c9ddfcef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f218a76d-6966-41a6-a4b9-8baa75381fc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74c01435-d7de-444d-a0f4-4048da9ebbf9"
            }
          }
        ]
      },
      {
        "id": "d3ac1b3e-5f57-4547-84c3-59a08a686a5a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e46e96ad-823c-4efd-b5bf-0cc90417fed8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c875348-8d57-4222-b3a4-3f0dbd8137e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d35bfbfe-a4a5-4308-82ca-25ed29f1c100",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea27b7-130c-4341-8533-73462e2b2870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbaccd0-5b75-4b16-85ee-3bfdc2b9e215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5d7c39-31d1-492d-8d9f-fb86e6f253ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d932afd-b8de-4f5f-94a7-866aa18ab1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc60deb-0b92-4853-b5cc-3e0e6ef5201a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0684e23-8cbe-4b76-a26a-c1651a7e8988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7732cdd-0148-48a3-b0b1-8ab5840432e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c99c3df-d708-43df-a5c8-a406aad130c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b034b04-bc1b-43d0-a00c-fae092b07430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206fe6a6-8e9f-4eaa-9d80-4c3a13f6748d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfc5b0b-b3a1-41fc-817d-219c29a0c0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0c4d45-dba0-42a3-b334-60a161308f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d974e703-c821-4629-bc87-dcb719b6c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a372af17-0656-48d6-a3dd-234f0c6f3817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1874cb1-4ebd-4d10-9e81-cbcdda98ff2a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e32c75-999e-44d1-b106-4ae6f1f0fa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5ee766-bddc-4b95-bfaf-80abed613424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc4ca68-3251-40d1-99c8-6a606d6f10ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b631e99f-0764-42f2-91d3-9a55b419b0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cffc93-1af1-4dbd-beee-f10c9b653845",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26674397-24bd-4642-867d-c51ffd1dc238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8db9e9-130d-4b55-8038-4f582bc974c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5856d9c-73e7-4041-86b9-bdd4263f124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5955812-a3a5-4553-8023-ad999f34bb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b84b72-9909-48f0-b000-12f23393519b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f39a59b-75b0-4bb6-b52d-e817b12fb3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd44b8a-8913-4d02-bc5b-88d04b97f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf4d130-4652-484e-b643-de209eebd56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a8187c-1826-467e-a470-18100cbf020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d58cdb-6531-4050-a8c2-47be51e0c9b4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687eb727-28a2-41b5-98b1-88f2264b841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f1b40d-797f-4b3f-aae3-63cc75ac628f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862e7878-27c4-404d-ab8a-d908dbce737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef1a61c-b1a9-4856-b9f2-03af485f550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5784c7-b527-4a13-9fab-031a5c796889",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ca5c0-4002-4f74-a324-3f5e98693388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b99695-2033-4fe9-bca2-771633db8407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d111fdac-914d-43db-ae7f-8ca5c7546e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad68106e-b98b-4a5b-9b25-2dfd11a4a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a9c03-cbb6-493f-ac15-cded3ff2494c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c785b80-2fa3-4522-878d-55fb6c74e642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bbe4b2-92cb-47a4-addd-fba7ec109412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717fcee9-5989-4c9b-a33d-7b271ce3ead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68117e33-2eaa-4371-8349-317391b5d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8514df7a-c942-4beb-89bb-eebf48bf746c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4024aab6-7b36-4532-9a19-2d640cd2f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20597634-b8b9-4548-be7c-292c32b55fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ef2760-a088-4fea-8685-423f0241a73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9cceda-2e56-430b-ac02-dbd486656a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369be556-c480-4b1c-9401-5541b30a7ef3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9fb61c-81a2-4092-93bf-687793ac6eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147b57b5-c049-4419-9645-375205140083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900e79a-7018-4927-8689-eab28f68ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db1e0bc8-652b-4bdb-bcc4-72f466dc0447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec2653-bfa0-43d0-8e2e-ac08121f9b29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e33fdee-d7b7-48a8-a85a-7c21133e103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccedcf8b-d7b4-431f-b0b9-36454f4243df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2be980-9202-4b6b-bc43-5c4ee16df416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59b8085b-d5c4-4f4e-82da-f99e57460d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f250320-1c24-4655-ab31-a4388cb0a2c8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb37c877-ba66-4556-8913-dd5049d1e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c58470b-eab4-4028-8672-5e1a5f018e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7a9670-90a1-47eb-94a0-b6aa82b53db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "815ccad9-bd1c-4804-b48c-b1b8489baf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56e58cc-25dc-4d7c-bd04-ea9b0b78e6fb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3cd79d-a180-4996-b46c-fe3a56da9dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcebce89-b19c-468b-a8a4-54ac9b52a06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21366482-2926-47ff-bc3b-4deb2f3574ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b56719-6bca-42ee-9927-bf6abd098dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820c8856-2ffc-4d3a-8642-154f0c8fcb88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0892e0ce-2ee4-4f12-9279-7f59181ec082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857de502-bd76-428a-b5ef-d7581ab1fe98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f37da84-3f77-45df-83e2-6be632694ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0a2aed-d709-467c-825e-203d0fc79f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2c7b2e-677a-4830-b727-54aa8a217196",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d935548d-15b5-42f6-91a4-c7bc07fe8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727cf715-885d-44b1-a330-91489802011a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6175da0-d31d-42d1-8a79-1d4d391a94c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "146dbf89-fb73-4f7b-a3b0-e9e8a7e124ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9866513f-bfec-497e-b622-a385ea404acd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded0ec9-d804-49ee-8bac-bd48f6ebda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c062708b-345c-4cbf-a8de-2cf2a3138318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eae61e2-d1f7-4eeb-9fda-810a3fd81d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a463e588-862a-43ac-a5ad-81407ad5a212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd19e742-9fca-447c-8a40-e62c962667c4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0940edab-698e-4ce4-9f4d-dfd003c65d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddd34cf-8dc1-4c9c-b069-4296cfd16f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27acbb4f-d559-425e-8292-15803c58fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be098a1-bc3d-4b00-b6de-ec9b1ca67e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bf2e6a-d785-458b-bb86-563c2fbac322",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ad31a-b90f-476f-aee9-97371273c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4b18fa-232b-4578-be00-a899c3070d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6541f688-f0f2-46cc-8e38-f0d38a3a3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1627d2-2825-4711-924a-51e3aeeae6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7f1b32-d27a-4be0-9f76-b1cb567d9181",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8df0c61-4593-4eef-92c5-3683939ddf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd62fb4-d9cb-4638-a473-1d407b8e9cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1af49e-40c2-4437-a91f-92955d4e4844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b7a0ef-cee5-4997-9fbe-93e256e7fdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6743f4b-4409-44ce-9eb0-62647e5f9077",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9f03ad-68a4-4f9e-bd74-6cc5b4087a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0783fe61-7f64-4d76-9098-9fa6a5236abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff180e9d-3c99-4c2a-9e12-1037be627db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca5c5ba-e3ca-4d78-b687-fbffb8607444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9f5bdc-f414-475c-8050-de678dce458b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4274999e-0e6c-48f0-8990-8da0f275266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2665ec-f9c8-418c-bedb-b67f78f07d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20771ef6-8a60-4ed8-9d2e-bbf75e07228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f684cee8-90ce-4bc0-bf3c-bd53cd819878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb732e6-5e1f-4a7d-b4fc-f2959633f66d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d2157f-c554-4b49-8009-c9373bdf6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b824687-3bd9-4914-bcc9-22b606a542dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044fc189-0386-45b9-998c-bc6e8f17194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f7a9bc-cffe-4d23-b09c-c7324cf846db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a4a814-6c8e-45b8-9c0b-b90778110f30",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590cf09b-cd53-471a-a157-2c04ab1b9244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f53d099-5249-404d-aa5f-ca5824925338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7db28-81cd-451e-aa93-8c272255679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9a352c-b799-4431-ac31-cea1f241020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daefc9e5-6f83-462b-9a48-09511b652b86",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666fd618-dc77-46a5-81fc-74dfc70c36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a97d505-9470-45d8-a4f8-ae3abd5635fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c26e03-7908-45a3-8e69-484a8da3885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "214f56f9-bbaf-480c-a667-ab0ef5e03ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91898b00-4a80-43cc-b3a1-7dd014d6db80",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0193cdb5-7ba6-4551-8e07-a82c15a521dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2899b414-a82e-4743-8645-aac2a67db010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57c50bd-94da-4a25-8931-6ef0ccc87680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6447fd4d-3f6a-411c-a153-888ffdcfc286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5797a230-6e37-4c73-b957-c8ac18acb048",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d337e9ec-7333-4c1e-b83d-4f46e6992f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc3f130-21ea-4804-bd97-24f32511a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ecc4ee-9978-4eae-aa46-3802f84936ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8111c48a-1222-4ddb-b300-880d3ec5762e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb538f65-45cc-44fd-b055-479009f91525",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99a8ab5-7bd3-451f-9f7e-811b6ead2b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b1d78e-4fec-420f-9cf6-5dc5e97d9622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3201ac1-d7a1-41cb-a4f7-d8252300a51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6470351-346a-4acc-ad15-92464a56943d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fcc9a7-a53f-4853-b04e-66ab26fe582a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afab739-46e5-49a2-b9e9-a59d23155a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679da586-b75f-40c1-b087-5570f00ba85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e20b64a-7110-40ec-a0dd-cb89b151cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215af764-4bbb-4340-938c-e5ec6583dc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de37992-c200-4f15-abdb-ba827455ee14",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64b93ab-1ca7-4306-9c45-9a28f30cccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2560a0cc-0be6-4de0-b265-7ba5bdcd6956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f703b3da-9d7d-4ceb-9ebf-975d28bd1236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "295d08f3-7a21-4633-b875-0afc4ad7a485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8437468-6600-48a3-8563-9c86ee3f92b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0f57c9-b063-4bef-a7a2-0a019bdf01ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e2b91-4389-4787-be51-768f4bd6040a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635e10e7-7a7c-433c-be79-0435035cdcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28409a6-c6cb-44de-a013-e64b057adbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a145991-d1cf-4609-80b8-0f21d134aabe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17bf578-5b46-4fe4-aeb1-ec41ef570633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78190b02-851c-4bcd-8e72-fe84ba9b7391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faad25b1-12ed-4683-a537-ca73503d053f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83ec7bc-cf04-4df4-905f-ddb7fe93f492"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "955de8b3-3809-4ff1-934d-08c6b1c98936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3798dc9b-fc13-4f40-80a5-d82f41974a45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae15f2-0d98-4cee-8962-718a86a52909",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e13a5d29-31f7-4be0-b98b-fecb881b2397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62210cbc-538a-4aa7-a964-354cc1d0b021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78915377-bfd7-435f-81ab-c3f45dbf3719"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0f90991-1cb0-4a88-88ef-9652f3cf489f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa77937-8759-420c-83b2-8407fbd8ba61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bddc75c-2291-4b84-b108-76b39b89dfe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58b78a6f-2036-4a01-b1d6-f653b8bd7104"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc68d4ae-3a16-4ed5-9396-e5bb72d24c54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d80ff5ff-78ff-4308-8f35-df037b454e64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93ebe80a-ed75-41d3-9081-46ef695951fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3ade17a-9d53-4625-a15f-92654560ba29"
            }
          }
        ]
      },
      {
        "id": "59bdd49f-c534-4497-90b9-648f060ed7ba",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8db68c86-ccc0-422b-9dd0-d7218d63ac7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a9cbc44-d979-4978-9e8e-0a86403e9cf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23ac0005-2c64-4e9d-b824-4662137af250",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a81d22-95bb-4e18-aa25-2c181033dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fff488-3989-4c01-9963-85bcf689d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19440a5e-4cf8-4e7c-a285-0cc3bde5cae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c60bd2-a792-4a36-b015-9665299faa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ea5b4f-e3f0-4bab-a24c-bd8bccbb64be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeecd63-8993-46f1-9659-b1c7837ca9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee3cee4-1d58-41f7-8b1c-4e7e805c2e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e86632-5c57-43c6-8f2e-139e312cfe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ddc260-02a7-4bc2-8cf1-15b56a247a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29445aed-9a8f-4b91-a3c0-05679f480e1f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc8e300-09eb-4bbd-859d-657bda6109f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec714d19-ca25-4d20-9fe7-f39afd792d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba4706f-5fac-4989-8f8c-d325c1dd8ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fe70ae-160e-462c-8b7b-57f61fbce99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e401802-112e-454a-afa5-cb542de37ebf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b181706e-27ef-46f5-8c06-eef2a77ccd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68441ae-d17f-4aff-9e6e-848c6ad7b6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99a92a2-494a-4d97-ae33-3f44555c6af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4933fe12-e9e6-4e81-b15a-1d6e537b966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7653051c-54d0-4c1e-8c7e-a123bf60b3af",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a551680-df5e-4706-95b1-a08ced7ec954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da24e0a-0b24-468e-829d-b73657dc5b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ab5404-6748-4f8b-94a9-bdbee814d625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66239b3-ac22-4e8c-8c6e-c1e00a91eb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8b8388-4e27-4c8a-9d09-aa7ed79472a4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c6142-bcf1-4a41-b49c-a45006d855ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bfdc69-ce2a-41a7-87a9-589d9c196003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57d24cb-fd2f-4300-9922-9bd8e1329186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e424d54-b0b8-4e1b-90ed-1bf09a862a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10098d3-6bc2-4123-91ba-f789787c4437",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c414b-984b-411c-94fe-558edae25e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebc8ac2-44c9-4238-b3eb-efcc98323405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d423d9-2058-4107-bec4-dbbc2e6d7766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2cc72f-f20f-44a5-9e7a-64bd91ac5d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79853f-b170-4678-b754-be238f945443",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95be4727-7a41-4c7e-ab21-c962ec3eecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c78cda-0600-4cdc-8f8c-9215a3f67dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea73477b-879b-4e71-8906-5d1348fd5389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d6d9a8-2513-4b38-a40e-63a692a88515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627f00c8-4c3d-42d6-8e2f-4734bb98bb2c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89003991-e6c0-49c0-ae50-7a1291be0510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef838295-896d-4441-b027-d770b97e9840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d56b58-f672-49ba-84b1-8d3737558b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2240c3fc-447f-494b-8baf-75e2d0e84ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ccc01-24d5-4fdf-8713-5ac93ba92f00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7c886a-f0c0-4633-9d79-ac24a39277e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8af6124-5761-4848-a54f-d9c340bd0db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88083015-76f6-4dcb-be5b-96f5cae02582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52f49ec-95af-4daf-ba6c-1cc6bae0897e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d726bfd-d83d-4b60-8a77-4cf32b983b2c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a6910b-9418-4823-a0dc-7aeda4ae198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e4cc22-f19a-42dc-a2fa-3c2112b1cf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e0b7a6-3615-4fb1-9aae-bc88c737d470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb61fcb0-6085-48cc-81f7-c443b6caaa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd69873b-0502-45ed-9a1e-61a91e0b5b35",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7592fd9-0f23-47de-81bf-1ef02aacbf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3838956-24b5-458a-b522-3b59ae458adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edc989f-c831-4687-b37d-ed8ebcdf7995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fac585c-9f92-426a-a8b6-d0c9dbda210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b39f3a-07a0-44c0-a695-f22036ae69c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ece76fd-22c6-487a-99b2-1ec6838fb783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4693aca-1674-4a1f-9586-122c52c74bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d60e6-3ac1-4fd8-b894-a3b76fc5668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea026d5-708e-4ce7-b615-c15c702d2393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca725a06-d358-4d07-8232-da818d4de020",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5775d0e-19bf-49c4-ac2c-e8c8b5a9e65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1a529a-56ce-4397-a618-698f14cf2c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a382c40d-60cd-4bde-a3a2-35fcbc2d1fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f03707c-199e-4877-9da1-be377228e985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7225466-f9a8-4de1-95c4-08eb66dcec13",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40695a7-b3d5-43eb-bb71-0e7192239293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d6ebba-f4a6-4582-b7de-79455c813256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6705c1-ac3c-4086-9333-7fe335605477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a18654-1048-4e26-a244-82950bf080ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e895f7-e5b2-4fab-bb42-14f44a9df8fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d55f6a5-820f-4879-a70e-84d109684f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed525f59-91dc-49f5-8d75-e3b3c5fb5072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9922de8d-aac1-427c-911f-5cdf8c587795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9198cb4-6014-4589-95c1-16cbdfc8e259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1adb27-b787-4a81-bc29-c3f252450e46",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67178f7-78ef-4bc0-b308-90599d5291de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1943ee68-5a62-4c66-94e4-189e263fa853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af3e45a-6f19-4c4f-aee1-1f26f42dd9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22ac13a-f7dd-4afa-9b51-78689911dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5222b6-20ce-4f59-991f-9e241df6ce81",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08b90d7-df16-4acc-ab34-7947e8f280d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528b4803-5ba2-4dbd-8da3-7b6663935422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2372f5-1d1a-4686-8b40-9d59e1029f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e0ee1d-03aa-4eb0-9d7f-6f384eb15e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5fd4a0-fe37-4ca1-b62e-c90c66833ea2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570d89c-11b7-4123-9ff4-b858b4e00527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c60878-8257-4242-9648-7e331e2b72f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c7b8a0-a904-4093-b800-cb6793eb2418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a773b0-a446-49ed-999c-dcb210a180e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2e8f52-4334-4e69-b260-9df9bf36750d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23671d8-d345-464b-be4e-028fe039255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e104a78-8205-479c-ac07-b98cd4c8cd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fb0a2-386a-42b5-a7de-e5104de7aaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf85db1d-419e-4478-a8ad-17b00e7d5f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be45e37-4d28-4bc3-9187-056593b9e3f3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eee37de-db4d-4679-9f40-a45fb11cbde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78970a2e-b3eb-4e02-bd01-bfa41b119e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c4ce7-d6b6-4bca-bc82-0538f0e961ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a22566d-0c46-4f95-99e2-47dff18efaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c4c2ab-2647-4ef5-ad94-bdefa206d765",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d359105-4427-4cf3-a62f-2b480c7bc258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77f6ef9-ccb7-4aee-bdbe-6b2b9a89d674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66019395-c7d9-4109-8ad4-a05b904713a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a435d036-85cb-4723-9b6b-395b02bd3968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b510b434-a11c-44dc-8cc9-7c50ccaf97ee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc02cd7b-33f6-4934-9fd5-3bf71a3ccdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8b46d0-fd81-4437-a60e-1e9bf01e5c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714529ac-1513-4411-b54b-8c8d703e814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292bb6bc-f552-4b2d-97ab-b549309485d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c40aa-a25f-4a3e-a562-19138881d32c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5987645-02e8-4f8b-b7fd-849bbf097e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49bbcb7-beac-4ffb-882d-87b750575024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed5bb1-f73c-4606-b02c-970f1f021043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979e5632-c24d-4753-bc9e-5c5bb3194b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bac249-992c-4a14-8da9-e4f63606eb41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5490bc-368a-414f-b097-59764eaa3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392776b4-f536-4984-b48c-b43c9041caeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdba1221-77b4-4237-abbb-da8fa2b2466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e73caa2-5a32-4e2d-a12f-d05c58b84026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ed5d08-98ae-45c9-9c54-e4ddc2c09153",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdb69da-8003-442d-a72d-a7b50838badf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e98c9d-ef52-48ef-a71f-b49483330f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9208424f-378e-41e4-a5e6-22d8472c47b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ff2286-6709-4d02-8c4e-e135959bd33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec2226-f96d-4a51-b2e1-48432873bcec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521e37ce-3ce5-42d1-bc8c-4219ab81fad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccad1c3d-d469-4e9e-b032-5b18f88cb4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a438c06-10d6-41ae-ba30-df54c365be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6318a68e-77c2-4cac-948d-f35104b9564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47956614-ec61-4363-9112-782f473ff81c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817abcd8-3325-43e9-a6a8-bf6d1ec25606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2dd312-0574-4d22-be7c-994e2277358f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571adf26-c99c-40eb-9ec8-b7eb58764bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411eeea4-cf38-46d0-b5ff-fb69798790db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe520997-5713-4067-ba8b-e1d6273d0464",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebf5fd5-e1a1-4724-a11f-f4afddfbfb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26e195e-53d4-40c4-af35-61b0d07256fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a3ce8c-21ec-44a5-ad38-5033b8e2ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af17458-f477-41f8-bc63-a8c1f72cabc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148491e9-b461-42bf-a39d-4b31ddeda0ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0808a27-7b5b-455d-bc46-c2836854775a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a75ff0c-cd03-4aee-91f6-6ec23ad61e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9c5d46-d644-4a43-a61f-e1034e37a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28af22a3-8458-4aeb-86a8-8e813b7bb666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337dbc78-29d2-491c-a51e-3ee8e0364c50",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd14e41-de38-4d2c-8c04-824cddf2681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc07e6f-74d4-4362-a66a-0b1ebd69110a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99306f6b-4dd1-47d3-a0cc-0cf4af57cd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa0fdfe-6e7f-486c-b61a-ba492c020176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71a84fe-9e2f-42a8-80ed-176c38896338",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c459392d-86b2-443d-8a2e-e73df8179f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e16d384-8ced-4342-b5d3-1f42ff45d5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1a37f-9c1d-4214-ae1b-61e9ff19caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72af5438-1ef9-4618-b365-76193b370138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351eb0b3-1008-46c5-a8c8-5df26ef55169",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa78b1d-5ff8-4319-b6b5-9d6f49234fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6252a5f5-d716-422b-94bb-252015deaaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b067f884-058a-46c8-a956-5c2742f799b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615c549a-d8cb-4c5d-875e-470ad66c54e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12603906-088d-4411-a2ae-77c15313418f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fb8928-a653-4b64-9dd2-882a95f01611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638226e7-3ede-4348-8526-a7e436e94e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bcefa8-2dee-459c-a233-98e03178b291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0140697a-186f-49c7-81f0-c66d5df705e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f09931-8405-483c-826b-a9db7ab1b369",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc03890-01e3-4c11-b688-019542ba4e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2b1419-2221-49ef-bfb9-ba0d00a98b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bb1657-6c30-4787-a25b-b4c7eb0491b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07020dc1-d509-48cc-bf2b-436f81234bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c3b6a1-2b15-410a-bd70-64dbce81971d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab32bc6-0c3f-49ac-97af-3cc073e39247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f11794-d5ee-47ae-b5bf-83ad5960869b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e4dafb-fb06-41a0-912d-87ce768db2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2946b95-bbb3-40f1-b6c4-64beccce9ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62edc541-e1ec-498c-bc41-a8616474809f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a5eb4-b044-490c-8302-c198437e7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04efa668-ef88-4b52-abd6-188601e74d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17f2b53-7d71-4bd1-ae55-03ed39bae0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42dc53b8-d12f-4590-9136-5ddb4cb7f9c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca141bde-c364-49ce-9b84-1f003b7de832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78de2e6d-d758-4738-9350-0421777d0ce1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5a5767-f6c9-4442-a94d-281f4eaa83b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45b1d404-7b49-474d-9df4-6c065f8a1668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481fe538-54a7-4ff2-8b12-107ec1aafeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96cf74e5-5ec6-48a1-b129-f304a3ca803a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7f2faef-ab9a-4083-8470-0d00a5b5f828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c52b02b-da4d-47d2-976d-bcf354cb625c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc6fb21-7250-4076-b9bb-bc335cbc4f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b40de7a4-9001-4388-a0f4-1587e83db83e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3433067a-9992-4b52-8054-94207025cc99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92221cfc-46fb-43b8-aa35-0d27e87b00c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0697b59a-e076-46fd-98dc-378ab7137751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9d891d6-a95c-4cbd-90db-56305ad9f9f5"
            }
          }
        ]
      },
      {
        "id": "9875f9b1-7b11-4ba8-8a65-ac73d8235722",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a501bab2-72fe-4801-99e7-72bb7b8fbdc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28309925-83e4-4b28-a982-171aee2fc997",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "719ef9da-510f-4093-960e-62567ea32223",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab3c16c-6137-486f-a370-0a7f0c6b6d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77611d47-cfea-4315-9095-19738f4608f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b371b584-fb15-4110-ab21-4273857d0f0f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552c1a27-08e7-41e7-b287-5c0c3c0a1e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21335696-d826-4286-90cb-1b1857c3da78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea8416-2066-45f2-bae2-497d06858bb6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbc453b-891b-4846-9f42-83cf3077f017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74be7d4c-67a4-4531-8bca-f0cad70b012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbf7f55-be1d-4b4d-94bb-b9b8f6aa126d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a079a859-5a0f-487a-be9c-aee9bd720536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8eb925f-a5eb-4a2d-a989-22dd440ec7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ec839-97b7-4ee5-8318-c52389d2dadb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecab148-1acc-4617-984b-1a46ffdfb90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec710bc-d800-405c-8a6a-e30d8e5bebb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48741e4-bd4b-4a11-bcea-c70bcdd90957",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f53c8f-931d-43ca-a4fc-20ddd5866d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b1c0a9-3a83-44b5-8d3b-265e341e746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a6f974-1b81-4459-80cb-131653dc1330",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00c095-ccb6-431b-84df-0c3fba8c567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf918ce5-fde0-4047-9c42-96cbd3ba5297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bc8005-c97a-42e8-8e18-c742404df778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69ca629-9737-4452-a87a-09694390f898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f6c89-6a2e-4b3b-896a-22b89d6a4e9d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e47f0e-ef84-4bb1-a643-f61a37720af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84816771-e40a-45a0-8570-b5885797accd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8501cd6b-558c-4bfe-914c-9f61356716e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e376429-4760-4972-a0e4-40a9811d3bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f950671-fff3-4baf-8a19-d3c02328e364",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a619840-9e91-4e96-95ed-6c5db379ba1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800d409c-5fa4-4e42-9e82-2f3cdb91a23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204af1ed-4167-4fa2-ac0a-905897aa00dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e2d251-78a4-4825-aea2-9fa663b1cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2df6ac-c448-4673-abd2-f58eaa0894ba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae49de78-0c28-4849-b988-9ed583a530f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce6cd99-1219-4d5c-a408-6a7ab358e6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a979f201-a80e-4b70-853a-a52d20b820a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74af24ba-1e71-4491-a51a-b34411e24554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54a17b1-749e-437a-ac8b-423a6874d83c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490bada2-6b6d-4cb6-9884-0e3c361ce2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b963dff5-7e15-4b30-877e-b045c32461e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17670e1d-5e79-477a-b272-8543ec1c9881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa3a94b-6efa-4af4-84f8-4520b107a904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca26074f-e09d-46b1-b490-0a7d25d79448",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638dcb45-b601-42bd-8455-fd642a517a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f8542d-0c35-48ee-bdcf-6f39b6fb0d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd06810-7776-482b-b379-cd162070613d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de010041-0550-4c38-abf9-fb3b121aaf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa71877-f34d-412e-9f70-de15a397c09c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1a3382-f04a-4fc3-8670-889e6d5069a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e511fc38-e81c-4cc8-8260-96bf8a201cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db97fc2-eb0a-49a1-8696-c31462997dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303732a3-1415-4a2d-802d-c86159e47f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4e3442-3a77-4429-8ca2-93b9306b3ec0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ad9528-d7eb-407f-8065-4d815bad5c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707e8494-6b4b-4d09-a41d-953cfdc5976d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4ab595-a61e-41e0-9a9f-a46a6bd27b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73640063-d1b5-43d6-a0a0-75b6b1509a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbf14f8-3c56-4772-8b57-2eddbc205da0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d1cd42-2a92-46c8-8f53-53146bde0488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee5066c-c8e8-43ff-afa4-cbf845481008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59be7a0-b82d-4e6a-b2d1-11223fec6aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c95810b-a823-450e-9f33-ff696556de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f3ca1a-3fde-479c-85ab-6236d2960ffd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e2a447-2e13-436e-9a80-786ce0199ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d88839-5634-45f8-a654-8f986f86a27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e738313-b05b-4886-82ec-3faec0661ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f27f2dd-d012-4489-9a77-23d80ccd3273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027a5f15-091f-4560-9fa6-2aefbacec21d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db30b31-3b01-4530-9a8c-7ceab1d5bfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db123d2-f6cc-43a3-b268-e6f42d8e6bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db551d8e-6cb6-4ace-a651-ff5fafa57e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f875ec74-c0cc-4e25-881c-786c564b5092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900d8d10-8661-436b-88ff-8f13138f066b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b206607-bc5c-4184-a887-f8372a18b696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf5d376-de33-483f-a1ea-51b9a97e162a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e5a112-c806-44a7-a8dd-2b50fd6137ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603c016a-9e0a-4221-8115-dd3c9278e007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84452ae1-f804-4453-84f8-f07c9355c7a3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0fdd2-e133-455c-808a-4dc3826d5b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2797a7e2-6692-4d61-ae7a-bac945ce30e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe35d1ac-8777-461d-a25a-8e1bcc2b7f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ab4044-5d01-49e4-9614-fd4c69c44416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728fc595-882b-49da-bd4a-73f8128aee8f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e33781-7646-4e7a-b0b8-3c9c7325873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31abce9-2fbd-41fb-b332-a992f07fe6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea35f93f-53aa-4ef2-8c26-117dd924ff09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266787f1-f5e6-4a14-baf6-8cebb5913300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3c171-ed0a-4c00-b5f3-eddc4e7e6616",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfc94d5-cbd8-4973-a2a0-c8d11e6f9f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba818776-a6ab-4849-8141-a6b94525e582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c84a4b-f6dc-46c4-b0bb-5e5d5f9ee125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c7fc1e-bbc3-45b3-888a-c3dfac4db2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d71df64-de85-4319-a389-ebad5745db6a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f19d464-0441-4eef-8b37-5bb21836865e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137d948c-a947-4d74-b553-a1e6cf55d590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004180db-34c9-4fc5-ad67-1c0757636a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9a9881-f26e-4c31-99af-360a695d38e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e12d8-f858-4316-8c40-4e4b0f053acc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca788da-06d2-4dce-9265-cdc776163e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8fde9a-606b-4544-8309-cf4babdbcea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a04646-b7bc-4250-a076-6325b6285f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d222e960-81ce-4312-9299-309a3d163593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea95049-df7d-45a1-a7c6-f65c7d487d32",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ac75a5-96f3-41aa-98a6-0cafc9cc8a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de91e5b-44fa-4c13-a191-690c7186bac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425c0a47-59ec-493d-ad7c-3ee792d12fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305a7e5b-a2a6-4a33-9f09-3399e03799df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df08e835-4f0e-471a-9f9b-613b618db2c0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d1f79-6230-4098-92ca-eaf107dc032f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75229090-5e45-49ca-b756-1a3e4f508e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f46600-2207-4c97-b640-54dc42a7692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5668c332-c8f5-46fc-a012-fae8e3fd384e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda7606-0487-4108-b717-2c4f366cc4f0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d7f85c-b775-4c7a-a96c-3c2dc1705753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e57210-eafc-4874-93d6-3c2aa1c4645f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef401e1e-e2cd-490d-ba08-d734477b1c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b220b68b-ec2e-4f66-b266-7c7fde4e5933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed5596a-6dab-4560-b404-5172ca25eedd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11f1fab-2ba6-46e6-b3d0-3f9203688306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a149adee-ff67-46fc-9741-ff34ec636eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d08a818-c7df-4bd2-888d-5d43d12fa88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540d8a15-aaea-4efc-8d13-0b986418f436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016e5648-f3dd-4731-876f-bb84a124eb0a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826be353-2256-4b65-a793-7e70dd2b8d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd545cc6-78ef-4d25-a07a-10889da78c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de432737-6a15-4dc7-8f46-9befe25ecc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dca05f-41ff-4c30-8ef7-67d220b4a3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e721285-1b5c-4b60-9262-e4d603ef9edd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837a92af-f3ab-40cc-84e5-be48d71b8283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72ec6fb-f087-4a85-bc59-350f90db7126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7dbdb-caba-4765-af2a-eceafcee76b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05bbfca-22c8-483c-9483-56151588bdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23561d87-6d32-4463-88ef-ebb212ecfe53",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681936c3-d0c2-4e54-8830-8391d34a9ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28c435b-1903-4f2b-8f01-acccbf7684b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d622d-cd13-4275-9567-af30444e9b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b94d04-bb2b-47b0-9f8b-a654d6fb58fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef56dc6-7a45-4d2a-a172-41c00e09d5c1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb58860-ccc7-4830-ba77-5cf401e9c8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e67190e-56a0-40d3-a946-0ab6db1dad54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da9440-3333-4b27-808c-92a27dbdadab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5cef65-6388-47e4-99b4-b728df63f7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0dfdb-d034-4322-ae86-0a58d3a06fd2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbfe4ee-5816-4e1b-9aa7-aabf5aca63aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73bc4d0-8f7a-4cf8-aea0-eb0c800b91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05be041e-ad9f-4b7e-87be-13a23d4674da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c257d0-0d00-4926-95b2-26721f44000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0472f8c-8c5a-41f5-84e0-fe2fe469e347",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c20dfb6-0e2e-40de-aca4-6589055371d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50c4524-e1e8-4751-8204-30fac6f0b39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8a8ab7-5ffe-4fd4-9f07-3c07917e0481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1049da7a-cdcd-48aa-a749-4c209f153672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd57556-387e-452c-ae7c-eff204c8c5d6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc3dc02-174d-4ac5-a8c0-63410d08a5ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bef127-826c-4384-a602-3015afcfe1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3a4a5d-c1f1-4b70-a944-00dea102cf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a9a545-bf11-4ed5-9b51-c3983dff1dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168372db-cf43-4d65-a118-20b2453c4836",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d87be1-3f69-44b7-9ee5-c0432e6d929f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c76ad9-d13c-45d0-bf24-7360739b213c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b317395-6c7a-465a-a792-ae0502f3aff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b896bdd-79d8-42db-b3c4-e57c212ee60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bd8417-f001-41dd-8183-51a377f7dd8e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bb14ef-6792-440e-9148-d2897fafb457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e8a63e-cbf6-4809-96f2-4f501ad633ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df35f1-6078-49b4-8ef7-cb6673e9e184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1047a0af-a519-42aa-8b06-da364444e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85a0310-3d9e-4da6-9c33-3f7b63851a80",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af8d91c-0217-493a-855b-7ea510f6657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fdb0ef-5b77-455a-812c-b7f91a43d6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68994be-d913-482e-b61f-6387c76fd062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3f85c0-b3e9-464f-8ed5-8b5cd3c36717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c006d67-a08a-45a9-b257-b390472ab693",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd824ea2-3dbb-4ecb-85d7-e510df98a5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a6489f-a857-4fb6-b1f6-c008a8f9b734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afb40c-6b44-48c2-969c-af2b3c6a90d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7166087e-34d9-41ce-a824-33617fd07fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c61a23c-2b9d-4b05-a947-7b96b668f8ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c015981-e0d3-4d0c-a62f-bd9f706dfb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a6f0fa-b059-4b8c-8a2e-7fc91a542b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bb81cd-9792-4a94-bdcd-5343b1797362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e94952-6f33-4c9f-a31e-5c5e393c6287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdab9dd-fd38-48b0-94b3-9a79d860fcc3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c8d2a-7909-44f3-b848-4026831f970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade76990-f887-4f89-8800-f9b2ea0ae3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5da8128-c441-4d91-ba3b-a8473225a735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4530218f-ed42-44fb-b6da-0392396b5cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd39dd56-89d8-4e2e-9420-a299feed37a6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272694de-f377-444e-80ed-76bd6e71d0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c7d5ac-062c-477f-b9aa-c488ec9273fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9b7abd-28c2-42f7-9f3e-4281377e1a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd03fa22-e921-4a32-9eb7-f1a604fa5eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63195e7-80ff-4317-a254-2189f6d560a9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f30d074-f663-4698-b6c6-6108219fccf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d491ae34-6ecd-4f9e-b288-93386dd79321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b858c-a749-461f-8ef5-e24b684752a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0393cf-0ac3-4bd0-9790-a02205db81ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481e7b79-1510-43c9-bb61-9667ff0f5075",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6865050f-36b1-4c34-ab82-ad8e4a0b2e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5757bf31-9d97-45fb-aa5e-e0a3024fb5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e939f-e569-4c2a-8c8c-e31fe8da88b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ecb75b-58e3-454a-8f85-df2250778a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be7b50e-e389-4d6b-9c45-daf921c70a54",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f1322b-31de-4758-aa59-cf99b32c35f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8775c3-c899-4090-84ce-378e2c6292ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca9b250-879d-4e95-ac4b-670c27debefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a032a150-b2f9-4394-91e2-48cdc9f0809b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5216afd4-251a-43ba-a528-5597c4c1bfc2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b6808-5031-4e90-b8f4-308f133612d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fb9862-7690-4b13-84cb-e514d9eb5b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082a0f4d-d45a-4edc-84b6-ac449c6ef784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ca7b9a-f457-4ad1-887e-3ded7da3d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb1f73a-4341-45cd-b550-602f40be9d5f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8791fd8-1fa6-40ac-9d30-bc4a7f02c859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc857ea-05ca-473e-bae4-0e0f0547513f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559804bc-7993-4857-bfb5-f5a36a516360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b4c4f5-2fd3-4ffb-bba8-d709bc889014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01867db-622d-4029-9c1f-76bc0b208afa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13b6288-f59f-4c84-9d85-4bc0d86d9554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39946957-7a79-4f57-adb5-d3f91b5f4c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effa20ae-7fb1-4ab4-84f0-35b8081bb200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7702ad1b-9476-4da8-8e2f-46ac41ac8476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4012a8c4-92c9-4d66-a737-2ad6fd388603",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d664ce-3460-4219-b9b3-0592ea42142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c5151d-3665-4c7a-b26b-7c2fd779add3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95095c-39ee-4dd9-b8b5-ca2fd1f2c7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cf5935-eefd-475d-8fad-d0c0aa8b6306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df1f52d-ebfe-43ef-9a4f-b37f6a4234ba",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3601907-0f95-46ca-9813-3a3874476a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70729514-18aa-43a6-8137-6c35118b9d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5f0571-89db-4031-ab9e-6a74c9869764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9110bc1-4793-4495-88a3-17dbbf7eb16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d95f02-3026-41d7-b9eb-ffa63435e0d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40550b4c-5b01-4f41-9e93-27eaf8a527af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c311c88-8c56-4687-9a63-38f9d6ec3d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667da1bd-5afd-4345-a779-daff5d8975ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31eddb2-c5cc-4ead-9c16-21e76354fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e1d661-7aea-491f-b830-9be7a5281c76",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450f3338-578f-4d8d-b032-df65de34871b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebef1da6-114e-4758-ae7c-42e94b14240e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9905de5-ce2b-493e-9c59-a44c7fb55190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f376e99-f887-4d58-8945-f2323ec91b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a653775-5d5f-494a-a507-08bc59e45392",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65ac30b-be70-4b4c-8ed8-8f6db6f1e7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f01bc9-a9bf-48ad-8799-e09c8bf2d0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10296f84-9357-4411-9a88-a9867d3d7ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f99e37-f4a2-4b2c-b8e7-89b01c920f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b492b9-37bb-40f0-a688-e6eda3726e20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aae5490-644a-43b1-aa7a-dc1e875238c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50a3089-ac07-4843-b6fa-5bedd47b2121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49456423-c497-4a3c-a1f8-b9e1befc059d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6d3a3f-ee42-48f3-9ffd-d6d948bf82a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e34a478-dcf0-469d-ab7b-5971b0b41bf4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4dcea8-6776-4125-b855-85a00562c7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934e4cb3-f29f-4b58-a548-e4eeae73d6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cf50ae-44f6-458b-addb-047a79e2ba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ff48b3-0312-451b-9de5-1d305ffb6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83047ec1-6c5f-4044-ba73-1dd00207a733",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cb963d-37c5-4307-8690-e6e2aed676d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c78146-2e8f-4ec0-9e1c-8214bb2cc6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c7f388-2a24-49a1-807e-7c94401b56de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd41f77-eb57-4a95-a13b-e527339f78e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc0a79e-e7d9-49f1-aa0e-767c71fe72c3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a1c3fd-8090-4322-9d00-db0dd193ffbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71342465-82d9-4a36-a7f6-af108ee197d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b728e1-7ab8-4b2d-80bd-a07c4051906d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b834c91a-173b-4607-a83e-e77d3156088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9192323e-1142-49ce-a2eb-4da8a26c4128",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef1f6a4-1dd4-4b81-bc94-b6f79baece2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4874e325-29ea-4c70-bed2-ac1029064f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247ed0d-e745-40be-b528-e2532c665e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c858486d-ce9a-4381-a40f-07236f1ecc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13057560-84d7-4395-9c0b-04903292aeff",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85290564-c6d2-42be-a30c-69566c61d9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc357a4f-5b8d-4fb7-bfc1-76c173d0c85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9cde72-31dd-4cc7-b85c-20b85e5aa73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f30d7f-60a4-4a65-9175-8fc8dd9b3e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2ad00c-5139-4060-8d89-251f724fd442",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3cdfd3-fb09-42a8-b6b3-0279df22f361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3cf49b-a514-44ba-81b7-98f835d26513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db607108-d551-4ad1-bee9-b67f92a136d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bec862-5c0e-4ac5-b339-36b5dad39495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4ccad-00af-4bce-a95a-a1e623473d72",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9130269f-96bc-4bfc-8892-cb5028de5dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644ba1cd-7a17-41cf-aef0-febbb24c2168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c0fea2-855a-4095-bac7-65402c7c2430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb801959-9f6a-4f8f-8aeb-3cbe1eeb5ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b64bef-c90a-4cc8-ab11-0d3a06b7fbad",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c45859c-3701-4dac-8cad-331842def6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b946a1-459d-4a9e-aff3-f32f32185892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c6ed2b-50a7-4ca7-8b34-14500b33a83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57a50ea-a557-421c-93f4-4b64a744f57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dcd384-fd50-4804-a4b1-904bbc2272e0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca90b4-5f69-412b-842d-b1ee9cc7ca98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050a7a9d-f3f6-4986-936f-4209772efa2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d0a3be-6ce3-4f73-9fbe-50994f79e19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cf1eb9-a6bf-476d-9a87-cdd5425653d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1897b2c8-bf53-46b5-af81-0357a1f22ee6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88818aae-bfff-4097-8b04-44596e0cec54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f4945-06aa-41e7-8b90-55865ba7ff4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53380cd-a4d8-440a-b9c1-ffad4cdc1895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208aba1-680c-4c80-800d-cd4dbf97fb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b280ac-4d87-4d0f-b397-2390fefbd7f2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c274af65-17c1-4987-9273-f7b1234f7fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea798f8d-22c7-42ab-b30e-f1e69aa26c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5864b34b-b389-4506-96cc-b6c2d9ec51f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52455d9-ecbb-4e29-85fe-4f067626d0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d8c32b-a769-464e-821a-6b92be48203c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37baac2-3854-4b9a-b59f-c991318f7ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44667ce1-8d44-4fbe-9106-2973be12c75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80c3b81-a900-486e-a00c-de3ed6a680bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9061550-5664-457e-bd4d-50dac9c312fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb267c0-273d-4a8e-884c-c7d74eea7ef8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba24c4bf-a18f-4736-911a-367ef1ec1836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d6013d-8f73-4432-bb06-d79fad0286f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f3d9e6-41f2-441f-a145-5c58bdfd9e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37122d3b-b37d-423b-a160-88bd39df020c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e0c1df-e790-4254-8aae-dc614d4d414c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b6d72b-d007-4aa8-bf45-95c394f788b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4286f497-3474-499d-bc8e-be66084e41e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d12b34-d0a7-4e02-acc7-d0b3584856fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42b1654-b567-4e62-9f5e-a98ae379d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4497259d-47dd-4baf-8a0b-d558b03f720a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9846e87-111d-41f3-8c82-57aae8c24fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c561c98b-4e1f-4c9a-9868-e005585b1cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b75a74-f70a-4758-bf4c-623aaa778094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d36eb8-f6d3-4705-8f9c-ac94b09d4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c24efb-8eda-4ece-b439-d5cc79827ce6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6eb4f5-49a7-4703-89cf-a0d236a21672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e3d1be-5e9e-4991-be1b-7558b8c4302b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9044e0-9f0b-4af1-b111-5ca105581b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcaf2ec-31a7-410b-94af-4748920cdaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61509b5-7889-4344-8b57-96aef62b16b5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aef53d-bd00-4385-85af-307bc2e7117b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242b7146-2d8f-4060-9696-f744f736deb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd36e305-bcfd-4147-b41b-111fcde53392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74a914e-73d9-437f-955e-cbc240cac545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92ff927-5fb4-47d6-97f8-9aa2b91e9779",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a64ff51-6ff5-45db-85b4-635c318f2029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc29fea-1e28-4b0b-ba14-689ee7c78bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bc128f-5427-496c-9c9d-d178c5d93a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2649ec-0327-4a18-bec0-d09e436851b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2709a394-1951-4f0d-b1f7-f757644447d9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61008bc7-bc28-4d5b-ae66-dcfb4f523254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868f17b5-ce49-45dd-b048-7b231bb94b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c66c064-70a2-4315-9b11-794c1cbec85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82806eb4-c918-4b04-95b3-f9aa2c2154f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262de8ea-ed36-4bb4-a082-1c6dd2c81c68",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b3bc46-5bee-4a3b-bdf5-226ee86d5f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab89c2ae-cceb-449c-98e0-6c133b24ff7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fe3af8-ff48-4af2-9038-83dbdd6ff1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360af85a-5fe8-4131-b2c2-ee1f5dc9e832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2ad5c4-2fba-4d20-9802-77c3458b4aed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ed1998-fd6a-4192-ab7e-e1f6b72c1774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c38679a-3324-487a-b21d-ef421ce47b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a550dd3a-059c-47ae-b61e-bb2c245bee11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d7f936-05d1-42b3-8e6c-b5cdbbba028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ad6dc-f661-4679-9972-8cb449785373",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebafb2a-46e8-4a97-9986-85ca8fd44abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c4a747-6675-4dd5-878f-8c2a35634c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42587a83-7c7b-4c73-a368-33e69ca3a2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b331cbc-ba04-462d-8da6-63032f17f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c94e6d-fe1b-4623-a679-05c1ff78c2ca",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd0ff02-2434-4af9-806c-b35b7b33f994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7646b8d3-0f4a-4b60-95d9-0fa18863fa29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b6451-2dc3-4069-a62f-63acce4294d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191465b9-66d3-4876-9fe8-519412746963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989cb7a-5f20-4aee-a36f-ce70e24744a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790a6052-67fc-48ee-90d6-cdd5d765e50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94297ed-5108-4372-968c-e7829db6bd5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679d3e3b-8ebd-4473-ac70-e7fd0cbea087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d48fa2-ee36-4538-81a7-440b06cbe159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fac20d-c19b-416d-915b-ade4b296e693",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85b887-852d-4e87-bbed-f8612ca44973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bf344a-546f-4d0b-86d1-985cc4f5bf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91784a82-649f-4781-8ab3-83af386c10b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3a6246-4ec5-4603-b982-af9d708f8433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0095fce4-b60c-40a7-b0f8-0b2f95470a64",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6855b11d-7dbc-46f2-b4bd-fc97996a902f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de502b32-c49c-4822-a7af-007edbe4296c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a163e-5f6a-4309-8e46-71c5427df26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e10f6f6-dd1b-4a40-8c00-9a0f6a98001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec359e9-f9c2-4385-9c68-5d6881267b65",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f1add-fac8-4663-b3fa-183d66fcc400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73aba03-a81b-4555-b97d-121d55f701f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ad77d8-178f-4266-ac09-22f778185b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e684b4-d1fe-42d4-8136-f6d1c9f845fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace70e2c-eba6-48fe-b837-e67a98f6179d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae9fa99-185f-4c19-ad65-9623d3b2cca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a6aec5-0544-4bba-ab85-71eef1511c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e540a-b8e2-4121-9b55-2fd8269b7ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea523ba-36ea-4ee2-8749-f37451a10c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140107e5-d619-4471-b4a4-b5f82eaa81aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd225d8-f476-46a7-9a9f-377f30faba9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f097f7ce-bf66-48db-b4f1-19a19b74ecc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4494d0-70f2-423f-ae97-20c282202748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aa1102-17a2-43c7-8e9d-902e68af39d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f4e1a5-d5f8-4070-9d8f-d193c0de7bd2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b2a30-4d86-46a0-83c5-638ab6a889e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8fde0c-f7c5-4c0c-af4a-a641f1593c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17631182-644a-48ee-b193-dd3eb5541b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfab92d2-5a0a-477b-b9df-a0296f0e800f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602409cf-c386-4c88-b15c-1d4ddf93c9f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a5747f-015e-4759-bb89-bd12e6498c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fcfc6c7-8051-4ff1-821c-b6d0c6705d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2656f100-f3a7-4130-af74-d9b7854c0b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a4b046-23f2-4ac3-9189-e21793841fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f5e1c-553d-445a-b11a-03c2b104326b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0290feed-309e-422b-b299-3a78349f4af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bda5f0-7a8b-4a25-af94-4bfe468ab5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fbe773-13bc-43ef-b982-1367483563ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4972bfc9-abca-423f-80e4-83a270cdb2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889bbc81-e714-461d-866d-a7e25e0df245",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc228ba-3c41-43d5-be77-d98d43120ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3451c4ea-f0f1-427e-ba5f-5604894c3199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3534371e-7162-491f-9ca4-3e673936a7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aace7973-fde6-4f22-a370-c18e54d1f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a804d-f0be-46cd-9be4-310f9e132c7b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6046901-83b9-4305-a1c3-b8d487a56091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8957027b-268b-4d4b-98f4-71705b0bdff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518071ff-62f5-4bfe-b476-24dc403d2b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829bc28e-bfc9-43c5-8aaf-19d7774dfa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47091be-f897-4e0d-8d00-77b4fc209d16",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed58e7b-dcf4-4d36-86f8-a5fe324672ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d057b9d-5cf0-4c52-89c4-5bb6ac23a947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228f7dad-ebc7-4f50-938a-9ef6e3936539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4af570-2b2f-4a4c-b3bd-3deebc713081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3d34cf-a205-43b7-a233-339ebcc161c8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc37f8e-06ac-4b6d-b8b0-871d23106759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb3fb26-55b3-45fb-8304-1aa3ded11e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae7fc81-a038-48eb-9eef-170641c12a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecf0211-f7fb-4833-861c-1cb4724c531b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4f4d5e-4c64-488d-922c-30439e5122e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ae7942-ec67-47fa-a024-6ac55ddf554c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8edc6c3f-1a13-4b82-9404-cb7ea00fe354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caa06fd-b012-4eb5-ab90-88b74f30fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8748fb91-374f-479e-a8dc-e1efa10b5cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54053b29-dc16-4adc-a812-7b2b96eb11d4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70799883-4c78-43dc-8a91-4edfd639a932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17cf3322-7320-4bf9-9401-19e7ab02182c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a574db3-c42d-45a0-8e9c-efe47e943167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6351f5-c09c-4180-8a92-d0106d65b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a61a0a2-1c90-41a9-a784-c79efcf40b34",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e0d77-11f3-42a8-9e04-b96d31a5836d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14397e03-c88a-4e20-8f00-717394202b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d469e49-83c8-4593-9a40-114b83edc196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555429e2-86c9-49ba-82fe-58325639319c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ca336e-29d0-4233-a252-f230bc241eb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234d3c8f-d35b-4249-86cc-c73540c1fde5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b6780c-a1fa-48aa-9adf-95dd7d3a0603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9629d1b-af01-4ee2-a1d7-d2c8c35fd31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289aabea-5287-493a-85fe-df37f882f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbd7e56-fbf1-43f7-838e-daa9d181cbf2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3015d0ca-cce2-421c-b124-e0a1e1d0a777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce428186-e82e-4d80-a0e0-b9ac0f16a776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1197de-b5c8-4730-8d6b-bb53addcbccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bae497-f5b5-4e84-acfe-0826593e485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2faa7e-af0f-405e-b04e-7085352aa4e5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd2cf9e-d813-48a3-959e-10ecaa2a9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bf55ef-7255-4bd5-a553-02249b558a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c5dc6-dd8c-4333-ae4f-f0a717aeabdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f0d582-dd46-41c9-a380-3ebdc90a907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0107b1ad-39b9-40ca-90aa-89eaa11171dd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7904329d-0791-4ea6-8a72-40a85efaff00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e228d6b-f6c4-47cd-877d-972c84b67886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec6427e-ddc9-4b66-9eb4-2062573444d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ceb803-8652-4de7-ad46-a51cd1304a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d54345d-9d46-4627-953f-34febd383c87",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e09602-8dab-45db-9de7-92eef6bfe8d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfffbb4-1309-4886-a66b-774208fc343c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55d02b1-d312-45da-b200-0d4b14b7f28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a676bb6-3e75-43db-bd7c-422024486362"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6f80e8e-8848-40b6-a51c-cb3c9b365c50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab09f1af-b45a-4d57-8310-4f1126c73e28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92838610-e7d8-4c87-895e-4a3d29978285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0475888-d8d1-42a9-92e5-a66f18654e8f"
                    }
                  }
                ]
              },
              {
                "id": "6b6b54c9-90b5-49cc-aef7-840789445fdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8924add5-59ed-4e80-a935-12d12c1762a3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9025888-6bed-442a-8003-2fc9c39e40aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cd044f0f-844e-46a7-85f5-f55fa34a9b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c13ed-e6bc-4a6d-984b-2d87d28d960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de312fc1-d62a-4e03-8d49-5fbabff30263"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c6d7d78-a34a-434b-9e95-b8f3e5b4710a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbb6a6cf-d11d-4348-813c-a76e08d06b83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb95706-ae94-400b-9e36-73aa2de656f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30be79db-1a81-445d-aaa9-e1da9fae45db"
                    }
                  }
                ]
              },
              {
                "id": "c3e9c6ef-c562-4a21-ab98-329e7f085bc3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1bcf20cc-f7d0-4939-8f5f-53a58d6d934f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c6b19-5469-4a45-953b-8347de5b2761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f55d6de8-8dc0-4143-9853-5ca250fbeaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9966b77-0413-4142-81c9-fa9bc086677b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa89798e-3164-4acc-ac47-a3785de8cf4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72c5931d-ad84-40c0-9b1a-b248d3091321",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e478f58-b911-40d2-826c-f5f2c3abe634",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba4528b-e914-440b-8704-350837dd9cdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4048ec76-7765-430c-9d81-a3b629582d86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c147b6fa-032f-4a15-bc9e-7546fea95449",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0987a999-1795-45c4-8ed8-c08cf121134a"
                    }
                  }
                ]
              },
              {
                "id": "d3150225-1403-4ac6-939e-283bea27308d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb8ec308-ece0-4955-a585-9a8448e0d650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "595fa2a3-818a-4850-aa1f-1391919e8724"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5bf84e9-5a10-4df1-b47f-c042e54e413a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "674cb575-8179-456f-b0dd-b3d01bd6b53e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "914949ae-cdc9-4ed2-9ca8-d530368e5916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6918147f-1c3c-42a3-83d1-eabeff11b359"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fece8a49-ad34-46f1-b5e7-5171b6450ee0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15e366ce-93ed-41c1-9e38-e1ab5b81b1dc"
            }
          }
        ]
      },
      {
        "id": "55577adb-c398-4eab-a88b-13395c06e24b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c689b734-4740-485b-b880-abacaa10cc55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42154fb2-6bb7-4a93-9150-7a19fad19a4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "434c57ed-8636-41a2-858f-ec17191e267e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb266047-2478-40d4-ba51-92912dbf10a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca5d3b61-ff3d-4381-a3dc-67b2fa793e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e45b200-31a3-4b7a-9c82-e9eb74c00a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f8fbc87-5c5d-4fbb-9eb5-186531bc7e55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d46a4af8-1188-4d18-93ce-770966d64818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6dcc656-0165-4541-a06f-4b22a6d29325"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "622228f6-ef72-4e02-835a-9943e0b799d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ce999f-b98b-44c7-891b-45cf7c920c01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68949aec-780b-49cd-b3e0-0e16711c0f3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0747c2e8-0f14-487c-ab85-9b6290423be4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "459b3cd3-8940-4d54-a613-e3691665828e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd3012d3-f586-4bd7-b0db-abb411474bad"
            }
          }
        ]
      },
      {
        "id": "10b97fdb-1b76-4906-9110-c18906a03b14",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6351276d-9c5c-4658-9197-e0b7efca0e05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18071f5a-78b7-4bc6-b476-7a57edff780d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce2d5a63-c359-47d9-aa29-de5bae6be08d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f0c7f3-b952-4396-855a-8c2d2a7381c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa13f18c-ce89-44ea-8026-a9039dff6075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00322d8-387b-4f60-a08d-10755b8a7789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a35a19a-e254-4a58-97f7-436ac8bb4043"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7ec8352-cb5f-44aa-8a72-e7124cae53c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "448db441-1095-4e9a-9ad1-704a71c2a2ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bca333b6-afc4-4ec1-a2df-8cc391c6a47c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d00bed01-5e81-4702-b380-b2edc4414c09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8eb92c0-3760-4c04-8ea5-6cbf20d909d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e95cdcd-d6f0-485c-bd8f-c4c93e30be8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebe522e8-7b28-4573-a57c-f10825aa4623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2e3c806-08c8-4655-928b-ebac30e80c2c"
            }
          }
        ]
      },
      {
        "id": "a5ac61f0-9d9a-4020-801a-66e82f3d0703",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4be2d3d2-0087-40c5-a14c-73b8ed4dd7ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b72fdee9-c865-45e2-a089-024ab2f9034d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68fe3c07-e863-4fe6-b828-eaded345a39d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2494e1a-17c3-4652-bb12-902b0e55c638",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "735b7299-2bdd-42a8-ad44-cd6e0e0eda19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a765957-e9f1-4d9b-8172-8d61e4f4d167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff237df8-86a6-482f-8f34-f25870b0dbcf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da0d513-6100-49bc-aeab-561da4983396",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f3892a-110d-4caa-b402-09bf31900553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10f880ce-b388-4f66-882f-6061f15333d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e939baa6-66e4-4fb8-b7aa-bf5f52416f39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c823a085-66a2-4384-8443-264683bb2448",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2231659e-57e4-4568-80ab-87db9a9471d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08aef575-9272-4a25-ab8e-e51fcb5c8bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4f524d9-547b-4ad9-9765-d5f4739bc93e"
            }
          }
        ]
      },
      {
        "id": "8c5f107a-458c-4274-a633-f6cc84023946",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7217180a-33dc-4461-99cf-d1a2768ff537",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6886a8a0-f7d1-4e96-b814-de3371849c1a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0e422126-7a8e-409d-b496-fa31877cf129",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb56494b-3027-418a-89fe-d0ce455f9b54",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33f540f9-8176-4b9f-95d4-2d7066cabfe8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.00350877192984,
      "responseMin": 10,
      "responseMax": 8434,
      "responseSd": 584.0282827701138,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710290057115,
      "completed": 1710290100854
    },
    "executions": [
      {
        "id": "bb7b5345-f47a-44d6-90e2-df23e673bb7e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "85cc0a1a-bd67-40ea-8c4d-3c55f7c2fa97",
          "httpRequestId": "03ddad3b-94cd-4f23-b8c3-9f8cd59a72a4"
        },
        "item": {
          "id": "bb7b5345-f47a-44d6-90e2-df23e673bb7e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3a95d8dc-7c6b-48ff-9024-de9eb8f58714",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "0fe05139-eca5-43a4-bb05-bca007e2a382",
        "cursor": {
          "ref": "76cbdce4-83a4-4af3-8228-cf4a24bb7358",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b9acea98-f413-4786-b7fa-2b847f0407c0"
        },
        "item": {
          "id": "0fe05139-eca5-43a4-bb05-bca007e2a382",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eca60fda-1141-46a5-b36a-e9a2e40cd4e8",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "941b2866-7961-472a-98be-049abfbaffb1",
        "cursor": {
          "ref": "813e52dd-5e9e-4a13-b8a8-eaf5a67199ad",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a66dd8d9-e5a8-42fd-8e20-5d4dbbc9ddcc"
        },
        "item": {
          "id": "941b2866-7961-472a-98be-049abfbaffb1",
          "name": "did_json"
        },
        "response": {
          "id": "de1d1232-b810-4ed0-bae6-6d21d3ba2974",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34bfc52-6863-43d8-ba3f-e4366cd8a145",
        "cursor": {
          "ref": "98c9c82a-7cb9-42ed-b833-ca1cc84d37dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86d7353f-7ad1-4b9e-a108-96df61422b42"
        },
        "item": {
          "id": "c34bfc52-6863-43d8-ba3f-e4366cd8a145",
          "name": "did:invalid"
        },
        "response": {
          "id": "d34afe98-d208-4a5c-89d1-7e6b161f1809",
          "status": "Not Found",
          "code": 404,
          "responseTime": 965,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34bfc52-6863-43d8-ba3f-e4366cd8a145",
        "cursor": {
          "ref": "98c9c82a-7cb9-42ed-b833-ca1cc84d37dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86d7353f-7ad1-4b9e-a108-96df61422b42"
        },
        "item": {
          "id": "c34bfc52-6863-43d8-ba3f-e4366cd8a145",
          "name": "did:invalid"
        },
        "response": {
          "id": "d34afe98-d208-4a5c-89d1-7e6b161f1809",
          "status": "Not Found",
          "code": 404,
          "responseTime": 965,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2e09f-0a2c-499e-9cb5-ac2d4a48e7e9",
        "cursor": {
          "ref": "c8e33842-27b0-4fb6-a82b-5165b3fe0070",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0587d116-fe3f-4e9e-94a2-f6cc549975ba"
        },
        "item": {
          "id": "a2d2e09f-0a2c-499e-9cb5-ac2d4a48e7e9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9bd15e5e-6a13-4b93-854f-ffae30452543",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8bf36d-1db5-4f0c-9238-45ccbe477b1d",
        "cursor": {
          "ref": "f6998d65-ab45-48d8-974a-af9ed43f80dc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7bc05e92-86cc-4f87-a490-9df2b89b9813"
        },
        "item": {
          "id": "ac8bf36d-1db5-4f0c-9238-45ccbe477b1d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fe95079f-1e4b-47aa-925a-f44d85d27468",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc13ab7-2e0f-457a-9771-b70cbdd41f84",
        "cursor": {
          "ref": "9accb8ef-a875-4117-a220-584ae21bdbdc",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f9207f1f-590f-4422-9933-2f94f8d03b1a"
        },
        "item": {
          "id": "1dc13ab7-2e0f-457a-9771-b70cbdd41f84",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b5603938-7252-43d4-b204-19dee5f6fd40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7975b1c5-b156-4b91-aa2c-84f70fd02233",
        "cursor": {
          "ref": "ec5a320e-0c46-4b6a-93de-69b94602242e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3543947e-d138-4bf4-a0ca-e7d199991286"
        },
        "item": {
          "id": "7975b1c5-b156-4b91-aa2c-84f70fd02233",
          "name": "identifiers"
        },
        "response": {
          "id": "de7e094e-5e70-4193-bdbf-ab95ac5b6710",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bfefa0-c8c2-45fb-8daf-57c0f31758f6",
        "cursor": {
          "ref": "547437d2-7a84-442e-8ecf-4e1c16507bef",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "06adb62d-1f21-45fe-a3b6-d139feec6422"
        },
        "item": {
          "id": "16bfefa0-c8c2-45fb-8daf-57c0f31758f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a81674b-65dc-445a-999b-b0bc2fa3debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c36af3-cf6f-413e-ae11-952c4a690b68",
        "cursor": {
          "ref": "a6a06cd2-f4ba-4527-86ab-07c2cd0d311a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0481ea9d-d41f-42b3-9ee4-8b4707f6cf24"
        },
        "item": {
          "id": "77c36af3-cf6f-413e-ae11-952c4a690b68",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c93eb127-db2b-42d6-bd21-8cc6dbbb14f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5260476a-4af3-4ba3-afe2-72058380f3a3",
        "cursor": {
          "ref": "afbf80b0-33a0-4dd5-880c-23640c303e86",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4a5a7fc5-45e6-4170-b4f7-5cb903b3ffc9"
        },
        "item": {
          "id": "5260476a-4af3-4ba3-afe2-72058380f3a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "48077c76-f766-47ef-8654-ee204e019f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714d23fa-d949-4bc3-905a-19e145593b52",
        "cursor": {
          "ref": "ebe6a00d-fee4-4eb5-bc75-907d4691a1ff",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0ac57804-4cb3-4c94-9ee8-e2c624546244"
        },
        "item": {
          "id": "714d23fa-d949-4bc3-905a-19e145593b52",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "14ea7990-e53c-4ac0-ac3e-36f17ccbd7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42559891-fb17-4e6e-941b-ca46d036611e",
        "cursor": {
          "ref": "647ca820-fde9-4c29-ab9c-d95c8d2b0d79",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "685073bd-d384-4cc4-8ab6-d3a2d1d77dc7"
        },
        "item": {
          "id": "42559891-fb17-4e6e-941b-ca46d036611e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "066affe9-e787-4a1f-83d7-849878ced90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c71a3b8-df61-49f6-bf81-6b6c2064c849",
        "cursor": {
          "ref": "0d4910a0-65c8-49e7-a6be-4d869aa85799",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dfe1db13-04ec-44f1-9bbe-5472599a6de6"
        },
        "item": {
          "id": "2c71a3b8-df61-49f6-bf81-6b6c2064c849",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "317c49f9-b8bb-4c05-98a8-cf2417f6ffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da07e7d-a19d-4082-8084-e9f8456b8467",
        "cursor": {
          "ref": "31285b52-ff83-4f78-a0e6-10e3ff96b470",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5312d689-154b-4d05-8cd5-9f4897b7d577"
        },
        "item": {
          "id": "5da07e7d-a19d-4082-8084-e9f8456b8467",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6f53447e-a04d-4feb-a09b-4bf7dff6d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda8652b-62a8-44e3-9a56-68706d361d9c",
        "cursor": {
          "ref": "5f1185d8-a6a4-4333-a974-1e6cfacbff61",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aecf2706-75b7-410e-96b1-4c9f18999677"
        },
        "item": {
          "id": "fda8652b-62a8-44e3-9a56-68706d361d9c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "03c96592-4cdb-4e73-9fea-ad6d48257507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ebf511-e395-4e1a-8bec-7024dc303b7b",
        "cursor": {
          "ref": "aa90198c-30dd-41f7-a9bd-185d0a9ee375",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c92774a1-1d8b-42d5-b46a-30b62aed0fe3"
        },
        "item": {
          "id": "47ebf511-e395-4e1a-8bec-7024dc303b7b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ced263e2-e5c2-4bff-bfb4-b8c93fecb5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69688c5b-f0da-4a7d-82b2-ac05236abf2a",
        "cursor": {
          "ref": "de7bf476-f5b1-4373-8e6a-e26e10c6e362",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4e41f14f-6716-428a-aec2-641bd05e210c"
        },
        "item": {
          "id": "69688c5b-f0da-4a7d-82b2-ac05236abf2a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8414fb1c-c0fe-446c-a116-a0b8c57c7434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5f8efb-b741-4c9b-bf55-75b67e95c967",
        "cursor": {
          "ref": "3c6eebf8-f494-432a-95e1-8bddcb80b795",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "04f9b6fd-8dee-456c-9621-172323cfae8a"
        },
        "item": {
          "id": "db5f8efb-b741-4c9b-bf55-75b67e95c967",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f0df1ca9-f3a2-485c-9766-6d2d2142ea06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fec4b3-1798-45ad-9288-74acdc40e02a",
        "cursor": {
          "ref": "e9bebaef-3cbe-4992-9609-9cc21204e3b0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1d9bdba4-abe1-4d65-bc0c-89405d44e5ef"
        },
        "item": {
          "id": "51fec4b3-1798-45ad-9288-74acdc40e02a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "07bec4f8-47e7-461d-9125-4fa7c2956b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021dae62-ce8c-40c4-9a34-c8755bc3b5fe",
        "cursor": {
          "ref": "01de233b-48e5-455c-8852-d1d5c356962b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ad26850-011b-4521-b784-ab55e34f12ea"
        },
        "item": {
          "id": "021dae62-ce8c-40c4-9a34-c8755bc3b5fe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "20776595-088c-45e7-8dce-26f513e65277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f1767d-808f-4b1a-810c-9b2496e63051",
        "cursor": {
          "ref": "409f9f2d-3501-454b-b5ee-caa173f77edc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d9c931b1-9954-4994-af15-707ce9d7d540"
        },
        "item": {
          "id": "62f1767d-808f-4b1a-810c-9b2496e63051",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a2a3d365-fb48-40c5-a80a-2d184029a2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff9b280-f5aa-47ea-aee9-1f28a0abfa20",
        "cursor": {
          "ref": "0271fa13-c1af-462f-bbb3-4afb97df1b02",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7b6190e2-8125-4d7f-80f4-ee40d969f320"
        },
        "item": {
          "id": "eff9b280-f5aa-47ea-aee9-1f28a0abfa20",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "46ac237a-ec40-42df-9cf9-3e2b8634e95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4b604d-2abc-4eca-a0e6-85c0a20ef5ae",
        "cursor": {
          "ref": "c7f57026-31d0-490f-93fe-4d08fae45010",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "57aa704b-03f6-4726-aedd-0acee2f04b30"
        },
        "item": {
          "id": "4c4b604d-2abc-4eca-a0e6-85c0a20ef5ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d52fef67-12cf-47bd-86a1-ee9e2eadced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d280375-692a-41a0-9dde-f0eaaf152ae0",
        "cursor": {
          "ref": "f3d1708e-b9d4-477b-ada9-5dba1fb290d0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "39150d5f-1e92-406e-b024-ff8b9f681235"
        },
        "item": {
          "id": "0d280375-692a-41a0-9dde-f0eaaf152ae0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6f8cee89-69fa-42e0-8dc8-c626cfa4b4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb816bcd-165a-4935-bc43-b5968b240e32",
        "cursor": {
          "ref": "1666d1e2-7d2e-469e-b0d0-3377ec526e1d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d7824d8d-e13e-47ed-837a-e065fce0369f"
        },
        "item": {
          "id": "cb816bcd-165a-4935-bc43-b5968b240e32",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "75bbecc7-d282-4df2-aa8b-9f3737c4882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ecc51e-c627-4cd2-95f0-a7889d81e412",
        "cursor": {
          "ref": "d2c0035c-2207-4c07-a140-bf32755c3841",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ab1045b3-22af-449c-ac28-7abef11c8f60"
        },
        "item": {
          "id": "20ecc51e-c627-4cd2-95f0-a7889d81e412",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6455d19d-3639-41f4-aba2-943994fbca65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2fadd2-0383-4a78-9f6e-bf7a49b946a4",
        "cursor": {
          "ref": "9ebed80f-a512-4d73-9434-ec2220f082ce",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "37951f85-c1f0-4036-a412-9def64ad2ca4"
        },
        "item": {
          "id": "ce2fadd2-0383-4a78-9f6e-bf7a49b946a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d80acf7d-a0ff-446e-aefe-6c7e5d29a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f608bb-b7f0-43e1-a4a8-71d72f3d0188",
        "cursor": {
          "ref": "6c9f0770-ba4e-4e68-a09b-ab9c57150667",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4aa42c32-a3bb-4ffd-a3bc-3845a7db121b"
        },
        "item": {
          "id": "f2f608bb-b7f0-43e1-a4a8-71d72f3d0188",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c0383374-1241-4d25-ae0a-02247ce00921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b955e-967c-42c3-ba26-ec47aec959e1",
        "cursor": {
          "ref": "4ee52c5d-87be-4a32-82be-442fad64950f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "399b1d81-7d28-4575-82c6-d8091434599e"
        },
        "item": {
          "id": "d86b955e-967c-42c3-ba26-ec47aec959e1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4ac20716-2d1f-4ad0-98c6-74cc7ee4bf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9977051-34c8-40e5-b39e-5c7826a6773e",
        "cursor": {
          "ref": "59f9a7de-a213-4fe2-a54a-f7bced3e8214",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c007d21b-26b4-431d-a92f-2c9252ea229c"
        },
        "item": {
          "id": "b9977051-34c8-40e5-b39e-5c7826a6773e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb7866fb-b802-41eb-8e73-a6dd44f5ed5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0ac1d9-6e1d-41fa-bde1-8c2cc84af15d",
        "cursor": {
          "ref": "193a1397-4850-4457-99f1-de0078fe7828",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6da3d1c4-eb00-47c9-85aa-f0f4deb9b0ef"
        },
        "item": {
          "id": "fc0ac1d9-6e1d-41fa-bde1-8c2cc84af15d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5a435509-b80d-4ba6-8472-3d7d8f8f6953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545072f3-9ed8-4ed5-a769-7f3a10da1549",
        "cursor": {
          "ref": "ebab2b9b-420e-4df6-9ea9-f9cf0b0dc8d5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f40d5aa8-1211-442d-94d9-7be58577d0cf"
        },
        "item": {
          "id": "545072f3-9ed8-4ed5-a769-7f3a10da1549",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "056fcda6-a392-4746-a890-b4952fcb52ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2982716d-88a1-4b4b-8047-1706a2fcb578",
        "cursor": {
          "ref": "3ead4706-d19a-4090-839a-233643f72946",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "86fd6083-4945-4470-907e-e138c237b474"
        },
        "item": {
          "id": "2982716d-88a1-4b4b-8047-1706a2fcb578",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b8fb464-f1ae-40fd-8ca4-177d713bb5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef24f178-036e-4afd-ae15-e04c4b9cc71f",
        "cursor": {
          "ref": "5dd5321c-9fb5-400e-814d-2c1a98b37e6f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da087c49-19d9-49fa-aff9-914888a7f217"
        },
        "item": {
          "id": "ef24f178-036e-4afd-ae15-e04c4b9cc71f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9748c948-e6e9-4ee3-99c2-656ef9ab4ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575dc55e-736e-4fd3-bbaa-f3b0ffc7c37f",
        "cursor": {
          "ref": "826f12f8-38c9-4c56-82c0-5dc140faa060",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f320ba30-1739-49f0-85df-01022de60bde"
        },
        "item": {
          "id": "575dc55e-736e-4fd3-bbaa-f3b0ffc7c37f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "83687b3d-7dcf-40d5-9d9a-5024e0b12c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2118fa-8ede-476d-a175-687704eb15da",
        "cursor": {
          "ref": "7b5e5df1-a3b6-4dae-9d35-69d175df114a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ec18b0b-57cc-45e7-b7f9-c0913b5f9368"
        },
        "item": {
          "id": "6b2118fa-8ede-476d-a175-687704eb15da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24daf89e-4c77-4af1-bdc7-aa81fb297a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52854372-b7cd-417c-aed6-db91b0919992",
        "cursor": {
          "ref": "25a9c4d9-1ed2-46ff-b17c-8bf1d54760cb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f66fecc-0c99-42cb-bfb1-55eef1fba69a"
        },
        "item": {
          "id": "52854372-b7cd-417c-aed6-db91b0919992",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f524c509-0a31-4151-be65-5c794c40afb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb481a6-c24f-4a51-bfd6-527f5bfc9841",
        "cursor": {
          "ref": "59f3bdc0-11ec-43b2-8630-2b6fee3d433e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c970b753-c2ba-45b6-b4b1-de8cc5c00053"
        },
        "item": {
          "id": "dfb481a6-c24f-4a51-bfd6-527f5bfc9841",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22c7be01-7b0b-40ac-bf53-3022918d2968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c21138-f128-4b47-b0c1-a82875ce6b3a",
        "cursor": {
          "ref": "80bde8b5-3bd8-48f6-9885-326d868b82c7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54386bf6-755f-4082-9377-4e380728980a"
        },
        "item": {
          "id": "39c21138-f128-4b47-b0c1-a82875ce6b3a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e017a607-a208-4543-9aed-d7deb94d4aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ba176c-109a-4ffa-adf8-3c0e9749340a",
        "cursor": {
          "ref": "f64d4de1-56d9-4de9-a573-009c331429a9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5e863cca-1df0-4d26-aef7-9a99c56e992e"
        },
        "item": {
          "id": "01ba176c-109a-4ffa-adf8-3c0e9749340a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8b831e6c-c48d-4186-b3f2-1176efb60acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689e8c38-9522-47c9-925a-9d9ee5ee8eca",
        "cursor": {
          "ref": "b3ebea0d-84c5-49f8-a082-4c8f21b21529",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "100a84dc-6d4c-42d4-88f2-3fb6862e37b5"
        },
        "item": {
          "id": "689e8c38-9522-47c9-925a-9d9ee5ee8eca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98378ba1-9def-423d-92d2-6e3144b24e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910579ef-f889-4bc3-b329-dce14e7984e5",
        "cursor": {
          "ref": "72ec9adf-616c-44a0-bdd3-bfc5d0f27620",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5ab275f7-d978-4d7a-a3c0-1d23d59e0422"
        },
        "item": {
          "id": "910579ef-f889-4bc3-b329-dce14e7984e5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a62e25d-2577-4e05-bbac-20f3dbe3c773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4581d3aa-03bc-45df-a431-1a495393a95d",
        "cursor": {
          "ref": "ca52cecf-5d23-4670-ba28-a39d5a8ea708",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a1821f1d-8c59-4d3b-8dce-3f64450a8461"
        },
        "item": {
          "id": "4581d3aa-03bc-45df-a431-1a495393a95d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7066f202-c357-4952-a579-007f007ae106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc58fb7-7b47-4cf1-9b27-aea807bdb85b",
        "cursor": {
          "ref": "198e9a94-6a79-4abd-a404-3f2f53ec072c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "acd3290e-8c02-4b0d-a73b-fc5d4a6a632a"
        },
        "item": {
          "id": "5fc58fb7-7b47-4cf1-9b27-aea807bdb85b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc14bc22-557d-48fa-b27c-80606d6eabd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858232bc-cc59-4fa8-9aa6-309d485d9204",
        "cursor": {
          "ref": "d90f086b-38f8-4678-b608-03dc966af8a2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d1c7d915-b9f6-47f8-b335-a47340e618df"
        },
        "item": {
          "id": "858232bc-cc59-4fa8-9aa6-309d485d9204",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a62f97bd-b06b-4be5-aaea-12de573959e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03ca444-1994-4b60-9062-9e6ce1b6028d",
        "cursor": {
          "ref": "4096025c-c2c6-4fc0-a2bc-558c31da120d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a297fbaf-9fc7-4ab1-a2b5-40a4c50edd22"
        },
        "item": {
          "id": "f03ca444-1994-4b60-9062-9e6ce1b6028d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b112205a-8d31-4e3e-9292-7d50c0db9846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b93a79-ecdb-48b8-b84d-7bafa54c6b4f",
        "cursor": {
          "ref": "8795061c-22ec-4069-8041-ebd2a8ef90a6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b6aa19c6-a5b8-4c94-950d-1a5fb2e05a82"
        },
        "item": {
          "id": "f8b93a79-ecdb-48b8-b84d-7bafa54c6b4f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a7b0af8-b5df-4722-8b55-be43a7373735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5297d776-c708-46d7-9167-4f3efb931d4f",
        "cursor": {
          "ref": "8c06a026-da69-41d8-add5-385c44350759",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "191b4142-b2b8-492d-86b1-5f17d8af7a60"
        },
        "item": {
          "id": "5297d776-c708-46d7-9167-4f3efb931d4f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "394519c5-f271-4f60-b0f2-1f7546e8866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be397252-a725-4d0f-b724-1c3d35dc1353",
        "cursor": {
          "ref": "e427435a-64cb-494e-8d3f-4823df883f7d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e31fceec-f66f-42e8-918e-ebf058a5e944"
        },
        "item": {
          "id": "be397252-a725-4d0f-b724-1c3d35dc1353",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef99f630-1495-4e6b-8d49-f2f8585c4185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb20cf39-40a4-4540-8cc4-0ba298a920dc",
        "cursor": {
          "ref": "26d3fac6-beba-4b75-835f-766636da55d3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0267632b-6cbf-4f23-9574-42cf27753718"
        },
        "item": {
          "id": "cb20cf39-40a4-4540-8cc4-0ba298a920dc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee7bbaac-d1b6-448c-9976-7ff444bc0695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29db3244-481b-4225-b24a-36e8eb1475b0",
        "cursor": {
          "ref": "259a2e80-e211-4ea0-bce1-deef345d44c5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a0a96b8b-f049-421d-9e0a-dae90b913277"
        },
        "item": {
          "id": "29db3244-481b-4225-b24a-36e8eb1475b0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3c338f33-1e6c-4473-98bc-8d1ffbc10bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6252b2ac-715a-4271-8b97-48c4561ab6f0",
        "cursor": {
          "ref": "e8120be1-6adc-421a-8154-9cb8c34677f5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "00f0bc2a-b1cb-4fd5-a855-94aa1c8cc70a"
        },
        "item": {
          "id": "6252b2ac-715a-4271-8b97-48c4561ab6f0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "02608dcc-fcf4-4bfc-a2a4-67f5fd36001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c366f5-2562-4faf-88a2-d082d7789a56",
        "cursor": {
          "ref": "9c0dd66e-195a-4bfb-9403-7902835ff5ee",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "86f3d7d1-5c26-4c95-b861-6a09a2782ae7"
        },
        "item": {
          "id": "a8c366f5-2562-4faf-88a2-d082d7789a56",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4fd76121-ca62-4b54-bfa5-5d28a19c76d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a86f20-5117-49e1-a38f-ae8407fe6a7e",
        "cursor": {
          "ref": "8536a537-ca33-4b18-bf94-8d4ac1a3abd4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bcded439-226d-4963-aa9f-af2bb08406fd"
        },
        "item": {
          "id": "05a86f20-5117-49e1-a38f-ae8407fe6a7e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6cbd6ee-d6df-4236-9597-28c0e0597594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b4fb81-c8dc-41e0-a6b5-82b2841ccc50",
        "cursor": {
          "ref": "2fc41faf-c150-42c2-8da9-66b2f0076fd2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e9f0a9c0-abec-4474-88f3-8e44f1271448"
        },
        "item": {
          "id": "04b4fb81-c8dc-41e0-a6b5-82b2841ccc50",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1b427fbd-1b96-43e7-9cf0-4b2c19357cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce3134-6211-4235-8b56-614375f5351b",
        "cursor": {
          "ref": "b545acf0-334f-4c64-91f9-6fceb638a1a5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e3becab-9bdb-4adb-a5e5-c3f4d34041c9"
        },
        "item": {
          "id": "d9ce3134-6211-4235-8b56-614375f5351b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "14c9fa69-5234-4df6-856d-3e650067a8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f40908-c127-46fc-b7df-dc716e0b8d67",
        "cursor": {
          "ref": "99fbc9c4-7ba6-46b6-9b2f-10296c407fe2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0c794bbd-cc08-4664-9601-be7525c0163f"
        },
        "item": {
          "id": "96f40908-c127-46fc-b7df-dc716e0b8d67",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6337fbf7-d039-44be-bbe7-eeea96d63e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760b7c85-828a-4acc-8607-1f277c1f55a1",
        "cursor": {
          "ref": "831b4c56-96a6-40ab-a35c-0bb0a71827fa",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bd2ad7cc-522d-411b-b5b5-1a13838fd147"
        },
        "item": {
          "id": "760b7c85-828a-4acc-8607-1f277c1f55a1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecf4183d-dd97-4144-8cf4-0c3473332d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c548d90-3d83-43ba-b679-8c49aaf1f0c5",
        "cursor": {
          "ref": "ed524345-6822-49d7-943e-89e24e7420fc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "192682db-d34f-4838-842d-2ac030b11f27"
        },
        "item": {
          "id": "0c548d90-3d83-43ba-b679-8c49aaf1f0c5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df766a2f-e3c4-4a10-bb26-0686a52a3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5192b2-fee2-43a9-aefd-d9964887a9cd",
        "cursor": {
          "ref": "7418d917-09bd-4195-8e23-0d4596d71183",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "284979e8-79d5-4ea2-9544-ad8ae3b2d816"
        },
        "item": {
          "id": "8b5192b2-fee2-43a9-aefd-d9964887a9cd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4cf3c763-de55-46d4-9616-0e2ce5bbbb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc22995-8705-4e84-9ab1-7ba012322465",
        "cursor": {
          "ref": "2f38033c-cd40-440a-b7a8-9c0a79501332",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2825852c-3ef9-451f-84ca-bd06f7a9f09a"
        },
        "item": {
          "id": "7fc22995-8705-4e84-9ab1-7ba012322465",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8d9ebe09-9570-420d-af3a-80edac2f22e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c8188-f084-4fff-8d74-20f930d4a15e",
        "cursor": {
          "ref": "c1f0340d-873d-40f7-8833-fdee81c9b77a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76ff27ed-db63-4193-96ca-1969915e703e"
        },
        "item": {
          "id": "f86c8188-f084-4fff-8d74-20f930d4a15e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ad76f681-ba34-4f35-9494-b346b9d67092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f4fd73-2c8f-416d-a0ab-ea8a67e6a3b6",
        "cursor": {
          "ref": "881b3b2c-7e08-47a5-86c6-f14f51c094cd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9aa24835-d5d1-4602-9605-1580d80f6047"
        },
        "item": {
          "id": "53f4fd73-2c8f-416d-a0ab-ea8a67e6a3b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ad70b91e-f81e-4f60-a006-64cc55286b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e05039-5306-4633-b619-d363b4c897ce",
        "cursor": {
          "ref": "b080daa4-f09d-405d-af3c-a88d99389918",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b49adc7-7ebc-4132-9402-268111acd5d2"
        },
        "item": {
          "id": "30e05039-5306-4633-b619-d363b4c897ce",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f41395e6-025a-4290-86f8-f454a6c48024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1735cbdf-a60d-4f61-b378-120050a5cb97",
        "cursor": {
          "ref": "07443cb3-76e5-4215-8cbf-3318dd727c3c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b8862c0c-599a-4f30-b580-ab47e8c8ee4f"
        },
        "item": {
          "id": "1735cbdf-a60d-4f61-b378-120050a5cb97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d0034a36-8712-4fc7-b245-5d9741003efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e0096e-1229-41f7-b1ff-065da9d652c9",
        "cursor": {
          "ref": "5fa546a0-19f3-40ca-a577-591acb4ef67f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ee55280a-9d3d-408f-b8a6-756fc50d2f3d"
        },
        "item": {
          "id": "69e0096e-1229-41f7-b1ff-065da9d652c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9124ab9-9c5f-44be-8605-5613c48e3628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d15e675-19d4-4471-9374-cf9830e6c1c3",
        "cursor": {
          "ref": "ff99d071-f17d-427d-a112-a1c11daf7e09",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "69562ecb-2bd2-4111-b301-be7ebe3b37ba"
        },
        "item": {
          "id": "5d15e675-19d4-4471-9374-cf9830e6c1c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "92173767-f4a0-4fd6-8ef5-f4a05f7cac79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3807f767-c799-440b-843d-8cfba172e1a3",
        "cursor": {
          "ref": "816dbee1-726e-42a5-9235-a2a83364a9c8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3630267c-d472-4d88-bf69-a2a3350316e5"
        },
        "item": {
          "id": "3807f767-c799-440b-843d-8cfba172e1a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7f1ee4c9-39c1-458b-a8ab-c7d6819e7d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4668fc-7572-4333-a7f0-ed2585733efb",
        "cursor": {
          "ref": "a273ed0f-d3d6-48a0-b04c-1afd559026b5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f9828926-17dc-4907-b982-f147b40d6a97"
        },
        "item": {
          "id": "0a4668fc-7572-4333-a7f0-ed2585733efb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "68fe182f-b3c5-4d22-a509-3ddc47516db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c5464d-1c63-4f95-b027-aa8b55305b50",
        "cursor": {
          "ref": "ac92fc0b-7b36-4fd5-8598-0ad16dab46e8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8015827a-1063-4d73-82dc-09665fe29f2e"
        },
        "item": {
          "id": "14c5464d-1c63-4f95-b027-aa8b55305b50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2eede4b7-6ac8-4461-ab85-bf9148c496c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a36a18d-685c-4c41-8a19-ff2e59d1bcc0",
        "cursor": {
          "ref": "ac588d77-5760-4503-853d-c71ef55c007a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16622ae3-4646-441a-ac08-49b2ebd17453"
        },
        "item": {
          "id": "7a36a18d-685c-4c41-8a19-ff2e59d1bcc0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "abede11b-bb5f-4c66-a5a8-cfc687cd7b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1991dfa-89cc-4d09-bc2a-f2b740aa3dc5",
        "cursor": {
          "ref": "f19b9ba4-05d3-46a5-8738-4944f9cdfff1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bfe6222e-cda3-4ea8-afbb-4c17f7f8f225"
        },
        "item": {
          "id": "a1991dfa-89cc-4d09-bc2a-f2b740aa3dc5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aa7d0169-d098-4b5e-af7a-6d18751b708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e8a59a-26a3-491a-b040-7b842964b608",
        "cursor": {
          "ref": "00aca3c4-d3f9-4bc0-9f2d-3f78e5b485ab",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b9de2922-6ff5-4983-8ad4-31b30cc57bdc"
        },
        "item": {
          "id": "d5e8a59a-26a3-491a-b040-7b842964b608",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3e712931-18f0-47db-a3eb-a95c92e5209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de7947-34fb-42c7-923b-697b6d5ce1c9",
        "cursor": {
          "ref": "1e0581df-675c-4792-987a-7d47c8d37399",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3ef0d6a3-0775-461a-9c0b-40642b07aebc"
        },
        "item": {
          "id": "99de7947-34fb-42c7-923b-697b6d5ce1c9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cf615d67-6689-4f1d-9dc8-783b0046a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7773d95a-641c-4d0e-b4cd-f5f515b13481",
        "cursor": {
          "ref": "95b0e235-a06c-4bd0-ac3d-5e807c40e56c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dd5a22f1-ed4b-488a-8c24-11f1ebe9885f"
        },
        "item": {
          "id": "7773d95a-641c-4d0e-b4cd-f5f515b13481",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0a49b172-7f9d-4713-ac1a-a508845e5880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741e2b09-19e1-47ff-9581-afa718bad88f",
        "cursor": {
          "ref": "88d57ea1-cea5-4fb2-ad03-c66382dc3501",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d89d7be1-eb55-4681-b954-48d5f59b67b8"
        },
        "item": {
          "id": "741e2b09-19e1-47ff-9581-afa718bad88f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "911ddb05-afe4-45a5-a6f5-ec090198f1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b9f616-7318-4144-9d2f-a6e128172be5",
        "cursor": {
          "ref": "44906ce9-1a2f-428a-932a-cbe47914d986",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "735fb905-eb34-4058-aada-62882d568f40"
        },
        "item": {
          "id": "d4b9f616-7318-4144-9d2f-a6e128172be5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7d9c559c-f487-40d4-b3e2-6717fd055a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee866b2-0a7b-4278-8414-affa37f377ed",
        "cursor": {
          "ref": "b1bde29a-dd5a-48f5-adbc-68d15bbe6498",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5ebe6c79-afef-47d2-ba32-00c6f6dc33ba"
        },
        "item": {
          "id": "cee866b2-0a7b-4278-8414-affa37f377ed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0069b6c7-15ea-442d-be76-4f256793e178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a533cb5-4c21-4d0d-8ce7-b09c846bca23",
        "cursor": {
          "ref": "ed7d1458-cee9-483b-9a52-0124bc70c904",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "62d44e46-b82d-485b-b920-b0739bc08cce"
        },
        "item": {
          "id": "7a533cb5-4c21-4d0d-8ce7-b09c846bca23",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c8bd9021-e460-4741-8929-33f34a25576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb33964-32fb-4b70-853b-e42da4d41162",
        "cursor": {
          "ref": "4acd42be-eccf-4c80-bc6f-86eb428a423f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "487b769e-9d7d-4af7-b7b4-63949317bdbe"
        },
        "item": {
          "id": "8bb33964-32fb-4b70-853b-e42da4d41162",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "13982a93-c941-4e5f-ae77-0e37394af75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae5f5e1-644c-47d0-b9b2-dab2a86f83f2",
        "cursor": {
          "ref": "58b430e2-ab69-4bd2-a53d-156f1f89f91a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "148f3067-c3ed-4c7e-8d8f-cc0b0cfccd09"
        },
        "item": {
          "id": "cae5f5e1-644c-47d0-b9b2-dab2a86f83f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "845816ba-e621-4ead-97bc-148bcdb70c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7670cd21-e44f-4ddf-984a-0a0dbcee2571",
        "cursor": {
          "ref": "a92bc99d-f274-4cb0-9faf-dfc01dd41aab",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c010e4d9-fdc6-4a58-80b7-8d19f0c6b46d"
        },
        "item": {
          "id": "7670cd21-e44f-4ddf-984a-0a0dbcee2571",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2387f2a4-6c15-4bf8-8851-62e43fabbb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02653aa8-2094-49a8-b497-049bfa5764d2",
        "cursor": {
          "ref": "383caed9-b0ae-49bc-8c3b-94f38ed1b09a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c758ef76-4bf1-464e-b55f-326680ea3ec5"
        },
        "item": {
          "id": "02653aa8-2094-49a8-b497-049bfa5764d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6f302248-1a55-4e5a-a217-badc3b51508f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25635061-d610-4ee1-b8af-b59bcf03b156",
        "cursor": {
          "ref": "2aa23789-d37d-43f9-bf2e-47673dfae165",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2b9f5cd7-94ef-433a-b9bf-914e9d8cc885"
        },
        "item": {
          "id": "25635061-d610-4ee1-b8af-b59bcf03b156",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b68b0f92-eb71-4c21-800a-ce89515ce69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c2aa1-906e-40d0-a0cd-4d9bb2ae05ac",
        "cursor": {
          "ref": "069ce251-2e92-41f5-a4cd-82b801743379",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dee18e4b-a0e9-4c19-b51d-afb00cc8034c"
        },
        "item": {
          "id": "e43c2aa1-906e-40d0-a0cd-4d9bb2ae05ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2fcf292f-0462-40c2-839a-7497786775ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bee338-baec-4449-9e39-a27a357fb6a2",
        "cursor": {
          "ref": "f5e5a75f-2ef0-4897-b809-e78c71f75a35",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fbab8884-816f-4d45-a3c5-f5d7c2e883b3"
        },
        "item": {
          "id": "d8bee338-baec-4449-9e39-a27a357fb6a2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1fc178f-46ed-4e16-91ad-bb36381abba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f40a131-b6f7-4b2a-803a-b38f27171a8f",
        "cursor": {
          "ref": "82daee19-ca4b-4535-9a25-fd3328ac8524",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1564e73-ff4e-4c4d-92b3-3227e58b4fb1"
        },
        "item": {
          "id": "1f40a131-b6f7-4b2a-803a-b38f27171a8f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b8172ac-0f44-463d-ade2-546e99a0d9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87469491-977d-4026-87a9-9f53ce2f22ad",
        "cursor": {
          "ref": "57cc7ef4-f683-4aa3-bb26-68d54436777c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "041d92f1-1d4b-4b8a-9750-872c42190baa"
        },
        "item": {
          "id": "87469491-977d-4026-87a9-9f53ce2f22ad",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "427714a2-75a4-48da-97ed-4a128769dd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde87814-debd-4770-8ec1-21db3456d925",
        "cursor": {
          "ref": "6d875c70-7b90-4ba0-b3d0-723f34d97975",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "121fcb4f-c6df-4579-acad-ac2ebab11620"
        },
        "item": {
          "id": "dde87814-debd-4770-8ec1-21db3456d925",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "96c9cb85-c50b-4f34-8b63-8e8b107d0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fdb50e-3bcf-403c-b32f-ae196f0e5639",
        "cursor": {
          "ref": "bfc54ba8-a94b-4509-985a-2895f26d2bac",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "56ea0605-6a12-4bde-be4b-7c350fd60074"
        },
        "item": {
          "id": "38fdb50e-3bcf-403c-b32f-ae196f0e5639",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f8459272-bdaa-42f4-81ad-d8da5af86037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001fbe50-f107-4bb0-b0e5-753de688b017",
        "cursor": {
          "ref": "8304b796-6210-4ed3-9ebf-2ed1f17070ed",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88930b46-d016-4462-b6b3-5767f71c3b4e"
        },
        "item": {
          "id": "001fbe50-f107-4bb0-b0e5-753de688b017",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cc874e12-6634-4c67-8983-c615406ab716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8345a9-60ce-4179-a027-f9befd0e811d",
        "cursor": {
          "ref": "df3f8419-b0cd-4da8-8f37-0ebe2589452b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "99f2b7a3-a1b7-454e-89b7-2fc42d6f8638"
        },
        "item": {
          "id": "0c8345a9-60ce-4179-a027-f9befd0e811d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "022c0454-5e23-4d19-a82b-985beb21e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6723c6-ce12-440c-bb49-8313ee4dbc3c",
        "cursor": {
          "ref": "29439782-690b-45ef-b2d0-1c8184de45f9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df1ac3f6-c8cb-402d-a99c-0b43508fc5d8"
        },
        "item": {
          "id": "0f6723c6-ce12-440c-bb49-8313ee4dbc3c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6a67f8a-ec22-4779-9576-6206b77d2aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0df0a1-3e15-4894-8f45-f630934d72a5",
        "cursor": {
          "ref": "96d444b4-091c-410c-9690-88a607bfd539",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4302909d-cad8-454e-8a1f-1b292d4231e1"
        },
        "item": {
          "id": "0e0df0a1-3e15-4894-8f45-f630934d72a5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e7975a47-4580-4f36-94b0-4b29ba144a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118d3669-f2ee-4343-96c7-2d47737af222",
        "cursor": {
          "ref": "eb522fed-4e59-4059-afe5-91a82842d023",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1d5d6611-2be0-4b17-a4c5-23e9f5ca50bd"
        },
        "item": {
          "id": "118d3669-f2ee-4343-96c7-2d47737af222",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bf8beb24-485f-4311-9324-55ea4cd2710c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d17ed9d-3017-40fa-9eeb-696205613338",
        "cursor": {
          "ref": "b92911be-2397-4048-9ebc-dfdfbad84d29",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce44de15-1c11-4b8c-bfda-562701fda996"
        },
        "item": {
          "id": "9d17ed9d-3017-40fa-9eeb-696205613338",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "be6b394a-d840-47c6-bd6d-922d4ce77287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1511860f-b3c7-4a72-9d58-2a6087891029",
        "cursor": {
          "ref": "8418d54a-3789-40b6-ad12-f5f6812df812",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "41782803-2a92-4dfb-a087-b4c7d5f6aea2"
        },
        "item": {
          "id": "1511860f-b3c7-4a72-9d58-2a6087891029",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "43659e6e-f8af-4b8e-b018-50f375ad4f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c37042-f6b0-4915-a758-c67a1a0d6c53",
        "cursor": {
          "ref": "5c8351ab-998f-4ead-8067-7d31afd7fec2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cb91f91e-a997-442f-a136-0ac3fd48df58"
        },
        "item": {
          "id": "28c37042-f6b0-4915-a758-c67a1a0d6c53",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "74d8c739-65cd-470d-9cd5-c71e9a89a939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771c15af-ebe2-41d5-84aa-40c11ca1b9a9",
        "cursor": {
          "ref": "b696452c-ba28-43d2-880a-24ca447d240b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e43f580b-812a-499c-96ad-8649172c8bd9"
        },
        "item": {
          "id": "771c15af-ebe2-41d5-84aa-40c11ca1b9a9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7125c45e-6216-4c31-b9fb-a87073c926ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd965b8-8557-44d4-b21e-3a46f332c13a",
        "cursor": {
          "ref": "ff90b72f-58a7-433e-9031-4ecfc1212333",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "30d61e75-38e7-45c2-85aa-c545870fd645"
        },
        "item": {
          "id": "fdd965b8-8557-44d4-b21e-3a46f332c13a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "00f32a35-a845-45fc-81a3-d3b015a7ee7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b43ab4-9439-49ff-99f8-7d956b136c96",
        "cursor": {
          "ref": "fd73809a-782a-4879-8770-d757020e5a30",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6e4552b5-76ea-4e5f-8750-1ba27bfc8298"
        },
        "item": {
          "id": "03b43ab4-9439-49ff-99f8-7d956b136c96",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "741cde99-14fb-4d96-8a90-ec5c7ebd0748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "18b394c2-c2b7-4265-aeec-938509eae4d2",
        "cursor": {
          "ref": "10c8420f-e423-4680-b0fb-859c093a07ec",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "de8f1524-5823-405e-87ea-bd52488bcddb"
        },
        "item": {
          "id": "18b394c2-c2b7-4265-aeec-938509eae4d2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "99e50bc8-4d6b-4c44-b335-f9c32bf54843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0a1e0144-6ad9-4987-a151-f464349c88ff",
        "cursor": {
          "ref": "80d5c290-dd08-4457-b9b3-f2db895a0416",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9cbfa31-c02c-4910-8c6d-05963b6614ba"
        },
        "item": {
          "id": "0a1e0144-6ad9-4987-a151-f464349c88ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9e44a2ee-a72a-4d27-94c9-9c3cd3ad429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "490ec649-6278-4e9a-9e7d-794e4c08c886",
        "cursor": {
          "ref": "0b57c6b5-25ed-428b-984d-87525b3228d9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "902ce3a9-b425-4ce7-8b81-23a2d9ad7c03"
        },
        "item": {
          "id": "490ec649-6278-4e9a-9e7d-794e4c08c886",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f513f01b-7746-43bf-a9ee-7a5f13354e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6b0dac72-3595-4cba-8d69-cfb076213005",
        "cursor": {
          "ref": "538193b8-8605-4ebb-bc53-578fb2b14d98",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "38edd9e6-53b4-4a2e-aeaa-8db3cfd2239b"
        },
        "item": {
          "id": "6b0dac72-3595-4cba-8d69-cfb076213005",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74283dc8-5ef3-4cd6-bc86-6b409d69e854",
          "status": "Created",
          "code": 201,
          "responseTime": 8434,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c90379-18a4-456b-9a15-6f775f387804",
        "cursor": {
          "ref": "603486f4-a609-42de-aa37-052bf912effb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4867e897-2093-4018-9fa6-845ac3678a5c"
        },
        "item": {
          "id": "c9c90379-18a4-456b-9a15-6f775f387804",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "84df5ed5-8fdc-4c30-b840-da4b388ed18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0247b173-86ab-429b-acc7-4840da3b88a4",
        "cursor": {
          "ref": "ddd4325d-d49e-4555-8a54-c3420e7dda3a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bd40e8ad-e326-414e-93d4-d7c94ab322a0"
        },
        "item": {
          "id": "0247b173-86ab-429b-acc7-4840da3b88a4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8c6c1fd5-76d4-4f89-9241-bdb698fdf09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d35bfbfe-a4a5-4308-82ca-25ed29f1c100",
        "cursor": {
          "ref": "5762925b-0d3a-46fe-8919-c212593f99ff",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "af8812e1-834c-48ec-9d93-bde8b836794a"
        },
        "item": {
          "id": "d35bfbfe-a4a5-4308-82ca-25ed29f1c100",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a999596a-79d0-420b-be16-9db708a59a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc60deb-0b92-4853-b5cc-3e0e6ef5201a",
        "cursor": {
          "ref": "88c12cf2-f484-4ccd-bb0c-f88859627ee7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2998c84c-87de-463e-b072-9e69e5d0de16"
        },
        "item": {
          "id": "2cc60deb-0b92-4853-b5cc-3e0e6ef5201a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c15748b2-e8ab-4c29-a93e-078216e86bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206fe6a6-8e9f-4eaa-9d80-4c3a13f6748d",
        "cursor": {
          "ref": "11768078-9376-47b1-bf52-5285ddaf13ac",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cbf6d8e2-85a4-4e31-a752-45f37162bc51"
        },
        "item": {
          "id": "206fe6a6-8e9f-4eaa-9d80-4c3a13f6748d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e67fe5db-c2c3-4b41-8e56-0356c2543d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1874cb1-4ebd-4d10-9e81-cbcdda98ff2a",
        "cursor": {
          "ref": "0f14ccf4-1901-4ea8-ab92-39e40836fd64",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c8476701-6a70-4e61-9df9-0f069f8b1cb1"
        },
        "item": {
          "id": "e1874cb1-4ebd-4d10-9e81-cbcdda98ff2a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b59c6a3-2645-40b7-9e9a-b5ab53b83a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cffc93-1af1-4dbd-beee-f10c9b653845",
        "cursor": {
          "ref": "71b9e7d5-d0cc-4849-8640-03b632c6d223",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db57506b-f07e-44fa-8b78-04c56144343f"
        },
        "item": {
          "id": "f4cffc93-1af1-4dbd-beee-f10c9b653845",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c573a75c-9fd1-4030-893b-2613e10e998e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b84b72-9909-48f0-b000-12f23393519b",
        "cursor": {
          "ref": "128b4b8d-b5df-48db-b35c-a58a06ceca5e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6684a0d0-db52-4862-8df0-0326fd21e518"
        },
        "item": {
          "id": "65b84b72-9909-48f0-b000-12f23393519b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "384280f5-8c42-458a-b4d1-985631ce97aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d58cdb-6531-4050-a8c2-47be51e0c9b4",
        "cursor": {
          "ref": "4ac2f9e0-2a79-473a-b046-aa4edf366d42",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "414c74e3-bf85-4e9b-a98d-2ade299377cc"
        },
        "item": {
          "id": "a5d58cdb-6531-4050-a8c2-47be51e0c9b4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7e8443c6-40bc-4d17-9940-b2600f99c142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5784c7-b527-4a13-9fab-031a5c796889",
        "cursor": {
          "ref": "16ae266d-0905-4465-994e-85f1c478e3aa",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "43f59aec-4061-45ad-bc95-b8f30778649e"
        },
        "item": {
          "id": "5d5784c7-b527-4a13-9fab-031a5c796889",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "082043bd-acc5-4874-92c9-4c1b806ae922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a9c03-cbb6-493f-ac15-cded3ff2494c",
        "cursor": {
          "ref": "300e443a-dca3-4a0c-9d0f-bdf3d0347ce1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "17e2d9d9-a886-40e1-98f0-2ed8eab31268"
        },
        "item": {
          "id": "489a9c03-cbb6-493f-ac15-cded3ff2494c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d101068d-7304-4e63-a847-d089546e9a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8514df7a-c942-4beb-89bb-eebf48bf746c",
        "cursor": {
          "ref": "04f9cebf-95f7-43ed-8f1a-b4485239fbf7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9b36b1e7-1c99-42b0-976e-648366771efc"
        },
        "item": {
          "id": "8514df7a-c942-4beb-89bb-eebf48bf746c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f258afc1-bb54-4498-8571-69a26df5cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369be556-c480-4b1c-9401-5541b30a7ef3",
        "cursor": {
          "ref": "08103d80-99d1-4c46-a389-e50792dfc0f9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9fda8caa-72d4-440e-a74f-862641919f01"
        },
        "item": {
          "id": "369be556-c480-4b1c-9401-5541b30a7ef3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f674015d-e3a4-4959-9a8e-415f3010f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec2653-bfa0-43d0-8e2e-ac08121f9b29",
        "cursor": {
          "ref": "09916c0a-3c53-43e1-a8c8-211f9eaf21d5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "de711cc8-c63f-4d96-b33f-64330d8e5da4"
        },
        "item": {
          "id": "3dec2653-bfa0-43d0-8e2e-ac08121f9b29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0cff3052-3b8f-4cff-bf5d-94627edd979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f250320-1c24-4655-ab31-a4388cb0a2c8",
        "cursor": {
          "ref": "f417810c-733b-44f8-8d79-c3b120685e8d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a07c52c-4739-46da-ae09-4630d909815a"
        },
        "item": {
          "id": "7f250320-1c24-4655-ab31-a4388cb0a2c8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "98f2a83f-6c72-4192-bb85-2a0d6f734c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56e58cc-25dc-4d7c-bd04-ea9b0b78e6fb",
        "cursor": {
          "ref": "5ab71d55-35d1-4a30-8d1e-4076302edac7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8bf054d7-237b-4e30-9df4-a1f6dba987c2"
        },
        "item": {
          "id": "d56e58cc-25dc-4d7c-bd04-ea9b0b78e6fb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bddee437-791d-4ae5-9cfe-b89194524776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820c8856-2ffc-4d3a-8642-154f0c8fcb88",
        "cursor": {
          "ref": "2d46afaf-1a40-4a0c-a4f7-31fc9aebdce9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "892f5054-7ad7-4dce-856d-1f36497fc20e"
        },
        "item": {
          "id": "820c8856-2ffc-4d3a-8642-154f0c8fcb88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1059cef7-392a-4fbe-b093-9fdfe1194bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2c7b2e-677a-4830-b727-54aa8a217196",
        "cursor": {
          "ref": "beb44c89-b23f-4039-853b-819f6b4f9af3",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0ab462a0-39bd-4fa2-a2ae-0d64f1b1f5ea"
        },
        "item": {
          "id": "cb2c7b2e-677a-4830-b727-54aa8a217196",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61a77f6a-61af-41b2-8ee7-4c9ea6a2ee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9866513f-bfec-497e-b622-a385ea404acd",
        "cursor": {
          "ref": "b7d87235-ce2b-4dfd-bcba-881abd5d2f48",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cd69884b-0635-4f07-b976-3a0d514448cf"
        },
        "item": {
          "id": "9866513f-bfec-497e-b622-a385ea404acd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "29b8109a-f9e3-41da-8259-5bfc0f492c2c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fd19e742-9fca-447c-8a40-e62c962667c4",
        "cursor": {
          "ref": "6098dd91-aaaf-4f2c-be12-dba73aa5bd95",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "94ce3fee-9509-434f-ade5-d94f47ee44a8"
        },
        "item": {
          "id": "fd19e742-9fca-447c-8a40-e62c962667c4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5e0a60e3-8712-41d2-a918-be90b176d423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bf2e6a-d785-458b-bb86-563c2fbac322",
        "cursor": {
          "ref": "91db0d88-993c-4781-b451-fb0d92945865",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3910a62d-c9ae-47ab-9217-a1faf9193330"
        },
        "item": {
          "id": "55bf2e6a-d785-458b-bb86-563c2fbac322",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fc47d2dc-bd11-4ab7-af0f-f510f6ec2a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7f1b32-d27a-4be0-9f76-b1cb567d9181",
        "cursor": {
          "ref": "c8b27e72-a940-41cc-be85-d71a4d3e08ad",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a47d19b5-d399-4d44-9869-60b57ce928c3"
        },
        "item": {
          "id": "7e7f1b32-d27a-4be0-9f76-b1cb567d9181",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "66e22a41-6f4b-4017-9a2a-3efd9a367332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6743f4b-4409-44ce-9eb0-62647e5f9077",
        "cursor": {
          "ref": "4f966c4f-5232-4490-8bee-03e82338c8f1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77e0a9e4-acad-43db-a23b-9b606bf6c113"
        },
        "item": {
          "id": "a6743f4b-4409-44ce-9eb0-62647e5f9077",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78119009-ba12-41ec-8071-f83fcc24d545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9f5bdc-f414-475c-8050-de678dce458b",
        "cursor": {
          "ref": "22ccb54d-86e6-4d41-9aca-4545ecc40b8b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9e8cf017-1c71-458b-a346-50e82330a1c3"
        },
        "item": {
          "id": "5b9f5bdc-f414-475c-8050-de678dce458b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "285b5629-71f5-4b4c-bd4d-13d76229afae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb732e6-5e1f-4a7d-b4fc-f2959633f66d",
        "cursor": {
          "ref": "badafa68-9781-4c16-b049-c9e407b70dc2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "186f28c5-077e-45fc-9e63-6a4ce3e37f45"
        },
        "item": {
          "id": "6fb732e6-5e1f-4a7d-b4fc-f2959633f66d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b77a5ead-ac50-4898-883c-b2aefa21dd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a4a814-6c8e-45b8-9c0b-b90778110f30",
        "cursor": {
          "ref": "405e1cde-f0d2-4fb2-a8ca-8af65cf57197",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "624bb0b9-65a6-46e5-bbf6-4689e179db69"
        },
        "item": {
          "id": "18a4a814-6c8e-45b8-9c0b-b90778110f30",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9ff3b5cb-5737-4e86-b47a-7c6eca25464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daefc9e5-6f83-462b-9a48-09511b652b86",
        "cursor": {
          "ref": "9bd79cf6-b70b-431c-ac4c-d3755a426d96",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "227759bd-2124-430f-8043-fc71331a5ee4"
        },
        "item": {
          "id": "daefc9e5-6f83-462b-9a48-09511b652b86",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e207efbe-28f9-4993-955e-e3576f0c74df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "91898b00-4a80-43cc-b3a1-7dd014d6db80",
        "cursor": {
          "ref": "b1f68a32-a1a4-4204-8a30-b2f4a072b0b6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "859387f0-1feb-46b7-9717-bfb6dd7a77ab"
        },
        "item": {
          "id": "91898b00-4a80-43cc-b3a1-7dd014d6db80",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3eccd204-4f4e-43b6-97b1-9580dc174346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5797a230-6e37-4c73-b957-c8ac18acb048",
        "cursor": {
          "ref": "4c6fabae-1752-46ce-9e89-d8abbbea3934",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03052449-0c23-4bd3-98e9-4dbd8f257d5e"
        },
        "item": {
          "id": "5797a230-6e37-4c73-b957-c8ac18acb048",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "531beae1-1513-4b8b-8e8d-1a2cfbd6704e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb538f65-45cc-44fd-b055-479009f91525",
        "cursor": {
          "ref": "3ced1ea4-e2fe-4fd3-99bf-3f14dfb18def",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ad12fbc0-6b2f-457b-a57c-101d63ce4de0"
        },
        "item": {
          "id": "bb538f65-45cc-44fd-b055-479009f91525",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "944b4d85-e4b2-43cf-9616-50d25dc80bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fcc9a7-a53f-4853-b04e-66ab26fe582a",
        "cursor": {
          "ref": "e3e6d9e2-ed6b-4100-aaf4-c4cb5c5ff757",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bd7a0225-985f-443a-850d-cdfc06bcd366"
        },
        "item": {
          "id": "28fcc9a7-a53f-4853-b04e-66ab26fe582a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "573c6649-201a-4c7f-9f9c-9e105720090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de37992-c200-4f15-abdb-ba827455ee14",
        "cursor": {
          "ref": "aee20b80-4039-42ac-a82d-635911f5c293",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e42444f3-d1e0-4cc1-a1da-a657ca925323"
        },
        "item": {
          "id": "9de37992-c200-4f15-abdb-ba827455ee14",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d05c3f8e-0fa8-44dd-bad7-9de1d834fe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8437468-6600-48a3-8563-9c86ee3f92b0",
        "cursor": {
          "ref": "47d4bdc2-ecef-4320-ba56-855ea48319e0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "748e4410-c972-49ac-bbf3-3e387dbd50f1"
        },
        "item": {
          "id": "a8437468-6600-48a3-8563-9c86ee3f92b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d6d259b-ea9b-43d7-ba28-1927597fcbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a145991-d1cf-4609-80b8-0f21d134aabe",
        "cursor": {
          "ref": "c85ac4e5-e7a2-4364-918c-b099ca337d41",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e0a808f-3439-4f67-9dae-2ba2a55b9648"
        },
        "item": {
          "id": "1a145991-d1cf-4609-80b8-0f21d134aabe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2f7035eb-940e-4b9c-8fd9-71f02c234dc5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 120,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3798dc9b-fc13-4f40-80a5-d82f41974a45",
        "cursor": {
          "ref": "4802fc5b-6c6a-4a90-9e46-e02dc377b67b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0e30a3e6-8735-4746-8cae-9748de0b40be"
        },
        "item": {
          "id": "3798dc9b-fc13-4f40-80a5-d82f41974a45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f3959060-f4b1-4f14-8e5d-e3cab00726af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac0005-2c64-4e9d-b824-4662137af250",
        "cursor": {
          "ref": "c9d907fc-613d-43a9-81fb-481ccce9a957",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7e99f62f-5529-431f-b0d3-674d25ced6fd"
        },
        "item": {
          "id": "23ac0005-2c64-4e9d-b824-4662137af250",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3eb16d22-1d66-4717-92e7-588a743e7667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea5b4f-e3f0-4bab-a24c-bd8bccbb64be",
        "cursor": {
          "ref": "0bc53032-5241-49f9-94ae-67cb13275692",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fcfc6149-5fa4-4931-8c08-d05dd378f9da"
        },
        "item": {
          "id": "25ea5b4f-e3f0-4bab-a24c-bd8bccbb64be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37882dc3-7ca2-4c80-8075-b5bc5f0afff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29445aed-9a8f-4b91-a3c0-05679f480e1f",
        "cursor": {
          "ref": "55a71f7b-2f87-47ad-a173-fdbb8cbab3af",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4ce1634c-b51f-45a4-ba53-24318a32dfaa"
        },
        "item": {
          "id": "29445aed-9a8f-4b91-a3c0-05679f480e1f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e30d886a-7c1d-4fb2-b83b-dac1fcbf8665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e401802-112e-454a-afa5-cb542de37ebf",
        "cursor": {
          "ref": "c8d9a2fe-d615-4b71-9b0d-0cd9bcc49cf3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23bbe3ad-0a32-487f-81a1-cc43b56f8e5e"
        },
        "item": {
          "id": "7e401802-112e-454a-afa5-cb542de37ebf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dcd6cfc3-0ac5-4baf-8f75-e15c57f2c05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7653051c-54d0-4c1e-8c7e-a123bf60b3af",
        "cursor": {
          "ref": "5515d58d-5c45-4fd4-a722-dc59a53d10ef",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3dcb4f3b-c040-4c27-b67f-919097a6d982"
        },
        "item": {
          "id": "7653051c-54d0-4c1e-8c7e-a123bf60b3af",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b7cfa66-3a04-42d6-9be8-583fd1c77d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8b8388-4e27-4c8a-9d09-aa7ed79472a4",
        "cursor": {
          "ref": "73e6650a-942f-4f38-880a-c030e804c8cc",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "be68f881-9b8a-41ca-9940-35715b392417"
        },
        "item": {
          "id": "bc8b8388-4e27-4c8a-9d09-aa7ed79472a4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "539afd1f-04fa-4b6c-9868-a0715457753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10098d3-6bc2-4123-91ba-f789787c4437",
        "cursor": {
          "ref": "f3f3a72a-fe3d-4aa8-aac4-a36eb64a86ca",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fc9676d6-e671-4211-a4a6-657426f96965"
        },
        "item": {
          "id": "c10098d3-6bc2-4123-91ba-f789787c4437",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e77170fe-a5c5-49c3-b83c-8c339b76c62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79853f-b170-4678-b754-be238f945443",
        "cursor": {
          "ref": "502f4111-ffe1-4860-9246-13525b534bba",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5e1e559c-9d8d-451a-b6bd-1fd2dd3d0a44"
        },
        "item": {
          "id": "9c79853f-b170-4678-b754-be238f945443",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9641cc0b-c78b-4a7b-99d7-3ddc40c8df4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f00c8-4c3d-42d6-8e2f-4734bb98bb2c",
        "cursor": {
          "ref": "e043b73c-9341-4484-b1a2-1313b0011134",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ed3187ba-983a-4ed5-a653-fc3a551917ec"
        },
        "item": {
          "id": "627f00c8-4c3d-42d6-8e2f-4734bb98bb2c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3742fff9-31e6-4e62-9cc6-6bfe7174cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ccc01-24d5-4fdf-8713-5ac93ba92f00",
        "cursor": {
          "ref": "23253e20-dd60-469e-8641-bd85971ce452",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4db5b9b8-08e2-4bcf-88fe-48ee0e194105"
        },
        "item": {
          "id": "a56ccc01-24d5-4fdf-8713-5ac93ba92f00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8eeb69c4-b996-41a1-b868-e65b7282c189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d726bfd-d83d-4b60-8a77-4cf32b983b2c",
        "cursor": {
          "ref": "fb9b9ee7-3fae-4baa-9bc2-187b3bb30f66",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "30abdc73-d244-4328-9d96-58ab54915b21"
        },
        "item": {
          "id": "2d726bfd-d83d-4b60-8a77-4cf32b983b2c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f884fe91-9088-43f2-ad0b-35358ed8b4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd69873b-0502-45ed-9a1e-61a91e0b5b35",
        "cursor": {
          "ref": "2c1f0b2b-be13-4e0e-8a34-498ad1523441",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "50087fbc-fe74-4d9b-83f1-21814cf04e3c"
        },
        "item": {
          "id": "cd69873b-0502-45ed-9a1e-61a91e0b5b35",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b56db495-ec3b-40c2-afc1-a4a33dd4705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b39f3a-07a0-44c0-a695-f22036ae69c9",
        "cursor": {
          "ref": "079a76d6-c1b2-4963-8dad-085a23791107",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "97ed8155-e7de-42e7-84c0-58eaf358abb6"
        },
        "item": {
          "id": "a9b39f3a-07a0-44c0-a695-f22036ae69c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fffe07d1-5d16-420f-be1c-a4a2726f6116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca725a06-d358-4d07-8232-da818d4de020",
        "cursor": {
          "ref": "12b17af9-fca5-4d28-abfd-4f95fd3f4bbb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "33676e79-e66b-47ce-a637-fabf106a7625"
        },
        "item": {
          "id": "ca725a06-d358-4d07-8232-da818d4de020",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a7b5722-ca0f-4856-9cbf-174d98d90651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7225466-f9a8-4de1-95c4-08eb66dcec13",
        "cursor": {
          "ref": "22e61915-9bda-4e79-a24d-318464a46ad8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2ac4eba0-ebc5-4a27-8cc3-4192d66018f4"
        },
        "item": {
          "id": "b7225466-f9a8-4de1-95c4-08eb66dcec13",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "acffd6f0-f02a-4ab3-b2bb-07ff1870884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e895f7-e5b2-4fab-bb42-14f44a9df8fb",
        "cursor": {
          "ref": "9a6b497a-c258-4372-86ea-1d73e52eb247",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b77abfd-ebf8-4b13-baf8-8ac30af45903"
        },
        "item": {
          "id": "f7e895f7-e5b2-4fab-bb42-14f44a9df8fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14904dc4-e032-44f9-a15d-c9e56d521db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1adb27-b787-4a81-bc29-c3f252450e46",
        "cursor": {
          "ref": "a6485177-adfd-4fc9-8e8d-566225b232f2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2f73ee65-d634-4273-ace3-0c5f0184fc48"
        },
        "item": {
          "id": "ea1adb27-b787-4a81-bc29-c3f252450e46",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c903850a-ec54-48db-9551-a5844ad5e282",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "3b5222b6-20ce-4f59-991f-9e241df6ce81",
        "cursor": {
          "ref": "bf49c013-3c3e-4597-9366-ddc2e826f66e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e5de27a-de02-4bdb-9e4e-23d319e50a73"
        },
        "item": {
          "id": "3b5222b6-20ce-4f59-991f-9e241df6ce81",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efb73034-1cba-45e1-8bdb-9f6ea9e5323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5fd4a0-fe37-4ca1-b62e-c90c66833ea2",
        "cursor": {
          "ref": "535cdda7-3d27-467b-9af9-f181b8997695",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f0a5cd2-a180-4a30-9a07-04bcc88c46b8"
        },
        "item": {
          "id": "ef5fd4a0-fe37-4ca1-b62e-c90c66833ea2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ea97b83-17f7-41fb-8818-772719f5062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2e8f52-4334-4e69-b260-9df9bf36750d",
        "cursor": {
          "ref": "6b41af32-e384-4534-8189-9cb9ed3e6770",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4872ad1c-3a4f-4668-8f9f-cc12eebb14e1"
        },
        "item": {
          "id": "0a2e8f52-4334-4e69-b260-9df9bf36750d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "78147a85-afa6-4062-b584-140efbc73be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be45e37-4d28-4bc3-9187-056593b9e3f3",
        "cursor": {
          "ref": "3b90b6e6-8b6b-460a-80c2-19c1fd3946f5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ea6dcfb-264d-4c0a-af21-a67864c3449e"
        },
        "item": {
          "id": "8be45e37-4d28-4bc3-9187-056593b9e3f3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "45194a3f-14dc-4942-8800-22aecdb77100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c4c2ab-2647-4ef5-ad94-bdefa206d765",
        "cursor": {
          "ref": "119705c5-cd08-4168-a06e-9c3284d4c8e7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5023bdbb-ee51-4f21-b6fb-45a77508e50d"
        },
        "item": {
          "id": "93c4c2ab-2647-4ef5-ad94-bdefa206d765",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "049ed11d-a186-4f94-be02-0cf4a2b12169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b510b434-a11c-44dc-8cc9-7c50ccaf97ee",
        "cursor": {
          "ref": "ce796a6f-8c18-4220-a3d6-2118804eba84",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e7d77dfb-dcd6-4070-9440-066d23783eca"
        },
        "item": {
          "id": "b510b434-a11c-44dc-8cc9-7c50ccaf97ee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72ba9df8-054d-4048-a9c3-4ad64a624d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c40aa-a25f-4a3e-a562-19138881d32c",
        "cursor": {
          "ref": "85202898-5429-47c8-ba4e-f0604f12a616",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58c597a9-d45d-451a-9391-c155cf40626e"
        },
        "item": {
          "id": "ea7c40aa-a25f-4a3e-a562-19138881d32c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c51e468f-6398-4246-a825-4a1bcf0b733a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bac249-992c-4a14-8da9-e4f63606eb41",
        "cursor": {
          "ref": "03198152-8f66-4c85-ab3b-28c23a16dc9a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a68347d6-3d2e-4191-8372-b238c964a349"
        },
        "item": {
          "id": "75bac249-992c-4a14-8da9-e4f63606eb41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc52796e-5f24-4c53-a989-a8462b526b5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "20ed5d08-98ae-45c9-9c54-e4ddc2c09153",
        "cursor": {
          "ref": "204149fe-4cfc-4c28-b554-c226fd52ad11",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "68257b5c-7999-47b5-8c6a-79587ee0c023"
        },
        "item": {
          "id": "20ed5d08-98ae-45c9-9c54-e4ddc2c09153",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "96245658-06ee-49f5-a8f2-91b6f841c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec2226-f96d-4a51-b2e1-48432873bcec",
        "cursor": {
          "ref": "8a1eaa7b-3cfc-44ec-8098-71d2c21b29a0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61affad3-e592-4046-a9ae-a1f757b1ad44"
        },
        "item": {
          "id": "53ec2226-f96d-4a51-b2e1-48432873bcec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c0e9afa-51e7-4477-8074-e2a52e975849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47956614-ec61-4363-9112-782f473ff81c",
        "cursor": {
          "ref": "a3d8c0df-88e0-4d31-99b7-ecf714bf8ca1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e6dba6c4-eb14-41c8-b8b8-fa7b81189685"
        },
        "item": {
          "id": "47956614-ec61-4363-9112-782f473ff81c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69df92a3-5b47-44d3-b24b-2291bed8a039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe520997-5713-4067-ba8b-e1d6273d0464",
        "cursor": {
          "ref": "e787fad4-7cfe-48f0-b6e3-3cf42f6be4e1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "932df659-d0b7-4ffb-8a30-ad65ce2e8777"
        },
        "item": {
          "id": "fe520997-5713-4067-ba8b-e1d6273d0464",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f946ae1c-a125-4186-8d15-f4d6f0d5f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148491e9-b461-42bf-a39d-4b31ddeda0ec",
        "cursor": {
          "ref": "eac6d809-8edb-4a7c-b311-935311776c21",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1fc7206b-1674-40a7-b221-125066058841"
        },
        "item": {
          "id": "148491e9-b461-42bf-a39d-4b31ddeda0ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1a967e92-b677-48cd-893a-c9e19c677768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337dbc78-29d2-491c-a51e-3ee8e0364c50",
        "cursor": {
          "ref": "a65a0097-ac8e-4a6e-a6a6-665421860ded",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b9cc310-012b-44f3-98f7-1752a0d166c6"
        },
        "item": {
          "id": "337dbc78-29d2-491c-a51e-3ee8e0364c50",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a570fba9-f20f-480b-9f37-1c8132f43326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71a84fe-9e2f-42a8-80ed-176c38896338",
        "cursor": {
          "ref": "66eced11-38d1-44b3-b6fa-5a0b5af6a693",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ce96866c-d11f-4f85-b4ed-001bc5fb1485"
        },
        "item": {
          "id": "b71a84fe-9e2f-42a8-80ed-176c38896338",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "855463c5-01c7-455a-9fde-85e8358631f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "351eb0b3-1008-46c5-a8c8-5df26ef55169",
        "cursor": {
          "ref": "6f6e5587-999a-4502-8cb9-21470e045097",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1fe524d9-8007-4dd5-a50f-f7b911bab615"
        },
        "item": {
          "id": "351eb0b3-1008-46c5-a8c8-5df26ef55169",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eecf6088-7a3a-401c-8fa7-2fe0acd0d6a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "12603906-088d-4411-a2ae-77c15313418f",
        "cursor": {
          "ref": "bdaba8ee-564b-4499-bdec-4f0d6221601e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3d3bf25d-52c0-4e80-b677-a48a9a758892"
        },
        "item": {
          "id": "12603906-088d-4411-a2ae-77c15313418f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97f3aa52-6ef9-4baf-b197-c5f680d6e142",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "f7f09931-8405-483c-826b-a9db7ab1b369",
        "cursor": {
          "ref": "ca4bbb72-56c2-4677-8b7d-03886ccdb1b3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "27f39180-9318-4112-9ce0-09dce8f0ad6c"
        },
        "item": {
          "id": "f7f09931-8405-483c-826b-a9db7ab1b369",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "36c16d39-6dea-49c1-8600-a2700d28a5fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "f5c3b6a1-2b15-410a-bd70-64dbce81971d",
        "cursor": {
          "ref": "83a911de-a503-4078-9bda-56cf6d23908f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8b152eb-f52b-4981-a27d-2a0a44407f0b"
        },
        "item": {
          "id": "f5c3b6a1-2b15-410a-bd70-64dbce81971d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9bdbce12-47d5-4c10-8cb4-a658a4a6bc5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "62edc541-e1ec-498c-bc41-a8616474809f",
        "cursor": {
          "ref": "8a4572a1-a62b-4c8b-ade6-3eecc960465a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b014b175-1347-4dcb-8fde-cd9fd5856be1"
        },
        "item": {
          "id": "62edc541-e1ec-498c-bc41-a8616474809f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "79523909-0d5c-46f2-9051-865d2ccb50ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "78de2e6d-d758-4738-9350-0421777d0ce1",
        "cursor": {
          "ref": "756fe146-dd18-41e7-a0ff-3578863c7f42",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ffeb581-f52f-4619-94b8-59623a18c0eb"
        },
        "item": {
          "id": "78de2e6d-d758-4738-9350-0421777d0ce1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4d7d8290-a8ba-46c4-baab-6bb3973b878b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ef9da-510f-4093-960e-62567ea32223",
        "cursor": {
          "ref": "2aaaf160-8433-4e33-a1af-a70a4c66e017",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "026fab27-9e66-4abb-96ad-dd925a56e6ce"
        },
        "item": {
          "id": "719ef9da-510f-4093-960e-62567ea32223",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b1fb050-d8bd-45e0-a78e-9f8fdf7e09e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b371b584-fb15-4110-ab21-4273857d0f0f",
        "cursor": {
          "ref": "1d01c883-007f-4727-b6ad-cc9eb1b4ffde",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "851f700a-97bb-4f39-9bbb-223afac5641a"
        },
        "item": {
          "id": "b371b584-fb15-4110-ab21-4273857d0f0f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30c12b07-ffa2-4797-8522-7caa29e91d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea8416-2066-45f2-bae2-497d06858bb6",
        "cursor": {
          "ref": "57358a1c-19b9-4754-84d0-212ff60f89e1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "52a6170b-3108-43dc-b45e-82b5be730537"
        },
        "item": {
          "id": "b8ea8416-2066-45f2-bae2-497d06858bb6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "619eb5e4-9e15-49bf-93d3-e96b73318382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf7f55-be1d-4b4d-94bb-b9b8f6aa126d",
        "cursor": {
          "ref": "e3c29a8f-e7a6-4add-b16c-a2f2e741a6df",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "905b43d4-9e81-4a7a-b1cb-1c39cdfdc950"
        },
        "item": {
          "id": "4bbf7f55-be1d-4b4d-94bb-b9b8f6aa126d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8b020aca-5136-4297-9870-7e4a0709df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ec839-97b7-4ee5-8318-c52389d2dadb",
        "cursor": {
          "ref": "28242eef-af45-4640-a56a-956068afe658",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b1675ed-9ee2-4fcb-9db3-d953f6793c6b"
        },
        "item": {
          "id": "015ec839-97b7-4ee5-8318-c52389d2dadb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f780b82a-6822-4f91-8beb-ad8e085414d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48741e4-bd4b-4a11-bcea-c70bcdd90957",
        "cursor": {
          "ref": "145daa0d-a103-40ed-8bbf-bb1cb0d2291f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3571bed9-4195-4d5e-95df-c9ecd22d50c8"
        },
        "item": {
          "id": "b48741e4-bd4b-4a11-bcea-c70bcdd90957",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "07021458-1ac5-4fe3-aadf-0ae90365a274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a6f974-1b81-4459-80cb-131653dc1330",
        "cursor": {
          "ref": "e031c024-cfb1-4108-805a-be63e42f4317",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "174c43b5-eae2-4e65-9dc4-b678d5c45fbe"
        },
        "item": {
          "id": "31a6f974-1b81-4459-80cb-131653dc1330",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "179829f8-f6b8-434f-9a0e-3b2e1d678d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f6c89-6a2e-4b3b-896a-22b89d6a4e9d",
        "cursor": {
          "ref": "2414a118-8cb4-4aa5-9a8a-1e1fa515872d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6681cb94-0b5b-40c5-a983-9ace08b2b283"
        },
        "item": {
          "id": "562f6c89-6a2e-4b3b-896a-22b89d6a4e9d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d611789e-84d4-4bf7-8a30-75e001e14ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f950671-fff3-4baf-8a19-d3c02328e364",
        "cursor": {
          "ref": "12cf378a-6803-4b38-9c55-f86feae62111",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8ca3c59b-d517-4d34-9777-5e58ee11c391"
        },
        "item": {
          "id": "0f950671-fff3-4baf-8a19-d3c02328e364",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98106f32-352c-4840-aade-a820a2dbe5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2df6ac-c448-4673-abd2-f58eaa0894ba",
        "cursor": {
          "ref": "b6521574-f8c9-457b-b396-b72b4db06d79",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "25f7d2aa-8f13-45e2-836e-620c7af6ee70"
        },
        "item": {
          "id": "eb2df6ac-c448-4673-abd2-f58eaa0894ba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "113d3a76-7378-41fa-bd8d-21af08a34ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54a17b1-749e-437a-ac8b-423a6874d83c",
        "cursor": {
          "ref": "b96c5cd7-431e-435a-9dfa-bd8c7fe201b7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee0d6f5f-1188-4f23-bbf3-e8c1c0600d49"
        },
        "item": {
          "id": "a54a17b1-749e-437a-ac8b-423a6874d83c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4869cee6-185b-4a2e-831c-954f5a850bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26074f-e09d-46b1-b490-0a7d25d79448",
        "cursor": {
          "ref": "a09c0ec2-695a-4a91-8cc3-8ac1fd435d77",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "229706a3-2adb-4945-973d-e10792d201b5"
        },
        "item": {
          "id": "ca26074f-e09d-46b1-b490-0a7d25d79448",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9e9127c-49d2-4684-8099-fd0f1e24740d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa71877-f34d-412e-9f70-de15a397c09c",
        "cursor": {
          "ref": "2797d90b-3ab6-4242-a880-82c2c21a5d42",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1ef7139d-06f6-476b-a8d0-5ec8a0eda893"
        },
        "item": {
          "id": "4fa71877-f34d-412e-9f70-de15a397c09c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "42ec5ff6-b80e-4cab-b88f-9a257c552218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4e3442-3a77-4429-8ca2-93b9306b3ec0",
        "cursor": {
          "ref": "2a213b46-da98-4958-bbd8-1361dca959a3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ebcfb524-d623-4d91-8e2c-f88e8b3fba7b"
        },
        "item": {
          "id": "4e4e3442-3a77-4429-8ca2-93b9306b3ec0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "35b68fe4-a6f7-40a3-af6c-344b864ef56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbf14f8-3c56-4772-8b57-2eddbc205da0",
        "cursor": {
          "ref": "f5044fd9-7f77-40c2-a9bf-35d78955d620",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bd84a7ac-6a11-430e-9532-6b4542a0085f"
        },
        "item": {
          "id": "0dbf14f8-3c56-4772-8b57-2eddbc205da0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "54e51d16-bde4-44ec-820e-e9376d983ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f3ca1a-3fde-479c-85ab-6236d2960ffd",
        "cursor": {
          "ref": "971221e2-666a-4f12-a9aa-ceec961b544b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "96daf0d4-4586-444d-bb85-1f74880ce709"
        },
        "item": {
          "id": "d5f3ca1a-3fde-479c-85ab-6236d2960ffd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "756d008f-7907-42d6-9c6e-3c6ea04b8f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027a5f15-091f-4560-9fa6-2aefbacec21d",
        "cursor": {
          "ref": "a68b46f1-b132-4afb-a9e8-14fcd48b2e5a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "adf6a304-c2b0-4bed-b639-41cbfde343fd"
        },
        "item": {
          "id": "027a5f15-091f-4560-9fa6-2aefbacec21d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "21792302-4d85-48c1-ac57-4e455c0536ed",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "900d8d10-8661-436b-88ff-8f13138f066b",
        "cursor": {
          "ref": "dd8b5344-6010-478d-b073-7adc62d8b2d2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef0d182f-d6a0-4264-b14b-71e6b4156944"
        },
        "item": {
          "id": "900d8d10-8661-436b-88ff-8f13138f066b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d2329ca3-bda9-4a0b-91ed-e38505b16a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84452ae1-f804-4453-84f8-f07c9355c7a3",
        "cursor": {
          "ref": "fb437ee9-39fb-4ff4-af3a-ef2cd97f8379",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec54f3e9-d3fa-42d4-b651-f87c73f838d5"
        },
        "item": {
          "id": "84452ae1-f804-4453-84f8-f07c9355c7a3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8d5a0e1e-bb57-493f-bb4c-e788f65d713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728fc595-882b-49da-bd4a-73f8128aee8f",
        "cursor": {
          "ref": "3b8c38e8-5d08-4b9c-b240-0133a242c204",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c4afee46-f8f4-4ffc-9e7b-97a3827448cc"
        },
        "item": {
          "id": "728fc595-882b-49da-bd4a-73f8128aee8f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "baae897f-e379-4ef1-abd3-75f9e7d6febe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3c171-ed0a-4c00-b5f3-eddc4e7e6616",
        "cursor": {
          "ref": "5e6496e1-c25e-43ef-87e9-64851236d32e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f3003544-7192-4946-9fd6-251a3b223741"
        },
        "item": {
          "id": "87e3c171-ed0a-4c00-b5f3-eddc4e7e6616",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8b7bda5-f4b6-4033-9cb3-82b9a69b1322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d71df64-de85-4319-a389-ebad5745db6a",
        "cursor": {
          "ref": "e1f66f29-7f4f-4ad0-907a-b8a81d7ea388",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aa4e0211-949d-460b-8b25-c0d3c2d48262"
        },
        "item": {
          "id": "0d71df64-de85-4319-a389-ebad5745db6a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ea58515-9518-483e-ab38-9ad4f22ec1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e12d8-f858-4316-8c40-4e4b0f053acc",
        "cursor": {
          "ref": "df9754ef-9072-4c56-a90f-a2cc76c7381f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "16d68a7b-fed4-4d89-99ec-ea2c5b621195"
        },
        "item": {
          "id": "c65e12d8-f858-4316-8c40-4e4b0f053acc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "97bb44f0-1135-4b6a-a7a6-2651e3d8c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea95049-df7d-45a1-a7c6-f65c7d487d32",
        "cursor": {
          "ref": "46843665-8445-4690-a86d-1eaa42c48804",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d16d07f0-794b-484f-b008-4fc6918ef15c"
        },
        "item": {
          "id": "fea95049-df7d-45a1-a7c6-f65c7d487d32",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aeeae0c0-0a09-4cb1-97da-29a574b3e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df08e835-4f0e-471a-9f9b-613b618db2c0",
        "cursor": {
          "ref": "3cb05c74-f836-4bd3-8b9c-3aa97bd7b872",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0b673248-2b1a-4123-95bc-e6f149fda462"
        },
        "item": {
          "id": "df08e835-4f0e-471a-9f9b-613b618db2c0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4d6d6b0b-681d-4543-8e68-964517ae90ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda7606-0487-4108-b717-2c4f366cc4f0",
        "cursor": {
          "ref": "7cedebd1-7fa8-4f53-8029-da8e7533b182",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe3ea27e-d6fb-416a-a3e1-6f692123d820"
        },
        "item": {
          "id": "7dda7606-0487-4108-b717-2c4f366cc4f0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9128bd70-91cf-4928-aefd-9fcd5e8203e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed5596a-6dab-4560-b404-5172ca25eedd",
        "cursor": {
          "ref": "1cafcd94-ac0c-4924-a010-05fd4827864a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "322ecc36-222f-49f0-9b8a-59b93c27db81"
        },
        "item": {
          "id": "1ed5596a-6dab-4560-b404-5172ca25eedd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e1e4f7c1-fd01-44af-b8ed-38b3801fa01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016e5648-f3dd-4731-876f-bb84a124eb0a",
        "cursor": {
          "ref": "be4d2ffb-c47a-457e-b01d-389c62224fb0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9cb67682-2495-406b-9005-fe0fb8ed8b60"
        },
        "item": {
          "id": "016e5648-f3dd-4731-876f-bb84a124eb0a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "063fa975-80f0-46e6-b89b-dabbe1b66a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e721285-1b5c-4b60-9262-e4d603ef9edd",
        "cursor": {
          "ref": "9ffdf807-aad6-4828-a9c5-79175f0dc753",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "058571c0-bdf2-4a5f-94b5-33f22d7dcaa7"
        },
        "item": {
          "id": "2e721285-1b5c-4b60-9262-e4d603ef9edd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d5791329-ebff-41bf-94b2-5ae27a124931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23561d87-6d32-4463-88ef-ebb212ecfe53",
        "cursor": {
          "ref": "61b74f21-01c7-4f03-bae4-47de9554be3b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8a162fb0-14aa-4247-8738-760698c84d4b"
        },
        "item": {
          "id": "23561d87-6d32-4463-88ef-ebb212ecfe53",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4c2c20df-a224-40d6-9472-533d05eb34d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef56dc6-7a45-4d2a-a172-41c00e09d5c1",
        "cursor": {
          "ref": "a4d60d2a-427b-40e4-beb2-9325562a344c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cf178a05-6304-4176-a9ce-1d2008f38031"
        },
        "item": {
          "id": "2ef56dc6-7a45-4d2a-a172-41c00e09d5c1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b67ca44b-354a-4329-8774-ef0e5369bff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0dfdb-d034-4322-ae86-0a58d3a06fd2",
        "cursor": {
          "ref": "fb6e425c-1830-4f56-af79-7c3d44fce446",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55171fd8-c5f3-42aa-838f-752775742802"
        },
        "item": {
          "id": "10e0dfdb-d034-4322-ae86-0a58d3a06fd2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3dcdb0f4-d6f7-4c79-8e79-f9234a27250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0472f8c-8c5a-41f5-84e0-fe2fe469e347",
        "cursor": {
          "ref": "467fb5f3-9e8b-4c60-9e01-eceb92308543",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a4726f62-ac74-4cf7-b231-7414fc791b7f"
        },
        "item": {
          "id": "b0472f8c-8c5a-41f5-84e0-fe2fe469e347",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a109f1c3-656d-40cc-86e5-1ac5507f4e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd57556-387e-452c-ae7c-eff204c8c5d6",
        "cursor": {
          "ref": "d96959dc-87d5-44ce-98d6-3908c5885332",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e364e3df-b608-4cbf-b743-e73271de365b"
        },
        "item": {
          "id": "cdd57556-387e-452c-ae7c-eff204c8c5d6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee8e7e63-909f-40e1-b36d-729e28896fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168372db-cf43-4d65-a118-20b2453c4836",
        "cursor": {
          "ref": "86d47f67-f994-4867-88f4-a5746fd2ecc6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "251b991a-c59b-464a-bbd8-51f5bf3258ea"
        },
        "item": {
          "id": "168372db-cf43-4d65-a118-20b2453c4836",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "edf101d3-123c-481e-bd4e-a4d181a9e451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd8417-f001-41dd-8183-51a377f7dd8e",
        "cursor": {
          "ref": "f42871f6-8c42-494a-b097-6e12d562518c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dc2d840d-75f8-4176-ac53-c1d4f35c19c4"
        },
        "item": {
          "id": "89bd8417-f001-41dd-8183-51a377f7dd8e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "74f0bc2c-c39e-417f-a980-2e7cd9607aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85a0310-3d9e-4da6-9c33-3f7b63851a80",
        "cursor": {
          "ref": "864472e4-6f09-4796-93a5-b92b971e9db2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "59c07261-60e2-45ef-97fe-7b0478c91ae8"
        },
        "item": {
          "id": "a85a0310-3d9e-4da6-9c33-3f7b63851a80",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "210ec95f-50b8-4c55-9070-1c454647b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c006d67-a08a-45a9-b257-b390472ab693",
        "cursor": {
          "ref": "12512b4c-4448-4525-aee4-b401b442a10a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac79ca21-237f-47b1-baa7-413af8be9949"
        },
        "item": {
          "id": "6c006d67-a08a-45a9-b257-b390472ab693",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bc24d610-f246-4c4e-953a-73434bc61930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c61a23c-2b9d-4b05-a947-7b96b668f8ac",
        "cursor": {
          "ref": "260b72e4-9858-4c6c-bfef-e6ca23f825d3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4d8ce5a4-7f43-48cd-8c15-ce999a5dd1e5"
        },
        "item": {
          "id": "2c61a23c-2b9d-4b05-a947-7b96b668f8ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "48518bde-255f-4b23-832a-aec7d793052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdab9dd-fd38-48b0-94b3-9a79d860fcc3",
        "cursor": {
          "ref": "14506026-f2e3-4f6b-aadb-d73c29a26bae",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc8a2d9d-d5b4-4ec9-b8e7-a084b9c87534"
        },
        "item": {
          "id": "6cdab9dd-fd38-48b0-94b3-9a79d860fcc3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fb54b2be-5743-44a5-9bac-ae10d46de2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd39dd56-89d8-4e2e-9420-a299feed37a6",
        "cursor": {
          "ref": "7461afa2-2543-4216-bfe1-44aeee6af093",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a0e6abb6-1805-41a3-8945-481c001d340e"
        },
        "item": {
          "id": "fd39dd56-89d8-4e2e-9420-a299feed37a6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4dcefd5f-bbe4-4bb0-ab16-96b52ead9319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63195e7-80ff-4317-a254-2189f6d560a9",
        "cursor": {
          "ref": "371e7d68-364e-4e45-bdcd-667dc89e055f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c30c5afa-b946-4f19-ad45-89bb2a3664c9"
        },
        "item": {
          "id": "d63195e7-80ff-4317-a254-2189f6d560a9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94c5a6af-5a9f-448f-8ff8-f0bba9b34240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481e7b79-1510-43c9-bb61-9667ff0f5075",
        "cursor": {
          "ref": "fb7d0949-726b-459b-9d6f-0ba7ee263e01",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "95277324-b1d3-477a-aa2e-e5ce5f627819"
        },
        "item": {
          "id": "481e7b79-1510-43c9-bb61-9667ff0f5075",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "267ae70c-55d4-4d55-a920-4d162b7a5537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be7b50e-e389-4d6b-9c45-daf921c70a54",
        "cursor": {
          "ref": "d9736f06-6a07-4958-a301-ff0890991918",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8a49b4fe-02f8-4a90-8971-b7dabc2fd196"
        },
        "item": {
          "id": "7be7b50e-e389-4d6b-9c45-daf921c70a54",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2f77dcd9-3d7e-4fd4-9693-ad3622ca697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5216afd4-251a-43ba-a528-5597c4c1bfc2",
        "cursor": {
          "ref": "8d4bb3af-857c-4047-aae7-04d64b5115d3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d4630c5-2717-4d13-b21a-8195b1e8a072"
        },
        "item": {
          "id": "5216afd4-251a-43ba-a528-5597c4c1bfc2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "60c60b4d-68c7-4878-a042-bad6b9f2bccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb1f73a-4341-45cd-b550-602f40be9d5f",
        "cursor": {
          "ref": "dfa7ba7b-9b17-48fe-999b-0a8df8685412",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33b038b6-4967-46d0-b860-b32e646c2226"
        },
        "item": {
          "id": "2cb1f73a-4341-45cd-b550-602f40be9d5f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0184838c-3126-4a5c-8930-9f21aae67fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01867db-622d-4029-9c1f-76bc0b208afa",
        "cursor": {
          "ref": "203cf446-8c74-4438-88a4-360754394910",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "374351aa-844d-46ce-9cd0-e730ba663fa9"
        },
        "item": {
          "id": "a01867db-622d-4029-9c1f-76bc0b208afa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "262de981-fbae-4325-a882-cef184e55e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4012a8c4-92c9-4d66-a737-2ad6fd388603",
        "cursor": {
          "ref": "dc3b13c1-c717-44a6-9fa6-1632c6f7e9f9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "99039c88-8137-4815-9123-7af2942a538d"
        },
        "item": {
          "id": "4012a8c4-92c9-4d66-a737-2ad6fd388603",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2266d58c-c47f-44b7-90ba-17f155021e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df1f52d-ebfe-43ef-9a4f-b37f6a4234ba",
        "cursor": {
          "ref": "7ee2eb6f-c092-4656-be4c-2a880205efda",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "152d6997-a10a-4268-bcba-94b402194ed9"
        },
        "item": {
          "id": "3df1f52d-ebfe-43ef-9a4f-b37f6a4234ba",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1abd63e1-8465-46a0-b0b3-ca297e63ea3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d95f02-3026-41d7-b9eb-ffa63435e0d9",
        "cursor": {
          "ref": "980c1e04-995d-4d70-87d7-28a6cb39ebc6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9cc321e0-d51a-4899-90f1-69bc1356b9d4"
        },
        "item": {
          "id": "28d95f02-3026-41d7-b9eb-ffa63435e0d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "649dcd9c-2eac-4485-b3e7-0cfbd4d2484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e1d661-7aea-491f-b830-9be7a5281c76",
        "cursor": {
          "ref": "f373f3f5-6844-4e07-a9c0-c0a2ec9b3cf3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6db2b9a0-e97e-4e9b-a375-65c6902ce995"
        },
        "item": {
          "id": "42e1d661-7aea-491f-b830-9be7a5281c76",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed3385fa-d43c-4319-8992-5e62b514301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a653775-5d5f-494a-a507-08bc59e45392",
        "cursor": {
          "ref": "d9092dc0-16cd-45ff-81f5-42e638b6808f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e7e90637-85d5-4283-962f-6f1bd3f1f74e"
        },
        "item": {
          "id": "3a653775-5d5f-494a-a507-08bc59e45392",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e28f8bea-6426-4efd-bf47-e44ae1726015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b492b9-37bb-40f0-a688-e6eda3726e20",
        "cursor": {
          "ref": "6b55803b-5c4b-41aa-9d2e-3813d718cd84",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "686722e3-1adc-4c86-a88b-82ecbe5d1842"
        },
        "item": {
          "id": "46b492b9-37bb-40f0-a688-e6eda3726e20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ff77085a-fb70-4b6f-bd4e-4a0a07de8829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e34a478-dcf0-469d-ab7b-5971b0b41bf4",
        "cursor": {
          "ref": "c5626285-76b9-4efd-8e30-2fa6f6362b86",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "095ac419-25f1-4a88-bf4e-ebef08bbd7f7"
        },
        "item": {
          "id": "5e34a478-dcf0-469d-ab7b-5971b0b41bf4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d41d0f2-ece7-4051-bcf7-30d8a62e9771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83047ec1-6c5f-4044-ba73-1dd00207a733",
        "cursor": {
          "ref": "2d05bbc0-41e8-4729-9b3a-b8dfd3b3e617",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "504687df-ff31-4708-bf96-2614e6311dc4"
        },
        "item": {
          "id": "83047ec1-6c5f-4044-ba73-1dd00207a733",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f4564441-b0f5-4b33-b5ae-8d1ca1599917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc0a79e-e7d9-49f1-aa0e-767c71fe72c3",
        "cursor": {
          "ref": "7a29e352-dfa7-4bc2-a0a8-98523e65069e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "292884e0-1289-4ad8-9734-f9aa476c6edf"
        },
        "item": {
          "id": "7fc0a79e-e7d9-49f1-aa0e-767c71fe72c3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e75ce444-0ebc-49ac-9730-2642c0ded298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9192323e-1142-49ce-a2eb-4da8a26c4128",
        "cursor": {
          "ref": "6f47fd0c-229a-43b8-a03f-6b6e76292386",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "12af15b7-30de-4cac-b3f8-95775dcfacb7"
        },
        "item": {
          "id": "9192323e-1142-49ce-a2eb-4da8a26c4128",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "39e1b28a-7aad-4786-8a3d-55f1f9e1f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13057560-84d7-4395-9c0b-04903292aeff",
        "cursor": {
          "ref": "ebe78b44-b4c4-4155-b1c7-f3a8e4ce74c8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9324dc02-db7a-4f44-99b3-0bee273e7121"
        },
        "item": {
          "id": "13057560-84d7-4395-9c0b-04903292aeff",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f8f01932-e96d-49df-8389-57d512467db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2ad00c-5139-4060-8d89-251f724fd442",
        "cursor": {
          "ref": "f3e8ac87-d854-47b2-a6db-ac6d05681357",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24e96f1e-eae1-4e30-a4c2-540025d51051"
        },
        "item": {
          "id": "ef2ad00c-5139-4060-8d89-251f724fd442",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5d422fa9-22d0-406e-b1a0-1bd7bf40335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4ccad-00af-4bce-a95a-a1e623473d72",
        "cursor": {
          "ref": "2e59656b-d924-4826-afa0-8cd640f56c76",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a98c6d46-a222-45ef-b74a-88b41a143c76"
        },
        "item": {
          "id": "71d4ccad-00af-4bce-a95a-a1e623473d72",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4a5640f1-8fbd-4ad0-9e1d-76b03cf7cf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b64bef-c90a-4cc8-ab11-0d3a06b7fbad",
        "cursor": {
          "ref": "3db11aba-4eef-4006-b05b-654873e68c29",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "355421a9-f87a-4422-b8a1-b16b80ca03df"
        },
        "item": {
          "id": "d7b64bef-c90a-4cc8-ab11-0d3a06b7fbad",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "68fd6d31-090d-4a7d-a70b-64794015ae8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dcd384-fd50-4804-a4b1-904bbc2272e0",
        "cursor": {
          "ref": "90f2b6cb-8bfe-40c0-911c-9f803ccae152",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c32ed0ea-4653-4bcb-8840-b5b60f8e680b"
        },
        "item": {
          "id": "38dcd384-fd50-4804-a4b1-904bbc2272e0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "17aed7e7-953a-4a85-95eb-2ceefa164a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1897b2c8-bf53-46b5-af81-0357a1f22ee6",
        "cursor": {
          "ref": "b4880e36-1425-4584-8961-278195873a60",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "db0e2bb5-aeff-41d3-829e-7ead3652d861"
        },
        "item": {
          "id": "1897b2c8-bf53-46b5-af81-0357a1f22ee6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bc998dea-9ec7-47b1-a4e2-c4495f670538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b280ac-4d87-4d0f-b397-2390fefbd7f2",
        "cursor": {
          "ref": "8d264e77-5c96-4ab4-b14c-69e50e4a5247",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fe2b5bd4-3cbf-4b1b-aebf-f92fcabadabe"
        },
        "item": {
          "id": "24b280ac-4d87-4d0f-b397-2390fefbd7f2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6e02de53-dcba-4338-abca-cf04d5fbab2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d8c32b-a769-464e-821a-6b92be48203c",
        "cursor": {
          "ref": "5f31f74e-dcab-48b8-a9e6-269c0b6a8d51",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "106faac0-7f01-4ec8-bcb6-efcb1e756be0"
        },
        "item": {
          "id": "b3d8c32b-a769-464e-821a-6b92be48203c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eff6225f-646c-482b-ace6-45110d78020d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb267c0-273d-4a8e-884c-c7d74eea7ef8",
        "cursor": {
          "ref": "d7e72370-a0e2-499a-8e59-119c2e81b8b4",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f300ee5-de86-45de-9f45-b8e893c03169"
        },
        "item": {
          "id": "6bb267c0-273d-4a8e-884c-c7d74eea7ef8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6406ae39-c8a6-4216-baef-9a38cd918c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e0c1df-e790-4254-8aae-dc614d4d414c",
        "cursor": {
          "ref": "2414f3a6-57a6-490b-99be-9205723e1743",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbb11c7a-a137-456d-a161-58a2f2adbd70"
        },
        "item": {
          "id": "c3e0c1df-e790-4254-8aae-dc614d4d414c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3bf6cf42-ec37-45b2-ba65-dfdb15f6308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4497259d-47dd-4baf-8a0b-d558b03f720a",
        "cursor": {
          "ref": "21b81200-9aa4-40af-90bf-564d1e7fa531",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "80a16d07-079d-445a-821a-299bcb6da0c4"
        },
        "item": {
          "id": "4497259d-47dd-4baf-8a0b-d558b03f720a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d9cdc02f-6d3c-46bc-9837-3cbe7ce360d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c24efb-8eda-4ece-b439-d5cc79827ce6",
        "cursor": {
          "ref": "15ec066a-1e51-4345-828b-2229be0f9895",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0583bbb7-5484-4bd6-a356-9f0609a95032"
        },
        "item": {
          "id": "96c24efb-8eda-4ece-b439-d5cc79827ce6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "95c6e12a-4f46-411f-9b2f-2a84a04e44ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61509b5-7889-4344-8b57-96aef62b16b5",
        "cursor": {
          "ref": "89db9e0c-fc31-4c54-aef1-d9666f72bceb",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c489bc32-347a-4ce2-927c-b291e3603943"
        },
        "item": {
          "id": "a61509b5-7889-4344-8b57-96aef62b16b5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "82d7cf3f-8576-49d4-bc40-2c5cd09da0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92ff927-5fb4-47d6-97f8-9aa2b91e9779",
        "cursor": {
          "ref": "8a13f906-d732-4688-988a-b96344aaa3ac",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c6fa838-a6b8-4de0-a70f-555e2802d0ef"
        },
        "item": {
          "id": "c92ff927-5fb4-47d6-97f8-9aa2b91e9779",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d818cb05-b5ec-4284-8897-099e47ec53b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2709a394-1951-4f0d-b1f7-f757644447d9",
        "cursor": {
          "ref": "21c51eaa-3a5f-4669-9154-a5999bc03429",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "69ef2aa7-0e26-4b3b-841f-6d835ca48157"
        },
        "item": {
          "id": "2709a394-1951-4f0d-b1f7-f757644447d9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a76d5b5c-da59-4353-9d36-edc9e924d23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262de8ea-ed36-4bb4-a082-1c6dd2c81c68",
        "cursor": {
          "ref": "b8cdc45f-eb0e-4481-bccb-9cb22df4c77c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f271da96-a969-43ce-a526-13e9b379067c"
        },
        "item": {
          "id": "262de8ea-ed36-4bb4-a082-1c6dd2c81c68",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1c14db28-524f-4e4d-b0bc-7a806fbf73bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2ad5c4-2fba-4d20-9802-77c3458b4aed",
        "cursor": {
          "ref": "42a23f27-2ea2-4786-a90e-46638a8fb939",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e208ddd0-0cbb-4d11-a3c9-3309aae05fad"
        },
        "item": {
          "id": "5a2ad5c4-2fba-4d20-9802-77c3458b4aed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f0945bc2-d2ed-42b4-830e-f3fd4ee225b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ad6dc-f661-4679-9972-8cb449785373",
        "cursor": {
          "ref": "7f8536ad-39b3-4eb4-a09f-d4863e1ca367",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aaf0da2e-5cde-40d6-ae94-abb3fa3e721e"
        },
        "item": {
          "id": "f71ad6dc-f661-4679-9972-8cb449785373",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "53a8d23e-a86e-4b99-97bf-deeddec9f82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c94e6d-fe1b-4623-a679-05c1ff78c2ca",
        "cursor": {
          "ref": "3f35d582-a5aa-43ee-87c2-eb753a661f26",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4e8b1460-8a8a-4122-bf1d-12b9864f1dc9"
        },
        "item": {
          "id": "56c94e6d-fe1b-4623-a679-05c1ff78c2ca",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "286c5c40-0f11-49d6-adc6-41b7f255f110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989cb7a-5f20-4aee-a36f-ce70e24744a6",
        "cursor": {
          "ref": "e6ee91fb-8ce4-4bb1-8a0e-9437b4ac0a1f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "73b67b95-ce1a-456c-bd96-4b9b20cff4fa"
        },
        "item": {
          "id": "f989cb7a-5f20-4aee-a36f-ce70e24744a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bb6b0dbc-d415-42f3-8081-27a3f672c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fac20d-c19b-416d-915b-ade4b296e693",
        "cursor": {
          "ref": "9cf71eac-d818-4478-b2bf-2995932d6324",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7defdddb-e153-42b0-a3e3-2d7ab92062d6"
        },
        "item": {
          "id": "58fac20d-c19b-416d-915b-ade4b296e693",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a846311a-44d2-49cb-91b1-6211095e12cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0095fce4-b60c-40a7-b0f8-0b2f95470a64",
        "cursor": {
          "ref": "5dc1743e-140b-484b-a720-d02d2eb807ef",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e53fbc5a-d56b-4852-af3c-e1a77618eb2b"
        },
        "item": {
          "id": "0095fce4-b60c-40a7-b0f8-0b2f95470a64",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6c2011b5-8e0d-4565-82f2-0bbf88d747c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec359e9-f9c2-4385-9c68-5d6881267b65",
        "cursor": {
          "ref": "b686bd58-258e-4dc6-a293-5e2e46c8d454",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df5a6b3c-a124-41b3-b108-9c7721a3a0eb"
        },
        "item": {
          "id": "1ec359e9-f9c2-4385-9c68-5d6881267b65",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7b5027a1-39e6-4ca0-b36f-29bcd4dbebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace70e2c-eba6-48fe-b837-e67a98f6179d",
        "cursor": {
          "ref": "228500da-54c3-4ae9-b76e-e7441eeab9a0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e943ae0a-4aa8-4cca-8b73-40707f991079"
        },
        "item": {
          "id": "ace70e2c-eba6-48fe-b837-e67a98f6179d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2344844b-0ded-478c-86ac-eb7527457973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140107e5-d619-4471-b4a4-b5f82eaa81aa",
        "cursor": {
          "ref": "f2d04325-4975-4d71-874b-bb128e5ff333",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "15a96988-8d06-4d56-a330-338fe0025aa7"
        },
        "item": {
          "id": "140107e5-d619-4471-b4a4-b5f82eaa81aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07236cbe-4134-4da0-bb7b-e42ac26983be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f4e1a5-d5f8-4070-9d8f-d193c0de7bd2",
        "cursor": {
          "ref": "f846c08d-9ff0-431e-a066-b14e03109a26",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "193a5544-47d4-4f41-976a-f5a9a4c3f101"
        },
        "item": {
          "id": "72f4e1a5-d5f8-4070-9d8f-d193c0de7bd2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c7ca0443-f9bd-4818-98de-ae422a467d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602409cf-c386-4c88-b15c-1d4ddf93c9f6",
        "cursor": {
          "ref": "04fbcb78-00c3-4f64-acfb-54f8ef5240f1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf5c1716-e8e9-41ad-b971-1e2843ef32ce"
        },
        "item": {
          "id": "602409cf-c386-4c88-b15c-1d4ddf93c9f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0bbd9cc2-d89d-426f-bea5-a7345fa08040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f5e1c-553d-445a-b11a-03c2b104326b",
        "cursor": {
          "ref": "241a1c45-2c79-4f4c-8200-3d566e5083a6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3fe4a4f6-f958-463c-9028-29b61dfb95ce"
        },
        "item": {
          "id": "c22f5e1c-553d-445a-b11a-03c2b104326b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6d920e55-1d05-4d2b-a4a6-ec61fd5db247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889bbc81-e714-461d-866d-a7e25e0df245",
        "cursor": {
          "ref": "f3142fac-bf1e-42fe-8243-b08a8b18147f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fd67a4ce-7bd4-4a48-93f6-eacd0142ae75"
        },
        "item": {
          "id": "889bbc81-e714-461d-866d-a7e25e0df245",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce077724-e145-4e2f-a67b-0e02fcb5e8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a804d-f0be-46cd-9be4-310f9e132c7b",
        "cursor": {
          "ref": "3f120c7b-5584-4e98-8350-6e804358ed1c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f05eaae8-694b-4f1c-bb8d-5dcdce7b6377"
        },
        "item": {
          "id": "7a6a804d-f0be-46cd-9be4-310f9e132c7b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8789c6b-3c4f-4d55-a950-1d9dfd19ed9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47091be-f897-4e0d-8d00-77b4fc209d16",
        "cursor": {
          "ref": "6070c554-6416-49a0-8617-c02189e23bd2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "96dcbe7f-6bde-4206-836a-02f855d4da96"
        },
        "item": {
          "id": "e47091be-f897-4e0d-8d00-77b4fc209d16",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "54a2db6d-a3a7-4dca-8d29-d2b37e74f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3d34cf-a205-43b7-a233-339ebcc161c8",
        "cursor": {
          "ref": "86b05455-9d49-4859-b990-b3d52803527e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9de333bb-3649-49ba-a282-95055040c985"
        },
        "item": {
          "id": "4c3d34cf-a205-43b7-a233-339ebcc161c8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3e07ccb4-156d-447d-bbda-48aa8f655bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4f4d5e-4c64-488d-922c-30439e5122e5",
        "cursor": {
          "ref": "e1cb0736-de24-454f-8a5a-9dd539e11b00",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "92487d96-90ad-4ef4-9c39-b2cbe39a41fd"
        },
        "item": {
          "id": "7f4f4d5e-4c64-488d-922c-30439e5122e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c4ec14bb-ed80-41fa-9ce0-5c8abbeb719f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54053b29-dc16-4adc-a812-7b2b96eb11d4",
        "cursor": {
          "ref": "dab4e6ed-1eff-47f8-bd6d-b66aacb122a7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54f13319-007d-470e-a78a-0be5c237de2d"
        },
        "item": {
          "id": "54053b29-dc16-4adc-a812-7b2b96eb11d4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "11dd93c2-1985-47e2-8c12-c6ec35797572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a61a0a2-1c90-41a9-a784-c79efcf40b34",
        "cursor": {
          "ref": "545cf41e-8a07-4974-8906-b5419cdc044f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1b97c419-51d6-4bc2-90ce-21d645dc4a73"
        },
        "item": {
          "id": "2a61a0a2-1c90-41a9-a784-c79efcf40b34",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "42401cee-6042-4635-8472-fb36ad0d3788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ca336e-29d0-4233-a252-f230bc241eb6",
        "cursor": {
          "ref": "aede0ad6-4e2f-47bc-96a2-8f986d0fa1a3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0217792c-b676-46c2-b6fa-a291e79157b2"
        },
        "item": {
          "id": "b8ca336e-29d0-4233-a252-f230bc241eb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "084e211e-6d40-4734-b14a-558b869190f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbd7e56-fbf1-43f7-838e-daa9d181cbf2",
        "cursor": {
          "ref": "ca159a54-8475-4c2a-95e0-8991eeb8b5f3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a041ad38-0fa9-4cfc-b93e-02ad742020e5"
        },
        "item": {
          "id": "7dbd7e56-fbf1-43f7-838e-daa9d181cbf2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9d6b8340-e33e-46db-acf8-6153fbc953e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2faa7e-af0f-405e-b04e-7085352aa4e5",
        "cursor": {
          "ref": "fbb4241f-8073-4f4d-8170-4f6a2c4b5ffa",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "46005eda-6a5a-4485-8191-a767ce27abe0"
        },
        "item": {
          "id": "2c2faa7e-af0f-405e-b04e-7085352aa4e5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8fccfdbe-4ff6-4479-8a85-c0e520be12d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0107b1ad-39b9-40ca-90aa-89eaa11171dd",
        "cursor": {
          "ref": "5bfc859f-e967-4169-ab4c-91a8948e057d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "02a33d21-831d-4ad0-b30b-c3ebc7f2938d"
        },
        "item": {
          "id": "0107b1ad-39b9-40ca-90aa-89eaa11171dd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5d60242a-c8d1-458e-9305-8371caa7f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d54345d-9d46-4627-953f-34febd383c87",
        "cursor": {
          "ref": "f4f1acba-3b9f-49b5-b778-e5472b1c1ac0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b8b11769-7a39-4bf7-9c1f-3d28cb14ea67"
        },
        "item": {
          "id": "3d54345d-9d46-4627-953f-34febd383c87",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d1d62b2-3e3e-4d35-9645-4ef42d5193d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8924add5-59ed-4e80-a935-12d12c1762a3",
        "cursor": {
          "ref": "83ee41cf-9620-4849-ad05-d92456a183b2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e8d495e9-d8a0-4d93-9a6d-3f910869bb95"
        },
        "item": {
          "id": "8924add5-59ed-4e80-a935-12d12c1762a3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ed9fd3e1-b0ee-4dc0-9e3c-f8a589859a39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf20cc-f7d0-4939-8f5f-53a58d6d934f",
        "cursor": {
          "ref": "f017a811-2695-4a88-86bb-ccbc7ccdf61e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "81382eab-f24c-4370-b771-ed6adcb659c2"
        },
        "item": {
          "id": "1bcf20cc-f7d0-4939-8f5f-53a58d6d934f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0b0cc21b-097d-4ee0-838f-0d908dc05796",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e478f58-b911-40d2-826c-f5f2c3abe634",
        "cursor": {
          "ref": "332a8f6b-0675-4e87-ab55-f533b22a1fa9",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f06f35ab-c14e-4dd0-a346-8c9b67e1a951"
        },
        "item": {
          "id": "9e478f58-b911-40d2-826c-f5f2c3abe634",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c6329ba2-0938-4ddd-a90c-0f50bb11ddb3",
          "status": "OK",
          "code": 200,
          "responseTime": 2636,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3150225-1403-4ac6-939e-283bea27308d",
        "cursor": {
          "ref": "e7fb0849-1e8c-42ab-9e34-560709aeb821",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a103922b-c21e-4284-82f4-f7917b0580b7"
        },
        "item": {
          "id": "d3150225-1403-4ac6-939e-283bea27308d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1a562dcd-2377-46da-8753-0b13749f6472",
          "status": "OK",
          "code": 200,
          "responseTime": 3816,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c57ed-8636-41a2-858f-ec17191e267e",
        "cursor": {
          "ref": "303708f8-713b-41b3-9134-befe3f20ddd5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f7fb00a-cd79-4577-aaf9-a664d28779e2"
        },
        "item": {
          "id": "434c57ed-8636-41a2-858f-ec17191e267e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50058cf9-96cc-4b54-b041-ff24c9f64245",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c57ed-8636-41a2-858f-ec17191e267e",
        "cursor": {
          "ref": "303708f8-713b-41b3-9134-befe3f20ddd5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f7fb00a-cd79-4577-aaf9-a664d28779e2"
        },
        "item": {
          "id": "434c57ed-8636-41a2-858f-ec17191e267e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50058cf9-96cc-4b54-b041-ff24c9f64245",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2d5a63-c359-47d9-aa29-de5bae6be08d",
        "cursor": {
          "ref": "9b6ecbfd-266c-49f3-aba2-a7fe701e625e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4e6ea7f4-f23b-4488-ba7b-4018a1a1c9fc"
        },
        "item": {
          "id": "ce2d5a63-c359-47d9-aa29-de5bae6be08d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3c916519-992f-4e86-9b8d-ca7207f82c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe3c07-e863-4fe6-b828-eaded345a39d",
        "cursor": {
          "ref": "e5bc8191-8b4a-43f6-9a38-b5e2e192b419",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f151b9cf-7a06-4778-ae36-91d9eba8dd2f"
        },
        "item": {
          "id": "68fe3c07-e863-4fe6-b828-eaded345a39d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fb892f83-38f7-4d61-86fc-61b5b196864d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}