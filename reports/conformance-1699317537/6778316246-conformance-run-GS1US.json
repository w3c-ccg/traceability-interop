{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "548707a2-4066-4018-88ec-4622d2c21291",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ff77df2b-cf04-4823-9536-aeb05c135e31",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4f0dd64-661e-4bae-9f76-5442b4497d3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dd92d761-1711-429f-afdb-be0e1f5cd9fa"
                }
              }
            ]
          },
          {
            "id": "639759c0-88eb-4085-83b4-4b7d9655ab01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e085f76c-ef40-4fdf-ab68-315ff7d6af4c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45a57503-c635-4b53-8830-4dc9a885d37c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "76c6d55a-be09-42d7-a4ea-1c6876dc05c5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a7db0a8-fe4a-4207-b7e7-ffd5a40de266",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4b05253-ddc9-4f88-b8ba-07fa4b0681c9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f64a959-f31f-4650-b673-fd8d9f08850c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "516f7581-57ef-47cb-8c50-45723412f7b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e7210e3-5e7c-4afb-9db0-0f91980c8796",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "977f570f-1cb1-4254-861d-89c53091c097"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83a070ea-5561-46aa-9b4e-b50a4624c5d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edf705a3-ec53-4c1a-803d-b2fc9c7cb8ae"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e9c4ec9-0454-423f-9dff-5fd5633f1735",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed0692be-a133-435f-a391-2f5b5f41cdc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65f6dbdc-e7eb-4ae8-ad2f-5460ccc82305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cd0873f-3ffd-4f43-9a67-5f53f945a913"
            }
          }
        ]
      },
      {
        "id": "90ba95be-51c5-4f77-b3f2-70ca62369628",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ce2e86e1-e773-4d0f-9ead-ff7789c3374a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05ac3ef4-6763-4474-8ea4-db2827404e5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a00051f1-905d-4002-a867-40aa101e77f6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1f4ba-5315-4d0f-9624-7568c65a5124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88330433-7eaa-45e8-93bf-a1f9a6e00fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ebf0a4-d2fd-4c04-85e5-ebc88d49d119",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8675ed76-b0fb-42e3-b399-6f21c00ec10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b40c9301-9266-4924-bd21-8c84ee5322d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a1e68f-a1aa-4a11-b63c-453ee38e74d2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7631567-c3c1-4728-bf6c-0a20db97eb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf0915f3-9120-4843-9e73-69eecf89c012"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f97ea02-10fc-45b1-b11b-407f2e89cb44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8bed7ee-1471-4916-b2dd-0115dbcefc83",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4bd499-e954-4975-9d6e-b8e669fe21af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3965446-1a5e-47ba-80b2-afbb266fd926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b7da7-7ddc-4117-a0e3-cd5b04f5f2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7023f1-09f5-483b-9254-09e18da9721d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b28e5d3a-5bd3-4b72-aeb8-411012098204",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed039c1a-ac07-49a0-9af2-8cfe791745d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f539bba5-cd5c-4566-a935-1c96589a9e22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "792c7054-2f11-4ce6-abd2-861a9f439a61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56f29ae7-21b0-4cd1-bc7f-540c39e0b422",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ef2a1d0a-d33c-4370-8e3f-363535b85b10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b59809a5-752b-4698-aa45-98828db2ae36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3278de91-731f-4e99-8a7b-0ecc85a18404"
            }
          }
        ]
      },
      {
        "id": "9ec88bc2-4405-4f18-8dbd-7fe3105d0c13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "839a78c4-dfca-47fa-b584-18b02b4e19c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44043f7d-81fc-4ac3-900b-f0f93ee7b080",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "28733128-c9bf-440b-8b5b-70df2493c82b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefab671-d6d8-4087-9af5-f2431f8afcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f01f161-b10a-47e2-bb0b-4850e8b584bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e181960-7187-4c98-ae93-f744ec8bada6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4793918f-37c5-4b47-baa6-79fd35fb30c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd0ea5d-bd8b-46ba-a43c-57caf8ed824f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f6566-58a5-4174-ad6a-c334ea2f9e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc785765-c41a-4c15-8a3f-a23ae1bb8ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37536c34-39cc-46ef-9dbf-1dcddd69f53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "493fe60a-71a9-4114-bf1b-7603b6fb4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8bf729-90fd-4d7a-aecd-ec43c4c4614d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91690678-46ee-4b6b-9bd0-e442a13fef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c889cf-0fc8-4eb1-bc0e-cab5f14ad1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e2c66f-694a-406f-842c-5cdb8b4666bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a79b9c-ea20-4844-ba6b-7c0b0b6499d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4728762e-64a1-4a82-b4de-924af938ca2f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca049383-cfba-412b-92e6-211c19976b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd4e139-e453-4041-bde9-bdeaa2977d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9988a9-0628-4858-98bf-41960dac2d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc43ddf1-1be6-4864-a204-1c30f471b51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963ce16a-888c-4d42-b74c-e1103a0becba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12e20d1-eefe-4911-b623-a80739cd76c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3112eedb-bdd6-4a17-8b3b-32a13ef9d060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0363c2da-1d0f-4101-8a6e-3d23e08e7426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a23f383-54a0-4bd2-a5bf-070f5a14f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bddd52-25b9-4cb8-8b15-e62cfeee97f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f778f80d-142a-442d-b970-f7d59c451f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ef3cff-2f56-4389-a6b6-2ff2473dd9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd611f91-b885-4cb0-a4f8-cd1a8e4c9922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d91855eb-a984-4fec-8602-de34700fe1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a0c04-5f3c-4cbe-93b4-54afab703d00",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e824cd3-0ab4-4a52-8d9f-b01e0192996f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33459513-ee3b-472a-9694-94611426df87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb7ac88-9c44-4840-8e22-18099da682b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e5c840-8553-4c24-b182-55f6a8323610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eea755-3da1-4152-bf04-531d30107886",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1c338-a18a-4f43-92e5-36d6d6f22784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd61928-79a0-4b6e-9fec-f57a84b83423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d107700e-8516-44b1-b650-91324a581560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28486c7b-569a-49ee-a2a8-40820187049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29ace84-965d-416f-8c89-62d4f532f118",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d108e6-8bd0-48ea-be65-ca192ad34922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9e029b-2a3d-4972-9245-8f9d2999537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a375a6fb-4046-49a7-841d-ac557e732370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24582d9e-478b-4e20-87c8-5283a9b90d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d09594-46a4-476a-aea6-70194cb0dd49",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd1ef4b-1c8d-42ed-be69-392877ab6723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c827208f-02c6-4fc3-bfdc-64cd36476a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00df90ef-02c0-4bdc-94bb-86a852f176ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "561a8e94-9005-47fc-bba1-705cef472258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e7672a-e5ec-4c71-a913-205069cf296e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fab193-cfda-4000-ac96-f741f27b96a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5429aa-9458-413c-bb2c-d750e2890276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31258ae6-3ef8-44f8-a270-c3d751a1c62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4543a7b1-caa7-413b-964a-603f84d5f818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9c3e83-79a4-47b4-a22c-310326b81d4f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a68dd75-1cf4-41a4-b603-0549341dbe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2bd28f-d640-49b3-ba3b-223dc9bb7056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f0c1e6-0fc4-48c2-9ca1-d0abc7acc3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb22af42-d170-44ff-9751-35b6f623612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e8f4f8-6b6c-4458-9fe6-e2eadfa5ab05",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3075b4a5-3772-4edf-aaae-19ca1acb5a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d473f46-b1d2-48fe-a02e-8a84d8028b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9829a607-0b32-4319-953f-3f6671f4652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea622929-7387-465d-8ba8-b2a4f123820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185327ad-96d0-4806-92d3-c24e12d5ffc8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec440a54-3c55-4926-85e3-2674143fdb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd42c4b-b834-4eb2-bb85-53ff4411e9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d0a56-c4f2-4d2a-a327-4d653a4c7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22425c36-be99-499c-9a51-53289979ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9bee68-9951-4712-b6f1-0614302d155c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d132d1-6062-41b9-911a-6eb2d626be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6cbc16-126f-49a6-910f-369519e1256e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd4af96-0972-4f24-b204-70be8e2b45bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d40cda2-b503-4934-900b-89887af71f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafea445-b156-4a63-96ae-ed266b8e5fb9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d815da-6997-4390-8238-ab0a23268f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3b4961-e1ba-4528-b305-216240fe60d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760c864e-7b28-4734-989c-a044d68befef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04890aaa-e338-4418-a90e-d7e3cf23654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e281b6-e048-46a8-b1b6-cb06b540e4d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654227ad-c375-4048-8527-0a035420600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99eac6e9-99fa-44c6-b76c-71f989ace9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598669de-7b13-4b0c-b4d9-33a8250fb2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99b2beae-b262-4e39-ac8f-dd6d253afab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f36a3a-0b81-4c82-8a0f-4a368ce3baec",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f993ddf-a200-415f-aa59-84c4d2a69bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd80839-3b63-4811-96b6-9b08b82764f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51598bdc-f228-461c-b27a-b0e1dc16e9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2194cd7-192b-43fd-a10e-fc79c30212d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce28a2f6-c91b-4e6b-990d-1cebd7a08cc1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7a5c5-d3bb-4e4c-8001-78416e5c5355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42811c9-cf7d-4dee-82ff-3decf5d2f143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3014cdd1-1842-4ba9-9669-7ac926df81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2afbcd82-9533-4bf7-958c-b9908cdac4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45b9c0a-a15b-4335-866e-8e03e3c7826a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66651b8a-9b34-4215-b562-527a52cf883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113758f9-9013-4f92-bed1-2eeeb6b59784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d071d7f-330b-4fed-8615-fd7e01d9652b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d88acf72-46aa-46de-a8a9-72f40bc6ec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48c93f-d0df-4760-afeb-afa18e7e67cb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3986bece-50c9-4c40-9ae4-7d872cd14949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2e3179-7a72-4098-8a0f-deda83edb965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47304897-0cc6-4240-9c5c-dfb5c1bb91d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd9affa-60aa-49ec-89d3-63771c20eb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d1803e-31a5-48cc-8f69-2a884cbe056f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caab0320-2e6f-41d0-a17e-fa3618a027b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db70b77f-0b8c-4c75-a0ee-f0d0d4fac1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fd6e05-8635-4cd5-86f7-711f27759d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f67dec5-9cb0-4fcc-b29d-a9aa722d23de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc39d7d-fb05-4af5-a31b-3bb05ceeec8e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13caa0b7-be6c-4471-9ea6-2bf7a39f5a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28531147-1001-4da5-b855-2ecd08a3d1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32cbaa1-df70-47d4-a602-a739c49b7f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a05e3f57-47b7-4816-8092-ab96936be27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d02d827-e086-4484-9ac6-e3e5c2a9b80c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451251dd-d47f-40c4-a67c-c5b4f2cb0472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850de144-92bc-4916-ac81-57b3743bc496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66990120-4809-4df5-b85c-be944c2084c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "181b3d17-66db-4d4d-a486-a48f309cbcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69bfe86-e0a8-44f1-a41a-4afe9bffe690",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bcabac-ddcf-43d3-859c-6a44f5aa40e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea697966-4bc0-4f4a-bdb8-b96c962f3f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0a6152-cecf-4578-8d4e-57d63f19b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c69dc2-9ef9-4230-97ad-154e824f574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a491923b-6cd2-4b67-887f-35ed959f499d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c3c3c-9af6-4bcb-8cdf-b93684f9aa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563db9c4-2e45-468b-90a9-64ff2e9dbbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243ff0ed-f107-4dd4-a45d-231dfbca33e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cce732a-28c5-4648-9824-4f31153569c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4323df9d-251a-4494-8d3c-aa89349f1812",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af17b831-4379-436f-a05f-20fa1e9f237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176f00a-dfd7-4bd6-820f-95470ebec65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e924913-610f-4d89-bd7a-5c86ba39ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "715f66d9-486e-4867-b0eb-79a854e4d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c301701-5425-4d68-b18c-5b7e8951ee26",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56e5a3-3722-4937-97df-8d7d620e25b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63f5b93-eb21-4c03-ba1b-6e017c0eea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afade309-90a4-4aac-9704-66c49c851615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74af9683-f3c3-48ba-ae6f-3d4266da1502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d293ca-af81-4f6a-a080-ace5f146b644",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f992416b-e9ff-489c-a367-7cbbbdd8242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f839cf-b386-4f8e-bd32-a7a434e8c57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa87761-25ca-4c2d-b5d3-19e94671e5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26429ced-0a11-4eaf-b3fb-cb29937155ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a129cbb-4b6a-4c55-ab7c-1b013282a432",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24fa3c3-6977-4f1f-b297-bd17f19e9ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7af1ad-bce2-4848-bfcd-68bfb5aca32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28578b1-7301-44c2-8714-295f220e6af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d650486c-67be-495e-8cb9-ab12b4cdfb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677d0434-af71-4eed-9289-c55f48cd72ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390759d2-6312-4c45-acd0-1364f82cb29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfe5027-64f7-459a-85e0-5e4e7f50a7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c161dae-b1da-4d8e-bab6-11bb0f7f7db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd28e09d-3310-4ac2-bae2-995b527e3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b43fe3-6326-4ada-9424-0796ac9b408a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc56e862-74cd-497e-9878-eb215a3f3ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0494e27c-3106-4194-a9fe-9d805b96e331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7882e9-ff19-4e8a-adf8-e7d8e5355bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e274ec-eddc-46c3-ad89-45b31a19a03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5156cf-853d-4fb1-8415-c275a6fdf8d6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71913214-6447-4882-9695-3d9c05be3f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaa695f-208b-4b33-8e94-e7d13171dbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01466b6c-3efa-493d-989f-566fed7bf56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c0b5c8-f74c-4a07-a7ef-d3b9a3335dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7fb25-b1ed-4ea2-b31c-0db25a43bb7f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb5a76-20f6-4c1c-aff6-8be37c0c2550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8580fb3a-7504-43b8-a230-d2d1c8473ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83615dd-deec-4511-84e2-4d6925dce90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9984bc7-29da-45ce-8aa7-7861b442a941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6060026b-5400-471c-bd08-f67f9ad1914d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3853deaa-6faf-4a2f-a084-60c127a4dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0908da-d4b5-4bdb-99f6-1a954ce21e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76b047b-43b8-4619-9a6e-6b2856a4d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "876829e1-3298-49d1-a115-db5be01bd4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be88c2e4-698e-424a-993a-2f3902c083bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2df3217-87b5-4180-bdc8-d606f016e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b26e60-9963-42a8-b428-4c4ce6d95bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca91da-2cae-4b10-aeae-d90bbb9fa5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63067321-75a4-4ff2-93eb-7d2e477a1233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe81c4-eb02-485a-9be8-79efb8ff1caf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f465691-a88a-41d8-98dc-9138e22cf78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f76332d-bfcf-41b0-bf89-349a08f6f86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a181b65d-efd4-4245-87c7-065b447cfd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e64cf6f9-47dd-4baa-a194-5e0484a18e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a1f973-852e-427b-b774-fa3dca47c2da",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4568a1-f9ef-4142-8475-11db53631d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ecd1d-41b3-4aa1-b11b-25539664bc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e8aab-9224-46ef-a9e1-53827adbf6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d89fede-22a5-4fd7-ac74-e52fabca39f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465a32f4-a792-4abb-b723-e0a11419be64",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8956f12c-0345-4cac-b8d4-53853ec22e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c864c5-add3-4312-85c9-efbfcc9eee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb7ec0f-81ec-44f6-911e-2de2e148c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cedb5b83-260c-4357-8330-cdd0f3b7a4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2dc9d4-ace4-43ed-ad10-74fa3ae7dbb8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22ba34d-dc74-483d-b0f1-07e6f7803141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1701ae3-b2f2-40ca-b7df-965ba5032d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a0596-9e2b-4de5-9282-7f8edeb3b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b08396-ec8d-49da-83fb-450bdaf826a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5833094c-0c72-4e94-a420-7c7a1a02aad8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77714ffc-364a-4e10-ae5b-7a1928c686a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4647489b-c356-4318-b026-1a53cb7cc850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920f8033-31dc-4566-ba96-2d488f941b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f72685-fb45-4d76-abe0-47b1052acd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd53ad37-4a92-45aa-925a-a1cb6e001cbd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc79e0a-22ff-420e-8797-149cf78f672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83b135e-bf13-44be-9336-29e1a7e69808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db005bbb-f0de-4bde-84d7-e890e716a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d45d684f-6355-47b9-bd43-4ad1b7260ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134f0612-542b-424d-8816-9ca2252baf85",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9ce685-cf23-4780-a8f3-ff698f7229ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf745c8e-e040-4002-925f-3ba283390a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290dac7d-366b-46a8-900d-f7ad647a8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5472216-28d5-4c0f-9c19-bb91de014f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14ba507-10c4-4b84-8cde-cb18072a4bfd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fa0e2c-3e58-4fce-b71f-eb109005f060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dda361-25e4-4377-abaf-09c5e476fc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0a43f9-303a-4d40-8ea0-c36d9c82523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d48b2cb9-9ccc-4fde-8fe4-c796f648584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc27934-dfdc-4d2c-a5f6-e40d027fd402",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f152a45-2e20-42d2-8849-d06f1a4842d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41509aa-9b18-4ff1-8e18-49624094d521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec253f1-c9f8-42b5-8edf-195efca011c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f65e1cc3-c8c0-4a5b-8e01-93db4fee784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e60f1a9-d69c-439a-a6eb-d94919685517",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979dbad2-c4ec-4a06-9209-753a97352fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e31c9dc-5e59-4f5e-bc58-a84f5c34d5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acebc46-2d0e-4b91-b72b-d5a8015a628e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "811e5178-b93e-4f7f-9fa8-ba2636a41977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b2571e-1ab1-4993-b937-66f78aa07a84",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf7239a-7944-4a6c-bf03-27a217ee3d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23399b5e-bd53-42f7-85de-2883defb623a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fd670-e5bd-4880-95ff-635f46f83ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d029dc-05f3-4ddb-b16a-7e4d54d913af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4366ec-21b0-487b-9933-286a6482bd53",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2385a5-cef4-45dc-bcca-5856d3129a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b5b558-a910-47f2-84d2-c9d429f9eaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab848e10-a9c9-4eab-838a-e25ad94255b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a4d368-684d-436a-9cce-36e4f9dd8d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf07cdf-c321-46bc-bcfc-1da2724cbd8f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dd7849-b577-4e0b-bd5c-485ae7351706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed287d6-a852-44d4-84b8-d31b6f4db0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff9205-61d5-4ff2-b2e4-7d69fe4aff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "989302f7-0a9e-4c36-b315-68ff612ee479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2758a-aa20-40b6-ae39-7fa6e0206936",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95145fb-3832-4ffa-baf0-1ba0ec596dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808333ab-224e-44ba-8b43-4b4ef6658ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa37eb-5ad1-4200-b460-c1d6fea0e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbb605f-acf0-477b-9071-858f42646b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11da0e3b-a5bf-4cc2-8131-2db5b58fdf5f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad13c937-11bb-41a2-b890-2d10d3ff1a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7698ea2e-dd86-420b-8745-b868109be7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de276171-03e0-47c5-ae57-3e919934dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "57df2327-861f-4f90-9e42-42350a618fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b24bc-68e0-4d9d-b8cd-eb30dd39bffb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8eebf2-f10a-492d-882f-1c23ef621c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27829b6e-78d6-495f-ad40-a78f5f80214b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04fcf27-f40c-476a-90c4-cf22d297388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f568d42d-d0b9-4c6f-bf17-894147fc8c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd45274-b90f-4ffd-9f6e-e1b30e1d3f1b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8576f90c-924f-4686-aeeb-5d1c2c8962e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5f2c4e-6404-41f8-9ca5-0fb8736419e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c89e52-7845-4f86-bca1-460155f925ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ada581-3953-4a48-a8e0-68b8e8653349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d2ae6f-ed30-462f-a936-531839b1dafb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae33f208-a5b2-4ee4-8dbe-e0a54b695412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d0e595-b988-49b3-b794-21d6d2299f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d8b6f6-f918-4a94-a234-c2e6cbbc4a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04942306-17fb-4fba-b9be-40d975186f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8d23cc-49de-4edd-a2ef-6c7c12ab1d48",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ec4bfd-082e-415e-899a-d02be2953001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b25fc7-7d06-40b1-901e-f33e1cee8a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab1d754-6e6d-4ce3-a36c-40df3e477656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1cab8a-1c5f-44fc-9ce5-c7c4b0b9eafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96498b7c-a9e1-4657-a030-dfccba5cc6f1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd54239-c97e-4e55-88a6-b2031d2c569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58dc4a3-221e-4804-bb11-9b22b0754a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05249f83-4dab-482a-bf95-6fe49a1a0b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "486a7ed6-83ef-43d8-84c5-53d55015e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb7b25d-e5c0-4a58-a40f-ed2646bdf73a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96b801-68f0-47ae-860f-136b247bb35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fdbc95-5483-41f7-b21b-d68ffae6a6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d71a8-3b31-451c-aef2-14ee2c475df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "307f417d-82ae-48fd-9d6b-e7c9cbe3f3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1078333b-3ab1-420d-9ec5-ec8e378e086c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5e98b8-aff9-4f93-9959-2f4ffdfd695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6e45b8-b02e-492b-bdba-a104fbc6376b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a49212-2554-4a4e-aa26-0eee4a4ee598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a0212-6257-4768-9c42-2f45060f8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8224c3-33b7-4f9a-bdef-89a735e992d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a486a0b1-1abe-4dde-8325-e2fb6b14f722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e406acc-d803-4019-a547-84bde0509ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eff15e-4331-4a8c-b2dd-59552c59295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee598cf-37a8-4909-bff2-832879c49d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fcb01a-5fde-4d1c-a433-3c71b3705089",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d75aa5-15d9-45ec-868a-1211d8f97b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227e4678-2372-46f9-b459-d8a51c572779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c64888-ff9d-488d-805e-7525d6fe87da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9baaf86e-d69d-4c35-9f36-6d0a8d6130e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53a34a-f24a-4e5c-bed4-a082d7096859",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aea34ce-232f-4ae4-8746-edf830a8f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160afc33-9a53-42a0-ad49-75f40dddb496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e098926-1aaf-439c-b332-4382027ebae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2833c4b2-3be2-4cd8-843b-6baaf2e10bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6612404a-30ca-42c2-82b8-35462e7a564c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9cacdb-62be-4b12-8d41-d107e7b46549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b627d0-b12a-4bac-8601-4d6070936647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41b83f9-3230-4b38-b35b-0bce4c9bfa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cee7435-8873-4b22-939d-b4f7489a842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fcf8a4-a403-4a3a-9ee4-cb4930d30e6f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8a99f5-9ec0-4767-a72f-cb9ac2e90f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645c43fc-8cd9-4434-b101-7bda00956af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4320d1-88d5-4442-baa1-98f938451460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e10d26-c73a-4fb0-9a00-0ca6c80f52c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f749fd-8fd3-467c-b834-fe070516dfeb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b75ae56-1e7c-4eb5-92be-ec0da27fd0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df270f2-b464-4f8d-83e5-71913ac437a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3a58ce-2025-40c7-82f0-090535aaaf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06bab4f-22ce-46c8-aa99-1d66325ec7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a9dec7-9b49-4ae5-a8a7-48907a0220a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6d8b13-a4eb-4c96-afb5-b709f8bfa0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad98ede7-84f1-4168-847f-58983903c045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be25523c-fc3c-4bc9-a58d-b7d070fb559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7da74a7-bda9-4191-9c21-753f0a5d0539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7849199-5eae-4b10-9783-abb0d441d699",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e2f7f-3845-40cc-a513-34ac78910625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b6dac2-3855-4b07-9340-5bc8174f352b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c607764-94b3-4123-aeda-317691c655cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7adfd0-5a5f-408b-bc6d-edeb86a76377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb46bf-a346-42e4-9050-114216195f17",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf32d0-1632-4574-b20e-54700ec0efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131ab051-6377-49dc-9704-117b50c81ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb79c64-7153-4375-afb2-7be0018e603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9ee62f-6036-483e-adbe-fbb3a234b4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2a811d-ed37-4a4b-8609-e8ba774cb5e6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf37dc-117f-4c06-9d8d-9e5388d094f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd134e4-3824-4025-9858-74a508357a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d220487e-0b8a-4464-bd14-8bad25eb037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24e5cbb-f9cf-4e35-9fe6-93835418861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead95f44-3a24-4e8e-bdba-fee874cf358d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd541a35-c4a6-4b3c-83b1-4430a02f03c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63102fe2-80d1-4f4c-9c3e-7c015a8cf151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb94561-0379-44cd-b87b-0813e4799393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7934fb-e702-4bd1-8b87-4546ff5c1110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af6d34e-500d-4353-984d-db134e0af068",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad4894-38bb-49ca-8c5b-58dd2e0957c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c72e9f2-516f-4a97-8840-b532c4ef835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22c2411-6e90-4c9a-8f61-1ad2dfe1ce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3592dc-93d5-48b8-9e7e-7cb27926f13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d826cf83-5ecd-4f7a-9c07-d2fff1d429cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e394f6a1-be3b-4caf-93f0-e727803a7f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f012bb03-21ce-42ab-b5a3-ad62a5d24d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7687c6-2592-41c7-afd1-74ccd9c8d998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3080d47f-2be8-47ac-a77c-1691eb209804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e972632-48db-4229-90bd-b4ba6067ef08",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6534b-88db-485a-b065-12417cc11dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92df9a2-43d8-4d80-8dd4-0069d4cff96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fbda3f-058a-4dcf-b1cd-1d591afb887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "267124d2-7860-4201-aabc-5b0b0d791b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4b95b-ffaf-41ed-9595-547350f08a02",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d63896-47f2-4f6c-a959-6c628138ff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cbdb67-a0ed-499b-9e12-7fc02b083419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cd4ba2-3699-4370-81d6-70da39d51f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8adaff4-1048-4b3a-a9a9-ad8c95ac5ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c9ab8-bf03-4f64-b453-b388ca9f99df",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e895d8d4-64bb-470e-9e4b-e0b3e5d11555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b424f326-2cca-4aac-9ee9-ab7717f423bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f049f9-d980-484a-9890-3560e0ac91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b606bbf-6237-44fd-8948-d042819a790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1095dccb-1016-4f96-ba15-76b4e4649688",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14de5572-760d-447c-8fb1-6e34bda31e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea99f43-740c-4790-bd48-0e284e44eda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d04aa4c-9c47-41f1-9578-db9cbd48a939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb98f82-a2ab-4fd6-84cf-a73ca0c27c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c5579-ef1a-4fff-afa4-d692a1d5661a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5610823-048e-4db3-af82-05db8f84d751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87784b8-b629-4cd2-8cc6-5a3ee26696a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09b7c42-ed22-482d-8e56-fc2591d14243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81aa802f-5bf2-4ab4-8894-cb7f649dc3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0917d35a-47b9-42d9-9689-eb0444117b6f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb1e09-9f74-4056-a98d-1f66201ae12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c290c481-b2f2-4955-b683-bb7c694e9aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404bd60d-6120-415e-844b-38314067b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f35006c-bcc8-4bce-8b3a-45ee370b2419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46666222-61df-4770-9f30-16ebfc3305d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63163281-196b-49a4-a5c8-17db6310266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63559284-feaf-419f-ad28-c0020362699b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b63b9be-5ee2-486a-a0a2-15866c0d1513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c83fb4b-c084-4a86-8177-c89f6d9d05b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef33ed-a9c8-4a35-9723-c3e01bd12035",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2b0652-369d-41db-a4ea-4a064ba82d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cb2637-a51c-4c31-95a8-f05f17f3182d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed76e7fc-9b69-4df6-ba43-1b9394dde3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f258aa9d-4690-4392-9e75-6d71ace5b162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b43b7-bbe4-441d-95ff-bd204bc8c2f2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403aca2-0d13-4683-a929-af898648d53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dca281-db07-428e-9b49-43c1abf498a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3038f1d8-a2d8-4e76-a2e8-7bdca2978f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0373e07d-b07c-45fa-89e8-3d663c0e0800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f59f7f7-106f-40bc-aba4-bbfd70d9dca7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a623af6-d6a5-40bd-9347-9ca724e4a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51b8954-0dfa-4717-9409-36621a2e93b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66986f0-31b9-4c6f-af59-91e3e15adb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c517e206-9867-46d8-85ab-7c5920317d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f6647-0534-4b8a-876e-a76aaa5da3fe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feaaaef-506b-4b39-bf70-a8874f72154d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2491d7-7e37-460e-aa99-07e1c1ba404e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc92f6e-42e1-45a5-b501-e5c6e3ca44e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7cd1b1-5316-46da-a38f-6fdd4dcc83ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8833991-7bbb-4d75-942e-a80cac47429c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e3498-4c3f-4b80-bc14-73ddde504a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5ced9-0a56-4b9c-b03c-0ef52a3bcf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62e3144-26aa-449d-a2e4-9443f57956eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4e32d7-769d-4be6-8d8d-d6c3927d077e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08864165-3bff-4510-9a20-8adaf82052ba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b47a1a2-1456-4366-8fca-d15d06d9e324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d533feab-717c-4706-bd02-8681c90bb98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc79070-8ea2-44ec-877b-f588fe67f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe36a5a-00f4-4efd-b81e-5632ea9bab32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9d7f0c-9c7f-4c5f-a9ed-6f56f41c9857",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce924af-4b07-4764-ad0d-2bb482377724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07e0ecb-260d-462c-8b31-0bee0363e9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae86c7a0-58d7-4573-a3d1-e3de618ffcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1278e3e-9950-41a0-ae5e-58cb44c44bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5325c0-c666-401d-b884-4f86a252ce1c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dddbf23-ed7a-4b6e-a80d-8a3ecd82b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f92145-b87e-4663-99b5-b675a77e35a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3827c3a5-4415-4602-b1db-b1507eb4cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb4849d-26b3-4a2f-9a11-e7f3e9d93f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d1700e-5881-40a6-860a-eead76ca6950",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46bb300-98aa-4a23-8f64-28fcd02e2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2842acb6-be0c-4370-a90b-dcba30073115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aded9e-eb5c-4ac3-b52e-2f798c4cfc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d465ba0b-b946-40b5-86ed-749e34399608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2db2df-3f61-4c3a-9fc2-61f791bff389",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c0c92-5dd2-49f8-b702-c020b99c708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a4f979-aa0a-4117-8f57-ae9274788e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26da52bc-09c6-414b-8d41-0716e905314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99680a1a-5231-4a52-b2d4-1abacd7885e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5259c4-cb60-40d7-9522-50f8efd160d8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b3bd12-b632-4dbe-b2a2-780bbbc5054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bd9503-a9c2-4f69-8375-4231442140e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8481deec-0dd5-4126-8c0a-7d787c1bf307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dcff22-9a2e-4559-80d3-9435e4520014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b32a97-0c73-4309-856c-c260c66d41e9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d732322c-fbad-4090-8535-e4e0b628c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069419f7-6bc8-4c7c-9490-106de66f6628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64012a57-3504-4f2e-a76a-94742a05d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d9841e-4c85-47a5-a273-c35f181ccac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9fa8df-4579-48f9-b368-9b606a68b9a1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b75aa9-061d-4d23-ab79-806fe59ac6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc5cea5-c095-4bff-b6e9-944b962ecc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713fdcb4-89e4-4f21-b523-6e79911f297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1d9080-c765-4d57-a7af-0eab8bdebaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3af893-6592-4a5b-9541-df4e86d72477",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bed4b3-0c8c-4ff4-8bd7-21b29b85529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0d8317c-0476-49c5-9782-a48aeb4f7fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351eb37c-4558-481b-b288-f004e7bb945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a35153-22fa-485c-93dd-31111c8ff11a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b77c52dc-939a-417c-9e93-17285745cd2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e72690a2-4cb3-464f-9afe-0e3a373c50af",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8431db02-c29f-4792-8923-c2094589cf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50847372-e582-423d-8cc8-11267c29124e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8494576-8a96-4bd4-bef2-36728305a5e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba39437-6436-441b-8205-c8ce7af666b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3ca736f-90d5-4dd9-a94d-4c408b7716d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a175d8-3950-4269-9dcb-344d15323738"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9194592-f736-4876-b86a-90ce982dcde5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5615ce0a-df8f-4339-9fe1-9326d96fede6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa5c5b2c-0347-4ff6-8dfc-b6ea3b22e55e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9468737e-bcfe-48f7-b77f-4415c7e12cff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5731067e-4c4c-4e66-b2cd-4753345940d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7384c38-a4f6-44d6-ac48-37b1596f4551"
                }
              }
            ]
          },
          {
            "id": "6a2a10fc-36ba-4b69-a7e9-f306130610c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec23c5d1-735c-4b69-82fa-5aebf2b3660d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "10016626-c292-4244-9801-3383211a79cd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9547122-988e-4bd4-b108-6340c4db4f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c981b780-2c69-4d38-820f-f300802e3d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668d098-5782-4671-9d78-d01632bf5f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6efd645-df6c-440b-849f-1bf6871991d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd4aa7b2-6efc-420e-9bfb-27603ecfa9c1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65af42de-efc2-4307-9a23-cf4ef0cc3780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69265069-68bf-44d4-9101-8ed05639d181"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afeb430d-18e6-45af-8e48-af0c3d58534b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83952b8b-42a9-4a63-8e1a-97ee9ab14f9a"
                    }
                  }
                ]
              },
              {
                "id": "863f9f97-82ea-49d0-b6e2-eb87a8702a30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdd7e297-a017-433e-a40f-643bdd5c2b06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0865828-9435-4ae5-8c77-052593085718"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddf58d7-221b-497a-90d8-d6b38de0c70c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0540aa46-1f82-4e74-9eae-5bfcbb436c5e"
                    }
                  }
                ]
              },
              {
                "id": "c52dbb9f-00a4-4519-862b-7a99404930ff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c50b106-d3c3-4d1b-8b35-33759fba5c3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ebb2264-3ea0-45e1-80c6-34c4207fd668"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbf34257-9a52-458a-9cad-8d353dd193eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca9f611b-3b67-4199-bb99-3ad830270fd2"
                    }
                  }
                ]
              },
              {
                "id": "4d63b62c-ed76-4d49-b01f-f968240a31a9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb25106f-bdbb-4cd8-beb7-1c0e0e9094d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c37c1fe-ce07-4006-9268-7af805862e4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca4e5f97-84bb-4d25-af55-fa877c38eeca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "01950514-a2d1-474d-9eba-2c2ce0897d8b"
                    }
                  }
                ]
              },
              {
                "id": "c803ea6e-e9ef-4422-b1c5-6eb0d5ad5471",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bead2738-9409-454b-b183-5dcf860a77d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f906d43c-e731-40fa-9f1e-254f562bace5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e55a9572-f6ba-4ef3-93f5-bcf4cbd69087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3775b94f-ec53-4cb0-a8f9-6a5807264eba"
                    }
                  }
                ]
              },
              {
                "id": "cbb0a892-ae45-42f0-bba2-989a24a17de0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81492653-5b7e-42a0-a9f9-441226752195",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2c9ca27-f007-4c23-932d-59f2e28f8a61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d4c9698-45da-46c9-a7d2-171db0e991b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2d38ab4-87b9-40dc-8928-3ea91f9b4ee6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44fc50f4-a94a-4b14-b3fb-07652ea8026c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f51feea-09de-4dcf-9c54-bdb293c658c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9b5be62-c2cc-459c-912b-b8d6125f4c98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39f29c4d-58be-4afb-b72a-f076386d9884"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a26328a8-2792-4a49-86fe-a3c46c0e0005",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0d287791-cd6d-49e4-b705-2d47876c9f86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0271baa-0935-48e9-badb-8b9c1eccbd85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32ce4c83-d28e-4ca7-9f2b-c470591f1fe3"
            }
          }
        ]
      },
      {
        "id": "e621d800-1e18-497e-aca5-0c7336426f76",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7687ae07-7428-43f4-b4cd-749c11a5d589",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32c9aa2b-9daf-4e57-88b2-b3d42b776fbf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6edc16c-ac8c-4744-ad2f-30217b9b6861",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb96fda1-69a7-4e4f-b8b2-5fd728947c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68558928-f100-4131-8fec-64910e7b5196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce33c1a4-eb57-40a5-97df-e519d9b0a11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c144d81-bb2b-4009-a7f0-1855747f5417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7821d2a1-4c84-49f4-8cf2-b760df91d879",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3153d8-476f-41b8-ae35-77c6dc4aef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0c511e-a890-46db-87aa-3ae132e191e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc7d27b-9f48-4afa-8ef3-020fd9937e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bb7046-857d-470c-9d67-db93e406851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fefffd-990f-40c4-8b3a-425f70076250",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98474252-596b-45e2-9840-47e9922a5a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0444da36-9f47-439d-9f3f-f346ef5fc40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000bc311-25be-4199-9436-e2f16d2b23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbdc6e3-56f6-492b-81bf-7082b45d119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd53df8-a93e-4124-b0d3-c30b3f3ca2f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06afdb2-c8b2-4c6a-be56-3e7529b4d822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8ec6f6-9028-4fb7-ad15-058018886c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d21f830-0807-4cc7-a25b-a6134365e096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "839bf7f5-8752-416c-bffe-0189707f70b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf88679-f717-49d7-a944-ee344027e297",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829b53f-83bf-4e09-8043-3ae6646523b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef3d04f-baaa-4f06-a066-c749132291a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b11ba29-cdbf-4422-b458-58d304f5558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed27a670-2df6-4c05-af50-7e633ff6e55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5db6530-5ad6-41b5-ad6c-9d3bc5b2e2fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c87195-7534-44d5-a722-38498ee9a758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1981a5ae-41bb-4607-b336-61a9a553db0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ff8f03-c3b5-48e8-b5b3-a0269687e409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "503f74e6-9d11-403f-a6d9-6fd2a72d3837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6585a803-fdc3-4a91-a425-11d743def0f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f69aa3-d12c-434a-af28-41000c8e5212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7089fca6-774f-46aa-aa41-760bcd22cdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3a4f13-c51f-4ad6-9a8c-0ccdd0d34632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ed88fc-d00b-409c-9eea-61e630f842ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab740b3-23dd-4da7-9435-845a9bd141fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f73c5c-2595-463d-a93e-d034c6361b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d549e3-6ce3-496f-9c1a-3dc8b86874a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294cb1ef-20bf-4bb9-9e39-0fbcecc756ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd75bd24-314e-4d80-a85f-1873df8322e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b8d19-41a1-4f1c-8230-8f8a71f205a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04159ce0-d7de-4555-b7ba-e56838860092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ed6fa2-770b-4b2c-b304-e909af553ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c8d8ba-d97a-4119-adae-1b141468f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8af2e3-4804-4fab-ba41-144df0b45f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c811444e-c97f-4686-94c7-d651bd4dbdda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06f850c-6baf-4236-89bf-8cf844f02c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f70b30-5573-4d80-8e01-16f6aca45de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5673fc42-c31b-4637-911c-dbd108ad0193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c22253-61d4-48bb-a6ae-0ce0020e9ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d11f68-fd09-41f9-ad5a-84d6241131d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2667e35a-d46b-4935-a4d7-53880256aa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1b2827-75b6-4512-a929-41ea5e7f3d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121a2d65-fb5b-4f58-b4f4-d0cb97ef9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d213afbc-bc64-4634-99be-fb04718ba190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f10d7-afb7-453a-b711-b86859df2ec3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc6681-dac2-48d4-8685-562162ac2ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bf6877-a29b-42d7-8a49-2def30ac96e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b0700e-c746-42b1-8d44-b45750b153a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a91252a-2920-4d51-ae34-266286bd7e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596aec39-bd52-4309-8fe5-da161bbf55d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfcd433-a6cd-4c92-b4d8-2221f025eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630d397d-d2c3-4f6a-98e0-cbfbde144a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2841c7b6-7f21-4c06-bc0c-554a5a24747b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5e0e97-faab-4e45-89d2-3b318425babb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a922d2c-01b4-4119-b05c-41de1d4b59eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7aaf2-48c1-4c5e-bd83-328fa1369e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b796a0-ee5e-4af5-b752-a2d8c97addb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfefa21-3baa-413d-bf7e-15aaf9c93067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d0d425-37b9-4c56-a321-f709987ba377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0873751-e0d5-49e2-b039-b1d32695b535",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabf4c58-988c-45fd-92e0-02abedb44ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ba541c-6dba-4ddc-988d-0fb065c445ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397ac9b4-05a1-482e-8b46-8562396e116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8431b5e7-5245-4dc1-b42e-3841eb5892fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28de779-7fb1-4e6c-aa93-67b77783c9b7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c79ed9-2847-4d5a-ae47-948a58f9347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a1b9f5-cc07-4146-80de-10e4d72661b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b455da-1c7d-456d-9e87-c45b1f1a7821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d5b051-723a-4e86-b99b-58390d454a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbce6aa-919b-4e45-928a-f8ca2a10ee51",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b7883-c02f-4347-9feb-cf7038c06550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171b8ea6-72bd-4ac0-82a6-4d2bc2a5b67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5a9826-fcb0-4527-a087-1cd0377f7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f03ba81-b8b9-496e-9880-2d4272162842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158675d5-dbbb-440f-94f6-9e0be6e7e841",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54338574-314e-4cb6-945a-fac155a6c0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460aa084-28fd-4481-8a41-88d306c98d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcafc419-0878-4a0c-8971-4059b0b650ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4272e0-c4bd-4379-9425-e71c9e65d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a88c0e-aab6-496c-a3e1-0ac1c8abf2ba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acddab3-4c9a-4e02-8b16-e2b2a37e1809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87ba7d0-185e-406d-babc-5bc81d32e58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d40a1a6-ea2c-475f-bfb6-045fe7ee3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e14628-3df9-4fea-82a5-1174c82fdf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328d4d8-0728-4cb5-824c-43fa10ff4ba7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d421d041-fd9d-4af4-bb01-b7ec8002e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337a3074-9351-4269-8313-641ecf9aabfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e5656a-db70-49eb-9fe4-86cde75b70f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f89853-cd1a-48f9-9b7d-ec581956aef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c789c105-e80c-44f2-9b7f-be63e64e2753",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40835ba4-b4ec-41b0-9823-5be9edbfc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ef99cf-4f3a-4974-9038-28acb385586a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a2ac0-d9df-4e05-91cd-bf17287ae455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a63958c-74b2-409b-a796-7e9859ac4f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff9393-57ef-4ccc-b91c-4f342534cef2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af295d78-6157-48ae-a530-bd5e9e313b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6bb2b8-800d-466f-87bd-053075b35092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1fc78d-14a6-469b-af14-1bd1198bc042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0621aa6-5647-4471-b2ef-49c37ba6f446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2c1f69-4cb2-44e2-bfc3-163666377f32",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c032f-ecbf-4484-b721-0bc2fe20af47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b730f0a-4a89-4a04-9cc7-859f198735df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8075745-ad27-4e36-a3c3-cb532b80d5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10bd3626-0766-4678-9bd3-c92b2144498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95bf673-f263-4d3d-83c2-a87ed7ed2519",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739fb294-1400-4ed4-a89e-45a4b5f9d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5bb5e8-48f5-445d-b2e4-aeb15037526f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0cc965-b67f-4cde-9367-e44477fd0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e386c06-cb7a-44f9-ae69-613271c9062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3e0d4-c7d3-4e7d-8528-c443adfda2f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3780d93f-1b3b-420f-8021-34b4c4a60a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3a22ae-1282-42cf-aca1-a52aa37db3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cd124a-d754-4c8c-aa53-b23ed0834329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da075b17-b494-456d-acdc-a85571cb794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ad7f8-3999-4c01-857e-b2c7031d9db9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d91a06-a2a8-4fd7-b201-e629f2abadf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783123e0-53d0-49b3-ac56-a9e7f3becf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8d687-5823-433e-8162-a94489788f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46697d9-e98e-4f75-b649-8bfbd067e249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf265abc-3b22-4aa4-be30-22d53c6c8baa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6481ff1-e976-4314-a69e-fb8ddb0bf95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797376a2-4951-46fe-8b1a-9045f959af76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f70f36f-8eee-4422-abc4-cedaab5cd482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d152ca-f13e-484d-ad77-2bef342ab238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8659bc0-efdd-4cc0-bc54-311911ba25b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115e24d1-adce-4703-98f8-e334c0bf216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c86b7c-34c2-496a-b14a-057bdd790605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557e9536-8c4e-471f-bd16-f2d789831ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce05bb38-ab41-4339-b4b9-ed63399fa00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e591dfc-cc04-41c2-9093-4700d6f156ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2812b67b-4c60-4149-ad63-1a59c171561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d572b78e-d206-45db-b9ce-1ab156f6a19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586fa332-2bab-452b-aafc-a7047ab5001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5768c22e-b775-4830-83d9-fe064d875e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83205547-3a72-4f4a-8c12-a540607b8fa3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a115969-88f1-4e65-89cd-af4c5f68d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea7e3cb-d620-4d84-90b5-464671c0c7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061d460f-161f-4e10-b4a8-6709eb756d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5010dd4e-65b6-4273-a856-9e10aa6c04c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b84009-9f8f-43ce-ab8c-2c6b23e4f8a3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc75b696-4b2a-44e2-96d8-04d95272fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016ed932-61e9-48ae-8425-3507dae78e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a57b46-a654-4433-ba34-09515909ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b61f5f2-2a33-41e9-8c77-86cb0936ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d0b93f-3b93-40d1-8631-f1bfac9598e8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ae1927-e697-465a-b954-6e9e0efd47d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce5fed1-14c4-4e30-a42f-136a77cbfcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665c1c21-0796-4fe3-8ce5-12a0b4f5d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc1070f-980e-4d83-ba32-58ade2e6f4df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bbc862a-412d-4346-8a79-695aa1d129d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2017a0b3-9f22-42db-85d7-24c5922c8b60",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0907830-2472-4e7c-879c-808fb73bbf49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "713d91e0-fc44-4c22-a476-306e0c598664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc47875b-d439-442e-acf1-ff1dad1afee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cde5390c-9245-42d0-befd-e22f28e53c0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e97c9183-96f4-48eb-9c24-37bb2d249e63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe2cf50-8151-43ca-9181-964549c7cd7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9f054d4-6446-45da-bc73-2210be71a758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76ac0d00-6b01-4f63-9c12-0316ff7fef3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19a152f0-7ea5-4d66-b353-73b19c6e26de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c31de12-8ca7-44a7-afa2-b5525d17a117"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59df583f-803d-493a-858c-84ed4ed181f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24af1193-6aeb-47f4-be20-18c4e520c757"
            }
          }
        ]
      },
      {
        "id": "43a44286-6ea8-4517-8c10-6f23b740425e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a978e862-fbbb-49b8-ae20-9cfc3eba4fe7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5eed801e-93bb-4047-9b17-422b5db5722a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ed1dca4-a09d-4180-8c7e-48f76a8a43c2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc1f2f-fd4d-4d76-9994-6d8391540383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c74cbbe-e5e0-44dd-856f-7ef4a8e7cd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daddae1-c635-4c38-b733-b7ad77336158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a1b6dc-c290-4934-90d8-1da65e698a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0602c5fa-aab1-49c9-b5b2-edd1e83ae752",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a821dd-dda0-47e8-8aa8-c8fde3db2093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5aa443-01d8-45fd-81e6-c46df14fbece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43dfb1c-fab2-4ad9-9662-54f20579657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f3085e-c4c3-4119-9f98-3b535fbba83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe92720-4be6-4ee7-8beb-41e2277286f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750e87b7-ccfa-4431-b57c-c8463c521aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d92965-eb1d-458b-9a7d-a38658334ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd274bd-3474-4122-81e1-b84aba5d1992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56954c6-f059-4131-9361-f498a4706f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bc1b00-7aea-4e72-a96c-b375a2284501",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef10a08-2b89-4a6e-85cd-e54172880f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f4e099-86a7-4046-b59a-9da349bfad7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83b88b4-0483-4235-a2f0-db38191e4740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b69dda7a-2952-4b58-9984-cfa9526caf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c2b7c-0650-4956-a04d-89005178acb3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371be7b4-bb02-47ce-bff4-af5ac7218949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8122995f-7227-492d-9ce6-c781a81737d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0504364d-d1d5-40f3-b3d3-1ca0974e9be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9582790b-3551-407e-a813-254284bb9036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b6238-73c6-407e-a4a0-bfa0eadf959d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05caa3e-f92d-4f1d-923c-c0fb689374d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89be304a-cdb4-4081-a7bb-78239dd01052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c31db-9f71-4f2e-b102-ae7b20a2fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1338f9cd-d818-45e0-a838-39df86f8540f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49b590-fdab-481e-8eea-e8fea3fb0a70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53862f7c-23c5-43de-88f8-f1f471f59261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7591c0a6-8b70-45a7-8f47-7c786ef35cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3107709d-4c3b-41b8-baa2-7def251486fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e76d279-0805-486d-a805-2521b3013fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bfce30-8256-4199-8386-b633f9d384c4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a2aec7-d3ae-44b8-974e-520ffce15b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646eb241-b2b5-4c78-9e48-a3f936e90adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f4029d-67d7-4053-ad68-4ce74eea4405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a97190-fc4a-49db-87c9-377ff98697a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfe30f4-bca3-4b9c-a710-864510a22f24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125002e0-b102-4359-a2c1-d1546a3a901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c6c5f2-3e91-4762-8da8-15e5c3afa127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d918048e-6cc2-4f17-9706-84d54b5cc94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1547c045-1d55-4173-b334-8cc03a74bf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f301d684-b6cb-4cbf-948d-f73befbb3449",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703058fb-7878-46bc-8170-18df708f3e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d363c27-e591-45d0-b4a3-66790738b98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a596dc6-8690-4d9d-887e-28460aec32e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec32874-c70d-4539-8c11-ecb90ecc7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e481e-6c95-4c6f-8f08-7ae8a2f98585",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c3d0e1-791e-4719-8f33-a5a9f00bc685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fb0ed2-aad9-4f0f-8e33-efaa93125248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99477438-4944-4b55-be9f-5685eef8ba04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "083cd2dd-31b4-4c28-8a9b-eb73ab2ffe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a2d069-e654-406f-83e6-6cda471ec152",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d90e0d-a03e-4d6e-8b8a-6f0963b9511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b2f05-a95f-48a5-8ce0-c569dd5f6542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f539f69-0eb0-426e-b223-f02fc2bbc1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e82021ae-338c-474b-af32-d06965911dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf4e362-4cb4-4992-8274-551b29925b85",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c10568-1899-477c-be84-b51119d36e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92baa4e5-1289-4def-848f-22a7b0cef6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6f74e3-3725-4b75-87d2-f659bc54efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fecc54b0-98b2-4cff-a447-871bd745109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbd062a-ddc1-4cd7-b9c4-09cdac000263",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf58ad-fb22-4d0e-8dd4-b87a06ccc69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd84d3ed-1518-494f-8962-e446383fbb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c43079-5d8d-497c-b737-a66888e7a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "903dbdc5-108b-4212-b157-6ba7b458937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857aaec8-45e7-4cfd-9063-e42d73694e4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f96953-65ed-4412-8bb0-efff01aa392b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d85ffb-be12-4b9e-8134-189a488d44c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a6da8f-cfef-4e3d-892f-757321204b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb5b0a8-6a1c-4de3-ac4c-292866614ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8377bb3-18d8-449f-820e-7a1d9b5fb75f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565b5f2-ec76-4b64-bc32-ff0d4f5ec3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b26bb36-357f-4c51-bb4e-7311b402157e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed03b2f5-ff4f-42c3-877b-a2cfbb3173e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc5aa94-08da-4c09-9484-93fe7e453b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90d25ba-fc23-4327-b693-c9ebd28ad20b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3df41c1-09a7-48f5-9060-e16082951823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795332c2-1247-4f58-bc62-de37e52e3b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659cd4e8-91df-4f2f-b743-f99eb83da1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a69e85-7469-45af-904e-e20fe36bd721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816f76d5-ab6b-4ed6-96d7-db28973bbdb2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed435f-15d4-4ec7-807f-0290cdbaef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7b1431-17d0-48b7-b0eb-8ce664c3aae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b089f0-a57d-4f4c-b650-1140e58be802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5518c6f9-57d5-4660-a6b2-12f69e1a457f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf08c22-67f0-4297-9aef-2d1afaedf879",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc6576b-450b-4066-8534-4ffe1b1f5197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1b1075-7dca-4553-8490-e9a246c1216e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ebb1a6-7113-4210-8349-d47d270cd722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c132e6-478f-4c2a-8060-dc7efd49c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc5f2e4-16f0-47c3-9784-77e8ad7e274b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d2b6f3-76aa-491c-83b5-839157cabc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871c6e05-eee6-4ace-a64e-b97d7e952977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232cbae1-13c1-4182-b27c-dc497cf1ca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d839666-7aa5-4657-8c33-5b7874fadc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad5584f-41f8-4f9f-b474-ebccf7a7ceec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ea0ffb-5e4c-4acc-b03a-ef4839f40f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a885c1-0426-439a-9b4c-f92947687540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd98b911-ff91-425a-80a3-47ff638034b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6208aae6-4314-443f-aec6-625fd4199f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f677183d-6f70-4d7c-b3d1-f30e17c8937d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e89180e-3114-4e3f-9b58-fb00dbacbd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5513305d-5559-4d83-a644-ddd0988b26f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4c2e13-711a-4dd1-81bd-7bce5622112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23712ab-855e-4566-8dc7-d9b90f3dbd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04b69f-a1bb-4989-ad0b-1ed127cc72c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf802b7-e188-41b2-b1be-aeb17142703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ba018c-e38b-4c0f-b5e4-67cb8c18fca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31138379-c2ce-4dab-8247-2bfc44bc18bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deee8641-4b9e-445c-ba56-d36feb139c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1dd85-b767-4721-b42d-dec6c1dc5eac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd29802a-c28c-496b-a07e-5a34c061e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc000102-8cd9-4cb6-88e9-aa015c508c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e9c47-8125-4935-95a2-00ab3e12eed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ee2db4-4bd2-41f9-9772-ef6dd2bb5267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62161ca-fa70-41a9-ae11-13cd9cbd531a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49ad6a-5f41-4812-af46-81afdd203bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905b79f3-69c8-4776-9daa-b0e23a3b5934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31b5a5e-93fd-41f9-a7f9-cb0fc0fc492f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "248c8ad4-4c98-4b45-aaa8-62bc6354c45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4562d505-759b-48b4-bd08-b314ce667fc0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c24d75e-2762-4636-9543-3772a64af356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c55dfb-d61d-49b2-ad34-065f85659850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78283cf6-9ffa-4442-837c-b46ac4b4be6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8a49ba-0921-4ca2-8619-97153be797df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebad47a9-7b1d-40eb-a3c8-00d1af4308a0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4875c5-d7a3-44c8-b9d3-fd312f21d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c626d4-a1aa-4b74-ad19-86a6be8d83f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03724ae4-68bc-4111-ae14-b5495d7af00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "705f5355-404b-40a2-8b7b-964a26a970cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7e0a9a-4d9f-4723-84ec-52b3dd3c4908",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed272d-b266-487a-912e-c3587bd6e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e86181c-8875-4a1d-abd1-f18b1c78fa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e80734-bed2-469e-9164-4645ec5c5d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc8cc5-20db-42a5-9e66-e593259e52fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5496eeda-acd9-422c-85e7-77ac8cf768cc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc10137-cb60-4613-82f0-76f325554521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668c13f3-8641-4c41-a124-4283e5883440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fa7273-97e2-42f6-83e2-73aa10d711b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3486d46-7127-4f5b-81e4-f1145190c43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f622a47-ed68-4ccf-bf24-9740290017ce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdbc867-aa53-49a3-929c-58bd86edf713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586b5c9f-1e4d-4a45-9886-d9c165de3013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bae24c-d12b-45b3-b920-73d7dffc650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a678678c-ad40-4273-8c2a-3b7b1208cbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4df0c4-6426-4f6c-9ae7-7999cc252c10",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a7592-9745-48a6-ae2b-dfdeec15d641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5885e6a-0a21-4a11-9bd7-34b3b4b6f17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea2d0a2-d8e9-4169-9748-a8cefe46fe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "005cc81b-7e25-4ce0-91ce-60b1699eea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98e1352-03d8-4e2c-9b5c-95ef6125ab04",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87547e23-134a-4ead-a87b-c8ee1596708e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e4d37c-919d-493a-865f-e7abcd2fa520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa71bb-003c-4c1a-ab3f-8ed18d07b5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3e0535-8824-4cc3-9890-4160a8c02e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7086bc6e-2aa2-4069-8277-6e9ccffbfb72",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cde89e-5f91-4402-8150-9dd1938db16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597eefb3-6d0d-409d-aa7a-f6cb54944736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf0ad82-28b4-4e48-88ae-9ded123d875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a496d8c3-64e5-4ed4-9f33-10f4ff4a2e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc123e3-95a6-4ec1-93ec-2bfe5babb549",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce7bd29-92c7-4ddf-b0d0-8052ed5ae9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4a6c92-f6fc-4a21-90ad-6e7b38c519da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e489c-3688-4c62-bf6c-94e25869408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0f113f-f1ea-4e7a-8c48-f3007adf64d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf9450a-4875-46c0-8552-b908f64b7327",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ecc4e5-f61d-49cf-b0e0-173db8cc5c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8d9d84-4aa6-4319-8bef-1a68802e9b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afe443e-c865-4dd1-96f4-4eea1e7c1ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ccfadb-8dd3-44eb-9788-32134f7432e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089fdec-1e8c-4e7a-bc7d-fb856fc1ab70",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f887637-9a34-4957-b035-76e600268822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fdaa78-24aa-4998-89bb-a93b97c148d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8854f40c-7adf-4364-8dd8-66a8c49d1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2180ac70-c8a8-4cc8-946a-17fb217e7714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade339f-28eb-4d48-b298-0e36f004426f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4dc516-a4b4-469f-8537-bdcaa2b94a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2a840a-13b9-4eab-b7f2-d202fe86be94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23acc5b5-6ca8-401e-807c-13aad715ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b47fe42-047d-4357-9619-9084d90b1652"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2950cb9b-0150-498f-9254-4033f6cd07e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da940c6c-70a7-4ac7-9587-6b1bfe83072e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b675c1f-e0f1-4662-9f8c-5cf8f8f5fd44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8edce55-b8c8-4450-b931-4b2217ac3e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28538fcb-0544-4d07-99f7-f521572d7d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1789d6a-1f42-4de5-ae5e-8f15f2a52096"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee462278-f423-43b1-b6b1-89d77fb95612",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da321af2-fd61-4854-903e-2ede56c7a1f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9380a53c-d5e0-44cf-a4d0-ab6d441c60e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b971761c-e34c-4edd-a687-8072a30420bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57a90df9-101d-4f91-952d-4c0fc8431056",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c783b01c-48b1-497c-9cc8-40938c655921"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8bb204c-e7dc-453a-8b08-ff92f088964d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e3acef1-9e6a-43e9-a597-1f8a6823ec69"
            }
          }
        ]
      },
      {
        "id": "43e3d0e3-e86b-45ca-b392-f5cc5ecd405f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0122e337-41c1-466f-b73c-be411f79457b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef232369-9fec-457e-ac79-0a2ca59cefcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65a94397-5409-402a-a4a7-066dc2c9a105",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27de7e6e-9fb3-4870-a4f0-bd5d5a7c88fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3732c8ae-ba7f-4d67-8b5c-d52efd03b5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd64c55-56d6-490e-93d2-37b02c50f507",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536c6fa5-75a3-480d-b035-d7698f6e4157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ebe795-8d90-4a95-974d-679f7794e43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcd2322-e382-47d6-b845-43fb49eadf0a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f6c41-ea1a-4ea3-a638-40ddbcdad968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba360b99-447c-435f-a4ce-1de91f780233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7b07c7-3cfe-4a5f-98c5-ca41538e85b6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d521bed-d822-4cfe-8fe5-25e6e67990fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a32e413-a55f-4d8c-a76a-49e90a7749e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13594a6-bd12-4eb3-a44d-142dd9275a87",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7827ecbb-d706-4a30-8e3d-bc8c1a2bd52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8564e6-178f-48d8-bb9e-8915340d4a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2199510a-68b1-4576-aad6-509d055ff90b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473e92c9-9f22-4605-8647-4fbdbfab84df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb36ce5-99aa-41a8-bfd8-b3a3c878c43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba4c1b8-a504-4831-908b-950dc51f8e9e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a9499b-6110-4bf2-8db1-7f0f4363ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afcea04-0c23-4bbf-9160-f7ccd6c3a520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8662f04-18f8-46ee-8c18-06571b648263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d39f47f-7995-4e2d-a82c-8bb1dd61a069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66005359-1f50-4ba1-84a3-28c2aeeafb71",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef58c3b3-876c-432f-b2a5-24132a5debd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab3ae29-60fd-4c82-9c71-37911447879c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc29b83-5b05-43c6-b565-45ded9c2adf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773afd6d-f289-4dd7-a690-02378ef9fed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0ca3a6-bfa1-4747-b8c6-d56497836462",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d1e538-d1da-406b-b49a-e284e3863644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78634bae-3e86-4ea6-9c5e-e5215cc75565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004724d9-18d1-4c56-9c76-74a45660d205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d6689e-66fd-4926-8bf9-d24bb791076e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92857748-9d3d-4fcf-b58a-0b867ba7cb64",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664bcc42-8a26-4c94-af03-774bd27b38d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e203999f-120e-499f-b277-830fab5377e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2039175-7bec-446d-baa4-24dec7c35537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe5deb2-65ad-4e6d-b6af-6adc0e6111b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e62cb-e8dc-4d72-8466-b507f7f83add",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf1bc5-f1da-4f87-a355-1ac53f9a71d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59ae774-244d-4272-a993-909cdaf4ea7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632cdfeb-c977-493f-a5c0-3ee1df2457ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad19c3fa-e985-4326-aa88-dda78dea8ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be93c393-952a-4db7-b80a-9e68534db73e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c406a7e4-d18b-43ca-9ea5-c9c7faee28f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8c553d-667e-46ab-80b7-b4e63aaa0a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd8020-74bb-455a-9ba8-14eb8403dd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa012be1-40d5-4d70-9c29-4a8f9e262591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bb1676-12c0-4ff1-babf-b4a8f3d67aa8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969287e4-3b58-4b89-89f0-dbc4b5f80544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7391a1-e3ad-4715-a0a6-c0bfd56ec211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359eeacd-3782-48e6-b06c-cc372e90f703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1d3def-e074-41b1-b73a-94df01f76ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393b2461-0e37-4c09-9216-0b319f76115d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe25c2f-58cd-4917-b96a-33a7233a189c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086c82b7-c6c3-4238-b8ed-510a87e7cfa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc72257-2939-4143-b52a-2a01b098451b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a4816b-3f0c-4ce1-9ee6-3226cca85512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8494aba6-23a0-44cf-befd-d455f8198e97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2469c45c-b246-4b10-b903-408300b2211f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e1b75e-fafc-4edf-bd6c-6a423f053e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e90f031-444a-4065-baca-8b32e57755f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfffc0ae-6126-41c6-ab51-40f7f5d83efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802bcf5e-aa6c-4433-9436-7331cbcfa3d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445c4985-465c-43c3-9d44-eaf711f0180c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38384253-f16e-4093-9dea-2d98422eba7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db598772-50be-4bb8-be57-e0a0644978b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fbe3b6-3d7f-403f-81d4-c682e9c4c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee534385-06d9-4bc7-8448-ebdb4d9c241b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0656540-5c4f-4339-abb8-9762b3be0b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e71e215-4931-4268-8f25-13b52916a67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f21685-7f0e-43d9-9095-a631bc92b029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78bd6bc-43b9-4dd0-ba33-cd9089d53b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53976363-994d-403a-8ae6-57c2fcf41428",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d9e81-8eb6-48f5-b163-2e8afe14fc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014c09f7-3dc1-4245-a101-2e660ea7697c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cffb28-1ae2-4d79-8e91-9785f61e6cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b201fa6c-9a4a-4bc8-8ea5-8139606d783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139d765d-b8de-402d-9951-ce86d9297d1c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735f8dac-c6cc-4d10-af04-31ece20bfc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5906d99-34a1-4473-9d7c-acbc7f50c801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6de3ace-c5ad-4e38-ba9a-80f501300b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadf0095-c649-490f-b2a7-4f4785c0fa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9092378-ed9a-4968-b954-3c8f2672b6ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76054411-76c8-4ab0-b3f0-b87235a7b349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fa704b-d0d4-4ef1-ab73-34590c0b0a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645e8201-5925-4606-bc8b-a0dbe32ffeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88ca6b2-fa76-4646-beab-31f02c269258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f62793b-e5b0-49ab-b7d6-e8072d887ba7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f660ef-01d6-4f36-8569-710bf9c7aaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50548ef3-9b33-4db3-b8c3-09c46bb2800f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a650a3fe-58ea-4c90-93b1-cb1d1fe919b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b644ee06-423a-474c-8a5b-3ae4ca3bfc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f10b09-6663-4dc6-b19b-693e2554a758",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ea86b-db98-4e09-89af-010f6889bf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bb5123-0fc7-4b88-9875-2c3300c00e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab6ef1b-64f7-4583-8239-e61ef35b398d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c93803-b296-4c68-88a0-988793281257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc9e185-2def-4b5d-bc5b-c316280e90ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77482e42-3dd2-457d-b2e8-99ba6fd4d574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422c0fe8-0d26-4883-b0e3-616e5e67638f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65048628-1b43-4563-ab1a-30b7d87b8198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a092bf6-ae27-41df-a987-b9c1d1228014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66d464e-7836-4f96-8a32-daa0733b8cec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d21cfc2-cc87-4012-83be-c4c77a8424d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850ce950-f956-4bb3-a879-680046403b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437e7e7c-a61d-4748-9a29-092e458e12e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8b9843-8ba2-45ea-8aec-fb10266cb6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d68cdf-3d25-46e1-ac30-30f863544eed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717d7ad8-244d-41e9-ae33-ff73e7bc8a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56748a56-8cf4-4ebf-a56d-aa6777a04046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e55987-67db-4c4d-95de-dc845387c0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d659427-82cd-46c0-ae57-0f44ddc0536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb6b57c-13a6-4040-864f-d1def75da727",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8ff1e9-708a-458d-82e5-8a544c43c019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24aafec0-5f8d-43fa-84c8-0936d5f1987a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d56b75-90f0-4968-b170-4ac072d71f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f7d626-a4fa-4680-9991-6aa414e84959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527184ce-0ef6-4e9c-8131-30aa6a328c13",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57278449-48f1-4f66-b762-a41f7ceebf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a8913c-5a4c-4d8e-94bc-1e843946cca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bd2187-8a75-4a7b-894c-24dd0f61f06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce6a94a-f36a-42f8-bc26-7ac341567e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2afd02-f127-4119-a11a-0095e632ec7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bc865c-ef7d-447c-b3c2-5369401361f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30f7ff9-0548-4994-8bae-9080381a7d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20966e4-9817-4741-ad52-6bf0f5046594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46291da7-315d-4832-b0d7-51cf7a5d62b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59be82d-e450-4bcd-bc73-2c31cd0793b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a18f5b-47ce-4f76-94e9-185dccf5ad68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6982be4-3bc9-44d2-99f9-b5c4fa9eb64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a78ac9-4ef3-4c8e-98fc-90ddc52e69f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93828bd3-ff8a-428d-a780-e7f825596b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a67833f-0b0d-4469-84d8-a53c52ff1144",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba938c63-7628-4a38-b39d-63c0ca583396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71946c82-08e0-4eee-9ee1-8297d02e9fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8593df-cba0-4df9-a39f-8aa6406e0ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea0c45b-c98e-4b51-967a-96e6be05b46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51ffcc9-1606-4bf7-9321-ec0de1dff0e1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425d8921-fddb-4090-8d48-96d1ad65cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3b03cb-b18a-4693-9b8e-d75f3e189737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b3268-f150-4154-b0e0-70433fcf4006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c529b2-45c3-4778-ace6-5c2de30c2f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04635c83-d974-41b8-8059-a4f43a4af7a8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db093809-f440-49fe-b3a1-8a6b114ff2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fc702d-c6c8-4f87-b562-ece4efc239d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2267744f-eaa7-4df1-b7b5-f36e112efbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8a982b-882c-4ac9-a051-0d1d59d6fc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2b3ab0-d1ca-4b24-9305-933b852292eb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5058fd76-9d2e-48ce-9427-c482946a5897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db25ebcd-9327-4859-a4cc-30fe2f892343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e756dc68-cf1f-4057-8380-5fc8419e44b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a0a4b7-4eb2-4a13-aa43-4d3eed34cf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c66d8b-9db1-421a-9721-1bc881d8f8d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83e1963-d9ec-4d22-bd92-45bc28f9e415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ac9469-269f-45d8-ad06-022bedc599a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18acb94-570a-49ea-8740-47c8cdab0843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de3e48f-52e1-43e4-896e-332e59e61842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42104a73-44ba-4dc8-88cf-6288f4556181",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cdc609-e304-408a-9fb9-31b4afe43f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b7345a-3351-4785-95ce-568032ab2631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63537d24-0f64-4749-9525-cac422bab162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4d5639-93cd-46c5-89ee-5381e281d653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd22f51b-5f81-41a6-9e47-fa084c11ee1b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f1b643-66af-4203-ba82-e28f9b6a41a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a7e9de-54a3-4ec2-8376-849ce4835982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cffad0-6d11-48b4-a63b-be6cb14fa61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d30526f-f144-498a-a25d-b901442cb8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b194aab2-fe9f-461c-899a-bd64e9343336",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f21422-6008-4888-b4dd-d710b67063cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ba3988-0e00-4001-9dfd-3b357cb57222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0193989-aca4-4e0b-8d9f-af19fb2d05bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9592ec3b-a9a7-4310-8fbe-2e7dddccacdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1685fbd6-7dd8-4af1-8466-7e2d44ab134b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2398751b-67a0-43ac-aef1-012c47f9501d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee6ce4b-b0a2-47eb-b3a4-6fe20b911143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e3d2b8-ef60-47b1-9f22-0af51861e301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f461de9-6b27-4912-95d0-603ebd584de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a884ae3-55cd-4bfd-94f2-8a1a7d4fa743",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e38d5b-8b3c-4936-8250-17355fb9c20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37457dc-8ad5-421c-a018-ec41e02c7814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d033e188-5b5a-4bcb-8985-189ae6ec778b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011537d2-6c14-4799-94b1-3fbac098a6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da1cf71-7745-4e5b-b270-ba8437862231",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c953cb97-6409-4588-b4d5-1e0cb7d49255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0df009-561d-47ba-8668-779fc494989f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec08dc94-d643-4bc4-859c-5d921d2bde6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84888c30-c29e-4e20-9db5-e4e7bd003e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94189ff-01d8-4d60-8b4a-7d3cbacc487b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2477c8-09bc-4d76-887f-f90220b79ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd4d7a-c656-4781-8ae0-cdb58abeb425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c94fb31-7362-4e95-a64e-e122de171432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62b185e-8fcf-41c0-8c03-9e627aa91269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aad0e24-6962-4e2f-8b23-bcdbf0b560d3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cde7953-f14f-4ee0-883b-39fd0caf9775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fdbf3e-e0ec-433b-a177-b535c57a4ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0abd08-03b5-4d16-ad27-b1770da8579d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0230b091-da80-4916-9cff-bf82893b85a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c223b6-b8ca-43b4-be9b-c4c49a39b51d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db65b5a-8ea0-4518-9d1a-f30dc7354820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1adcd01-8767-40b9-952b-32cda7c0b7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2babf7c4-c428-4972-af2a-9453b0ca4409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16369171-dd1e-4ab7-aeaf-483d0266c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdb4f21-7627-4fcd-869e-daec788b9c64",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8a79c0-74d4-4692-86a0-22cd65bbc4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9259a29-7f53-4e4e-8319-40e54e37513b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a73c6f-25fe-4f38-bd56-72d3678a7571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74696da1-4cf6-4101-aeb2-81b0714d0de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ae465-ed7d-47e7-8ecd-6f619464045c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7185090c-4869-4b3c-92a3-52b0fb21d9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7433b3-a4c6-410d-9c0d-8d02bd6c37ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5b0e07-a676-442f-bf68-5adc4a2ac177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817c1b29-2588-41aa-a623-dd3f0191aee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83db27d-dc35-4eef-b978-8e1daa667586",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4202e5b-bf64-4b5f-9afa-4165bd0d9d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89549486-ea56-4b7e-8958-5c0553b2a72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d3e2e8-ca73-4adf-8251-b30b62d5bbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd41463-ce3d-4a74-9107-c3063b1e7f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a66d8b4-4988-48c4-bfce-1f1142eff4f8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e24902-81af-4bd2-ac07-74bf606a6cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48aa0b6b-4952-4f89-b871-9b3532815f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a036e85b-6a5a-4b0a-b583-7e1302836fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f38c0a-8a9e-432d-9397-2aa7ed3802a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508e5cf6-b0bf-4fed-8060-b3aca6d510e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34d817-cf8f-4092-9434-133a9876c918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9915211-0b55-414b-9f57-ed1d6e4cb534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb86ee09-d3cb-437c-9f6f-8bfde33ec1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733992b8-a397-46c3-a843-29298c571549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3b6e7c-031a-44f3-8859-0cf979ef30cc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120d1f9b-9dd2-46d0-a00e-c4c2d896ab5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725e7e0d-62b3-4182-aad6-eb2c11490d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9286c8a-19a4-474b-8582-0a32c0efd889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88da27a0-bd77-4b97-8a3b-5d35534bc9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c9ec8-f153-4297-82b9-1c3ab7400a85",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1612f690-e37c-4c49-983f-1a5b92ef3777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c809ad-2087-468e-b9db-8506540a2885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167857be-9c5c-4798-93f2-7a6e0e6c923f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81400fd-89fc-42e1-a9c0-075c3e8500ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524279d8-40ba-42fd-b172-f59d8bae402f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f389ed5-85c5-470e-b4e2-9b34950f2d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b442ec6-d9fe-40d7-8083-d62326788425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ca321-a3b7-49c5-b179-89eabe334cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c91fa9-0e98-432e-b137-d4f5a5857421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d3d46-7309-441e-a86a-76373b06d878",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1b1800-3c19-458c-81b8-e1a54711fdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e0e48a-c8f9-4684-9b3e-52c4e6387235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a95d44-20f7-4857-92ee-1bc8b54c535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b20b08-b527-4d9c-8417-0342486bcdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43940df7-717b-4933-bbcc-e702d88947ea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c97f9-b848-4b5c-889f-2fa1b57781d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3e9780-33b3-4809-80b2-a0f603668e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e13e20b-9dd8-4582-a517-2d6413ed9072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379edc2f-2218-4c4a-a91e-32ce6bb2e67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8776e253-1d92-476b-a13a-369ecb011abc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ae46c9-1354-4ffc-ae9c-8b351ad782be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce1b3d4-a91f-4541-ac75-680b09ef35c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1b13b-06a0-41ad-aa4f-74c94cf51913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4def2e7c-0cf6-4269-aa73-695bb3f7db40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d50a67-27ec-49b3-ac4d-9d4618271b8e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a2848-5680-44c3-94c5-815313dcf4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8431628-69ca-4893-86c2-e98e2d2d332b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e878f9-578b-4289-a9ca-0fd45f23e7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73a3557-9b5e-4023-8cc7-b98b86f660dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05489493-2cf5-4652-987d-f2a88d73caa0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76070735-23bf-4893-bca9-ad1d666ebde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483ddb33-02a2-499b-80c9-4f00cf3722f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378f9a95-a5c6-41d5-b18b-e97f1347248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bed0b8-2973-4ba0-b44d-52d2aa9b9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5b327b-45f0-4b29-a388-0625a7bd12c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07175306-d98f-4d22-abb9-11231821929f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e0833a-f7bb-4e10-8939-4a29e6cecec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d1b13-d813-4a95-94bb-34200685a7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f652d8-6112-4887-b53f-f7f3118ceaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e72233-59e6-40f9-b662-b4d075dc3e09",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e0d86f-6d8f-4d7b-b16b-c40a0ad0964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f6c339-a49a-485b-81a4-641c44af6ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd3420a-e32e-433b-9a13-b01d3ba27c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706843a5-33f8-49f6-b396-11f60fbead70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae99f1ae-a371-49cd-97cf-12b0d975c07b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc87d7f-7f48-4050-814c-2b726a6cc1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e0c8a4-abdc-4b15-be9b-11df3317f8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93efda4a-9f94-4c3a-94c8-b6e3b81f761c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a790ab3-15e1-4e45-9236-42202d706a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98b9f5a-2260-4dd2-be89-124005126308",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca02a89-c1c0-4862-ba88-6395d350b692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f19ed4-0f9b-4ec9-89a8-c4d84d5dd3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dda2996-c175-409f-a2c4-32d6dddf64a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f08930-9391-46d3-9a89-a752821da103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60808df5-dc6b-4e5e-82d6-c3f28053fe21",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe5b5f9-164f-4dfd-b626-4efa84c1f652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56d7cf1-f23b-4063-987a-fc83ce4de70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2080bbd-4587-482a-9555-4ffeca074bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9026f917-3755-4575-9acd-2d92cf6dd517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a968ca-1cbe-4844-bb5c-cf7f697cb1bb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82bc38d-5c79-43c1-b6b8-ecd73b33c8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae7e0dc-0598-4f16-9d12-d3ba2914b3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bb83c2-39e5-4b6e-928b-dc5b4545351f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b889e1-6dae-4c93-a745-a68ffa3bf7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45106845-552d-40a1-b27e-9a60864b8987",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fc1919-4ced-40fc-a638-b0ac1e70493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fcbc8b-16bf-4784-900d-cf5c1589cf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2172cb54-22e2-49cb-8659-f4a58fe2645b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586ddbb9-5968-4a78-a72f-d45d2e222d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b77867-2fdd-4842-9483-e02ea69182ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ecc01f-66d2-4728-8862-8ff02d03daaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df98ccd-cfb6-4814-b896-7ec29fd31494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03238c3a-2140-4a7c-891c-49f953f82e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae0d0ac-7010-40bf-ad9e-384736c96440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a95e341-d927-4e65-b5a0-4da149af34a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d1867d-f538-48d5-8e8f-a055512ff38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83b65a08-e7f4-49e4-a4de-7ddab5f46979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ea4364-72e2-44e4-9517-07a111612e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc5da8b-1cfe-43d8-8055-3ee00d723871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce26b67-4d4a-4d19-88c7-ac0694162af6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828fc5a8-7ef8-4bc7-a5a1-b4a03c735786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f1682e-ed69-4bcb-9945-2da3c2bd9f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298a90d5-fd7b-45ab-97fc-05579d823d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ffc1bd-3f49-4685-829e-3815825e4242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155305d5-0c7a-424c-a883-7d2ffaad3e2f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f136bf1b-6e65-4573-af04-75b7b01e4310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6677fa5a-d8f7-4a93-b87e-7ad7e646956d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7902d492-c4c8-4b72-a49f-f80aef107b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb9dd76-593f-41ce-ad07-8ad8eda62942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c9eec9-4f01-4292-9da7-161030e16ba5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced25bca-615f-4650-aeaf-284e819cd385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5c4c39-4648-4551-a545-a1661e80c333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f914200-0538-455b-9374-00e9ba7a19c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a84867-51b8-451f-a896-76df7b01a15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63d606f-40f6-4660-a6ab-ba434a31294d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a491b9-254b-4503-958f-a29af4387402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d553d6e4-8f88-4c88-8d2d-fe196bcac1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b9b8c9-354d-4999-8082-6383557b4876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01f6dd1-5743-4958-bd5b-3aa7deb982a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a3f6b-90bb-48ae-a9b2-8b4d5fb04512",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001094b3-25a9-4f89-98db-20e4c8edd24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7afdb326-d669-4e94-8905-5a133d5a0a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33eccc1-f2f5-4243-89c4-e7947a3db166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a1416e-1d35-4c15-89eb-8cec49157558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e39feb4-0238-4b48-b682-ac3a9158c7bd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549c2a5-8f11-4bef-9519-04de18678960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78cc7ef1-c1b3-4f3f-80b1-752911b6eeff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a53a3c-e3e4-4ab7-9001-65b8f5b633b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eb08cb-5366-498d-a409-a756df0d8a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42614871-563b-4e15-b0d0-cdcea2d75e98",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040684ed-647c-455a-8754-e21d514b9f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10259d03-131a-43ef-a159-8554080c934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3434080b-4f73-43be-8a8d-66223296e745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deb1966-91e3-4408-89ae-26b0ce84aac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7649afbb-eaf6-4e2f-a1b2-4b7a85b648f0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dec18c-10c7-4149-a1db-2b8d3a8c1ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9ab4f6-edc5-4087-b7b0-bb80516abd26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddfddc7-5be3-49bf-b0c3-76dd0593a478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956ee714-a16c-42c1-a66f-4813ba0efa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd2e75-a9bc-46be-ac5f-1e655eaf2b6b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001ce067-edaa-4698-a263-1f89bee8bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035c50bf-c97a-471a-9584-6df2c40f309c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bfb562-de00-4ee7-b605-29097ad5fd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6f8ecf-d7aa-4944-be15-5a299809b490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e035e49-115c-4569-82b2-99088edb7718",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a6edee-1ad1-4586-9792-bb808c001ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639d7161-df68-4f37-8025-8a9bd5a7fdd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eb4a1f-aea1-4ecc-ad5f-fa1bd9f72308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da589de-a3ce-483e-a431-150ef4dede5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c3138-e241-43e3-b304-29e0a3a15ae5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08001f40-fb02-4503-a75e-fbcc39af228a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beed2b50-97c4-4e3c-8d0f-01cf6d3a960d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af731d43-b71a-40b2-9309-1600f013f231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd137107-7744-4578-a28f-e47a0d1bdf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd571fe-313f-47d8-9341-3d8486585b38",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2bcff9-6681-44a7-8ba6-3802bf45a61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9019ec5c-eef0-4229-ab4d-02dc770ad0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2da71-a4ad-477a-87c2-6be695f41ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d61f00-fd2e-4f5c-a2e5-121e90cef692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dee3ed0-3236-4df7-ac1d-86c9056a877e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ddf7c-9494-454b-8885-5543a19db67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0604263-e3eb-4ef8-999f-8bff0cfcbf1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be00a63-a010-4271-acc5-11868a6ef267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fac4acc-547b-4a63-83ff-c008d1f457ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488ee8b8-70fc-4689-b24f-d4c0e5809155",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1903096-0f8b-4260-b457-bdf2b56e4f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf79490d-3090-47fd-af9d-bf2c2517184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a0b397-3297-469a-a91a-cc1b82294d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731dc818-441e-49b0-8d11-634b32f9dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f84ea5-9b81-4ca9-b96e-cf7fb2264bef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfcd24c-21e9-4a94-8a8a-1d63284c051d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201d62e5-ac8a-4c94-81a5-5dd70b034374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b93289b-2872-4ce2-b0d7-2f505343c0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c887cf-a003-4cd3-b855-1d722de01c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8480bfaf-4672-4022-b07b-6d08f12ec83c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb48d67-bdd3-407e-b792-ee1c63209a7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419006c0-82e0-461d-8c15-c4e19ae893fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca502146-3c95-4bed-9c3a-e067567b2f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f93625-183b-443a-8e26-dc2cb1c00442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9915ec-9b5a-43df-880d-c3680358e154",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f70fae-3ebe-4cb4-ac80-21d545413bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7858e1c0-966c-4ce9-8058-21384cb7f9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc1b30d-7cab-429b-9ee5-06bf33877ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd700c1-ba52-4f94-842a-c4b5e6d657a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea012531-2932-46db-bd22-4f3ca1d87e93",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9524323b-df8b-410e-9455-ac7f1280ada3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe68d059-2c9f-42c9-a56e-7556978428a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60269fa0-57ca-427b-9ee4-ccb04ba91a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cd99d9-9452-4949-8cce-af7e591b2f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204a2f9b-c189-4d45-898e-948c1f3e5aa1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0613e293-7f64-4a46-bc98-db66ba774965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a74a93-bebb-4218-963a-fdc022761c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48533c4-aa87-40fa-8480-d5e530c2548e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c3ce04-d9a6-4b09-849e-617cab970c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ae53c8-5801-42da-99a7-c48806f94256",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a143cb-88f1-471e-ba94-7f847ec36900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404d304e-6042-4e1c-9097-3317259aa754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da33fd40-5edc-4e6c-a7c1-02c71ae868d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0669ee2-cd98-49b2-8869-3d6113ed0d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b04500-e888-438a-aaef-d63bbf01f162",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0b0a5-8ea9-4eaf-a015-755809d90127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2109e202-aed0-49c4-a344-2d7ce03e447e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fbe602-7bb9-4685-83e5-bdf12afc2ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ec6da8-e429-450a-bfda-f3cad7d234de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f21110f-9298-4c37-8e50-eb803f08ad47",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b199619-ea12-4b78-b781-7e6b4df3cd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae5993b-bd7a-45ef-9255-3f9cd152b7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9208630-92d6-42aa-9791-97a788a74bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b0685b-b11a-4831-93ad-6982142777ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b38d4-8376-43ff-acb5-cd6907c0dfbc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b8adf0-7c4c-4a0d-bbbc-ca6c47e04f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e935f8-4ecf-49ce-ac8b-cc925524e64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1984b7-f3bf-48aa-9061-9c114df43d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c8d510-3812-4202-b98e-bdf9ccc294a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d164ccd9-7f99-4f45-bd37-e9b2631b39e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66091ea0-db8a-4d81-b82a-5542d4a4b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c5d374-50e7-42ec-af54-316ef91cefac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71e73c8-ae37-411e-ac29-313ff3a74318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf0c4eb-dbfc-4fd4-a03c-24b80694ace6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457ec061-5821-4e0f-9769-debfcaae6f40",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e634f7f-ef22-477f-b388-fab04c33f94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a83923-da79-46db-b090-e819b53ee841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac25043b-deda-4791-9a4a-4a8a523b36e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3172781-a77f-45d2-999c-3f2b584229ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1050d5-5bb0-46ba-a5df-99b8831c02e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2865d5-4140-4e02-a66e-17cf355ac5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33725959-885d-4b77-889e-02b48d541e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cff1ff-c2c7-4d1a-9750-1d87e16eb702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c648d-3de2-4022-8444-f582929e4535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f17075f-3e7d-4013-9432-ff06dfccbd27",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb5e85-9a94-4041-ace4-a330eb403025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f46c9e0-5061-4510-a43d-ce6510c6d12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f51f2-f9ab-48c2-b5ef-398ef688067e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5037af-c1f8-4c41-81a9-d59640e2a808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf4ce85-cfed-4627-8f61-6d7cb02e9ca8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a2102e-c11a-4b9d-a718-1321b76e893f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34f0bd6-f7ea-4b5f-b8bb-aac950aeb75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d2475-ae6a-49d1-808d-76c9846257a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20923814-3473-447b-b378-d1b1fca77202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2843dd0d-e51c-4fba-85e6-8ca3938e889d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d926ac35-a373-427f-8f14-6e16736feb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485ae10b-6b4c-450b-a990-05f4a2ab89b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203f5e2-b023-4a26-a361-f59a92990be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ca7ee5-5ee4-4842-885e-5e4313186e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea40be5-fa7d-4665-8e3b-5e97b3af6458",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ae4da8-5b27-485e-86d7-82d7bf83d01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac189641-b4c5-4bf4-9e30-7ee168004938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deab5ea9-48e8-46bb-a62b-293a5eea8167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2a7369-6e82-4169-a764-7b77e0fc6afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142e2b0a-5a42-4b9e-9a5c-f9ddf8f94fa8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7fa626-6832-4263-b033-db7a6b6f3f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8f714a-72f2-4c3f-aa4b-c98161f182cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90567bb7-be65-4b9d-a4c5-a3f9b6246279",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfa77ff-b5df-4be8-bd83-7e57a3307f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207fbb54-d731-45c3-810c-a88b5f625703",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79743ba-213b-4ab6-9565-1de94d20d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c949e8bc-3eae-4623-8189-0a56d7fe4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350acc84-6c14-4cb2-99be-3091783e91c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9426993-ef9a-4134-8c0c-df7865822b3d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a655abe5-3811-45dc-b04c-acfbaaf4cdf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edfdaf62-2d2a-46f2-888f-b50fe5962969"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2020a100-9734-4d77-9fbc-3f2c26710da9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c0ad0f4-6861-44b9-9996-ae0d78799991"
                    }
                  }
                ]
              },
              {
                "id": "b2f32694-59fa-489b-8b0d-8001949a1ec2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19315276-159d-42eb-8060-63b28226e56c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37721a81-8757-4a4e-8a29-913c931ff509",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "591b48bc-0228-41c1-ae8d-096a7c3bfb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bb3a98-d24b-4a8c-b22a-a5ec2f435eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2830ac4f-5a66-4c30-aae0-659d7a41d48a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb67cf1e-8d6f-4157-b0c3-843eb5d20bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96365a48-7882-419e-b360-98de2a18466e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66d3455a-049f-42c7-8204-e89c79c45408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12eeab2c-4029-4f5d-b401-be45e7e14e3f"
                    }
                  }
                ]
              },
              {
                "id": "6f4058af-d9d4-42c8-8afe-d34bc0aa6d1f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0d9e818d-5baf-4b9b-b094-a4bbc39c60b9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbe37ce-0400-4b5f-9b35-24a024ef8ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "effb47fd-ef1a-46d7-a6c7-7b39626fe241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a937c8-5486-4eec-9183-c881b11415c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d1f39c-8b40-4616-8399-374ec4cf8f8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "adaf71eb-1a45-49f8-ac4b-3c67dc230463",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44c4f28b-0052-48e5-861e-f441f5148618",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e318afb8-6b6f-4c08-856e-9b99ffb88d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18ce5605-d745-43c8-9447-31e376be9625"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75c5f2af-09c4-4774-ae20-4b13372d268b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fc285aa-4716-4d56-be8f-e96fb0e1028c"
                    }
                  }
                ]
              },
              {
                "id": "62c8f962-49d1-4b9f-a481-a666a46099cf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "804a3597-0c00-47d9-ab4c-a7e970e659e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "991c5363-09eb-4dd0-9333-71f40260ccfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72c696ec-3645-44ed-9a71-779daa29a29f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8b138cd-fd97-429b-95b5-c0437d6e4e53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d35ccecf-4887-46cb-b40c-8e28a545f8af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f997a3ff-3016-44dc-af5f-43439dd3dd29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c0f6b01-e658-425f-829f-ab4bbe7bb2c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b6b8ea-cdf0-4dc6-b34a-b496835539bf"
            }
          }
        ]
      },
      {
        "id": "f30feffe-4904-4317-9b44-020ca37ecc58",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c6a2a953-08fd-447d-aac2-4a459d62524c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c33b2a4-764a-491b-b0d0-de64f8cb8ad5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1812121f-2311-4d15-97c5-30fe2cc90085",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2531bcfa-0096-4222-adb8-17c11c99e769",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "837bb57e-d66c-4016-aef2-0f1fb92b6158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe0d27-05d1-4ec7-a87b-f38e5f328cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dda40ff3-d5cb-4a39-a6b4-c3f619578f9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f57771a-8288-4c05-9e08-4938635cd001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b4a7a69-64de-4b96-9e47-60e1ce4edfdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4a7b3b2-bd52-40c9-a30d-1c393e09092d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19f1d1fd-f7ed-4653-9ce6-8ff5ee9f62ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cf2563a-794d-4c23-8a9f-5bd87021295d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39f2194f-edcc-45d5-815f-41f40bf1705a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fbc4849-7797-4c57-b68e-23444374f8a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ad62ae0-81a6-4a8f-8cb0-61f8925edbe3"
            }
          }
        ]
      },
      {
        "id": "bc9bafa9-22d2-423e-b5d5-1dc1be2746bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ad9a6527-9c33-4ff5-b5cd-693c49d85959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04db646b-5b09-4fa5-81b7-707ac938c3ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93711a4b-68c2-4ca8-a352-6dd31bd7c51b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8877f49-5aba-481b-92e0-c202914964fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37bce893-e454-4369-a164-b155491793e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bffffa3-8ab4-4066-82ce-fe83e055f6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feaaeaff-4c4c-4c77-a005-27ea05140231"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d71bbca-775a-4a57-93db-f441b8e2e190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d36dd0c9-5322-43b0-823b-a2c23e5194e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "665d828b-bad3-44ff-b763-8a36dbe2d183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb9ac4f-6b5f-492a-918b-41f1c3c265b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4946199-a2df-4339-bbc0-a14e8cd56a7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80b51cc5-4035-4b18-bbc6-e5f36d6d25e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "330aa2a9-7169-48ce-911c-79576d4e6e08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f3a6238-acab-4dcf-9671-5e5e75b6584d"
            }
          }
        ]
      },
      {
        "id": "b94fd214-6eb7-4030-b335-1570f035b110",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "974c5efd-0fe3-4621-ad89-55184493889b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeab645f-36ce-440a-83fd-7e95bf6b2d16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "665047a2-bd7b-46d3-af03-b9378e647783",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cf7add-9586-45a5-bd3b-954b23330175",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "206e814e-42ff-4ee9-9ae8-4ed77e199c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dce1d53-0d4e-449f-a909-d82d38b9f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6fa39d7-1afa-465a-87f1-a6fd523f35c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e89ec07-7e99-4f05-bd6d-2b01f5557937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab3367c4-0789-49cd-a2e0-17cb5ba15f3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b0a0965-ebcb-4de5-8c6c-094d0208d686",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6cd06dc-30e0-4b19-b3ff-ac00d6b574fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b4d404a-76b0-4b55-ae2d-3fbb2ef9977b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ac5e626-08cd-491f-9439-22ff50a95332"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a463570d-2115-4945-b755-198401c9fb4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73b7d620-28a8-4f3f-b493-8e8c05f4902c"
            }
          }
        ]
      },
      {
        "id": "2bb4680e-3d8f-4ffd-ac99-cc106c2ac811",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e607de0-d00c-4cfa-9558-585da195a74d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c469598-6fa1-4a17-a3b9-52a5a5f8f3dd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ff4b8259-bf53-4831-ab24-82bcd9756a9b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b07b8357-af42-4257-b637-20e23aa00d08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "008ad2fd-a54b-4b50-b55b-689c77a416a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 88.59649122807018,
      "responseMin": 9,
      "responseMax": 4390,
      "responseSd": 366.12725520675485,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699317264855,
      "completed": 1699317299086
    },
    "executions": [
      {
        "id": "ff77df2b-cf04-4823-9536-aeb05c135e31",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7742cfb1-4195-4fcb-8939-c6ff9061a69a",
          "httpRequestId": "c52a3c5b-5115-4c41-8a12-607a62b83604"
        },
        "item": {
          "id": "ff77df2b-cf04-4823-9536-aeb05c135e31",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ce574fa7-1982-4b31-a2a3-44eb0d8e92c6",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "639759c0-88eb-4085-83b4-4b7d9655ab01",
        "cursor": {
          "ref": "cd21c827-d527-4ed7-9a9d-b311172e03f0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d7be3d37-521f-4162-af13-44226996000d"
        },
        "item": {
          "id": "639759c0-88eb-4085-83b4-4b7d9655ab01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "16ac5b28-92a6-4344-9e50-21d3c5a6e66e",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a4b05253-ddc9-4f88-b8ba-07fa4b0681c9",
        "cursor": {
          "ref": "3042d93b-1836-4985-890b-4bf5a4e5ac9b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a3f67417-9e1d-41d5-ba3b-4944c9e0d0db"
        },
        "item": {
          "id": "a4b05253-ddc9-4f88-b8ba-07fa4b0681c9",
          "name": "did_json"
        },
        "response": {
          "id": "12b6c263-e02e-48a2-9867-5203cfe8f7f4",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00051f1-905d-4002-a867-40aa101e77f6",
        "cursor": {
          "ref": "3c7cd538-4093-4b4d-87e3-176bbf5cf149",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cb43385-7607-4b00-bdcc-f99761ce570e"
        },
        "item": {
          "id": "a00051f1-905d-4002-a867-40aa101e77f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "032248b3-ab21-40c9-88f9-f4f8dc4decfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00051f1-905d-4002-a867-40aa101e77f6",
        "cursor": {
          "ref": "3c7cd538-4093-4b4d-87e3-176bbf5cf149",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cb43385-7607-4b00-bdcc-f99761ce570e"
        },
        "item": {
          "id": "a00051f1-905d-4002-a867-40aa101e77f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "032248b3-ab21-40c9-88f9-f4f8dc4decfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ebf0a4-d2fd-4c04-85e5-ebc88d49d119",
        "cursor": {
          "ref": "a41a5878-4bb7-4c20-9b5f-5931a35139c7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "450df44e-461e-4566-b06e-2d0e9edb4ce1"
        },
        "item": {
          "id": "52ebf0a4-d2fd-4c04-85e5-ebc88d49d119",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1860294b-fa7a-4646-b3df-200dcf5a302b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a1e68f-a1aa-4a11-b63c-453ee38e74d2",
        "cursor": {
          "ref": "64fcc6c1-f631-4b6d-aa2e-e60c4ca891e8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2c71a85b-3d22-4dd9-b6d7-6b7ca8bf3f1f"
        },
        "item": {
          "id": "a9a1e68f-a1aa-4a11-b63c-453ee38e74d2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4963f6e5-5117-4786-815f-15892ff80de9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bed7ee-1471-4916-b2dd-0115dbcefc83",
        "cursor": {
          "ref": "6100d698-1f71-4365-999f-81ee37e8739b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9deb0464-521a-4462-b5f2-03b7be9eedb3"
        },
        "item": {
          "id": "b8bed7ee-1471-4916-b2dd-0115dbcefc83",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a0fe6a2-59d3-4b3a-ad3d-9584d3d176fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed039c1a-ac07-49a0-9af2-8cfe791745d5",
        "cursor": {
          "ref": "9872a233-77af-407b-800d-3bd48e240d7f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "99656eb1-14bc-4d78-8b8d-8f651c1a7feb"
        },
        "item": {
          "id": "ed039c1a-ac07-49a0-9af2-8cfe791745d5",
          "name": "identifiers"
        },
        "response": {
          "id": "7a45b78c-1e0e-489a-b9ad-a08eea6b01d6",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28733128-c9bf-440b-8b5b-70df2493c82b",
        "cursor": {
          "ref": "765fc6c2-f897-41d7-bf3b-afac41082f96",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a86b9c24-a9ad-4caf-ac5e-f4d544f853b6"
        },
        "item": {
          "id": "28733128-c9bf-440b-8b5b-70df2493c82b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5dca34c9-8632-4e85-8131-0cd4a4f8df1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd0ea5d-bd8b-46ba-a43c-57caf8ed824f",
        "cursor": {
          "ref": "bbbaea2e-c044-40fa-a4b8-de09407870fa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48109565-93c8-426c-8f9f-224924a78584"
        },
        "item": {
          "id": "5fd0ea5d-bd8b-46ba-a43c-57caf8ed824f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "914b626e-b768-4da1-a58d-afa7fc34cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8bf729-90fd-4d7a-aecd-ec43c4c4614d",
        "cursor": {
          "ref": "40d8e13f-55eb-4182-8747-c485513c3ee3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9f351bca-e334-470d-9a34-2833b32f2c7c"
        },
        "item": {
          "id": "cb8bf729-90fd-4d7a-aecd-ec43c4c4614d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7be70222-c6f6-4049-989b-6bc2dae0602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4728762e-64a1-4a82-b4de-924af938ca2f",
        "cursor": {
          "ref": "7151c0c2-43cc-4a9e-991f-71bc659b09f1",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c09a65f-5862-4ab1-878a-513290f18fbf"
        },
        "item": {
          "id": "4728762e-64a1-4a82-b4de-924af938ca2f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "af3ab7d2-9ba5-4a75-b8f6-32d99c9dd430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963ce16a-888c-4d42-b74c-e1103a0becba",
        "cursor": {
          "ref": "71fe36ce-9f4c-40db-9a38-6a846e23a910",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff7dc626-b577-4747-94f0-35087dc5339d"
        },
        "item": {
          "id": "963ce16a-888c-4d42-b74c-e1103a0becba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "97a2fc38-d04b-481e-b798-49169c3f9c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bddd52-25b9-4cb8-8b15-e62cfeee97f9",
        "cursor": {
          "ref": "37d440a4-77e6-4c9a-b760-3e7f29138c03",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb2df3f3-7382-43aa-9060-01b39b8c61ef"
        },
        "item": {
          "id": "b3bddd52-25b9-4cb8-8b15-e62cfeee97f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88687793-b2d1-43bb-9d52-57a8f457a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a0c04-5f3c-4cbe-93b4-54afab703d00",
        "cursor": {
          "ref": "9d5ead72-ca4a-4a17-99df-ed440245be4d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c8b7d94b-1218-415c-ad29-ca447a3e1b75"
        },
        "item": {
          "id": "6a7a0c04-5f3c-4cbe-93b4-54afab703d00",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9d4196fd-37f9-4320-8df6-1d9058195e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eea755-3da1-4152-bf04-531d30107886",
        "cursor": {
          "ref": "b6ad991b-63d2-40e6-8d93-6661e1203d5e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "33cae23b-c614-486a-9e7c-ea2d5e86f585"
        },
        "item": {
          "id": "52eea755-3da1-4152-bf04-531d30107886",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "47b41dd8-36a7-4d87-a4f0-5daded8af88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29ace84-965d-416f-8c89-62d4f532f118",
        "cursor": {
          "ref": "7420321a-5c65-40b1-bcc7-21a1851c2e57",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b777d19b-3cf0-4a96-85de-409a541471ff"
        },
        "item": {
          "id": "e29ace84-965d-416f-8c89-62d4f532f118",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6bf400a9-29b9-42a5-a6bc-274a0a478b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d09594-46a4-476a-aea6-70194cb0dd49",
        "cursor": {
          "ref": "be0748a2-ab6a-4e8b-b4fd-5edd7749d1dc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d4a533ad-a006-49af-841e-444c27acad0c"
        },
        "item": {
          "id": "33d09594-46a4-476a-aea6-70194cb0dd49",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "16aebc5b-5c3b-44b0-991f-2366a580b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e7672a-e5ec-4c71-a913-205069cf296e",
        "cursor": {
          "ref": "733c7f62-5b45-4907-a327-d54615159933",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "63e3414a-6607-4830-89dc-6068e91039a1"
        },
        "item": {
          "id": "a3e7672a-e5ec-4c71-a913-205069cf296e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "79bb3d79-64b2-4386-8e0e-b01cf4aeb86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9c3e83-79a4-47b4-a22c-310326b81d4f",
        "cursor": {
          "ref": "903f6889-aac1-4b3a-901f-c3614be5ae3f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "08922de8-230e-4906-8a77-36d575c3f308"
        },
        "item": {
          "id": "dc9c3e83-79a4-47b4-a22c-310326b81d4f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8e4362b7-53d8-4e91-b65a-f291200bdea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e8f4f8-6b6c-4458-9fe6-e2eadfa5ab05",
        "cursor": {
          "ref": "614a16db-f19e-4c26-8fbc-d904b2535d27",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb7a476b-7312-4edb-af0f-704ac8bbed1c"
        },
        "item": {
          "id": "70e8f4f8-6b6c-4458-9fe6-e2eadfa5ab05",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0bcc6e3e-935b-4b0e-86b5-ef0dcd603e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185327ad-96d0-4806-92d3-c24e12d5ffc8",
        "cursor": {
          "ref": "88ba1883-200a-4649-96ec-ead30277d592",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e631af64-9355-4cd5-a264-8dcd66fe6fb8"
        },
        "item": {
          "id": "185327ad-96d0-4806-92d3-c24e12d5ffc8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "547b03fc-933a-4322-aac4-e46ebea5a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9bee68-9951-4712-b6f1-0614302d155c",
        "cursor": {
          "ref": "a660b0bc-76d1-4b3f-94ea-bd09ee7955d9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e6ea994c-77b6-4ea6-979e-140c9c87a003"
        },
        "item": {
          "id": "4c9bee68-9951-4712-b6f1-0614302d155c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ad4e668e-42ff-4b5d-a9ad-0b2d2587daa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafea445-b156-4a63-96ae-ed266b8e5fb9",
        "cursor": {
          "ref": "20fd5dc6-eb19-494b-9d42-bb3fa40794c5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc28a030-8558-40cb-92b0-51e2f359bbe4"
        },
        "item": {
          "id": "fafea445-b156-4a63-96ae-ed266b8e5fb9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5619cb24-bd83-4d7b-bb79-a1c6f4a0b1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e281b6-e048-46a8-b1b6-cb06b540e4d7",
        "cursor": {
          "ref": "d6304ff3-5921-437f-9064-fe1fb2555e14",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "38040348-8621-41d6-acd4-7167acf08f82"
        },
        "item": {
          "id": "e3e281b6-e048-46a8-b1b6-cb06b540e4d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "503557dd-0c88-4b01-98fe-4fa51efaac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f36a3a-0b81-4c82-8a0f-4a368ce3baec",
        "cursor": {
          "ref": "220d50de-ab2f-4c31-9032-f062ca4f3ee5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d8e0b59b-0d0c-46a7-82af-a35289f0e7fd"
        },
        "item": {
          "id": "09f36a3a-0b81-4c82-8a0f-4a368ce3baec",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b92458d3-d839-4db5-9244-3497ed439a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce28a2f6-c91b-4e6b-990d-1cebd7a08cc1",
        "cursor": {
          "ref": "88ec27e5-2ac1-4b1c-b6c6-d15155c777bd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1102f8d0-060a-401c-bb34-3185741e78eb"
        },
        "item": {
          "id": "ce28a2f6-c91b-4e6b-990d-1cebd7a08cc1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3266cf6-8c47-4be2-846d-339b93ca96e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45b9c0a-a15b-4335-866e-8e03e3c7826a",
        "cursor": {
          "ref": "239e8b39-d704-47cc-9d7f-aab417ba5361",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c0f36902-4176-421c-8356-2137727daeb0"
        },
        "item": {
          "id": "b45b9c0a-a15b-4335-866e-8e03e3c7826a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5cd3b267-d768-4b83-ac6a-78c80ddcdd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48c93f-d0df-4760-afeb-afa18e7e67cb",
        "cursor": {
          "ref": "b29f2d76-4550-4bb4-9f32-6d8dd7eba6fa",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70efd4a0-55f6-453f-9698-1cd48f40a904"
        },
        "item": {
          "id": "3d48c93f-d0df-4760-afeb-afa18e7e67cb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3f57f587-4113-46ab-97ea-55816dcdefcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1803e-31a5-48cc-8f69-2a884cbe056f",
        "cursor": {
          "ref": "d56f3900-7d70-462e-bf9d-8e751b9cd385",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "777ca358-ceb9-4899-a004-d297a8bf9bee"
        },
        "item": {
          "id": "86d1803e-31a5-48cc-8f69-2a884cbe056f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a38cd053-6fb9-494f-9e18-1d76b14bbb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc39d7d-fb05-4af5-a31b-3bb05ceeec8e",
        "cursor": {
          "ref": "47eaca11-66da-4640-88dd-c56f88dba5b8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0bb0af19-fde9-406a-825f-eeeabeababe5"
        },
        "item": {
          "id": "3dc39d7d-fb05-4af5-a31b-3bb05ceeec8e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "05ea4b30-bc7d-43e6-b351-29bdc30623f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d02d827-e086-4484-9ac6-e3e5c2a9b80c",
        "cursor": {
          "ref": "e4442930-f0f0-426d-8a76-6d7d61d9bf8f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "14f11545-5a40-4cf0-be65-9fb0a430fd87"
        },
        "item": {
          "id": "5d02d827-e086-4484-9ac6-e3e5c2a9b80c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "030d5fee-edd5-45db-8a20-7a28c0223a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69bfe86-e0a8-44f1-a41a-4afe9bffe690",
        "cursor": {
          "ref": "640f835e-d6aa-46ea-9616-519b51cd35a6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "140a5e6c-cb66-4cf2-a456-2b79db31bd41"
        },
        "item": {
          "id": "d69bfe86-e0a8-44f1-a41a-4afe9bffe690",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "95ddb0c0-3ca2-4a69-996a-9bc2958a2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a491923b-6cd2-4b67-887f-35ed959f499d",
        "cursor": {
          "ref": "38c7ea21-7f98-4c04-af63-48a0d29b96fb",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26b43882-06d7-4a11-9a75-7afd46644592"
        },
        "item": {
          "id": "a491923b-6cd2-4b67-887f-35ed959f499d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "683a2ef2-b788-4176-860d-0820532524f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323df9d-251a-4494-8d3c-aa89349f1812",
        "cursor": {
          "ref": "9772df7d-bd39-4eb8-9dc9-b35d017a1de9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6c17b455-c709-47fa-b9c2-388bbdc0896d"
        },
        "item": {
          "id": "4323df9d-251a-4494-8d3c-aa89349f1812",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "584a7609-cd05-422d-9889-36c087939b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c301701-5425-4d68-b18c-5b7e8951ee26",
        "cursor": {
          "ref": "182bf116-f175-41ef-b30b-f1f5ddddc0f6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "acf61636-cacd-487d-b152-f81d91d114e3"
        },
        "item": {
          "id": "3c301701-5425-4d68-b18c-5b7e8951ee26",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4a4d908-0daa-4d22-91a5-e008d921b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d293ca-af81-4f6a-a080-ace5f146b644",
        "cursor": {
          "ref": "bcebc352-cebc-409b-adad-73cf3ec3f49d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82dba9c6-f4f5-493f-b7bc-37097a2fb5ec"
        },
        "item": {
          "id": "d8d293ca-af81-4f6a-a080-ace5f146b644",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6d31bf0e-0b22-4760-8dfe-38a446de5185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a129cbb-4b6a-4c55-ab7c-1b013282a432",
        "cursor": {
          "ref": "7e68b331-b495-457f-8c6d-c5964c9d19d1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cbedc13c-09b1-4c10-afce-1403035250ce"
        },
        "item": {
          "id": "8a129cbb-4b6a-4c55-ab7c-1b013282a432",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ff59e69-667a-4000-97da-100f831629c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677d0434-af71-4eed-9289-c55f48cd72ec",
        "cursor": {
          "ref": "2e79d5b4-9738-41ba-8919-db5f385946bd",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f57e6c4d-08c5-4248-af71-8417a22f2616"
        },
        "item": {
          "id": "677d0434-af71-4eed-9289-c55f48cd72ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d1bedbae-a401-417f-ab74-f2efb6239802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b43fe3-6326-4ada-9424-0796ac9b408a",
        "cursor": {
          "ref": "f0303e08-cdc8-462b-8bc5-1768cb40687d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1e2a3b21-2d82-4159-8f6b-533a3267ece0"
        },
        "item": {
          "id": "94b43fe3-6326-4ada-9424-0796ac9b408a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5be76fc8-ce57-4be4-80a5-7ada8582616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5156cf-853d-4fb1-8415-c275a6fdf8d6",
        "cursor": {
          "ref": "18aace01-ca63-4478-9905-356c154b744f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1472b31e-9285-4b72-83a9-05e71023e44e"
        },
        "item": {
          "id": "cb5156cf-853d-4fb1-8415-c275a6fdf8d6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ceec95b-74ac-464d-8ee4-0134e03fb04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7fb25-b1ed-4ea2-b31c-0db25a43bb7f",
        "cursor": {
          "ref": "a2a645ef-aa90-4943-a180-08006cfad53b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c8bac43c-36be-45ad-820f-d776360fe8a5"
        },
        "item": {
          "id": "d6f7fb25-b1ed-4ea2-b31c-0db25a43bb7f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "216ed23a-bd72-46e2-a63e-664e737907c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6060026b-5400-471c-bd08-f67f9ad1914d",
        "cursor": {
          "ref": "81afa8a4-f6c6-4c6a-a9f1-f3f686584a42",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d4caa901-9fa6-4775-a56c-e70bb9d396f4"
        },
        "item": {
          "id": "6060026b-5400-471c-bd08-f67f9ad1914d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b03d09f6-d98e-466e-ab91-e5f6185bc649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be88c2e4-698e-424a-993a-2f3902c083bc",
        "cursor": {
          "ref": "a2ed1d1f-5055-4ae3-97ca-01e4b8889b9e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5fd5e132-ba89-4cec-a6c6-7548e5622e35"
        },
        "item": {
          "id": "be88c2e4-698e-424a-993a-2f3902c083bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb47b96a-b148-41b8-a2a1-72f33d5f62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe81c4-eb02-485a-9be8-79efb8ff1caf",
        "cursor": {
          "ref": "5853e63c-6a82-4a41-86e0-1abeedf25283",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25110c2f-1201-4fdd-bced-cfe07222b1e7"
        },
        "item": {
          "id": "8cfe81c4-eb02-485a-9be8-79efb8ff1caf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88d4b330-2466-4194-bbb9-6e534492765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a1f973-852e-427b-b774-fa3dca47c2da",
        "cursor": {
          "ref": "7779d3c5-1241-4aae-a3fb-7260e351a30e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d5657acf-01d9-4892-aa1d-f4b99151ead7"
        },
        "item": {
          "id": "e6a1f973-852e-427b-b774-fa3dca47c2da",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "643a56c5-1c68-4f71-8a5e-51e5bc2f7e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465a32f4-a792-4abb-b723-e0a11419be64",
        "cursor": {
          "ref": "f327c63b-d0bb-4edd-b465-167e07c1af38",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "13f96e2a-ca0f-466b-8b42-ce1ea18b3731"
        },
        "item": {
          "id": "465a32f4-a792-4abb-b723-e0a11419be64",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49417aeb-583c-4d3c-86d9-07bea5f747ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2dc9d4-ace4-43ed-ad10-74fa3ae7dbb8",
        "cursor": {
          "ref": "a7c6f582-6fe4-4e6a-96d1-ab84ee6ee165",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4ad4d3dd-7992-4369-9875-3bad290e277c"
        },
        "item": {
          "id": "0e2dc9d4-ace4-43ed-ad10-74fa3ae7dbb8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae94b8b6-7df0-4f9b-8f6b-f00389c9f0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5833094c-0c72-4e94-a420-7c7a1a02aad8",
        "cursor": {
          "ref": "fb6adbd9-8339-46b8-b206-d21998d5f071",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1987a5a5-fd80-4c9e-a276-cf3d48423304"
        },
        "item": {
          "id": "5833094c-0c72-4e94-a420-7c7a1a02aad8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "34c6cf2e-fc50-44c1-8f34-e85e092d944e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd53ad37-4a92-45aa-925a-a1cb6e001cbd",
        "cursor": {
          "ref": "31a44ce5-722e-4a4a-90fd-fbe076401136",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dd09fe59-2bbe-46ff-bed9-38f003fa2856"
        },
        "item": {
          "id": "dd53ad37-4a92-45aa-925a-a1cb6e001cbd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f0035e79-e67a-4cc1-8c96-21cfca9eec2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134f0612-542b-424d-8816-9ca2252baf85",
        "cursor": {
          "ref": "bf2ac891-6863-47f5-85f2-40e0f7146953",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3ecdb737-c65a-41cf-a8ea-800d9d05b5d9"
        },
        "item": {
          "id": "134f0612-542b-424d-8816-9ca2252baf85",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "017c78fd-d29d-4b77-bdb9-0a9d20d0fb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ba507-10c4-4b84-8cde-cb18072a4bfd",
        "cursor": {
          "ref": "bb4174a2-7a44-41f4-a385-3771df936a00",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dca40a9c-5c94-4812-9e7b-d36153d0c82f"
        },
        "item": {
          "id": "e14ba507-10c4-4b84-8cde-cb18072a4bfd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f4dacf0-7207-4d1c-80a8-cb707aa7b1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc27934-dfdc-4d2c-a5f6-e40d027fd402",
        "cursor": {
          "ref": "67cd94db-6ec2-4879-af32-06b911453f72",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a4749fb-c224-4fff-b562-41cbd7d0bcf2"
        },
        "item": {
          "id": "bcc27934-dfdc-4d2c-a5f6-e40d027fd402",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b53e0aed-fc68-462c-a67b-3479204bee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e60f1a9-d69c-439a-a6eb-d94919685517",
        "cursor": {
          "ref": "1c555d7e-e94a-429a-9e6e-7227d12880fa",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "389c5116-d814-4643-a80c-665ee6d250bc"
        },
        "item": {
          "id": "8e60f1a9-d69c-439a-a6eb-d94919685517",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fa01feb8-58fd-4db9-8599-4983b0592bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b2571e-1ab1-4993-b937-66f78aa07a84",
        "cursor": {
          "ref": "b93a06dc-3d0d-4f37-b115-ccb4fe7ca322",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e273540a-1d8d-4514-b80c-73d4e3bfbc71"
        },
        "item": {
          "id": "06b2571e-1ab1-4993-b937-66f78aa07a84",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6748e818-650a-4e23-a1ad-b8e1f75d2e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4366ec-21b0-487b-9933-286a6482bd53",
        "cursor": {
          "ref": "db4dc11f-01c0-423a-9e3b-0d0c8d10cf3c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4a605b2f-e5eb-4164-b758-27d7c336df62"
        },
        "item": {
          "id": "ce4366ec-21b0-487b-9933-286a6482bd53",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef220fc4-0b30-4796-9d35-4846c0ea30fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf07cdf-c321-46bc-bcfc-1da2724cbd8f",
        "cursor": {
          "ref": "d21f597f-7014-44b5-bbab-154956d9862a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5ff46c67-e05e-46b5-bc9a-156eae0b3cab"
        },
        "item": {
          "id": "9bf07cdf-c321-46bc-bcfc-1da2724cbd8f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7b19513b-32f5-4126-852d-d4548a40bcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2758a-aa20-40b6-ae39-7fa6e0206936",
        "cursor": {
          "ref": "a96f8e44-532f-475d-9c23-3d5edcad4f2e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f16a4f21-cd62-43a5-b59c-33ab87383344"
        },
        "item": {
          "id": "09b2758a-aa20-40b6-ae39-7fa6e0206936",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "efd96f9e-3231-4b3c-a83d-9e2b2fd1a0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11da0e3b-a5bf-4cc2-8131-2db5b58fdf5f",
        "cursor": {
          "ref": "3467eddf-0f39-4b99-9b02-669500a0eb55",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "16592071-f791-466f-b31e-26c24cff0f59"
        },
        "item": {
          "id": "11da0e3b-a5bf-4cc2-8131-2db5b58fdf5f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bf05553a-decf-4e75-acb0-e8b51d770007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b24bc-68e0-4d9d-b8cd-eb30dd39bffb",
        "cursor": {
          "ref": "9d1862b3-18b7-4ea9-b9bb-d827f9aaaa65",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c0ddbdaa-3cbf-4988-9375-b58007ffe602"
        },
        "item": {
          "id": "dc8b24bc-68e0-4d9d-b8cd-eb30dd39bffb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1d1a1213-e1b0-472f-9ec5-deee344bc6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd45274-b90f-4ffd-9f6e-e1b30e1d3f1b",
        "cursor": {
          "ref": "dcf7964c-78b4-4f69-b962-9d849f320271",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9c7e4a8c-b922-41b9-98b3-d5f3449dd768"
        },
        "item": {
          "id": "1bd45274-b90f-4ffd-9f6e-e1b30e1d3f1b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dca91855-6a4b-41c9-a3cc-23471a7b8f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d2ae6f-ed30-462f-a936-531839b1dafb",
        "cursor": {
          "ref": "aa6b383a-7e4d-47c1-a3e7-6944a0a1b701",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5cb81089-5df1-4541-b638-50e8315e80b8"
        },
        "item": {
          "id": "08d2ae6f-ed30-462f-a936-531839b1dafb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2242e25c-f9c4-4501-a535-5a42d08c0166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8d23cc-49de-4edd-a2ef-6c7c12ab1d48",
        "cursor": {
          "ref": "2ad00523-583c-42eb-a3f4-9766cbd4235a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "379bf440-d162-4168-a612-b3969bf2888d"
        },
        "item": {
          "id": "9f8d23cc-49de-4edd-a2ef-6c7c12ab1d48",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3ff6ed1e-33c5-4b08-b07c-4c97ba45efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96498b7c-a9e1-4657-a030-dfccba5cc6f1",
        "cursor": {
          "ref": "8f2d33a7-bfb7-4e46-813e-c246254ef356",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5be226f2-c6f0-47ac-abd4-813cf04009cf"
        },
        "item": {
          "id": "96498b7c-a9e1-4657-a030-dfccba5cc6f1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f8359c42-af92-462b-b729-b9f034c5720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb7b25d-e5c0-4a58-a40f-ed2646bdf73a",
        "cursor": {
          "ref": "85eb4efc-188e-404c-b496-9874fd174801",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "85ea152d-271f-47d5-b5ae-b10b13079bb9"
        },
        "item": {
          "id": "ffb7b25d-e5c0-4a58-a40f-ed2646bdf73a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c85a0a9c-7a5c-4495-a198-eccbba427c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1078333b-3ab1-420d-9ec5-ec8e378e086c",
        "cursor": {
          "ref": "b1dcb0bd-050a-431a-8040-fd4af187e14a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee6748f8-2bad-43dc-a306-f861bfbfc402"
        },
        "item": {
          "id": "1078333b-3ab1-420d-9ec5-ec8e378e086c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4ddda47b-db6a-40ec-99ac-3282ff7c770f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8224c3-33b7-4f9a-bdef-89a735e992d5",
        "cursor": {
          "ref": "e7f33f5c-0f7f-49b4-86ea-08b7b6f1e2e4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aa2b9dd5-8785-424b-b353-0c7e1e92177e"
        },
        "item": {
          "id": "fc8224c3-33b7-4f9a-bdef-89a735e992d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7f9597ee-e32f-45f5-a99e-611d90dec98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fcb01a-5fde-4d1c-a433-3c71b3705089",
        "cursor": {
          "ref": "c587e927-5823-4221-b5bb-b39b2879f3e3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c51bbf4-7082-448f-8831-99ed1d4cb1b8"
        },
        "item": {
          "id": "33fcb01a-5fde-4d1c-a433-3c71b3705089",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "16438de4-1fc3-4058-b0a6-de1dceca8800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53a34a-f24a-4e5c-bed4-a082d7096859",
        "cursor": {
          "ref": "ac3f5728-86a6-4af9-8fe9-d608b12cd2d4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7c2974ec-3741-4586-a2c3-14703da2d180"
        },
        "item": {
          "id": "4b53a34a-f24a-4e5c-bed4-a082d7096859",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "02d45594-37a7-411d-be7f-6a314d4fddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6612404a-30ca-42c2-82b8-35462e7a564c",
        "cursor": {
          "ref": "d1482d79-ae80-4529-be46-3fbe10bf0b34",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "35fa38de-7bbb-43d1-95df-4ac3c4825fb2"
        },
        "item": {
          "id": "6612404a-30ca-42c2-82b8-35462e7a564c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "baebaedf-854f-4a37-908a-738f3d92cb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fcf8a4-a403-4a3a-9ee4-cb4930d30e6f",
        "cursor": {
          "ref": "c4742ad5-400c-498d-8781-e7506a7c2876",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae610dc9-1d70-4ba6-aa63-245fab17a5a6"
        },
        "item": {
          "id": "43fcf8a4-a403-4a3a-9ee4-cb4930d30e6f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cf1ee4bc-3490-4937-affd-a4cfc3d3d90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f749fd-8fd3-467c-b834-fe070516dfeb",
        "cursor": {
          "ref": "5c4fc8d4-5911-42db-ae74-c0bc21a10fd5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b6a8da0-f1d3-4ffe-8a6b-1f037cca67d5"
        },
        "item": {
          "id": "21f749fd-8fd3-467c-b834-fe070516dfeb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cda5c693-cf77-4083-a95c-09ebb09bbf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a9dec7-9b49-4ae5-a8a7-48907a0220a1",
        "cursor": {
          "ref": "4a817f69-c4c3-4809-89fe-6c861e92423a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c0ddf216-e4c6-4c8e-9a7b-c27f65c8d205"
        },
        "item": {
          "id": "22a9dec7-9b49-4ae5-a8a7-48907a0220a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf8894ae-dafb-4967-9d39-615a0872edef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7849199-5eae-4b10-9783-abb0d441d699",
        "cursor": {
          "ref": "474c4acd-01fe-4aba-b3b3-41d4beb77528",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "08d95926-b28f-4217-afef-fc4e32db45d6"
        },
        "item": {
          "id": "e7849199-5eae-4b10-9783-abb0d441d699",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a02d0a7-a2f9-41ec-b3ee-f922321e6df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb46bf-a346-42e4-9050-114216195f17",
        "cursor": {
          "ref": "ab92a755-3582-47c9-a9be-0dfac723a064",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4c2ffba3-26e4-4ae9-80bd-55e13728d446"
        },
        "item": {
          "id": "9dcb46bf-a346-42e4-9050-114216195f17",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "deebcadb-4045-4041-8415-1962226cb85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2a811d-ed37-4a4b-8609-e8ba774cb5e6",
        "cursor": {
          "ref": "466dd961-51de-4c96-af6c-8e5b1b1ae648",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8ff6f1c-36b3-4deb-8b13-8ce24b14338a"
        },
        "item": {
          "id": "0e2a811d-ed37-4a4b-8609-e8ba774cb5e6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "030451a8-ff87-4426-8103-dcbed4d4492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead95f44-3a24-4e8e-bdba-fee874cf358d",
        "cursor": {
          "ref": "c0de6d26-c2f1-4b64-84c9-52f24cc11151",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e36b026b-61d1-4d43-99cd-a6d8ddd1465e"
        },
        "item": {
          "id": "ead95f44-3a24-4e8e-bdba-fee874cf358d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "47e431a2-44c6-4f82-a230-8b43a3fb0731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af6d34e-500d-4353-984d-db134e0af068",
        "cursor": {
          "ref": "1972e8ef-a051-4894-8b67-abe71a23e793",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8ccf69ea-dc50-4242-8ac7-1a2eb0e8e71e"
        },
        "item": {
          "id": "0af6d34e-500d-4353-984d-db134e0af068",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6dc82add-de31-45dd-ba16-86a0fee054c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d826cf83-5ecd-4f7a-9c07-d2fff1d429cc",
        "cursor": {
          "ref": "fe49273d-a4e8-489f-bdc9-5cd8ad9879d2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ef4f72d-6d42-4c11-a309-5cefbdf7a522"
        },
        "item": {
          "id": "d826cf83-5ecd-4f7a-9c07-d2fff1d429cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "56c48337-64a1-466b-b403-1d7393e45b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e972632-48db-4229-90bd-b4ba6067ef08",
        "cursor": {
          "ref": "af0dbee4-e16e-46d8-964a-6afb049c6ea3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "deb78a6d-f107-4eb6-92af-dafd13b565ea"
        },
        "item": {
          "id": "8e972632-48db-4229-90bd-b4ba6067ef08",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ea41351a-a025-41df-8f10-6b8ca32c7438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4b95b-ffaf-41ed-9595-547350f08a02",
        "cursor": {
          "ref": "70d19e65-fa7e-4840-beb6-ddcb5ec79c30",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8f68502b-96ef-4c17-90fa-a70b6f89b9cd"
        },
        "item": {
          "id": "56e4b95b-ffaf-41ed-9595-547350f08a02",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "096cd994-fbab-44b7-ac2a-a65fde9a87d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c9ab8-bf03-4f64-b453-b388ca9f99df",
        "cursor": {
          "ref": "ad799a0c-d492-4383-a20b-274d948b087f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9649bf84-5435-469a-9085-fed9ccdf547d"
        },
        "item": {
          "id": "0c3c9ab8-bf03-4f64-b453-b388ca9f99df",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "95d02bee-619e-4bda-a64a-eadc8db5979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1095dccb-1016-4f96-ba15-76b4e4649688",
        "cursor": {
          "ref": "3124c3e2-4b3f-48f7-a9d1-325211402d88",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e04c127-f47f-409a-8306-5eab6aad4442"
        },
        "item": {
          "id": "1095dccb-1016-4f96-ba15-76b4e4649688",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "725cc22f-b936-414f-80a2-bc8b5f8b3098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c5579-ef1a-4fff-afa4-d692a1d5661a",
        "cursor": {
          "ref": "1a8d8e43-80e7-49d1-859a-be1ad005db05",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4779a2ee-ec7c-4da3-8eb2-291b0881225d"
        },
        "item": {
          "id": "e53c5579-ef1a-4fff-afa4-d692a1d5661a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f65ef2cc-04ba-405f-87ba-99282be9ec45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0917d35a-47b9-42d9-9689-eb0444117b6f",
        "cursor": {
          "ref": "b06bcb55-7365-43f4-98e7-f1be56feb3cc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "47ef6c8a-dd90-40d2-8a8f-a4b49308bddf"
        },
        "item": {
          "id": "0917d35a-47b9-42d9-9689-eb0444117b6f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8fc23dee-0b5c-4400-aba7-14b6dd27fec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46666222-61df-4770-9f30-16ebfc3305d9",
        "cursor": {
          "ref": "008a7d9b-6b4f-4dc9-9f2d-407939ede829",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0a603ed5-b868-40df-812a-ef4d51c9c78e"
        },
        "item": {
          "id": "46666222-61df-4770-9f30-16ebfc3305d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc467691-d146-4142-a8b8-9a45309e5911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef33ed-a9c8-4a35-9723-c3e01bd12035",
        "cursor": {
          "ref": "a2dcfed8-939d-4f0f-801d-9c4e774939a2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7dfe12f1-ddf4-4e18-b37c-babe4d328c5f"
        },
        "item": {
          "id": "75ef33ed-a9c8-4a35-9723-c3e01bd12035",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d8b25119-fa02-460e-9a66-e9cf6e47a733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b43b7-bbe4-441d-95ff-bd204bc8c2f2",
        "cursor": {
          "ref": "3fc09b9e-405b-4ab6-8b19-65d2a2bcc68e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02b2dcbb-942d-4411-828b-8505a5faecc9"
        },
        "item": {
          "id": "846b43b7-bbe4-441d-95ff-bd204bc8c2f2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "158cd7c6-a4ae-4c09-81f5-71f5e654c6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f59f7f7-106f-40bc-aba4-bbfd70d9dca7",
        "cursor": {
          "ref": "f57fa8fe-1acc-43f2-a853-16415ed25e9c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "555606e1-3454-4eb7-becd-cbd98e567c34"
        },
        "item": {
          "id": "2f59f7f7-106f-40bc-aba4-bbfd70d9dca7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fd7a8c06-8b13-4ab1-91cd-2fb614d6d241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f6647-0534-4b8a-876e-a76aaa5da3fe",
        "cursor": {
          "ref": "0232a8e8-5eac-4199-ba36-f629d6bdf81f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "881761c8-2465-4d44-a916-62d3b301fb6b"
        },
        "item": {
          "id": "f50f6647-0534-4b8a-876e-a76aaa5da3fe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2699ccad-0d7a-41f8-a2ae-40d5d290148b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8833991-7bbb-4d75-942e-a80cac47429c",
        "cursor": {
          "ref": "e16668f0-9301-477e-92dd-e61bfe382b33",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5fb55950-a524-4c00-bdfc-75659df81602"
        },
        "item": {
          "id": "d8833991-7bbb-4d75-942e-a80cac47429c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "130569d3-5106-4de3-a966-d8519be7028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08864165-3bff-4510-9a20-8adaf82052ba",
        "cursor": {
          "ref": "ccd14049-4b8d-452e-bbc2-8a7c083ea87d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c6431c17-6273-465a-8150-2271979017bd"
        },
        "item": {
          "id": "08864165-3bff-4510-9a20-8adaf82052ba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b2682196-48a4-4ad6-82c6-c424f0e8d188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9d7f0c-9c7f-4c5f-a9ed-6f56f41c9857",
        "cursor": {
          "ref": "4886329a-71f4-4d73-aaec-41eeab7234ac",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "74d06625-4743-4e84-807e-d0d0aa6686d4"
        },
        "item": {
          "id": "1b9d7f0c-9c7f-4c5f-a9ed-6f56f41c9857",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "68f32c60-ba30-40fb-8dc1-09a3a0e64fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5325c0-c666-401d-b884-4f86a252ce1c",
        "cursor": {
          "ref": "38b37a7c-2bb1-4763-8b31-f8c9ff0658b2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d897b86-6313-4d9f-9940-78aea2e0dd45"
        },
        "item": {
          "id": "8b5325c0-c666-401d-b884-4f86a252ce1c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "78c74192-e091-418a-b79a-68e2e532dcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d1700e-5881-40a6-860a-eead76ca6950",
        "cursor": {
          "ref": "cbc3b0a1-c142-4623-9faa-ef40a139850b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f7c99f3e-f83b-42ce-ba0a-c9f14e1f0802"
        },
        "item": {
          "id": "e5d1700e-5881-40a6-860a-eead76ca6950",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "76716f0b-9bca-4e0f-ba6b-92a0a1976b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2db2df-3f61-4c3a-9fc2-61f791bff389",
        "cursor": {
          "ref": "2365c3bb-23e6-4b1a-a00f-f7ac63473d12",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "211e6878-3c83-4338-8723-034fbc0947de"
        },
        "item": {
          "id": "ce2db2df-3f61-4c3a-9fc2-61f791bff389",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e191f0af-b05e-4470-a6a4-34c47b6659bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5259c4-cb60-40d7-9522-50f8efd160d8",
        "cursor": {
          "ref": "b615fe36-514c-48b2-8ffe-05956401826b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd564856-20bd-4ddb-8b01-e0b1f3fb5bb0"
        },
        "item": {
          "id": "bc5259c4-cb60-40d7-9522-50f8efd160d8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fed99356-aa36-47ca-88ae-58e1fe680a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b32a97-0c73-4309-856c-c260c66d41e9",
        "cursor": {
          "ref": "fddfc461-3e32-409f-bf6c-65b3f603e5a2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b4c54bb0-a9c0-4868-9c0b-5ff2cf6b5f95"
        },
        "item": {
          "id": "e2b32a97-0c73-4309-856c-c260c66d41e9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "49c076da-2c44-4b83-860e-529a8af8170d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9fa8df-4579-48f9-b368-9b606a68b9a1",
        "cursor": {
          "ref": "62804c6d-caf4-428b-8918-70601f3c8ef2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "66854cc3-7b1d-45b9-853e-31bafc69ae1a"
        },
        "item": {
          "id": "ae9fa8df-4579-48f9-b368-9b606a68b9a1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "11aac90a-ef2f-4b93-841a-d5ee0b1dab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3af893-6592-4a5b-9541-df4e86d72477",
        "cursor": {
          "ref": "53f966e5-2d50-4c6d-8007-5a9fe8c48a44",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "993afd7d-e0fd-4b10-ba2f-c0c1de5c1c95"
        },
        "item": {
          "id": "9d3af893-6592-4a5b-9541-df4e86d72477",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b46975a1-c56c-4e3e-b921-c3acafdac2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72690a2-4cb3-464f-9afe-0e3a373c50af",
        "cursor": {
          "ref": "f363d1b8-8fdc-4e63-a355-15dc7ee0b7ba",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "931c6fac-9e2b-436c-9cb0-f098cf1d20c9"
        },
        "item": {
          "id": "e72690a2-4cb3-464f-9afe-0e3a373c50af",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cee148fe-d6db-4ba1-b6c5-6f982ac59dc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10016626-c292-4244-9801-3383211a79cd",
        "cursor": {
          "ref": "9c6e4b8b-fc54-4cd7-9294-0cc7f0538ea4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "117ab10d-1f01-4ecd-9e76-44da794a5003"
        },
        "item": {
          "id": "10016626-c292-4244-9801-3383211a79cd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "554861df-69b0-4ceb-b13e-9b88398ed37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cd4aa7b2-6efc-420e-9bfb-27603ecfa9c1",
        "cursor": {
          "ref": "b199ff41-f6e1-4449-a03b-fb714993ac06",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fcf810e7-0d77-4d76-b9a2-8f7f8edc6c76"
        },
        "item": {
          "id": "cd4aa7b2-6efc-420e-9bfb-27603ecfa9c1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80057ebd-b831-4191-afe7-fa17f0f3af8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "863f9f97-82ea-49d0-b6e2-eb87a8702a30",
        "cursor": {
          "ref": "6cc20f09-8a08-45c5-a18a-d27056fa1282",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "12d520cb-5234-4f38-b1f8-caa6452cf556"
        },
        "item": {
          "id": "863f9f97-82ea-49d0-b6e2-eb87a8702a30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c13a05dd-ceb7-4288-a413-c4302e39d10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c52dbb9f-00a4-4519-862b-7a99404930ff",
        "cursor": {
          "ref": "d09c35d9-ac0e-4b79-8056-4914dc594b03",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5649039e-5217-4ba5-b278-dbd65acf492d"
        },
        "item": {
          "id": "c52dbb9f-00a4-4519-862b-7a99404930ff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e16a55fa-2c91-4d95-ac2e-1d7b239e88dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4d63b62c-ed76-4d49-b01f-f968240a31a9",
        "cursor": {
          "ref": "72e37f2a-70ae-441d-abfd-79e2ff87e2da",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "87b14270-c4db-4318-9365-69acec1cd5cc"
        },
        "item": {
          "id": "4d63b62c-ed76-4d49-b01f-f968240a31a9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e3a715b6-a148-4338-b068-06c972b8e3ab",
          "status": "Created",
          "code": 201,
          "responseTime": 4390,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c803ea6e-e9ef-4422-b1c5-6eb0d5ad5471",
        "cursor": {
          "ref": "507da20e-14f0-4d16-81fa-af71f9b583e4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ddce7ba-e4cf-427e-9711-5320d64c116d"
        },
        "item": {
          "id": "c803ea6e-e9ef-4422-b1c5-6eb0d5ad5471",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "259dcf73-15a5-4a20-9620-941e9880f75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cbb0a892-ae45-42f0-bba2-989a24a17de0",
        "cursor": {
          "ref": "2f482856-bf6e-4dbc-9013-cdd135fcd22e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "899ecd61-77ec-407e-9947-bbd33a822276"
        },
        "item": {
          "id": "cbb0a892-ae45-42f0-bba2-989a24a17de0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "357509d3-5677-4fab-9f8f-c8b81920dc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d6edc16c-ac8c-4744-ad2f-30217b9b6861",
        "cursor": {
          "ref": "f34ffb3b-867b-416c-a1c4-d2f74cd79cfc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9af8c69-a1a2-46e7-a1f4-86a81cb01f4d"
        },
        "item": {
          "id": "d6edc16c-ac8c-4744-ad2f-30217b9b6861",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f314ff14-2b73-4f90-9449-19df6e50dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7821d2a1-4c84-49f4-8cf2-b760df91d879",
        "cursor": {
          "ref": "50467e66-5686-40b5-80a9-ca6bb5c2a864",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5ee638d4-c68c-488b-a908-1c6faae06512"
        },
        "item": {
          "id": "7821d2a1-4c84-49f4-8cf2-b760df91d879",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "96d4de64-a8a9-40b1-8b71-a0224916e868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fefffd-990f-40c4-8b3a-425f70076250",
        "cursor": {
          "ref": "f72202fc-0f7d-458c-84b5-14b6ac3f6218",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fb423f99-53b1-4fec-b07f-6b94e91fa166"
        },
        "item": {
          "id": "45fefffd-990f-40c4-8b3a-425f70076250",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "450d6310-6a39-48fd-94a8-a59c6b4ad694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd53df8-a93e-4124-b0d3-c30b3f3ca2f6",
        "cursor": {
          "ref": "85552900-29af-4026-a620-6047b1062abc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e85bd693-5bfe-44b4-81b6-96ed2541d82e"
        },
        "item": {
          "id": "3cd53df8-a93e-4124-b0d3-c30b3f3ca2f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b3dc6c68-ed15-4105-9f4d-ea600fb6585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf88679-f717-49d7-a944-ee344027e297",
        "cursor": {
          "ref": "bc142cab-1c31-402e-8ba9-040c64c6523c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "56303cf8-3bdb-4466-9c0e-5881557b86f3"
        },
        "item": {
          "id": "3cf88679-f717-49d7-a944-ee344027e297",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c2f1517-a67d-4e5b-9b61-d446e7e993e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5db6530-5ad6-41b5-ad6c-9d3bc5b2e2fc",
        "cursor": {
          "ref": "1da96100-7a2c-40a0-af53-279fa51efc02",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29000bdc-13f0-4f1d-b15d-886a98288f0e"
        },
        "item": {
          "id": "b5db6530-5ad6-41b5-ad6c-9d3bc5b2e2fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50057dbf-c250-40bc-867c-6e30d19fbc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6585a803-fdc3-4a91-a425-11d743def0f3",
        "cursor": {
          "ref": "1b3e0f7f-1127-4486-b8a4-24d28994df65",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea14f8d3-f013-4ee9-a441-078846bc1c9c"
        },
        "item": {
          "id": "6585a803-fdc3-4a91-a425-11d743def0f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "53ad817e-be52-428a-a418-c3d9a2e32b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab740b3-23dd-4da7-9435-845a9bd141fe",
        "cursor": {
          "ref": "fd021237-28c7-49d1-9d8b-497dac9c5eaa",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6ff281ce-095b-45f1-a649-57ae5c43f5b0"
        },
        "item": {
          "id": "8ab740b3-23dd-4da7-9435-845a9bd141fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3472579-7756-45a0-adb9-c4596e11bf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b8d19-41a1-4f1c-8230-8f8a71f205a9",
        "cursor": {
          "ref": "7f7c8d0d-7057-4ec8-8278-968faab10a22",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4396a23e-0f26-4510-b7f7-00dd29cf4bfa"
        },
        "item": {
          "id": "c33b8d19-41a1-4f1c-8230-8f8a71f205a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5ff284cd-848e-4015-a7db-8cb21319ef11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811444e-c97f-4686-94c7-d651bd4dbdda",
        "cursor": {
          "ref": "51786a3d-859e-4e84-a775-6c41a291a03c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f80e9cef-83c7-4f74-ae42-c11839d62084"
        },
        "item": {
          "id": "c811444e-c97f-4686-94c7-d651bd4dbdda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6752270-b12c-4312-a666-bb3baeca9538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d11f68-fd09-41f9-ad5a-84d6241131d7",
        "cursor": {
          "ref": "24eb7170-7c45-4f1b-8b0d-cb00fcff7f22",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d156f0b1-e1f9-46ed-99db-28c704c42e6a"
        },
        "item": {
          "id": "a6d11f68-fd09-41f9-ad5a-84d6241131d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ba86dd0-9cda-4e04-a59c-aa8fd75a14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f10d7-afb7-453a-b711-b86859df2ec3",
        "cursor": {
          "ref": "3988d4ce-7326-41a7-ba5d-4d86e206c327",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "314662cb-b426-46d6-8c77-59b5d8e38900"
        },
        "item": {
          "id": "b85f10d7-afb7-453a-b711-b86859df2ec3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "669789f1-14e4-4783-9db9-bd68bda1256a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596aec39-bd52-4309-8fe5-da161bbf55d4",
        "cursor": {
          "ref": "cfc8e967-6464-44ca-8048-4f53a9f66d92",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d6213a8-bb82-4f37-b760-7691bdda4d5e"
        },
        "item": {
          "id": "596aec39-bd52-4309-8fe5-da161bbf55d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5d8aec8c-2e3a-4a42-baa1-cb89fcfbadd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a922d2c-01b4-4119-b05c-41de1d4b59eb",
        "cursor": {
          "ref": "0ced1d1e-b5d8-47b2-af5a-73e95381d4ad",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8404808e-51bb-4e73-8457-889b6e7f159c"
        },
        "item": {
          "id": "3a922d2c-01b4-4119-b05c-41de1d4b59eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fe710da-dc25-4760-bf2e-ac062b68243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0873751-e0d5-49e2-b039-b1d32695b535",
        "cursor": {
          "ref": "445192c1-0dea-4811-a854-188809b7ba23",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cc5cdbaa-ee82-4593-9a96-207433421541"
        },
        "item": {
          "id": "b0873751-e0d5-49e2-b039-b1d32695b535",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "67928a5d-cd34-41ba-a638-3a59d7da8f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28de779-7fb1-4e6c-aa93-67b77783c9b7",
        "cursor": {
          "ref": "da8e9968-0a54-4ea1-af50-968a2d91b9d3",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "53babc6f-162b-498f-b6d9-043225fa12ce"
        },
        "item": {
          "id": "e28de779-7fb1-4e6c-aa93-67b77783c9b7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b7e5733c-87c4-4043-93ec-8961782795f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbce6aa-919b-4e45-928a-f8ca2a10ee51",
        "cursor": {
          "ref": "a01a2cb1-85b4-4638-9a72-0a1f4214097a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5d3d23ef-0571-4c29-9542-a6500ecb8366"
        },
        "item": {
          "id": "6fbce6aa-919b-4e45-928a-f8ca2a10ee51",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84ba4dcf-2886-443b-b712-66ce4c0bbadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158675d5-dbbb-440f-94f6-9e0be6e7e841",
        "cursor": {
          "ref": "68db878f-42db-43d5-bcd7-18af3e07f22d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cba0cf61-defb-4696-9f51-8957d1d49b60"
        },
        "item": {
          "id": "158675d5-dbbb-440f-94f6-9e0be6e7e841",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6e605549-adca-4abe-a959-d17c80a11659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a88c0e-aab6-496c-a3e1-0ac1c8abf2ba",
        "cursor": {
          "ref": "4b11315b-fbc3-4299-b39b-ccd9125d4763",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "11901b25-10c9-4a2d-8f6c-adf99520e3ef"
        },
        "item": {
          "id": "e8a88c0e-aab6-496c-a3e1-0ac1c8abf2ba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "130fb54a-785f-4b0b-b1c1-ea8d3172f374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328d4d8-0728-4cb5-824c-43fa10ff4ba7",
        "cursor": {
          "ref": "29b7f16a-2f44-4f36-9b81-e7cb660da510",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e51df284-f6b8-47d9-9cdb-c8ea213831ac"
        },
        "item": {
          "id": "f328d4d8-0728-4cb5-824c-43fa10ff4ba7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cb9648bf-2dbe-4092-b157-e9fd728013ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c789c105-e80c-44f2-9b7f-be63e64e2753",
        "cursor": {
          "ref": "7f863b2f-9f17-4475-9c4d-9548a7bb4d9b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "67d0b5f4-5ae9-4966-96a9-ffd125256cdf"
        },
        "item": {
          "id": "c789c105-e80c-44f2-9b7f-be63e64e2753",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0068151-f1c9-402d-b0cb-30ecebb29ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff9393-57ef-4ccc-b91c-4f342534cef2",
        "cursor": {
          "ref": "14ba1f08-baeb-4d50-9ea1-93a3c4bf8ff8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f6dbbc73-ae76-4273-9a82-3de039f85551"
        },
        "item": {
          "id": "c5ff9393-57ef-4ccc-b91c-4f342534cef2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b1c5164d-a6af-4cb3-9b5c-1e46e009107d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2c1f69-4cb2-44e2-bfc3-163666377f32",
        "cursor": {
          "ref": "5942c460-7b43-46a2-ace8-128147ddc08e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6d8b4735-158e-4195-ab05-744382c17475"
        },
        "item": {
          "id": "0f2c1f69-4cb2-44e2-bfc3-163666377f32",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d7e3ea1-fa9c-46e7-8868-f48eb7ea96ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95bf673-f263-4d3d-83c2-a87ed7ed2519",
        "cursor": {
          "ref": "ff7b2ebb-eb0f-4a12-af3f-5f4b78ea6f55",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bda36897-601a-45b6-9c9b-0bb1bd0b2470"
        },
        "item": {
          "id": "a95bf673-f263-4d3d-83c2-a87ed7ed2519",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "92ab954f-a9df-495e-91f5-c8d40105fb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3e0d4-c7d3-4e7d-8528-c443adfda2f3",
        "cursor": {
          "ref": "3bdf1ed1-a4e7-4757-88c9-a26b6a975b08",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05928ea0-b1c3-4fc7-ae17-efd80fa586db"
        },
        "item": {
          "id": "c4b3e0d4-c7d3-4e7d-8528-c443adfda2f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07a59563-e298-4854-9b96-67d62c299d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ad7f8-3999-4c01-857e-b2c7031d9db9",
        "cursor": {
          "ref": "25629593-aefc-4ee4-88b0-f3c3a76a5632",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bfaaeb2e-f51d-4403-b12d-d3f515c31552"
        },
        "item": {
          "id": "ca1ad7f8-3999-4c01-857e-b2c7031d9db9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7518ab43-cf29-433a-bc8a-7896708f2cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf265abc-3b22-4aa4-be30-22d53c6c8baa",
        "cursor": {
          "ref": "12ce4335-03d7-4d1d-bd43-3cf13f3f32c4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db8c8cf8-fcd2-474b-a3af-f46faf172d60"
        },
        "item": {
          "id": "cf265abc-3b22-4aa4-be30-22d53c6c8baa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5f1b3eda-d7f4-49f5-aa7a-5bda25dff3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8659bc0-efdd-4cc0-bc54-311911ba25b2",
        "cursor": {
          "ref": "47e64c29-3181-4d3d-9024-38dc427c9580",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09ea94fb-8552-4834-ab04-fde5b346ab44"
        },
        "item": {
          "id": "c8659bc0-efdd-4cc0-bc54-311911ba25b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4ff73e9d-fdfa-4de7-9b58-4fbcde67e6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e591dfc-cc04-41c2-9093-4700d6f156ca",
        "cursor": {
          "ref": "ab511680-d76f-43d7-9d6d-49cd7a3af634",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7610f72e-8516-48d5-aab3-9d1707d5de0e"
        },
        "item": {
          "id": "8e591dfc-cc04-41c2-9093-4700d6f156ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "00fe8002-b5a2-480e-942b-50cdf19c73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83205547-3a72-4f4a-8c12-a540607b8fa3",
        "cursor": {
          "ref": "c6b46f05-b306-44a8-9c19-10d5c62f57d3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ea60f166-5a9d-473b-b0cd-afca38087cf5"
        },
        "item": {
          "id": "83205547-3a72-4f4a-8c12-a540607b8fa3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "017cc778-763e-4275-8c07-6dc9cfdad031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b84009-9f8f-43ce-ab8c-2c6b23e4f8a3",
        "cursor": {
          "ref": "127cc915-2ba2-4843-a188-a382273e330b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cd62393f-c15c-4cb3-8a8f-70a2454d2a12"
        },
        "item": {
          "id": "23b84009-9f8f-43ce-ab8c-2c6b23e4f8a3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebd8942c-c124-4ffa-995b-8a995b23cafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d0b93f-3b93-40d1-8631-f1bfac9598e8",
        "cursor": {
          "ref": "73bd1c00-db92-4676-a21b-dcdf386c6d9c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0287cbbb-5aea-45c7-a31b-04ccc7872d71"
        },
        "item": {
          "id": "57d0b93f-3b93-40d1-8631-f1bfac9598e8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "58544a95-60ab-4403-8e88-f08b5694fd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2017a0b3-9f22-42db-85d7-24c5922c8b60",
        "cursor": {
          "ref": "7c6edfb0-7bbf-4568-9d23-213875bab894",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "66478b46-546b-4268-a84e-94b3718b9600"
        },
        "item": {
          "id": "2017a0b3-9f22-42db-85d7-24c5922c8b60",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "222cc919-8f24-41bd-bb44-68e2edaf9c01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed1dca4-a09d-4180-8c7e-48f76a8a43c2",
        "cursor": {
          "ref": "0be06939-0542-4686-95aa-a8aba1f1ac63",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0adbf6b8-8726-404d-8014-a9f691b7904e"
        },
        "item": {
          "id": "7ed1dca4-a09d-4180-8c7e-48f76a8a43c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "88552098-d8e6-413a-83b7-57ea8db0c10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0602c5fa-aab1-49c9-b5b2-edd1e83ae752",
        "cursor": {
          "ref": "5344efe8-3f9e-45e9-b95e-a4011a06d05a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "48754b33-c436-4563-9f18-a01d1e038e87"
        },
        "item": {
          "id": "0602c5fa-aab1-49c9-b5b2-edd1e83ae752",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40b477b1-5885-416b-aea4-b5bdb57e59bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe92720-4be6-4ee7-8beb-41e2277286f2",
        "cursor": {
          "ref": "bf705b2f-9806-4ec5-ba93-7bd071a8601e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "373e8b94-a191-413c-ad13-478e56eb7803"
        },
        "item": {
          "id": "abe92720-4be6-4ee7-8beb-41e2277286f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ffc36e52-a746-459f-b9f0-cadbac39e245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc1b00-7aea-4e72-a96c-b375a2284501",
        "cursor": {
          "ref": "6e759f01-2c80-40b8-97fa-8a8e284344d9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0811b788-09a4-4490-a3e3-d7f846be08a3"
        },
        "item": {
          "id": "66bc1b00-7aea-4e72-a96c-b375a2284501",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ee873d64-805a-4560-b439-68f050917283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c2b7c-0650-4956-a04d-89005178acb3",
        "cursor": {
          "ref": "137ae328-f672-43f9-9c1e-3cf6a57b8874",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f84d0c35-cd95-4a4d-800a-36b3e5ebc7d9"
        },
        "item": {
          "id": "630c2b7c-0650-4956-a04d-89005178acb3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e900cd55-5230-45f2-bdba-fd068434060c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b6238-73c6-407e-a4a0-bfa0eadf959d",
        "cursor": {
          "ref": "f57069c0-e650-46f6-a2fd-b469dd4b673f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "724099b4-4ed0-4ef8-89d7-1c2bcdb44b34"
        },
        "item": {
          "id": "080b6238-73c6-407e-a4a0-bfa0eadf959d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6b5c8d63-3e2b-4889-bc12-aa48c49e44bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49b590-fdab-481e-8eea-e8fea3fb0a70",
        "cursor": {
          "ref": "ba4deddc-78e5-41e1-869c-cff88b1ac617",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "39d1bca8-3a01-43de-8f8d-35efcf0f2f05"
        },
        "item": {
          "id": "5e49b590-fdab-481e-8eea-e8fea3fb0a70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5be4d5ca-2186-4817-bbac-a2b41c86d8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bfce30-8256-4199-8386-b633f9d384c4",
        "cursor": {
          "ref": "57cc87ff-8173-49d8-bffb-debc77eab66f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "58ad7302-9a0c-44d6-9172-bdd4639afded"
        },
        "item": {
          "id": "79bfce30-8256-4199-8386-b633f9d384c4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bcc1427-97af-494b-bb1e-21cc1d5f5143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfe30f4-bca3-4b9c-a710-864510a22f24",
        "cursor": {
          "ref": "eaffa345-69c4-4a37-8c6a-0e87014369bb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0054b081-fd46-4a12-ac33-abab860cb878"
        },
        "item": {
          "id": "2dfe30f4-bca3-4b9c-a710-864510a22f24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d0791b0d-ad2d-43f0-a33c-df27d944eb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f301d684-b6cb-4cbf-948d-f73befbb3449",
        "cursor": {
          "ref": "8e670191-0420-44da-8a11-37329ea10497",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "740990ba-f912-4a18-a635-b5408844e286"
        },
        "item": {
          "id": "f301d684-b6cb-4cbf-948d-f73befbb3449",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1009a616-40b6-4cf5-8206-c69878238d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e481e-6c95-4c6f-8f08-7ae8a2f98585",
        "cursor": {
          "ref": "892ffa60-a2b9-403b-b9b4-8f69a38d0b80",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e16d8ee6-27ef-4e06-8767-62627b67d6b4"
        },
        "item": {
          "id": "e52e481e-6c95-4c6f-8f08-7ae8a2f98585",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f8e4ef0-ac97-4f4e-a675-f5c600ab0166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a2d069-e654-406f-83e6-6cda471ec152",
        "cursor": {
          "ref": "878e69fa-5083-485b-880a-7bec9561b04a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3877bf83-fd9e-4ab8-a49e-09ae44c78c8a"
        },
        "item": {
          "id": "12a2d069-e654-406f-83e6-6cda471ec152",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "240d8d59-6b7b-43c0-8297-392cfd500c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf4e362-4cb4-4992-8274-551b29925b85",
        "cursor": {
          "ref": "fae65cd6-6cf9-436c-97bf-dbcaea19d128",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "50261f8f-50d6-4ed5-bb17-49ace0c8b888"
        },
        "item": {
          "id": "3bf4e362-4cb4-4992-8274-551b29925b85",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b45a53ba-2fcc-43d4-9431-90f4f95ac0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbd062a-ddc1-4cd7-b9c4-09cdac000263",
        "cursor": {
          "ref": "1054ce38-4519-4274-bd27-9a3d052746c9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3814fafb-e1b6-449c-831a-29ceb8cffe32"
        },
        "item": {
          "id": "1cbd062a-ddc1-4cd7-b9c4-09cdac000263",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d071f1b0-a283-4a5d-9a4d-2e2c37f5d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857aaec8-45e7-4cfd-9063-e42d73694e4c",
        "cursor": {
          "ref": "79e427f6-ae41-4432-ad0a-3643edaf1395",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "39cce135-5533-48d1-b39e-d8a148d0ce8d"
        },
        "item": {
          "id": "857aaec8-45e7-4cfd-9063-e42d73694e4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f816153e-522f-4e25-9df3-c40cc9549a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8377bb3-18d8-449f-820e-7a1d9b5fb75f",
        "cursor": {
          "ref": "4e8b752f-18af-46d4-901a-23dfeee6d090",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ba501d22-d505-476d-96b5-c96f12ee4d38"
        },
        "item": {
          "id": "f8377bb3-18d8-449f-820e-7a1d9b5fb75f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "833a94b7-511a-4385-84c9-b810b1e7de8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90d25ba-fc23-4327-b693-c9ebd28ad20b",
        "cursor": {
          "ref": "5d874885-091d-444c-bd28-7204eb0107fb",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cabdde6f-5f7f-457c-9c0a-35fe9b3bba26"
        },
        "item": {
          "id": "e90d25ba-fc23-4327-b693-c9ebd28ad20b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3523fc42-93cc-4d10-9772-f0db975157ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816f76d5-ab6b-4ed6-96d7-db28973bbdb2",
        "cursor": {
          "ref": "df040e18-a837-473f-aa91-e4513c7cd18c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3cb493e6-322c-4d88-848f-f99db4bc6577"
        },
        "item": {
          "id": "816f76d5-ab6b-4ed6-96d7-db28973bbdb2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c7dbd92-298d-4609-ac2a-f3107abd17b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf08c22-67f0-4297-9aef-2d1afaedf879",
        "cursor": {
          "ref": "61b15ea3-8dae-48fb-be86-ebd5f91b7578",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8bd740ce-6543-44da-a0e5-6db26fbd6f5d"
        },
        "item": {
          "id": "eaf08c22-67f0-4297-9aef-2d1afaedf879",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "630f72ea-c5e5-462b-b4ea-a5c02a38eaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc5f2e4-16f0-47c3-9784-77e8ad7e274b",
        "cursor": {
          "ref": "d1505940-828b-40a6-8c68-d7548921cbbb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2481a844-3e8d-4340-b12f-301431e72933"
        },
        "item": {
          "id": "cbc5f2e4-16f0-47c3-9784-77e8ad7e274b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d70c5c6b-c298-413d-8255-f47ddf06c66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad5584f-41f8-4f9f-b474-ebccf7a7ceec",
        "cursor": {
          "ref": "fdfaf03f-658b-42db-9f25-5a067a54a250",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3ee0ed15-842f-490b-9de6-7dcc05c520e1"
        },
        "item": {
          "id": "cad5584f-41f8-4f9f-b474-ebccf7a7ceec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "accd9370-5d44-4163-a6e5-43d694c59340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f677183d-6f70-4d7c-b3d1-f30e17c8937d",
        "cursor": {
          "ref": "e210ff50-d50d-473e-bb2e-7e236bb73b1c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df555e80-e995-4db7-8fe5-9f3c6f883df6"
        },
        "item": {
          "id": "f677183d-6f70-4d7c-b3d1-f30e17c8937d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0697f91f-e4a3-47b7-9bf6-594a154edf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04b69f-a1bb-4989-ad0b-1ed127cc72c1",
        "cursor": {
          "ref": "c9bfa7a9-e2cf-486d-9d97-a4faddcfc5d4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a5ab042d-92e5-457b-b8ff-049fbf9c3f9e"
        },
        "item": {
          "id": "8c04b69f-a1bb-4989-ad0b-1ed127cc72c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e9b1575-6deb-45f6-944a-3dd77c5636f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1dd85-b767-4721-b42d-dec6c1dc5eac",
        "cursor": {
          "ref": "d6217f3a-58c2-4465-8ab8-645e7eb45414",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f0ee317e-033f-433b-abee-fd777918e735"
        },
        "item": {
          "id": "e4c1dd85-b767-4721-b42d-dec6c1dc5eac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ce6e78c6-a89e-46cd-abd9-a7b4b09999ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62161ca-fa70-41a9-ae11-13cd9cbd531a",
        "cursor": {
          "ref": "6bbf63e2-56f2-4be7-a10e-35dc267f22b0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4134ce8e-a5cd-41b7-a559-6f1877ae901c"
        },
        "item": {
          "id": "f62161ca-fa70-41a9-ae11-13cd9cbd531a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "24dbc082-24d8-4f1b-82f4-84030eec51b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4562d505-759b-48b4-bd08-b314ce667fc0",
        "cursor": {
          "ref": "a2b5e672-7b27-4dbb-ac2f-31881c74ab67",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "203ccb40-d67f-4350-a0a7-e3dabf24614f"
        },
        "item": {
          "id": "4562d505-759b-48b4-bd08-b314ce667fc0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ac41a9a4-8179-4bce-bafa-622f12d51d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebad47a9-7b1d-40eb-a3c8-00d1af4308a0",
        "cursor": {
          "ref": "83b7cff6-b35e-450d-946a-3a6697709f4d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fee66b3a-2e2b-4f77-b7e8-40dbfcfc7971"
        },
        "item": {
          "id": "ebad47a9-7b1d-40eb-a3c8-00d1af4308a0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3210d52-609c-4173-a3ec-86c20bad7994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7e0a9a-4d9f-4723-84ec-52b3dd3c4908",
        "cursor": {
          "ref": "4dc9bf5f-c96b-432e-ab12-5fb0ae62f94c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8ddf574a-91de-4879-9922-f153d9db21bc"
        },
        "item": {
          "id": "ac7e0a9a-4d9f-4723-84ec-52b3dd3c4908",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60cc53fc-299c-4e26-8135-7bf48389be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5496eeda-acd9-422c-85e7-77ac8cf768cc",
        "cursor": {
          "ref": "c0bbe51f-b69a-48ba-b204-9de2844460b1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e9b94dc8-74f1-481d-b57c-3bcd173f6d2d"
        },
        "item": {
          "id": "5496eeda-acd9-422c-85e7-77ac8cf768cc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a9b815c4-bb74-413f-9ec2-e6a1b39692bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f622a47-ed68-4ccf-bf24-9740290017ce",
        "cursor": {
          "ref": "47768004-423f-47d1-be7f-8743e83ee1c0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7a6dfa42-42c7-4d38-a25b-297ef0ca98a3"
        },
        "item": {
          "id": "1f622a47-ed68-4ccf-bf24-9740290017ce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bcf9fe72-bcd1-4fda-b8e1-8bd476fc1a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4df0c4-6426-4f6c-9ae7-7999cc252c10",
        "cursor": {
          "ref": "052eed8f-9d27-49ed-b4cf-da057c134230",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e3d656bb-0a15-4bc6-a0b5-9dd3ec0545c3"
        },
        "item": {
          "id": "bf4df0c4-6426-4f6c-9ae7-7999cc252c10",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "58d4cefd-8e32-47c4-bd0f-dd2561fd425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98e1352-03d8-4e2c-9b5c-95ef6125ab04",
        "cursor": {
          "ref": "e6535978-bea6-4256-885e-8b47432f73d7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "db37d2c4-fa1f-4ce9-9c39-ec22a0cd4002"
        },
        "item": {
          "id": "a98e1352-03d8-4e2c-9b5c-95ef6125ab04",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9d724c1b-1f69-43a3-94a3-ece315561db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7086bc6e-2aa2-4069-8277-6e9ccffbfb72",
        "cursor": {
          "ref": "a6c5a709-8cdd-4a25-9650-e0c3d1833e22",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0d51cb98-5997-4092-a8d0-dddd1d2fcd2c"
        },
        "item": {
          "id": "7086bc6e-2aa2-4069-8277-6e9ccffbfb72",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c45c3b3f-539b-431a-b614-4b6b840e198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc123e3-95a6-4ec1-93ec-2bfe5babb549",
        "cursor": {
          "ref": "57d144f0-e1b5-4fea-ab80-bab2c50194a7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8ca9fa76-c044-4463-93a1-733c766c71da"
        },
        "item": {
          "id": "2cc123e3-95a6-4ec1-93ec-2bfe5babb549",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2664ff5a-9863-4f47-84bf-6fea6edb12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf9450a-4875-46c0-8552-b908f64b7327",
        "cursor": {
          "ref": "8ae551e3-3764-4960-927e-00e28094f686",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2c930674-360c-44e8-afaa-cd31b6f27b59"
        },
        "item": {
          "id": "ddf9450a-4875-46c0-8552-b908f64b7327",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "327dad6a-e840-4656-8af3-17c6e0a42aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089fdec-1e8c-4e7a-bc7d-fb856fc1ab70",
        "cursor": {
          "ref": "4a00e9fd-f036-4969-a43f-b12b57c0b6ee",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f0c5d063-2839-47eb-b23d-be9bfa050573"
        },
        "item": {
          "id": "d089fdec-1e8c-4e7a-bc7d-fb856fc1ab70",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "27510a7e-8f66-4f33-8b39-d8d97f2cda6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade339f-28eb-4d48-b298-0e36f004426f",
        "cursor": {
          "ref": "f8a76d77-7b45-435e-a6cf-14b3b9107980",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "294bcb55-7e7e-4894-9351-b895e77e92fd"
        },
        "item": {
          "id": "7ade339f-28eb-4d48-b298-0e36f004426f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "80df0b8f-d51a-4057-9f1f-662acc524c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da940c6c-70a7-4ac7-9587-6b1bfe83072e",
        "cursor": {
          "ref": "bf46a055-e8b7-4c65-a7d6-d4306efa41ce",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8ac8c20-165a-4316-9e61-d14a28afafe4"
        },
        "item": {
          "id": "da940c6c-70a7-4ac7-9587-6b1bfe83072e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3dae5212-b914-4460-b21c-ab48ade50405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a94397-5409-402a-a4a7-066dc2c9a105",
        "cursor": {
          "ref": "ca4c7bd1-207e-4113-b811-1a1f945125ca",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43dec36c-4749-4dff-a55b-94b7f82fb8a7"
        },
        "item": {
          "id": "65a94397-5409-402a-a4a7-066dc2c9a105",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a6ec4505-4ee1-4b5e-89f5-3f649bf0fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd64c55-56d6-490e-93d2-37b02c50f507",
        "cursor": {
          "ref": "0d8557dd-1037-4031-81e8-434c6b85bfd1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b07b9616-5a0c-4011-b4e1-c803c9427bee"
        },
        "item": {
          "id": "ffd64c55-56d6-490e-93d2-37b02c50f507",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7f361289-3f90-4a82-ab03-ab4902874dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcd2322-e382-47d6-b845-43fb49eadf0a",
        "cursor": {
          "ref": "3da73c86-f559-4277-8f58-c473103043e5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "81afbcf0-3099-4d31-ba14-4886ec36106a"
        },
        "item": {
          "id": "4bcd2322-e382-47d6-b845-43fb49eadf0a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a5b3b45a-f96b-4cf6-becd-d52e0cbc347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7b07c7-3cfe-4a5f-98c5-ca41538e85b6",
        "cursor": {
          "ref": "649b4bcf-0377-49a2-b3c6-7acf110a07a8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6d4f2896-30f4-4643-be59-d0d835c5a51a"
        },
        "item": {
          "id": "9b7b07c7-3cfe-4a5f-98c5-ca41538e85b6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ed88eb77-7347-4061-84f1-a66805bf1aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13594a6-bd12-4eb3-a44d-142dd9275a87",
        "cursor": {
          "ref": "53f717c3-2df3-486f-8a72-c4fcd1a6627b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2770746-5625-4e74-a382-1eaaf298c871"
        },
        "item": {
          "id": "c13594a6-bd12-4eb3-a44d-142dd9275a87",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e3eba979-857c-43d5-b94c-06c57350b281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2199510a-68b1-4576-aad6-509d055ff90b",
        "cursor": {
          "ref": "7d6d1357-70a5-4e1f-a8c6-23d07d392058",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b1a58348-e0a7-4759-97ed-2481f9182db0"
        },
        "item": {
          "id": "2199510a-68b1-4576-aad6-509d055ff90b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d2f73811-3790-4daa-b28f-116e21a10982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba4c1b8-a504-4831-908b-950dc51f8e9e",
        "cursor": {
          "ref": "b791e4f6-04e0-491c-ab90-60ec62b2ce65",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0829d883-8cfc-45f4-97ad-b0f30bd9b2d7"
        },
        "item": {
          "id": "9ba4c1b8-a504-4831-908b-950dc51f8e9e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ad6289d5-afee-4607-8dd5-f004e62bae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66005359-1f50-4ba1-84a3-28c2aeeafb71",
        "cursor": {
          "ref": "a8a358f3-62a1-40ec-bac6-4489bbd9a70f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "65019faf-ae97-412e-837d-6922e56ddc49"
        },
        "item": {
          "id": "66005359-1f50-4ba1-84a3-28c2aeeafb71",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4c470335-0805-4321-b477-29019e99714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0ca3a6-bfa1-4747-b8c6-d56497836462",
        "cursor": {
          "ref": "4902bd93-b114-458e-a8c3-c62a7a7dc882",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e1564f26-734e-4eaf-9bde-dafc804f02eb"
        },
        "item": {
          "id": "8d0ca3a6-bfa1-4747-b8c6-d56497836462",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "45b4b049-1764-4b54-899d-25174725e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92857748-9d3d-4fcf-b58a-0b867ba7cb64",
        "cursor": {
          "ref": "ef048827-061d-470b-b1e7-61d81cae8e1f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4762ce05-2e24-4377-b893-20307fb7d1d7"
        },
        "item": {
          "id": "92857748-9d3d-4fcf-b58a-0b867ba7cb64",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "47b5512e-ba5c-4f60-a2ae-77bf48069f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e62cb-e8dc-4d72-8466-b507f7f83add",
        "cursor": {
          "ref": "39af101f-2fcc-432d-ae6e-3e2a732814f7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5b14b7cf-66cb-4d18-b2b9-1b26ce396562"
        },
        "item": {
          "id": "a55e62cb-e8dc-4d72-8466-b507f7f83add",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f32a116c-98f5-4664-be58-6b59a1bcc15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be93c393-952a-4db7-b80a-9e68534db73e",
        "cursor": {
          "ref": "50e02f3b-aade-422d-8cc4-5828bf5fb42a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5b428ab3-be37-42ac-9731-5cd83213de91"
        },
        "item": {
          "id": "be93c393-952a-4db7-b80a-9e68534db73e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "716f1c6c-be2d-42a6-82ec-0fca93cd52a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bb1676-12c0-4ff1-babf-b4a8f3d67aa8",
        "cursor": {
          "ref": "3001f45a-2c62-4e0f-8544-3a1ad7d03a57",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "edad483f-8839-405d-90d1-e05001aa77c2"
        },
        "item": {
          "id": "24bb1676-12c0-4ff1-babf-b4a8f3d67aa8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9173f9cc-a66e-489b-bfed-1025f2b3f070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b2461-0e37-4c09-9216-0b319f76115d",
        "cursor": {
          "ref": "78e4d199-3110-4371-9eae-ae06cd13f74f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2b91bcb4-f588-4c7a-9bc0-8307c23dd6af"
        },
        "item": {
          "id": "393b2461-0e37-4c09-9216-0b319f76115d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "918236b4-ec1a-4a46-8e35-12c937fe5199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8494aba6-23a0-44cf-befd-d455f8198e97",
        "cursor": {
          "ref": "9f2776f4-576a-41ff-85a7-69c4be4f3fed",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f28fa943-21fc-413c-a440-138119ea6046"
        },
        "item": {
          "id": "8494aba6-23a0-44cf-befd-d455f8198e97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6432b8af-aaa8-4e72-b97b-1f111ab996a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802bcf5e-aa6c-4433-9436-7331cbcfa3d2",
        "cursor": {
          "ref": "72b049d7-2a91-4a3e-86f6-81248bb6c681",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8acaa67a-83fa-4429-968d-f80d6fac6798"
        },
        "item": {
          "id": "802bcf5e-aa6c-4433-9436-7331cbcfa3d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1bc87bf9-3123-43da-a756-133dc538a860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee534385-06d9-4bc7-8448-ebdb4d9c241b",
        "cursor": {
          "ref": "1ae0556b-775d-4ee0-98a5-42448d274d18",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "946686e6-2c76-4350-bfbb-f72ba174eabe"
        },
        "item": {
          "id": "ee534385-06d9-4bc7-8448-ebdb4d9c241b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8bc47cdd-bfcc-4cdd-ae30-ee230a82c929",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "53976363-994d-403a-8ae6-57c2fcf41428",
        "cursor": {
          "ref": "e2ec463c-a1bb-4101-9d19-0053f45a961e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "59dfa56d-08a5-4732-b984-e7f7953d2411"
        },
        "item": {
          "id": "53976363-994d-403a-8ae6-57c2fcf41428",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "74c94d59-cb71-47c2-9509-564eae8ab5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139d765d-b8de-402d-9951-ce86d9297d1c",
        "cursor": {
          "ref": "48f917fc-2717-49bb-9ca2-d6013d86c42f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02d7dff4-091e-4b9c-9ee1-8a7f91a98ab0"
        },
        "item": {
          "id": "139d765d-b8de-402d-9951-ce86d9297d1c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4f5eda6-1c91-4b63-a8a4-cd0077605f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9092378-ed9a-4968-b954-3c8f2672b6ea",
        "cursor": {
          "ref": "bbaee79b-7e77-4194-acea-14f28053f247",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d1b085ae-ec38-4b71-957d-1641273ec1ff"
        },
        "item": {
          "id": "b9092378-ed9a-4968-b954-3c8f2672b6ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8762a6ff-f287-4e5d-9685-d426fb3affb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f62793b-e5b0-49ab-b7d6-e8072d887ba7",
        "cursor": {
          "ref": "9aa39046-96c4-4f44-bf55-f86940484a01",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fee4459a-1f21-463d-a838-9b0b2a04aadf"
        },
        "item": {
          "id": "5f62793b-e5b0-49ab-b7d6-e8072d887ba7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c244863e-98a5-42c7-9301-7a4efde906fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f10b09-6663-4dc6-b19b-693e2554a758",
        "cursor": {
          "ref": "4e88cc5e-5868-4389-8aac-7338bafd55fc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "79cf68a8-7abe-428d-866a-f7b75dd0d6dd"
        },
        "item": {
          "id": "20f10b09-6663-4dc6-b19b-693e2554a758",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9fbb407e-5aa8-4db7-936c-97208b48a165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc9e185-2def-4b5d-bc5b-c316280e90ed",
        "cursor": {
          "ref": "47a1fabd-ddcd-4bff-bc03-cf95c74681d8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "48e4ab24-6d8c-49a9-b28f-b83d5a0df7aa"
        },
        "item": {
          "id": "7dc9e185-2def-4b5d-bc5b-c316280e90ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "139c0440-b6e9-4252-86c1-747a004ecdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66d464e-7836-4f96-8a32-daa0733b8cec",
        "cursor": {
          "ref": "53aeb150-e4cf-404d-b272-0d4ce042f63f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bc435ab6-0cbd-4e50-975b-003e8e84d811"
        },
        "item": {
          "id": "a66d464e-7836-4f96-8a32-daa0733b8cec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f7d503c-2209-4f0e-ae7a-3b3aff4f8330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d68cdf-3d25-46e1-ac30-30f863544eed",
        "cursor": {
          "ref": "37a50bff-4c0a-4ed7-82e0-c1256e080138",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fa867d61-023f-4cc7-8fc9-6db6cd272870"
        },
        "item": {
          "id": "67d68cdf-3d25-46e1-ac30-30f863544eed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fc74082e-ac85-45cf-b048-a2753661fbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb6b57c-13a6-4040-864f-d1def75da727",
        "cursor": {
          "ref": "242e491b-9853-4752-b7e1-ee5cd26b187e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ae7c865f-7a76-4ea4-8826-116435737cd5"
        },
        "item": {
          "id": "0cb6b57c-13a6-4040-864f-d1def75da727",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba0fdf26-2beb-4753-8e5f-74a3c81179d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527184ce-0ef6-4e9c-8131-30aa6a328c13",
        "cursor": {
          "ref": "6a39d13c-5a4e-40e2-a8d1-00f3e2c87132",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c8a0259b-68d1-4464-9a0e-90d79bfb07b9"
        },
        "item": {
          "id": "527184ce-0ef6-4e9c-8131-30aa6a328c13",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9d32667-dfaf-4434-a909-44952175d25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2afd02-f127-4119-a11a-0095e632ec7a",
        "cursor": {
          "ref": "2f840aee-97ff-42fe-8b5e-c9edfc1e14d8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dec89547-5214-4f2a-92d7-7395727df35b"
        },
        "item": {
          "id": "fd2afd02-f127-4119-a11a-0095e632ec7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f116d84f-feb8-428e-a873-050565d0b0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59be82d-e450-4bcd-bc73-2c31cd0793b9",
        "cursor": {
          "ref": "5728c8d0-1e58-4d46-8d75-bdd6b02b6e7f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0e995402-24b3-426e-9c6e-fd66fbb07f5b"
        },
        "item": {
          "id": "f59be82d-e450-4bcd-bc73-2c31cd0793b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7c1f2480-896b-4d3b-954b-5e75651123ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a67833f-0b0d-4469-84d8-a53c52ff1144",
        "cursor": {
          "ref": "1e896e7e-cfa7-4ef5-9bb6-25c62ab9ad40",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1bfef5c-82c5-447e-ac22-3a19846ebf9e"
        },
        "item": {
          "id": "6a67833f-0b0d-4469-84d8-a53c52ff1144",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1f41d3a3-652e-48aa-baf3-d176897a4fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51ffcc9-1606-4bf7-9321-ec0de1dff0e1",
        "cursor": {
          "ref": "113e9394-081a-4ad3-bc5e-dedccec05d9c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2ac915be-3cba-493f-b521-297875c0b2f5"
        },
        "item": {
          "id": "a51ffcc9-1606-4bf7-9321-ec0de1dff0e1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0f916cf1-f02d-4297-bcd6-c08e5e8c1c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04635c83-d974-41b8-8059-a4f43a4af7a8",
        "cursor": {
          "ref": "853ff261-2a3c-48af-bd9f-556e8ed7bc33",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a714eaf7-816f-496a-b50e-60c16a5484f2"
        },
        "item": {
          "id": "04635c83-d974-41b8-8059-a4f43a4af7a8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08a771fb-e1a2-4a9b-a609-c74edef8db9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2b3ab0-d1ca-4b24-9305-933b852292eb",
        "cursor": {
          "ref": "acccdc73-6391-4d11-a0e7-2f0f6207d5cf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d28f80f8-de07-4393-bb2a-0fbe1fccb96b"
        },
        "item": {
          "id": "7a2b3ab0-d1ca-4b24-9305-933b852292eb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d3c6cff-9bbb-4491-82ee-a6c31da3e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c66d8b-9db1-421a-9721-1bc881d8f8d4",
        "cursor": {
          "ref": "d14ee2b4-8e16-4ae1-9cad-9491cbebc379",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a55edf96-10f1-49e5-b0e3-8986818d48ff"
        },
        "item": {
          "id": "36c66d8b-9db1-421a-9721-1bc881d8f8d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "168734c0-b8e8-4228-8b32-6968b7df79e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42104a73-44ba-4dc8-88cf-6288f4556181",
        "cursor": {
          "ref": "05366ff4-2af0-4b48-b0df-42c351eadc34",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a462d2e3-5efd-424c-8628-39d001697c91"
        },
        "item": {
          "id": "42104a73-44ba-4dc8-88cf-6288f4556181",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c5b21dc4-4383-4c2d-9a53-c4107a9394ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd22f51b-5f81-41a6-9e47-fa084c11ee1b",
        "cursor": {
          "ref": "d0738bfc-fc50-452b-91df-ed97b7e015fc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6642daae-ee25-4733-adb4-a12b0562b5a1"
        },
        "item": {
          "id": "dd22f51b-5f81-41a6-9e47-fa084c11ee1b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f39b25c3-53f8-4dba-9e79-3d81139fe901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b194aab2-fe9f-461c-899a-bd64e9343336",
        "cursor": {
          "ref": "7b8332ae-287f-422e-85d3-e2de6679ebdd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b2a9d6a8-ed1d-4873-ac89-403a6053688e"
        },
        "item": {
          "id": "b194aab2-fe9f-461c-899a-bd64e9343336",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1f99a413-24e1-4876-93fd-1dc12465ef64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1685fbd6-7dd8-4af1-8466-7e2d44ab134b",
        "cursor": {
          "ref": "2ad89db1-bf4a-41bd-bdef-8ca10ef48e2c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4c4cd693-86d7-462c-a40e-7a84d455ccee"
        },
        "item": {
          "id": "1685fbd6-7dd8-4af1-8466-7e2d44ab134b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d60c6269-3931-4347-a68f-06643536fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a884ae3-55cd-4bfd-94f2-8a1a7d4fa743",
        "cursor": {
          "ref": "8f57afe0-be9a-49d3-baf4-303274d3e480",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c30d7aa7-6af1-4d41-9571-379169ca2d74"
        },
        "item": {
          "id": "0a884ae3-55cd-4bfd-94f2-8a1a7d4fa743",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d9da8323-160a-47c9-b518-4e9b7d8c7146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da1cf71-7745-4e5b-b270-ba8437862231",
        "cursor": {
          "ref": "1cd2e465-954a-4a4c-a6c1-2e58ea89ec88",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "663344a8-0b5a-4506-bbb2-8d7b9b68b14e"
        },
        "item": {
          "id": "9da1cf71-7745-4e5b-b270-ba8437862231",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8317b55e-5508-4aec-9b89-e471488dc383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94189ff-01d8-4d60-8b4a-7d3cbacc487b",
        "cursor": {
          "ref": "bd692ca4-71e1-4d8c-84c7-9fcf530dc1f2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ba7ce706-9764-4431-9a26-53d844b75892"
        },
        "item": {
          "id": "d94189ff-01d8-4d60-8b4a-7d3cbacc487b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4ce71db0-c93f-4b53-9356-4cead85d258c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aad0e24-6962-4e2f-8b23-bcdbf0b560d3",
        "cursor": {
          "ref": "a18a6e70-ae0f-47e7-a602-b139183ae7cd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "80e319e3-3cc5-45e8-bd95-d1fb69488b77"
        },
        "item": {
          "id": "0aad0e24-6962-4e2f-8b23-bcdbf0b560d3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bba4c1e3-7b69-44d7-acda-f79324d2b14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c223b6-b8ca-43b4-be9b-c4c49a39b51d",
        "cursor": {
          "ref": "b569ccd7-e8f7-4e33-9737-79459f4a72be",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "72f8b7ab-c9f7-4c81-a840-b7982c803c24"
        },
        "item": {
          "id": "64c223b6-b8ca-43b4-be9b-c4c49a39b51d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "62260e05-f108-47db-aa25-af2c85695bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdb4f21-7627-4fcd-869e-daec788b9c64",
        "cursor": {
          "ref": "396ecfd4-2824-4e86-8e5a-74c2366dd2f9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8c8c4e5a-947a-49a8-8621-61bec6b64297"
        },
        "item": {
          "id": "7fdb4f21-7627-4fcd-869e-daec788b9c64",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "46e57cc8-a4e1-4c90-8a3a-43cf6348718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ae465-ed7d-47e7-8ecd-6f619464045c",
        "cursor": {
          "ref": "afc23341-bb3d-47ea-ac23-8407ca067563",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "707ba7a7-bfaf-4903-8149-7540979ccdb5"
        },
        "item": {
          "id": "d65ae465-ed7d-47e7-8ecd-6f619464045c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a522d065-c96b-4408-914b-f100847613da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83db27d-dc35-4eef-b978-8e1daa667586",
        "cursor": {
          "ref": "4572c658-7cf6-440b-9b20-f259084faab0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7858d537-bb3a-47cc-8a62-631d6c0cb902"
        },
        "item": {
          "id": "d83db27d-dc35-4eef-b978-8e1daa667586",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db664afb-c729-4399-b216-d113190decb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a66d8b4-4988-48c4-bfce-1f1142eff4f8",
        "cursor": {
          "ref": "36fd3c49-9691-4f36-a5ee-42024feb9c64",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "31270186-de64-449a-beca-793fe170e55f"
        },
        "item": {
          "id": "0a66d8b4-4988-48c4-bfce-1f1142eff4f8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b39b8bd8-4803-42bf-843e-1ca130f5a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508e5cf6-b0bf-4fed-8060-b3aca6d510e1",
        "cursor": {
          "ref": "eed5c6a3-239c-4014-ac72-c367deb8d100",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9f36c435-36d8-4b36-b33a-93e476b1ba00"
        },
        "item": {
          "id": "508e5cf6-b0bf-4fed-8060-b3aca6d510e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1b7c0ef4-4c28-4bdd-8c96-e96ce1a850d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3b6e7c-031a-44f3-8859-0cf979ef30cc",
        "cursor": {
          "ref": "3c6d3528-dd17-4f77-8f92-b1f85d10a97c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ac3f968-eaeb-4101-827e-e9eb882ebb2b"
        },
        "item": {
          "id": "3d3b6e7c-031a-44f3-8859-0cf979ef30cc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78e4b108-2529-4201-b71c-6f5dea47593d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c9ec8-f153-4297-82b9-1c3ab7400a85",
        "cursor": {
          "ref": "54128b1d-26f0-4dc2-a8bc-37ef0be0b6a9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6e7fa85d-69b1-4587-821d-333fd1fe9e82"
        },
        "item": {
          "id": "ec4c9ec8-f153-4297-82b9-1c3ab7400a85",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b4f71218-39cc-40e2-a17c-b7726771a76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524279d8-40ba-42fd-b172-f59d8bae402f",
        "cursor": {
          "ref": "bd8c8e3c-5a93-4060-8767-0549771bf600",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d2fa1fa0-e7fb-45ce-b90d-15d3fef347ba"
        },
        "item": {
          "id": "524279d8-40ba-42fd-b172-f59d8bae402f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "740da2fe-90c3-44e0-8ff6-5fdb9f49781a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d3d46-7309-441e-a86a-76373b06d878",
        "cursor": {
          "ref": "a9b0d651-68d6-4a5e-ac0f-3d4a8e803d0f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "26fa7dad-fc95-4c4e-b98c-60f880a2c73a"
        },
        "item": {
          "id": "0e4d3d46-7309-441e-a86a-76373b06d878",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bc05de7d-0f59-4d6d-b7e7-8103e671d0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43940df7-717b-4933-bbcc-e702d88947ea",
        "cursor": {
          "ref": "d647584e-4c66-47e8-a89e-c4be5950c7ad",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f57e64ac-8e5d-45e6-9d4f-1edd322568c8"
        },
        "item": {
          "id": "43940df7-717b-4933-bbcc-e702d88947ea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "494e0a5e-45aa-45fb-a254-6876b4710273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8776e253-1d92-476b-a13a-369ecb011abc",
        "cursor": {
          "ref": "63770212-46a5-4621-90c6-8d1af4c5e5d8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6939d490-f270-44a2-805f-c2836973a8c2"
        },
        "item": {
          "id": "8776e253-1d92-476b-a13a-369ecb011abc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e1f739c7-7f47-410d-86a8-e9826c343984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d50a67-27ec-49b3-ac4d-9d4618271b8e",
        "cursor": {
          "ref": "2e8a5b77-6eca-41e3-9100-c1904367907f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3a2a0480-c850-43d4-83c0-3495b8223c92"
        },
        "item": {
          "id": "a3d50a67-27ec-49b3-ac4d-9d4618271b8e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dfcba443-5b61-4a79-a5e9-260c3fc52107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05489493-2cf5-4652-987d-f2a88d73caa0",
        "cursor": {
          "ref": "15ca1bba-4277-4e52-8696-58df76ee3ec6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13f85ace-6384-4311-b060-dbad9182865c"
        },
        "item": {
          "id": "05489493-2cf5-4652-987d-f2a88d73caa0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1c46c239-5c9c-4f81-b1e4-69a10e84f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b327b-45f0-4b29-a388-0625a7bd12c4",
        "cursor": {
          "ref": "a82e50c7-ac38-4489-aef2-9d32965107b7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7aef22c2-fb00-496c-aa01-9475ab5886af"
        },
        "item": {
          "id": "4d5b327b-45f0-4b29-a388-0625a7bd12c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c1dc3173-f436-4d8a-8ecc-523da7992ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e72233-59e6-40f9-b662-b4d075dc3e09",
        "cursor": {
          "ref": "caca23f3-f592-4ca8-8a8a-6abfddd79daa",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bf5169a4-7f89-4188-82c5-306aeab4f939"
        },
        "item": {
          "id": "a3e72233-59e6-40f9-b662-b4d075dc3e09",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "497e5ac2-5af1-40a6-a702-f7619e3b23f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae99f1ae-a371-49cd-97cf-12b0d975c07b",
        "cursor": {
          "ref": "626a1ef5-b036-4d94-91de-1ca92e684263",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "20573388-579f-46fc-81d2-105b20d90cd6"
        },
        "item": {
          "id": "ae99f1ae-a371-49cd-97cf-12b0d975c07b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a246edba-82ad-4b9c-9217-764bdb138118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98b9f5a-2260-4dd2-be89-124005126308",
        "cursor": {
          "ref": "0907508a-5bd7-4ecf-a88f-3885628d8882",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "079fc0a2-b7e5-4494-adfe-deb2b0110206"
        },
        "item": {
          "id": "a98b9f5a-2260-4dd2-be89-124005126308",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "02018fb7-5f57-4263-8985-08cdb85f27c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60808df5-dc6b-4e5e-82d6-c3f28053fe21",
        "cursor": {
          "ref": "be20a711-6c7c-4530-8c14-a50514c55388",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8cccaeac-4be1-4448-89cc-8291e1c10a91"
        },
        "item": {
          "id": "60808df5-dc6b-4e5e-82d6-c3f28053fe21",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "230a212d-d13e-4934-933c-609555e00dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a968ca-1cbe-4844-bb5c-cf7f697cb1bb",
        "cursor": {
          "ref": "e474cbd6-9ed3-40d8-af5c-34c44d99276c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e6fc092-e4d0-4c4a-a71b-abe0774d4b07"
        },
        "item": {
          "id": "07a968ca-1cbe-4844-bb5c-cf7f697cb1bb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1315b526-1937-4f2e-9d51-6a922839aae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45106845-552d-40a1-b27e-9a60864b8987",
        "cursor": {
          "ref": "51f153fc-ae59-4ce2-8502-1fb0283a2e97",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aba58150-e154-4d3b-84c8-2494dc058b83"
        },
        "item": {
          "id": "45106845-552d-40a1-b27e-9a60864b8987",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "67a0cda9-5634-4f78-ace1-86a4743173f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b77867-2fdd-4842-9483-e02ea69182ea",
        "cursor": {
          "ref": "9b9b6da3-2cf2-4575-b00a-9041b2fdfeea",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "157ac0dc-a013-4af7-8f1e-dc266c5c51f8"
        },
        "item": {
          "id": "45b77867-2fdd-4842-9483-e02ea69182ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "65ccf0ee-e857-4767-8343-df4df8c89606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a95e341-d927-4e65-b5a0-4da149af34a3",
        "cursor": {
          "ref": "dc9c98d6-19d5-4e64-ac19-bef881231e53",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "63f66f9a-7ba6-4285-af24-8f94bbed7135"
        },
        "item": {
          "id": "8a95e341-d927-4e65-b5a0-4da149af34a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "34d8764c-1051-45bf-b21c-b729733e71ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce26b67-4d4a-4d19-88c7-ac0694162af6",
        "cursor": {
          "ref": "27704f6d-839e-4eca-943c-30cb93914de1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f9825e38-7ae4-4e09-8c80-9bd8e04d914f"
        },
        "item": {
          "id": "bce26b67-4d4a-4d19-88c7-ac0694162af6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b7c7e657-e2a3-431d-b833-16b54ffe530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155305d5-0c7a-424c-a883-7d2ffaad3e2f",
        "cursor": {
          "ref": "b2f6e5b6-8217-4d79-a22d-a9b50b75033d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4bda313-935e-4779-bc11-ae6b37331cfa"
        },
        "item": {
          "id": "155305d5-0c7a-424c-a883-7d2ffaad3e2f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c931d712-8933-49ee-ad65-244c04b59384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c9eec9-4f01-4292-9da7-161030e16ba5",
        "cursor": {
          "ref": "b0547be3-a99a-48d3-ae3b-ad1ec62309cd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "30316ec0-62bd-4a12-82b9-f9c5ecdea5ff"
        },
        "item": {
          "id": "59c9eec9-4f01-4292-9da7-161030e16ba5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "22f01774-71bb-42be-a9b3-4ce6ba9dd6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63d606f-40f6-4660-a6ab-ba434a31294d",
        "cursor": {
          "ref": "9bb46183-4abd-4535-afb2-8208dfac4fbe",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad691843-b7cf-402d-a00e-d11c69ccec21"
        },
        "item": {
          "id": "a63d606f-40f6-4660-a6ab-ba434a31294d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e3b5a30d-aa1f-4721-8371-48400f0a95ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a3f6b-90bb-48ae-a9b2-8b4d5fb04512",
        "cursor": {
          "ref": "e1385b25-6609-4d41-8fea-24fb438f8337",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "39e192e3-11e7-403e-91f3-b65a1cd41e5a"
        },
        "item": {
          "id": "ea9a3f6b-90bb-48ae-a9b2-8b4d5fb04512",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf867496-4172-4bb2-8500-c5fa6a7430bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e39feb4-0238-4b48-b682-ac3a9158c7bd",
        "cursor": {
          "ref": "776f0dc7-5b77-4ba8-ba69-c7ec2fe03d9a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f46c49b3-5ad8-4ebb-9753-26ab5f3fa43d"
        },
        "item": {
          "id": "9e39feb4-0238-4b48-b682-ac3a9158c7bd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7ead625b-5d76-4d71-b342-3853a63858cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42614871-563b-4e15-b0d0-cdcea2d75e98",
        "cursor": {
          "ref": "61bab3ab-7829-403a-8cbd-f4e1669c18b4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6f1d8b4c-48e8-4c0f-a04b-263c5172b331"
        },
        "item": {
          "id": "42614871-563b-4e15-b0d0-cdcea2d75e98",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b7a249fa-655a-44be-bc41-f57c5d4767ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7649afbb-eaf6-4e2f-a1b2-4b7a85b648f0",
        "cursor": {
          "ref": "e6e36e60-9ddf-45fb-a5bf-2f57d946e1d7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4efd2532-34fe-430d-9c9d-0a07319786de"
        },
        "item": {
          "id": "7649afbb-eaf6-4e2f-a1b2-4b7a85b648f0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c9462725-fe59-4f1c-84f0-5e097b657207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd2e75-a9bc-46be-ac5f-1e655eaf2b6b",
        "cursor": {
          "ref": "2b155280-e77b-48b7-b09d-22000ca20b5f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "53af3f8e-5734-44fa-92f7-5486b8c8acc0"
        },
        "item": {
          "id": "32dd2e75-a9bc-46be-ac5f-1e655eaf2b6b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b8033fef-f3b6-4914-8a70-2a9c75704192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e035e49-115c-4569-82b2-99088edb7718",
        "cursor": {
          "ref": "6b2ae56b-6248-43e7-b470-59e8525dd02a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4450f81f-da37-4021-b772-1e089d419ed1"
        },
        "item": {
          "id": "7e035e49-115c-4569-82b2-99088edb7718",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f1a33d2e-cde4-4bd2-99a1-c06eb2fe85a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c3138-e241-43e3-b304-29e0a3a15ae5",
        "cursor": {
          "ref": "19d40122-0e1a-4604-a4dd-464680aba30f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "94a1180c-7bb6-47d8-a75f-61bc0eff6c75"
        },
        "item": {
          "id": "557c3138-e241-43e3-b304-29e0a3a15ae5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8be65ad9-f635-44b8-bd7c-482c86f4ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd571fe-313f-47d8-9341-3d8486585b38",
        "cursor": {
          "ref": "64cae11a-77f6-4dc3-a3cb-2407a1571e6c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed8f6a53-cc66-4060-a356-51e99af04795"
        },
        "item": {
          "id": "bfd571fe-313f-47d8-9341-3d8486585b38",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9908e176-c68a-4cff-8784-44598e34222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dee3ed0-3236-4df7-ac1d-86c9056a877e",
        "cursor": {
          "ref": "65a2ef03-abb1-42a9-b3b9-5d83c303dc33",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "71229143-443c-4a85-9193-b6a253e7c6c7"
        },
        "item": {
          "id": "0dee3ed0-3236-4df7-ac1d-86c9056a877e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "91605df6-9efc-4b4d-b81b-acb765a16b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488ee8b8-70fc-4689-b24f-d4c0e5809155",
        "cursor": {
          "ref": "cf155d25-9de3-4026-867a-f3f86e2b3998",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1b20f40b-c97d-49f5-bcda-5213d58b2a9d"
        },
        "item": {
          "id": "488ee8b8-70fc-4689-b24f-d4c0e5809155",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c6742d51-5081-4a8f-867b-97884ac0d6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f84ea5-9b81-4ca9-b96e-cf7fb2264bef",
        "cursor": {
          "ref": "fd97ef09-4a03-48bd-af3d-dcc9d0ae0c23",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3a6fca1a-10d1-4f99-b4b6-eccb834dc514"
        },
        "item": {
          "id": "36f84ea5-9b81-4ca9-b96e-cf7fb2264bef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b08cc377-7949-43f4-957c-ebad3a228eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8480bfaf-4672-4022-b07b-6d08f12ec83c",
        "cursor": {
          "ref": "c899a06b-de0f-493b-b564-a65013ac56bc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f8f6a68b-c0fe-46b3-bed3-0ea3d64727c1"
        },
        "item": {
          "id": "8480bfaf-4672-4022-b07b-6d08f12ec83c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1393f7e1-d49f-4c13-b42a-66213a5f8529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9915ec-9b5a-43df-880d-c3680358e154",
        "cursor": {
          "ref": "8735ce50-fb66-430d-a79a-9a2ad069d84e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b5c00e79-ff6c-421e-835d-c14fded70485"
        },
        "item": {
          "id": "cd9915ec-9b5a-43df-880d-c3680358e154",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b9a8a23a-28f7-4484-98ef-e886a82fd688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea012531-2932-46db-bd22-4f3ca1d87e93",
        "cursor": {
          "ref": "4c833c4a-5735-4cdd-aa4b-3bcead1c4077",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c3f633df-0d3e-4add-a93e-8bc8ed34f05d"
        },
        "item": {
          "id": "ea012531-2932-46db-bd22-4f3ca1d87e93",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "468e37b0-bf16-4df4-9096-5db10eea2428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204a2f9b-c189-4d45-898e-948c1f3e5aa1",
        "cursor": {
          "ref": "d76353a8-f1ff-4fee-973e-782fea9d4190",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8d19661b-e1a3-4cc3-afe7-8bd1595e1936"
        },
        "item": {
          "id": "204a2f9b-c189-4d45-898e-948c1f3e5aa1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5f04aa5-9fbd-4cf6-b3b1-87bc3d29f262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ae53c8-5801-42da-99a7-c48806f94256",
        "cursor": {
          "ref": "1df2d0c2-3d1a-4d52-9d67-acf300b66476",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d154de82-7fe4-4d67-a829-071772b8469d"
        },
        "item": {
          "id": "11ae53c8-5801-42da-99a7-c48806f94256",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b3b15040-1ad1-4b0b-a09b-2d0e0bce991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b04500-e888-438a-aaef-d63bbf01f162",
        "cursor": {
          "ref": "40b65aea-0785-4f7c-b8f9-a20a5763dc8c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "41a5c598-7437-40b9-956b-e498aa225961"
        },
        "item": {
          "id": "b2b04500-e888-438a-aaef-d63bbf01f162",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "213110f3-af29-4589-b996-4a45ca0ce79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f21110f-9298-4c37-8e50-eb803f08ad47",
        "cursor": {
          "ref": "3aa0488a-df53-4bec-a8e1-c5844930f39b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8ff87dee-4b8b-4024-9450-fc3413257154"
        },
        "item": {
          "id": "8f21110f-9298-4c37-8e50-eb803f08ad47",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "adbd7e3c-d3e3-4420-8c76-84959f9543f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b38d4-8376-43ff-acb5-cd6907c0dfbc",
        "cursor": {
          "ref": "6d651697-ad5b-4b68-bc0c-3569631bc511",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "18572e11-f8bd-49e6-b74c-93c570159f0c"
        },
        "item": {
          "id": "980b38d4-8376-43ff-acb5-cd6907c0dfbc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "611df03f-714f-48a4-bbe0-abd9cc93826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d164ccd9-7f99-4f45-bd37-e9b2631b39e0",
        "cursor": {
          "ref": "ed381f59-a4c7-4134-8cb5-4ea5fbb2c081",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6d11bc33-162d-4625-aa8a-35bfe1378f0d"
        },
        "item": {
          "id": "d164ccd9-7f99-4f45-bd37-e9b2631b39e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e63716e1-0807-4680-8917-1ab324f8dca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457ec061-5821-4e0f-9769-debfcaae6f40",
        "cursor": {
          "ref": "07355202-a1fe-43e1-81f8-6b86d84c48da",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "611b99b0-804f-4cdb-ab4f-ce9cb54f7a70"
        },
        "item": {
          "id": "457ec061-5821-4e0f-9769-debfcaae6f40",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e2b3383-84ab-418d-bee2-1fe36ce1b3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1050d5-5bb0-46ba-a5df-99b8831c02e0",
        "cursor": {
          "ref": "4cda40ee-5280-4456-bdd7-9567e786cf5b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e117bb87-61cd-468a-9bb4-620e5976fab8"
        },
        "item": {
          "id": "ba1050d5-5bb0-46ba-a5df-99b8831c02e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ec6c2e7e-fdd4-49d3-8f82-aae3425a5504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f17075f-3e7d-4013-9432-ff06dfccbd27",
        "cursor": {
          "ref": "b5788068-2d69-4e19-840b-bfc4b7e52d9a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3fb08190-d879-4e69-b634-9f21d700cbc7"
        },
        "item": {
          "id": "6f17075f-3e7d-4013-9432-ff06dfccbd27",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "559c56b4-67fd-40c1-9d64-5e4f2c00bfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf4ce85-cfed-4627-8f61-6d7cb02e9ca8",
        "cursor": {
          "ref": "3eccfffe-f255-4ef6-8dca-3774236a5f8d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c43d9a80-08de-4f74-9833-a2726c10c5af"
        },
        "item": {
          "id": "ccf4ce85-cfed-4627-8f61-6d7cb02e9ca8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "65bd0000-6b76-4c8b-b5c9-8976f1917974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2843dd0d-e51c-4fba-85e6-8ca3938e889d",
        "cursor": {
          "ref": "a88c60e8-ced0-4baa-8b53-bac41d0577d6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6dca58cc-afea-40a3-b03b-683d0e8cd387"
        },
        "item": {
          "id": "2843dd0d-e51c-4fba-85e6-8ca3938e889d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23dab9c4-30af-403b-ac79-3e83848ba32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea40be5-fa7d-4665-8e3b-5e97b3af6458",
        "cursor": {
          "ref": "43eb8ce3-920c-4332-b1ed-6ea6db846687",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "99dee1c1-7ee5-4f08-bb2a-aa987d234eeb"
        },
        "item": {
          "id": "8ea40be5-fa7d-4665-8e3b-5e97b3af6458",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b0775e64-286e-4c35-a591-83c09ea94919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e2b0a-5a42-4b9e-9a5c-f9ddf8f94fa8",
        "cursor": {
          "ref": "5f9145db-ae96-4343-9f5b-5a7ce97f933a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0135cf4c-3534-4b3c-8d51-5905a2890795"
        },
        "item": {
          "id": "142e2b0a-5a42-4b9e-9a5c-f9ddf8f94fa8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d5e05a8d-47ef-4464-a9d7-bbdfbdd19240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207fbb54-d731-45c3-810c-a88b5f625703",
        "cursor": {
          "ref": "e9a61ac4-b108-4654-a4e2-1f9ae0974943",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "32081101-2735-4628-8b23-a4a511a51936"
        },
        "item": {
          "id": "207fbb54-d731-45c3-810c-a88b5f625703",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1688d133-da78-4ce7-9d71-c97d2509c967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19315276-159d-42eb-8060-63b28226e56c",
        "cursor": {
          "ref": "91ba7beb-a201-4dee-a2b8-aa783aa36eb0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "261adcac-4234-4eb7-bb52-c24e61507562"
        },
        "item": {
          "id": "19315276-159d-42eb-8060-63b28226e56c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca0f3bc9-2918-4ee1-9bac-16650f0f8441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9e818d-5baf-4b9b-b094-a4bbc39c60b9",
        "cursor": {
          "ref": "b74c0df3-43fc-4904-acdb-870395a4ba0c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b011e176-7770-47db-8e58-db2f473e7d90"
        },
        "item": {
          "id": "0d9e818d-5baf-4b9b-b094-a4bbc39c60b9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a3db50db-0ec7-43b2-b86f-74ae4b56b046",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c4f28b-0052-48e5-861e-f441f5148618",
        "cursor": {
          "ref": "1ce8610e-f0a2-4d9b-a18a-b159985cf418",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d7090d57-e1d0-469a-bc85-823858e10e77"
        },
        "item": {
          "id": "44c4f28b-0052-48e5-861e-f441f5148618",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ac398a83-9087-4231-b877-a98f8c7dcc53",
          "status": "OK",
          "code": 200,
          "responseTime": 3173,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8f962-49d1-4b9f-a481-a666a46099cf",
        "cursor": {
          "ref": "9b5c5625-0a63-42b1-8cfd-1fb886979ae2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a1bba3dc-5e36-4bb8-95c0-7ff09065d09b"
        },
        "item": {
          "id": "62c8f962-49d1-4b9f-a481-a666a46099cf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "addaecdf-9236-4fcd-bb5f-e1ef1d898d21",
          "status": "OK",
          "code": 200,
          "responseTime": 2972,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1812121f-2311-4d15-97c5-30fe2cc90085",
        "cursor": {
          "ref": "d5c1aa84-f72c-47af-bfec-3e2001808619",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bfd5a193-96d5-4e55-bd7a-6acc6bf89274"
        },
        "item": {
          "id": "1812121f-2311-4d15-97c5-30fe2cc90085",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb9b8194-a811-48a2-9974-ca62bca9775f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1812121f-2311-4d15-97c5-30fe2cc90085",
        "cursor": {
          "ref": "d5c1aa84-f72c-47af-bfec-3e2001808619",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bfd5a193-96d5-4e55-bd7a-6acc6bf89274"
        },
        "item": {
          "id": "1812121f-2311-4d15-97c5-30fe2cc90085",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb9b8194-a811-48a2-9974-ca62bca9775f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93711a4b-68c2-4ca8-a352-6dd31bd7c51b",
        "cursor": {
          "ref": "8d4967a7-48db-41ea-9985-b030f093798f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7b3acb61-5110-41ac-9db1-b04c7a40090f"
        },
        "item": {
          "id": "93711a4b-68c2-4ca8-a352-6dd31bd7c51b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9ce9685f-296a-4471-9abe-a797c4f28cdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665047a2-bd7b-46d3-af03-b9378e647783",
        "cursor": {
          "ref": "33258132-508d-48d5-9d0a-a8c988dd7b03",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "40559dba-439b-4929-9934-7640b108a4d9"
        },
        "item": {
          "id": "665047a2-bd7b-46d3-af03-b9378e647783",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7f783bf-45ba-4e00-bf74-9493ac42fa92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}