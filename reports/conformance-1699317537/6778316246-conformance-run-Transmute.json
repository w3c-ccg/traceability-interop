{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "62c58f1e-9fe1-435a-9b56-6961a4af11fc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c26c0280-0d47-4c66-90b6-68fc4419aaf0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76f56318-09a0-42ac-a60a-c9ec7a7acd29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d894bb2-c9fb-459e-ab29-252a7261dfe3"
                }
              }
            ]
          },
          {
            "id": "eb11ab4c-8ec5-47f0-b272-d93e5d7abda2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0fe0e4c0-2e64-42ce-ac7f-1d43c2bbd0c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "720b59ca-0785-4964-a72d-25015f5114c5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d5f76a1c-ce54-438f-bf68-f088fe99a27a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49256124-1754-4e4d-b3ab-e5d550881373",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0bd5c59-dea1-484b-aed7-1dc71ee5e41e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25d131a4-9333-4c71-ae47-53ce5db133ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed7d93eb-857d-4919-a303-8cf00a6b5039"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cad22c8-7e24-4235-a226-b7ee37819549",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "355a41a3-4817-4a33-be71-87ea6a09f853"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2acfaa05-e4d4-4af3-86f4-692f69a214e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef9e2370-b893-44cb-af66-76979c1afb6f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "980ab691-548a-459b-90cf-330fc85fc517",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cdf4dc25-09e1-437e-bcbf-6dfdd34bb9bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fedc971-08aa-4bf6-b714-39cc3337e2d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77393a98-73f2-4226-b730-ed22058b97dc"
            }
          }
        ]
      },
      {
        "id": "06131e57-4950-4e98-8eed-62b45edb8461",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a29b6112-98f2-471f-af5b-574786060e23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ebd009f-f530-44c0-8b1f-0c4e461e9c38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33e22411-4896-4ee9-a111-0c2c4793810d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7289c-4c39-4722-b335-56cd3471e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b5f7fcf-265f-44d2-9875-8b50db96f031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae46095-dc9c-4c89-874f-49b2e730308f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2424b5-67f6-4bd2-8e00-a77381ce9254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7538942-744d-4cad-b42d-515cd46fe7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caa1358-7129-4b93-b5d7-54635b0815c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4930b7-7ba6-4e82-99f3-49fe44c9ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60979f31-2861-4be8-91f7-6cf6d2183ded"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecc499c2-ace6-44e1-b49c-81bdc6ba2ec0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fc76f85-da43-4918-b1ae-ce88225c7c29",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafbabbe-380d-4b39-aac9-9321a936369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d24a80-77e1-44dc-ad4f-ad29a48106cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cfb096-6060-46cc-8009-b4b6b667f905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a0ee66-71d3-4472-9368-9cf8af8ddcd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce625c65-03f1-4ab6-ab71-0da56d9e91d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25c5741f-1841-4931-881f-376f58f4583c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba30229-2102-47ad-ac58-b9f2be866809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60357cd1-ff96-4336-94e0-5e6036d6e9bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9f9963a-c543-4933-9537-588a521b19b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ade20464-6d5d-48c7-9d4b-4ddc46eca982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ab77a6e-6391-40d7-a70e-15be5ed9fa91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0ec829b-e12b-43ce-a2db-8362c3798b3e"
            }
          }
        ]
      },
      {
        "id": "920e762d-6cfd-4b48-b882-c132a3797aab",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "340299ad-6d14-46f8-ab31-a5e820578a3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ac3acfb-c896-4f4b-8c8f-d896b8228ef3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "591a09f7-38c6-4a03-aedb-515581c235ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3baaae-8b0e-401c-aa32-325354b644c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb04a01d-f0aa-460d-91ee-73930b2fe2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a3d624-a671-4036-921d-6eaea28118a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d5e13f-d54b-4aed-8898-9b6180a916a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214c0801-240e-4a29-8e53-6ca00254d0b4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa856ca-94a5-4ee8-8ae8-4173dfeca189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13529ee-3919-42d4-9536-38b881f6a660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a1885a-f7f2-4a11-aefb-54d35b0a9eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc9016fd-0930-47a7-9dd3-fb67454da6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ec881-db0b-4014-a4b5-a19e566433d8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1ea9d8-1c01-403a-b73c-0cb740719064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4411a3db-05cc-4339-b93a-74e942051d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e815bb21-9300-49e3-89ba-b92106a2f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "000bd29c-6d6d-4218-937d-6edde8a21bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72229cc4-b209-4717-b0dc-d56db2820ef6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f14d26-d3cd-443c-8e60-0ca540dc6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2be59-ace1-4ca6-9d0a-ba06e9d62870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16705f3f-2da0-4693-b924-f7d4fb8b0bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ec7da37-4b82-41ca-8fe9-82bdad038af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca3aa00-3063-4698-bcc5-f47bcf7a290a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889096c6-ec75-4f88-943c-402ad3973c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1916b7c0-d50b-478f-8934-de1d3406682b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d7b79a-2003-4e47-a57d-906f221828d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b5be90-e46f-4e12-aeb0-662cd649b444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722e4c96-7389-4b70-be7e-3423757e4c2e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b85803-b006-4d5d-a517-8c3e9b29255a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99553731-430a-4a04-bc57-c1d98c79f040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99edaa-408a-4711-87f5-1bbddfbc6181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c51d72-b5e6-40aa-948b-6556b3f07b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4731e3c-9800-48ad-8aed-bb19a2a57abd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c6d179-c6da-497a-bdeb-2264298be537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa9ec86-1306-47a7-bb34-ae5c5e2be28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0b624e-08ff-4f79-b7aa-c7d3cec1dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2613e4bf-142f-424d-81c2-dd57a4a1c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fa4f9-fe48-457e-9687-a5c77647c603",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ef651-6b46-4079-889a-478929388e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27eb06c2-55d4-425a-aa5a-0c38b28529e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415d923-e512-4ab2-bcc9-b2c3b4e1d2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca92d99-f2b1-428a-9c10-6ee427c3a22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc70c7-9666-47da-85b4-d94e320b8752",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac004c40-15a3-4615-befe-880f6e1a0943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a399eef-8465-4c93-b98a-28dafff76a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb7c35e-cb80-443a-a57a-49803de7a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe5143da-21c0-4e0b-af1f-de07dfe37128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f398b3bd-fcfe-4bd3-9299-a377833c9456",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68bc39-6935-46bb-939e-8a2192bdd34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4928df-0ad3-4857-afec-2060e76503ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a6d82-483d-402d-ba8f-cfe26b33cb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f96ddf2-b742-4b2a-908f-b9c3320c9d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b20a9bb-d3d4-4c7c-859a-079737cc2efc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33046357-bd86-4a05-9862-d6a8b9087435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea24b57-8e07-48da-8b33-67a47c6b6c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec477c22-dc35-4f77-be44-0b927362a228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36209e1-8f00-44d0-8e4f-f55a00bb6687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b70d0e1-ded3-421a-b031-ae780a57f9cd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379321a6-c4d3-4d25-815e-9974fd5474db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a95b9b-0f9c-47e9-8bd3-bc626f95df1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a7b00-711f-43d6-a963-98e0ea416f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "801dbcd1-6fad-4d91-8ef0-210ecac43f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d713efc-d3eb-44f1-a5d4-56e833817369",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6baad74-be07-4e51-bf97-9601eff1528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85c25a0-5af4-45d4-ab42-e4d4d4f4762a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe85c26-4510-40fb-8e52-0c08092e22e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e72edea-b2c4-401a-a32d-0def74876ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d975d2-4da7-453e-a287-60829c7cab83",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682933e-d475-49db-9fea-726303e8649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a1d73e-b9bb-42ae-8dfe-5a92f4e591f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155436ad-af87-4d57-a600-fcf8787b343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a32cbd62-b0bc-4a89-b85e-f780272d5a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3402a48-8a44-45ef-a65d-7830a4dc861a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014d53e-cafc-4da8-a9bf-0dddf8203a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f74572-3de9-4c87-a752-50a302467510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc83e6e-d3d2-4b9d-b142-5749b48ea200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14537bb7-bfd2-42c9-af19-2622cbfe6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5ba69b-6b3d-426c-9092-fd2f1c97abf9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ac8c35-af77-4c1c-ad4f-3d73d7eb75b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9e1858-e491-4f82-8e84-6bdcf1c4e102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f42c21-2ee0-4835-8ac6-a846c7dc0bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eb7e4d3-addc-4675-b6c8-086a783708c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e61a2dc-6cee-447c-89f6-dab15498cc6b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b0ca6b-7f9b-4434-ba38-43f2860ae933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d7bd31-5eb7-4c8d-bf13-4a5e66d0b77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ffa63a-8b4e-4ba8-b349-6ea6324b693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ab0886-0b72-405d-b143-6616327ef58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f860ab-c4fc-4d85-8a13-f94bd8f7ba43",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72927978-a737-4586-ba54-f8d6a561ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a86e2e-623a-4dff-afc3-149f93fe621d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397bc3fc-beeb-4101-b20e-256639741b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b88af05a-ae01-4c9b-9290-bdff3a47d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb3054-c08c-4510-a084-c11562f8ced4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fa244e-2899-4b41-b253-23ece6bfc300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cc6765-5680-45c3-948b-0e151f6fe3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecba7922-4b90-432d-9bb3-c8cb92321668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb2a65d-84f0-47db-bad7-3f164fcdba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835c36cb-ee05-4de9-a2ea-99302e4f2f6d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11b6d86-f671-41e3-ba15-2305f1b92a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0b3617-c051-47f3-989d-d0c111f0496f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b7b2d5-68ba-4be9-95db-f76b7ae95773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddde359-860e-43c5-b7a4-42a9c35b9de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12969dd9-41d8-4e24-91cc-fe6d71f863b9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2617852-e79c-4391-9cd4-b563380c4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba96f50a-85d0-43a4-904a-75092bfee99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0490ed-f2f8-4b23-aacb-ce6057348e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37aa2cd-96bc-45df-96f9-1ab3389ede74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdfa5e1-fa35-4f37-b3d9-6608dac9ed37",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236cdb5c-4d77-4065-a357-b98f526a2b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed8f972-506a-4b0c-aa4b-7833b1c688ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b137e4-5108-492e-b30e-71f6809e46ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23d813e1-6e14-4588-8e3c-5e561651e0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8a43f0-3572-49c7-b9ba-495d58f0f3b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3755e408-bf4e-4fe7-bb13-b13a712282f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ae7826-d570-40c9-970a-faf83300fd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9eb83f-311f-40fd-876b-12c975c19322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "219c53eb-1bed-45fe-b997-2bc4b8a78f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f4eaf0-e33a-4eb8-a6a5-b8cdc2b8e185",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f74e990-2750-47e3-8a6b-7603c618c084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d426a1c4-d0f5-45ce-be5e-7888cb850f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11a275-feab-417b-ae62-174f7dbc4ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d8da3b-65be-420b-b0cf-5b51a8fbbe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a9f0ec-ae0c-4a1e-9715-961399bb5c31",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb5f93-8d80-404a-9bba-f4e9b14939df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d881191-e9ba-4a09-863d-d3a436a27335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354fcf4f-9cfe-46eb-9435-6688870b0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13056a36-d6a7-4dec-9ddb-dd53d89f3813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51be1507-2646-41a4-a3b6-8394b8faa082",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4ae7d7-ed5d-4255-b8ff-7febdec51af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3917aab-99f0-4e70-ac1a-95bb9ee78257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b2356-2faa-4bfd-9fce-80e935f022a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8097633-9551-4992-bf71-25d23e379dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35af0ea-ec56-4ff9-98c3-c1083f1d9631",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc3f78-159a-42ca-847b-3d68a6594452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a0cdd2-0c19-458c-be91-9fd66e577f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0d284d-b58f-4483-b329-fa46a61700fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d44af74-bffc-4607-aabe-21c687a51922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2109eb-bfcb-49d5-8d50-2c5352a66b7b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bb7b09-ebca-41ba-a129-47dd29f350ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff689ef-8d77-4cfb-9daa-8f798cfb3fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a12ebeb-c639-41ae-be8d-01fb353e067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12e982e-e051-4de4-86cb-cb8c1548ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66cc13-5ae8-402c-a3c4-b2e7650564ef",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9ff274-f822-4652-8a92-876dc8076f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2642e61b-ad80-4a45-bf9c-401bd0b474a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f5e4e5-b146-46ac-84f0-c73321ed25ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "285d8eea-d072-454d-926e-8370615fd8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39e09a2-efdd-4918-83ca-620018dc5dc2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7d6b7a-a6cc-46ad-8818-1107c373e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdd2d7a-904d-49b6-aa64-73565c4b557c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acc0a69-2ee2-4986-b6e1-b09b99dd511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "46433121-f90e-4434-9e2f-b3149f79f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0487a3-0de6-409a-960e-0241bcf5d61a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9bb920-ed6c-4cfd-a0e0-ca6032f4d9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a9b858-5f5e-4301-a196-8febfbc701c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c7fd8-ae8e-490c-9b0e-5d1824d990dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9485632-b3ad-4a9d-a580-51e47d73531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba9bbba-8da0-402f-9374-12c9fd47c1b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4b3353-72fe-40d1-8e52-0295b396663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c35dfa-2749-4189-bd0f-26a5722bb945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de37a87-a435-4cbf-8525-7329be93d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20a1b42-b44d-4405-83fc-2748858a5ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1e7e4-51d7-4bdf-83f0-8cb9e266b660",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6397938-5d82-4185-ba4e-de4422c95388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfcd94a-17f0-4caa-8d89-60ce04d621f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1527f1-415a-4fd7-9bb6-e76ed38425e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d5b8bc-0287-4367-b8d5-bcb9e7757de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d86875-4e18-44eb-bf36-1657c0053a82",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570aa747-55a1-4161-bee9-393ccf818163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f5dc8c-3084-40a9-9166-d95a5802139a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84defe42-6650-4db5-a63b-f73a99489eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb95ace-3e7c-4893-bb2e-b33487145523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b210dd-18d2-4b96-88af-2100368f4639",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8df3dfb-149f-4213-b516-9c1c6863d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322a0240-78e0-4d87-a15e-a61bd4972c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef0e2a-e354-434c-ab84-3dd042e8fa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "33edb9df-a8b0-477d-aae2-676b870fc22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ebc742-715c-4f12-8053-4bf101857a98",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a219e78-629f-4fe6-933c-0addc789e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "073b691b-5700-410e-a2df-447e7cf57e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0759fdae-d53b-4470-a79a-33a979ae55ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cde98784-66d0-4547-a474-a7600a3483a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76a4ae8-7f87-4893-947f-1fc38721be0e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d7c217-1b1b-4969-9003-7e0619c0f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713cfa56-0946-4a35-b434-1b6fac11abc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc924364-6f87-430f-a006-0bb872ef0c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f060890-60e8-4d0f-ad29-cf68e5562cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d443fe5-bb9f-4eae-8a83-5866fe625000",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad4646b-4bf3-47eb-9255-d9452f0bea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c48943a-b872-42aa-b7be-f33ffe0e7c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a9541a-ecb2-43c0-9890-6aa6b3e87858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcc3bd0-1fe7-44ce-9620-02f1b74681b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff91765-5fb0-410b-9b1f-7322bf5df2e7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8573f-d807-40f9-84b7-26996b31dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3740acdb-5ac1-42a4-a8bc-ac899ca2bc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd66889-055e-406d-9de1-60d833f814f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7818ba-31ab-4b8d-b93d-1ff68534e5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4501425-fb19-4a8b-81ba-5d876600168a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7df09b-9134-4e93-9b34-da66aa915730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37548f37-4928-4bf6-97d3-d1f83e530b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35be96e-c720-4893-8939-d4503bfae8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd3f2e7-389f-4484-a0b0-805c5ec1c92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9dad50-1f90-467a-a1a1-6d3bd809506b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4608e1-c098-4fd1-b9fc-8de092114bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae9a3e5-4e2d-465b-a852-78206e3d8741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd71b304-6a7b-4bdf-b08d-05ff31be322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9597a3-0381-4600-bc47-8db1663c6579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4813e53-8a1b-444f-ac0b-83971daa4105",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f07900-036f-4368-a2ba-382a0b8b5773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85d852e-0020-47b8-abd5-21b31bb75903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7172971d-a4b5-4422-916e-f294724f0065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe2ee2-1d39-40bc-a0fa-13cf2001dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f95b4b2-d3da-4314-8909-c91bb039e72b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3cd776-6eb5-4c51-9831-8d77d75899cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bcf0d1-43be-4c57-8323-3a7b831b1462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d198d7-f2b8-4361-87e6-33464ed6ab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8833ebf7-3f13-4c8a-acd6-ba6fcc86e6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffb525d-d202-4dff-a86e-bee740be90e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8802e04-845e-46d1-a238-d21568054ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d83da8b-63a0-4fe3-aa8f-12647acd949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d6ab1-fa83-44ec-aef5-c7701d67b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "09127732-f3ff-47b2-a15b-7509f84b6459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eab62d1-082a-4f7b-a2af-2259d94cc28f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bb4d84-19a0-4a0b-9000-1c4125d6a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dca8413-1868-49c9-92f4-d1a815479a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07d7c95-69eb-4e19-97da-6a96f14f6c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08dff77-9c32-43c1-9851-1209ee1dcd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74411459-cbc7-476d-9570-b448f5cdddf0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09fa3a-4ae1-4147-b021-ffadf19bd86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fce7c68-4049-4b48-857e-1045311d8550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48550c56-5c41-4135-87c9-f5cd92d42082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8add0eee-62d9-4489-99b4-96b8ff4e641c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08622942-891d-4f7b-9944-be96e25b191b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c28dd6-1768-4d2c-85e7-1e3dcbd7b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09acfe37-cf99-4dfa-b769-fce510a8dfb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934f508e-e079-416c-9fdb-ad57beabb054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "656b4422-19bb-402f-8ff0-368dd62b4c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6127a-ff56-4a4d-9aad-2d157e637277",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14bed54-e70f-42b1-ba44-cffac03c989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640007e6-caf8-48c9-b1c9-fa9a0071d0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012bd6f3-4d76-4903-88b8-3e54a917d1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6e6813-16fb-434a-8b89-d022d7effa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e6e28b-5414-4e0c-9024-1b7d5947f53f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97aa077-2cae-4941-9423-2e4b1dbf4f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ac0a90-61d3-4a6d-a62d-a45f09bdae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0efb939-ee90-472f-8ec6-517208a366d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9a1b5b-e750-44f6-8191-33c4397879dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92009603-a1b1-41f8-8f2f-5b398567ac30",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5840430-7fc9-4ec4-8f5a-2439fb7e20de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90302bee-8527-433a-b85c-2c08eabbe385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d22910-db4f-41f2-9d9e-051879dc4d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1676e98a-d76d-4a5e-9a55-159e07e63336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a91949f-b0a0-45b9-b318-7026aa775ec4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be69e8d-5e6d-4c8c-9d71-c24dc9dc5e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fcc226-ca2c-46ec-a24b-ccb08bdadace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c373f75-4274-41c0-8932-ac597c630d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b363b21-7022-4082-98ff-55fde7b06cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1058ffd5-37d7-435f-a817-dd2faafd77d8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55212063-b52a-43e4-9a7a-c71059c78d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a509d746-7061-47c6-a5df-7d6b75ca1904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbc51fe-b0a3-499d-9271-13842ae6ad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "537d48ae-3313-4915-a838-662eedb56375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b7b29-4e9b-43b9-8467-fa6f595d6986",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf685e3-eae9-49ec-a045-7fc3951089e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4535ec5c-cc9b-4539-b416-228f1247ccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3129063-3722-4a75-a3d7-5dd42e28ba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc778c7-bebf-4ee4-b12f-ceb57aef5487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517db47b-fcc8-40ae-a688-555fa7c0520c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3f3d75-f124-4be4-ba99-8919ad6941cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bcfad3-c1e6-4dbe-97f9-42d0c42d9fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73269b22-3acb-4cc1-94d1-87456a74f481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb02c2d-474f-4ce2-a6c3-2ea8aa16f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53a681-6963-4af5-974f-45d07dc28ea0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc60eff0-ffaa-4151-b457-9d0a8fb1f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae8f5d0-f177-4548-b695-f4a3657e568b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2120752-c3bd-46c8-b7a9-79c553155039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef7a9ec-0e1c-4e8f-9ea1-48e22d75a037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e83d4-8478-4022-97f2-33e0305ea377",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300dd162-9810-4447-ae2e-d498fe11897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3a9f94-057f-4b06-a0f4-b817e426455a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991100a5-c685-4dfa-9bf7-f8e1985e55f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "72542885-f1f2-4481-9bb3-7860378ff55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f941a6-919e-4cfa-b727-de1bd46c07c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52937be-a1db-434a-b453-d1afdac91a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b3b03d-14bb-4103-849c-55f0b89ee658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d433bef-1065-42b5-be92-116050cba4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe46a0a9-f1b4-4721-b2d1-8d88c198d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b05188-f9af-46b4-b6fb-7fa745e37673",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaf1f7f-9f02-4053-8cdb-b8ffffe744cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc70eda-9013-45e4-95b8-5004c426d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a775cf0-c370-47ea-bfe6-0b306cb34766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5a60c7-1873-4401-acbf-9142d417b8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ced007-bf42-46d6-9b65-82d99413e243",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43cad0f-cec0-4728-9734-87eb509a969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5656c5d3-1003-458c-9545-58890166bbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd0d84-03b4-4929-968e-0192c44d84b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "884f094f-6746-4262-9d3d-8305604930fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb765ac7-b498-4a25-a826-465f2f3fa550",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4611546a-02b4-4b00-924b-21a09727bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e0bc4-32fc-411e-8494-fe7b6e886bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d44833-9802-4a52-bace-fbf6cf931ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c806ca-7e7a-4db0-a92e-593db79a7e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b853612-1544-44ac-99b6-425bd0e3f463",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f792442b-7862-4c32-a895-b98f92e3fce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a793da2-c3f8-4f95-a28f-06066d5b8d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5be7e2-5fb8-4506-8bc0-82f06abc6336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d19c433-6d42-4612-995a-eca420509286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77fabf6-7a2f-4711-ba65-181b86094ceb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23834219-6a01-4d6b-8925-2453b8450e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e3b713-86b1-48e6-ba14-f414118d0e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72327c78-9e95-4b59-a1a2-646d34f97f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d55e1f2-fc81-4a68-8c37-6dd7817ae37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7ffb94-7296-4179-af91-473fd7605385",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a98a9af-07b6-47cb-98c4-d91de871c942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bfc70f-3721-4ca4-811b-467b8220ea44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e225b-b58f-473b-acfd-165c2db11ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3ab977-0104-4af3-b5e6-617bc45372d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a26e32-1ee0-413b-9ae9-754f88ae2502",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c508ce-c2f6-4347-8278-600fcf861086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a35b2f-6f17-45d0-9de5-c4838638a966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d74296-27ec-4eda-a833-8b8ceeca71ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d4cdbc-3bab-4ea3-a311-f38699abd903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df355bf-197d-477d-ac42-9d9e56679b2e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3392436a-60c5-4237-b72d-c1e148b8afac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dde9c3-c909-44e7-8cd7-4def26bb61ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8ed536-1b5a-419f-83de-7a30d1cc7d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03583585-c927-43a7-9169-ebc46e888756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6165aa0-f806-46a6-9a4a-db2a74d37267",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a731059-dd3c-4e5c-91b9-f397621f93c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07555309-3769-436f-9206-9ac1b94ec276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d7f35-9d68-4af1-8497-1c95381b858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9a06d4-7ea0-43e3-8ea9-6665a5ed48ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1606720c-cbe2-4968-a4ff-e5193be90da2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfed461-4b4f-4274-8620-61ffbfd9f43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6595b73e-7ba9-4417-9edf-b0e137d1fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c0d30-b767-492a-906f-7fa0369e7561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7489a0ac-57bc-44a0-895e-dedf0c0303a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a4f142-da29-41dd-b754-99f0d70d2ddc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527e912b-b622-415f-9532-d2cd6a7d5020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dcd6dc-f70a-4c4d-8dfc-0986307b84b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe529e7-b1cc-4097-8836-4a8a0fed5133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a66ac16-ba80-4d6d-9584-21f380ce43b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5c2c0a-e29b-4bd0-8662-66aa8f5d37a9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3821d9b-ef64-46aa-9fce-708b24a2f040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eac0c55-a571-4cab-aa80-975e866b06ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9be8c7-ef56-4e46-9742-8fd864e82ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f475b26f-3a20-49c9-bb22-dcdbb79670a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b768f-0bd5-41c6-83d3-267a6200fce1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a45fd3-0bd4-4520-91f8-648339fe3a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d77fda-ea7e-4953-9ee5-ab0e06b36ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081bf8c6-0a14-480c-8822-11eda8d62181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "353d4702-8f55-4ee6-b5f8-f6b7044557c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635fae40-45ee-49ee-b8cb-99ccdfd930d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16963a25-3e94-420c-91c2-3a5ba100ded1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7938e8bc-c85f-438c-ad07-2ea481f92065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d99799-1729-4164-93f8-ae42b8469122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfdb998-1a5d-4e9d-8e80-50dad79ab8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace307d8-7c36-48fb-98ed-cce636f89877",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d390198-67b7-486a-b86a-80089a5dcc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a90af7-307a-46eb-a631-932e35a03284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8be960-d1b0-41b4-b2c6-49ecdd25f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cede725-f2fa-4897-a374-bbe5b036f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd02b35-d94a-4b08-acfe-cc712e94cf7c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875c39f9-3e81-4828-940e-481a6c724b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ff04d8-0d3a-4b02-97b5-741db8094266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec813c8-eef9-4fd8-a205-e5f0132de556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77717c81-e72d-49aa-8fe3-af05ffbe620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa7ca1-8519-4adc-8290-18806e99f330",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0cd398-8bc6-4ab6-82a4-db40a54c8a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73df5acd-9061-4bd6-991f-50c81d216d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467fcc7-e221-4168-9144-01fd9105e72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba4765f-979a-4c47-a4a2-77ab8685ce86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daadde89-d6c7-4b0d-8678-693eaee0e6be",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe719f1-a61a-478f-b8e7-802b4fa0aacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91483c74-8d5a-4a78-a32f-0bb98e2366e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55e9c48-a9a0-4dbe-9957-1fef17b1dcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ebc6b1-fa89-4f8f-a972-b342e0f174a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a1d0c5-e316-42ce-8927-fea72d636710",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38185e2a-a36a-4475-979b-20052ac397bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f77c90-50df-4e76-8197-9ee5697dabc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd37b0-4f93-4228-8c86-50abba880f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa39ebfc-8492-4a5b-8539-6c1ecc28da4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dc8cfb-a3d0-4e01-8b22-c144d2440629",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff91f27-0a74-4325-86e2-2e8cf707a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54f1bbf-92c5-4534-a6a7-706db8fdb801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7688e-5e3d-4ca7-8e85-53dd52a7d8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1dd23e-2674-4328-9def-918d6154a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170180eb-eec7-4f79-9333-2e82c652daec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49992a72-fa48-46e2-9c11-2de26d2643e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab105ad5-642a-47dd-9015-702fbda596f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a793130c-3f13-48bf-a31d-687ffab08605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32726d6e-dda5-4da2-9c03-8d0abac014bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe9cfe1-5e55-4ad2-a868-4b5215545d36",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d94f2e-6db3-4243-bf7f-84f0e6c45271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37215053-8708-48f0-98b6-a73d04d3797d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a928959-79be-4a21-92bb-2a18044556eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca68d649-a86d-485b-8cec-0f50a0b2d3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02756159-d0e5-427e-b844-ecb3d9fa7b5b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edadef2b-86d7-49e3-9074-134a740368e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7ddb90-494b-4928-a4e6-e10dd6f4165c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672311d1-d35b-4d10-8ee5-af8f6d8762bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd38c35-7f07-4a95-a93f-043d31caeed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b15cee3-49b1-4f7b-a495-9866b268cd65",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25edc2c6-9e15-4d11-b237-1e50f4e7c797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634ab99e-b6e5-4ded-8ddd-de817451bbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41052cb-4b7c-4ed0-a149-05f948d9baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0f6fd0-5391-47c4-9739-3fc4e9fac7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1966e4b-5498-421a-b2a8-5b434f59096e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e591bd3c-6f52-449b-8068-a8f10e8d93f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a11200-6945-47b2-bce3-36dfd5ac674b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c818279-1748-44e7-84ae-49534043a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a94aac1-1c82-42cc-8d1a-4e24a4b522a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b7c031-acd6-46da-9cd6-066c4e1de605",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b90154e-feab-49ca-99b7-645bb7f4ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca16891-83be-434e-b3e0-5735536c84cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952e0427-a873-4bad-8d73-d2f78ef8751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d8ab14-fd68-4524-bdc5-e526a29bc3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7022a4-eb92-4282-a891-5dd0e732106e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21990585-fa75-4877-839d-eca5897d6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ae2c5b-9638-4014-82fb-8a317df1cc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf58041-65d1-45ea-81da-71df79f7d021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cddc19-a0e5-45be-8e8f-d7d83af1c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f2536c-6f40-486f-9295-cc9d32a0e1c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068a232e-f3ef-4bd0-9024-3d8659c12292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fdfd1d-1610-47b5-b38d-acfc50f63025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8da894b-f544-43d0-a8e5-2a770fba727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "039680df-b500-4bf2-a3f1-bf9c2f75321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1047455-877d-4f75-b04a-6175c54d05fc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d4a8b-feac-4056-b9ec-2f72e274614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76a29d8-f755-40c4-9c34-d952beb5ea74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc487bfe-f0ab-4af2-be4f-1c1a7b8797e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "553219ac-dee0-463e-9a84-8393506f0844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0875a-6d10-4fb7-86d5-a3e3e4f93335",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed5c83d-f82d-4e5b-a374-3a67e6b28735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88fa73f-638c-4322-8361-cace8d5a5422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478cd74a-f452-4838-b97b-03cf455a3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06b8f5e-9b48-4951-9639-2643cf7a2939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b389c-9c50-48b1-8401-2d4f31827028",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1a50a1-3f4d-4ac9-b293-7a53b39c775a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff54f11-557e-4883-a2cf-100f21396aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2caa629-531b-4fb4-b735-3455055d01d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3d1db7-f0b9-4e66-ae6b-2f5f027b580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f70406-9497-46fa-8e32-ef57c062c9b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d75404-318f-4aa3-9c83-d75857aaf61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde50f8d-04d8-47be-9a16-726c9a70facd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c65f5ae-e842-4e73-aee8-2ca282c67fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0b0708-b975-4078-8b20-dd3133be48c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb28c8cc-84bd-4597-946e-527c8ca4717e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfc0ac2-3143-41eb-8319-42e4113a761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae8d991-709c-4b6d-899e-e64f237f69ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02287da-5728-4b14-9ded-50fd64e12b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c43558-90d0-4fb8-ba20-1b4d8804fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcb31ad-dea3-4b81-9afc-6227e443201b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cfd776-c54b-42c5-a5f1-06bec9f8c77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2d6229-a2e4-4dba-a1bd-f3820d0dca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394e3c3b-afaa-4ff2-86a8-b45ad4cb8c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a432cd04-f454-4a4b-a4ff-1f0ae8674396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb41b79-d3af-4ec0-ba4d-10029e70a634",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b09cb7-28b1-4d13-b67a-01930b83b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7aab40ec-4cff-45ab-bc58-2122fc897834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec1003-2039-4f63-ba02-af14ef0b7a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11608ae1-2f12-4507-abfe-16fd8107bba9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64dc3935-9902-4db3-ac02-3cf30d789335",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2923eec9-80ce-4240-b5e2-e5131096e447",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80782a4a-5223-4a93-85cc-185b045d1b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97795d88-e403-450c-a41c-99db03c6d132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843ee334-84c1-47fc-8914-5c124911937c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f1d335-2551-4beb-b869-31fe160c0460"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f05900e-83db-4847-b38e-381691773d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a17dca8-3813-489b-aaab-bfe59f8e3ff7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32900219-e376-475c-a6a6-07ed20ed71b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "223b4d03-4fa7-438e-ae9c-75759b7563d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f66f6fb-fcce-4551-8ec7-cb6babfca28b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "731d13b7-fb2c-4536-bd0f-8998fd7ee3cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38b691ee-3a48-472f-b9e3-5e7bf251bc19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d3d41e2-d174-427a-b21d-6fbf0b08d7ab"
                }
              }
            ]
          },
          {
            "id": "3d6bc95c-02c6-4445-9aa8-05a6c9022cfc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa891fb-4d31-43be-9a4e-98ef4fc9c36b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "367bef2f-79d0-4e93-8bf9-48e4180b0e72",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9792d6-1c6a-47b9-9d83-fc02f21984f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3d5f8046-45cc-495b-a457-7ca6f638840a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7d1a5f-6c52-4971-aac4-d3db0e509fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380175d8-cbaf-437a-bdf4-2acba37ecc2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2a402e2-0b36-4f78-b8eb-c8afd0e0095a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adbd47f2-8b45-4e1e-9675-5eae7948b0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b573aedf-fefa-4792-ac6c-430daa03c4ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50420c36-c7d9-43a6-947c-281c8db549ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23d46eb3-7767-4941-aa98-893ad1860b2e"
                    }
                  }
                ]
              },
              {
                "id": "e0b6bbbc-08e4-4aa0-9e6e-d23ec5226e9e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "124b1f9e-908b-4a29-8927-d1a9b089a00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e93c5a9e-a58d-4b01-927b-1e9bfd4e1cbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48de3078-ede8-432e-9965-88f1fe42b52f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57386131-91bc-4664-a594-a667ff53b214"
                    }
                  }
                ]
              },
              {
                "id": "d300ff61-be30-434f-a828-d93a569fff3e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a10aff-3768-4d73-9990-ac6c779f64c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "265920da-9d60-47ee-833a-455186492c56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "016c6062-34b4-4987-914a-20b80157a808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d30dc371-394d-4ecd-b592-03f1ac497119"
                    }
                  }
                ]
              },
              {
                "id": "0b3b1fc0-2a28-427b-bf14-c9644b8a383a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60d50ff3-ccf3-44ef-8675-9dbc38e0c3dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14efb706-6690-4654-8cd9-d35488ba1461"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26749770-6ff2-4fa1-bf54-34f1fcb2e4b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8bb7b9a1-e241-4322-9ab7-694107ab61ff"
                    }
                  }
                ]
              },
              {
                "id": "57c4fe2d-157e-4c25-adb7-7438f9012166",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "675e37cb-46bf-4037-8413-4f4178930899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a54da85-5b0f-4d34-990a-3e979d0e7e3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8418715-be48-4f0f-9bed-49ebd3dcd5fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5ec723b7-97e6-46f9-ba92-f8c66ad2212e"
                    }
                  }
                ]
              },
              {
                "id": "368bc7bf-1bbc-40c6-8515-d6e5c38f753b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b03731ca-3361-499c-955f-0a1ea279fbf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cb7d24e-df11-4277-87b3-a73847a68f19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f4be889-6a3e-468a-a89c-8ac1175fa51c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ac3c4f0-e6dc-4021-a09a-a5ca40d838c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1df7d57c-0568-4c7d-9265-0a9e736b0f7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b3143a0-18bd-489f-aaf0-25bebb967427"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e474c09-995b-4d84-b540-55287e01e91c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bb6db11-bca0-447e-bcb1-bb0542876b53"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "548fceb8-00e4-42c7-b47a-0570866661f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5617e486-c2d3-441d-93f8-95bd7cc1b282"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6f8cd29-1ff4-4c71-bc2e-942ad6250f26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12fab9c4-1941-4e65-a958-b27121dcc27d"
            }
          }
        ]
      },
      {
        "id": "ee2246e9-5db4-49f7-890b-a2510af9e228",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0bf36174-28d7-4b01-8d50-b4ac0eb7eda6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6049929b-7760-45c5-9272-dcb2d6341d8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a16a2b9-0650-4737-b064-3d3e62aba297",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda8fcf6-c4f5-4d06-b94b-1790df49ce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda4ef2d-2ba3-485c-a40c-3b54c097480b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f0a310-c699-4c95-b1ad-2954ac9079ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb94383-2c8f-4184-a857-35e6b1da8b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39cd59-4ed8-44a8-b397-de28de6476c5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04450988-baf9-4885-aad4-fa541e679051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06e5157-aab4-488c-8a73-88461bdd9437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05986b-8579-4028-a81a-04d99b20010d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d97af1-f8e5-4d05-9f78-207b3cc2a386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867852af-c720-445f-a1f3-25e48662910c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931504f-fcfd-4448-80c3-badbba352433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f268a4-08f3-4033-a25a-7bd7cc5d2add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0211b8-d582-478a-9290-6fe4dc6dbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8920691-8e1c-46fc-a5d9-ed9edccd3352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7fa9ec-a122-4c5e-8308-402425081304",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f956325-66d8-49a3-a55a-b4893cc579a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d9b30-4e23-4820-b695-55f2145b0351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43d35d9-99fd-4cbc-b144-083ae9ca655d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f66e26-83a5-446d-aeae-fb2d0ef70554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38226ef4-c7aa-4554-811d-9210c2a9960d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a4efb-0a94-4cd2-94aa-ad2489534377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ecc32b-7d65-4b95-9b9e-fc252f4fee30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae48cb3-a677-47a4-9a7c-d82b358eeb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "721a0fbe-7e9f-4cad-b207-99daa8b2e799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b945133d-d290-46bb-9e4f-b26c02e5e55e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2edb5-9af4-4099-84e3-66916d20d3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56c5c0d-ba02-405c-87a3-3205504ca7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11420ce2-035b-4d9c-b218-acee168b247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8446ce7-5120-4b60-ae4d-4105f1bcb977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed824d7c-82bf-4fda-85f2-b5771df5f448",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b0597f-50f2-4199-ad00-854ff7a83bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e23502f-7ed6-428e-be7d-e474e989115d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c36e2ca-ab07-4064-9a10-796862c0998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ebf08b-3f5a-4d71-b6ea-5708e75a8c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf262a9-3b33-4221-8161-d3761e53bf67",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e04f3e-8725-40c7-ad61-4446bb7488d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8a6f86-7cfd-4467-8f53-06b14be1431c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d212161c-451f-43b6-8ba4-89544b360a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4180ac-ffad-44ef-bdb5-0d6f875008fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed752e6d-78bf-40ef-94a5-dcfd5a2a881d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcbbd6f-b6d7-413e-ab4e-68778cce928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a226789e-018d-4cee-9c43-93b17995a4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290c4bf7-ec9f-422d-adb5-14476115137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a6cc8a-434b-4858-a6b1-df1faa4454e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845271e6-da97-477a-8e85-1ad09809cb47",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6ac18a-40c8-4357-ac1f-a215e51d5999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36da90e6-da67-4d6d-ac90-20f930d2bd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ba7c5-9ec4-4412-9972-7288effe3de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b921ee-cf8d-4db0-93fe-d72b9df93b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1686d3-4697-4f4c-865b-20092ccfe1e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17564d8-8aad-4440-aabf-0d024ae85367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387c69f5-cc60-4544-8993-0093f0e35062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebeec2e-ce7f-4cc4-a5d6-734d24041b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b4d8b7-992a-4d3a-91f6-4cc1c9caf80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5472282d-55a8-45f3-9ccd-58fdd843f1cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2443925b-9bd6-46df-ad52-9c223ea20b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35afd964-de6a-4c7c-9e7a-56692fbab542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c088e47-06e9-405d-82aa-883d26ddd36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b7767f-b21f-45f5-a705-7e4d8fe94440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a6a825-ed15-409e-b040-a732527e7016",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39afae-f79d-4862-aace-f019a789afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b163a935-3c77-4adb-a9e7-2b7737b3b73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b65d03-13ed-4b2b-83bc-c5ac10228cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d37576a-4bd5-436e-88a7-9453b3f57ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce0aa04-0129-48ec-b772-1b0b6d03f7e0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fb94b4-8b56-4997-9c85-5b55ec237b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1361c1dd-843a-471d-92b1-1b30a5a8529a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae8d78-f0e6-40a6-99c3-41dd93b16dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc171ae3-75f1-4232-b29b-0a2742b5defb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dd5899-9ee9-47f6-9dc3-e83667e9235b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae07a73d-0730-4bb2-b66b-6ab10898244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a097307d-cb9e-49a8-bd01-056afcf79de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f0b5a-2812-4500-9aed-e48399cd9da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "464d1f1f-b367-46a3-bca5-9825c649a5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add7520-2420-402e-b248-c70b08757456",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1af8fe-526f-4ec7-8722-103e989607f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a728899a-b15b-45b4-8fa8-71c67cd1148e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602e4cef-0a0c-418e-bdae-652cc655a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae13640-f4e1-46f3-b85a-2e369ddf4c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8ae486-456c-4c08-9aaa-fa55871a1149",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d945ac-8357-49fd-9bb8-3443c346b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d0c646-d5d7-4204-af71-58e0705aa820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaf4bf7-7096-4266-808c-81dce56f9bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55fe601d-75d2-4a52-80a3-8e9a58298e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986af924-6124-476d-b9d5-12778eb7f8b0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21556474-b4f6-464f-9921-1f2b22399e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4b4b57-e324-42b6-8c17-2b04dde3ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074f3452-30ff-4c17-9cb9-40cac0a36b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09bdce0-3e1e-4827-a0b4-79e3f8d71993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c3ee5-9561-48a5-b47d-add741a699e4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c004e0b-07d3-46e6-836a-e85bcc33078b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7121b9b3-7648-4a57-b4cb-988abbc78948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c826958b-d477-43ac-8740-1e8f93ab1796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329af066-e399-4f59-94bd-e92a3dfebd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d96cb25-0582-4d27-a92e-5b5ea51ec1de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915b7ff6-96c3-4b7d-99e2-a209ebdf741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d839bd-f988-45a2-8db1-21dcbc9b5df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3325eb-f25c-4a77-86eb-3880648efc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8b5cb7-4e07-463a-a6a3-d4abd47b12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42f1867-b0f9-473a-8ce1-904426ddb491",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c751af-7e38-4324-b249-3b04a69e0ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e8efd5-0b00-4b6f-84fd-559a93709cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302e3a6-a78c-451e-9979-14dc193c31d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd52c01-dfd0-4bfb-b3a0-56bf6ae1a375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76ac9de-c108-4ad2-a99e-c1ed35735663",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081c85e-0375-41ab-8c20-05047b9d8fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefebcef-4374-44f0-a6a3-5ac1608326e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada6769-c0e8-413a-aac8-253d6edf9d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be77e86-4b56-4db3-81b5-7f6fd951a8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac48bb9-bceb-4425-ae7f-05a47208701b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f75573-fa9a-46fb-aa08-1e4d23311317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea820fc8-eb6d-4791-b182-e2438036790f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76df25ba-e86b-44ac-8dff-b67151ac6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34232f73-80b3-401b-9863-45d874431e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31cc368-2dcc-4bda-baf7-38889393324c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cb426-c193-47d0-8d65-83060cfa1c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd3df84-e15f-44a1-987a-d077418dd6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d503f-38d1-4ace-855d-045bf647a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b5799f-3524-433f-bb5d-b2f3a70a7304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d57d0-a0c0-4b69-9e1d-dc869aec01d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b21c458-638c-40df-85b2-c4c9f699e630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6d55a6-d652-4435-afa4-018734e84ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c175bbe4-3f1d-4b83-802b-67c7055df72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5c5d5b-7c35-432f-9579-021a5221c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03d12a9-e72b-44ef-8a32-839f2c28ebf0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2526c8-00a4-4b03-a588-359988f0767b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d647d14-205c-4a2b-9651-31dd15c1c343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a98b5-fe18-4b4a-8ac7-56950dda53e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b80cc68-551a-4761-b4e1-66ea5e7f603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b061ded-3cc0-49d2-b70e-ff327187541f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4543c459-d09e-4874-a42f-af488bcdfc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf12e1b8-5eb7-4edc-9695-af2770302274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3773fb54-989d-4265-965e-e442bc9fc422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e622b0fd-c7f8-49c3-aeb6-f1235101855c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d55195-6bd0-448e-8cc4-a39b30027cb9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2e69f3-6ab5-446d-ad7a-eefd502638c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0558c08d-33f7-4fec-ab05-79fcb482ddc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68da58b-b37a-4742-b901-e0d18e21d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063843ae-747a-4229-aa40-306fb9596143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b543f-f156-477d-89aa-1da7f95aa3ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c4b252-ea2d-44c2-a0df-8460d410c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc2b2e6-fa43-4c51-be88-6a9659096d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47eb53-fee5-4331-ae71-6fbb2421a706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8961e7ae-31d0-4b7a-a92c-72a27c4a9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831f7703-6e13-4894-a9e5-a5a1c582704b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa148a33-30e7-4cfb-8b01-27f161e6e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ed92d3-3a6a-4b2a-bece-2ba8035551c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22da2e0c-e5d4-4de7-be68-1f1b17f1b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f1a097-1df0-4079-95ae-3390c029d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2dd2b9-2ee0-46bf-8b84-015236b40408",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0895359c-6d29-4d06-af95-d975a01b1d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121d06e2-f292-4bca-851b-94bea43665ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be3d0f6-6596-4f81-9e23-be119dc6eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba95b94-754d-4e06-b117-1b0601706379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ea74d9-1944-4033-a0ae-5a60eee02d5c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc83e9f3-bb6c-4d12-af78-11dac6f9a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9ac6fc-ca32-49f9-bbc8-aba9ccb0c24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c416c8c8-202e-4b01-9ad8-ce278da78cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e7546f-0029-4cb7-91fa-419e010459ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8478a54-1a08-4932-adf3-c1ebd8d4cdb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49d2fb80-7550-4b00-a457-ab6d8288947c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c46c9c-43b8-4aee-95b7-486f18bb3eb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7322f004-907b-4188-afda-899a9f6981a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b379591-c5b5-4635-90b2-79f6450554bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faa0c60a-e4c2-451f-81ed-a6a99c7a6a3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2964ec80-3e18-4202-a1f9-66382981fa2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2170d938-2c1b-4808-b598-dde6745c5a0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9495ee55-81da-4a38-9ce6-54208d21a5c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e126913-ae87-48c6-a5f2-19255d73bc54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f1cdb21-f015-4399-9346-cb8301ebb688",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48519743-fced-4140-b4b9-a517a8f26765"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c8677a5-baf2-42ce-b19c-554d86f1ab18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "943557d9-a794-4c8a-869a-9093a29a5f10"
            }
          }
        ]
      },
      {
        "id": "0474b0a7-d3aa-4703-8060-06496c070157",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "623ade70-aad4-4648-a6dc-c0b8bb2383dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3bb3b56-e827-481b-8a13-1e36aebd54fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff884100-20c4-4e74-a270-4363a4aa8e51",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87936927-0543-4d78-afd9-9717bccee243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd71bd3e-c11c-4481-b838-053221455c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ed832d-33ef-42ad-b3c6-c6e487930a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d7d104-aaa3-4f25-8de8-cfac74d29749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646edada-7e60-45a9-acb7-b08e5df85291",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d94cd5-849a-4cef-b307-5d11f6bfbf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3580f593-f65c-4962-b0a7-97c5d6a86109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda36c40-3b70-4c62-8505-f5371302df6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a6e2a0-c55c-4406-9bd9-418c6ddc19e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66ee7bb-0375-4c2b-aa67-2942df5230fa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba30e2a-c95b-4e90-b8b1-4080861b73e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08bd610-6547-46fb-8f79-007df4ca9f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968111c3-d31a-4e1a-ae26-af68133a996d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e36802-10e2-456b-a50e-503acefd68f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61664408-327f-4c44-8e94-5d36800ac808",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58d9c5e-2a09-42b1-afb0-f3c7fa8a593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5463eb72-2001-422e-b8b2-53466715e4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acf4d74-f3a0-4ae6-883b-80973479eefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7cf7e4-b1be-4f55-b71b-07f111710a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e1e510-3f54-49ea-bd13-1b0453bcac0c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1d8591-8171-455b-80ef-992b1ec255a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36ec5e1-188f-44a4-b70f-029c60a23e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d392765-3914-4f8c-a28f-9387dcaea116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db9c53e-eee8-43ae-9a11-b03371d5d6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d137a816-3b10-45e9-bbc6-9666ba98f41b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c35b64-9adc-4d37-9de9-2e7717639514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876861cd-a604-42bc-a1b2-524e25db86e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e7729d-79f5-41dd-96c7-44175af0dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f6abd9-d259-466e-b2d3-c6cde8cc42d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88b041a-5770-414f-800c-3b9afdc7258e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd753939-7946-47a4-8c21-42c22655c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0bf6ad-5d86-4167-80fb-5ba0da3e7752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af0a8f1-2d54-48ab-ae5e-d8775ab6d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5071951c-870b-4791-8bcf-a534e3f3d669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f15348e-86b3-4750-8aa1-dd55853d2458",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcc2115-973a-4849-bfa4-d608b8d160df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06db6344-94bc-4b19-9156-fa143b5965e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd7713-d587-4a82-991d-75ed6e350f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d92a87b-b27c-4cfa-95a5-650c599560ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28751737-6b48-4c1d-a904-536f091a51ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233536b9-66ba-408e-9a55-b7faeacef321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fec362-37e1-4aaf-a744-1b05bf9722a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea11487-ae72-4a89-8fd2-8b8d1146ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9ed4dd-b52f-44bd-a46d-443cf6e760e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fe5c0f-30f0-4a0a-92d7-7570d4c55102",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab68668-0750-49c7-b0bb-a9d3cf9c60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddb21eb-7ee5-4d67-bcb2-e7827300edc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e928cf-add1-4eeb-b504-7d69e0476433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "034a2c94-fa1c-4c98-8582-250d5f700ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9326d4b-3649-4cbf-88d5-f26d0392069c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4885bb29-4164-442f-9f29-1e47deb04c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f2a4ba-38b1-4621-94e0-d23d7a1b602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f95967-b571-4660-b7f0-f67164e9fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae06850-3235-4583-b62e-68e3fc95be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b09bd6-a4d8-4ce5-b031-81bac8804a34",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9431131-81c0-4747-b9d4-b6270f3d0091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5f14cf-da9b-4d3f-8e12-fbab5db83e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c17f332-b694-437d-9ee2-826291441d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34598c0e-4a46-4216-a276-fe39525ab134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80662b0a-8066-42f9-93fd-262ab12cd2a9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18061ca8-12c3-4b1a-b191-f492e0919db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76125417-437a-4a03-9971-213b3316cb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f123352-bd9b-4cab-af62-5e9c28c233f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "113b3631-2327-434d-9fd1-ebe02d5868b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2741e4c2-dba6-4d0c-9fa8-52e58005267c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8001348b-009f-440b-bb68-cbec91e282d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd074a0-5255-4478-8952-2af82f87f787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777ba643-bed2-4e3e-8eba-c802b8ddf91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "483e6bb5-a8fe-496a-a557-89597a7742d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5dba54-6ad4-44d0-9b10-86fa51ce6a4d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a36c20-0c7a-4454-976e-39515db74596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de00aed9-32d1-483c-9010-20f027f83edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075c35f6-58d5-45b2-94c9-b9d23e3c97d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f302c347-e487-4516-8d43-82c77a1275a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe0ef88-8ddc-41c3-9905-7faa64742240",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18937e61-643a-4e38-ba19-f1bb6e77fdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdde0e83-b665-43c3-b22a-6f43ae897acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7696125d-15b1-4d05-858d-94a07f25c693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f32832-411f-400d-b8f7-fe5e98a5ccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069dd38b-b7e6-4a24-9ecb-337fadd00274",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbec920-76f7-4d6a-99f1-dae6b2e15bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db1d0d4-7710-4d9d-94ac-3c6ad95e18d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b3a0a2-c90e-40a9-a248-d56343cda6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c556bf0-8a16-476d-8f9a-7869c6dece00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff03df7a-41c8-4ad1-a669-8c6bb8371b49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8377a23c-5c68-4340-8343-7eff3ca29d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4debfe-570e-4594-868f-359560901d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e06c04-b165-4fe1-aa35-439c4e1982e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5ab595-3848-4f61-ba47-1da1803f35a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae492d8d-1c6c-4146-97a9-9328dfac5050",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81faa4fd-4464-4b8d-a8ea-a4cac46a2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62363277-28f6-4602-914e-2e25a7f34607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8157269-27c5-4206-9c7f-0f0f737b0925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96206ee-1f49-4564-b4dd-149919974aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04d6148-9801-4908-a88a-500f0832db84",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2a3105-a4c2-4597-8df5-059eb1cf667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef33a3de-54c9-4b7e-ab71-fa1272d6c97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb43f0e8-176e-4c22-a6f8-f5b9b95ea2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c178624f-196b-4052-99b0-3ba185086607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3427cf-8ff3-4fc2-b548-224b12063a80",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171d43d-6648-4518-b193-0b2992f61e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef6646d-46a8-4ddd-99a5-dcc5c092154a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d14d5da-ea91-4e4d-93a0-727b49b248bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d76c4f-3e00-4e10-b64d-da1eb5be83a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23aaa5e6-83ad-458b-ae49-4096235da7d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa0d003-7a72-4a3e-9f73-2afcffd5f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf25bd2-ac43-49ca-a890-58207fa335ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb31926b-8f0d-4d91-a2b0-811813e7a984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df2478e8-d1d6-49ef-a159-11bd087ff076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1ae15-98a1-4cae-9b02-815f41b002be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a1da49-13ed-4cf2-bd1a-065e7723ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d17ac8-d07d-466a-9ba1-03a73274235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e673a0b-f765-414e-a391-a4c7fc6b4b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "279e04dd-836e-4d48-a5fe-f1ab1da54c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae206cc7-2950-40b3-a038-b75c93e1ae96",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c50b84a-8a59-4787-9328-4e44791fd77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a288c22-932c-4b03-9255-9b3ba8242040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42478898-0bfc-4dca-a575-c82ba168a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7201f5-b1fc-4c7d-9bc0-c15b458a5fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d09a2a-a99a-4a97-b063-31d6a09ffa83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216b699d-dd29-4f4a-a3e1-d41fff12be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9bf64d-2635-4d76-8881-a2f1e4192e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be073e75-a334-4ff1-bdeb-e47517164d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "216d67e3-59ba-466c-81e0-1d2a51c879ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399445ba-a100-4716-922c-e5abaac5987d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea6a0c3-0808-45c4-b715-d5a548436591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18cc00e-9001-4184-8189-811fb9e2fc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381019ef-2b7d-4a79-a712-0aa576047174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7899de-2462-4dda-921a-fc69cb25478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b556419-deb1-4e9e-ad73-3294982e9b0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faedf8bf-a4a6-4dae-ba2f-ebc785f6e534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84945bda-213f-43e3-9bae-1c06cdc3d8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07faf8b6-834f-4d04-8725-06f42dfbcf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ae4f09-0356-4530-aac2-4c6629889337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fb6dd6-f2da-4858-9dd1-45144e8d5400",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c552d33-e754-4565-9ba4-f3f77c670c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2768a74-1f08-4af1-9f3d-4336c79e6305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165a7c58-0be5-4ef3-bfdf-41cd90772864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d6ddc8-0219-400f-97e9-7feb7aebffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b974342d-d660-4dea-9e90-25d2a3e0f2e5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a282ae-7319-4882-a3a2-cb4cfccc0d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4098eeee-cae3-4374-822c-acf3bebb2d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c7009-79c6-4c07-9015-6d1bb5df391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "680ac629-91d1-4bdf-b96c-a40e45cdb6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a5823-77dd-42fb-9bda-5302a6aae3ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5acb28-6ac7-4115-8631-1d7084fee6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4355d798-a235-4f50-bdae-70b7d0d66bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f815d8-d32a-4fc9-8eca-0e3612519a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8610a03-c634-4052-88c2-016f40c0531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75155bb4-65d8-4f92-8189-e26874ca0340",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101b6eb-3d03-4dd8-89ae-13e408d0b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e74036-0028-44c5-bd56-dca4a771b0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328fd7fe-4c0b-4f8c-98c3-038d91537125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fddf9e7-e49f-4835-b71d-a9736a5731a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd0f605-159e-46fc-bf43-0f2b7464f4aa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cb808-be3a-4536-9a31-ef66c4542465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a29803e-f507-49c3-bdbd-9d76e5d79cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d939ab1-57af-424e-a046-8392e8cd74de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80124f5c-2bf4-46e6-b5bc-541ccd44a43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8539c3-76e9-4756-9685-f7859daed936",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a612c162-5b7a-4f4b-b7ca-ff3aca399d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46deebe-91aa-4668-acae-98acddff6543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a76f1b-f14d-4754-8d87-2d086016769c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251d00ad-1476-4a5e-b641-ae7a327769dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe7756-bb61-4c45-891b-b9881b3b565f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b4908-a94b-4bdc-b943-b0646cd5ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d9ac21-704d-4750-8e05-80186b2620f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a28297-1f1d-441d-9c2f-b9c7e2f1ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10667e4-4f00-4228-a776-419ac8209a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c1f43a-03ac-4146-b5da-eef2d8897aea",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fdbfac-2837-4894-9941-3cf28b96fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3efc8f-d9ae-40bf-8610-86660c5b1685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92810976-c9f9-44af-b0a2-a8f005d0f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83dd095e-1e8e-4ce0-ba17-f2389efad980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1216b97-9a43-4684-8e42-11e42c6cd278",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22207ae3-a8b0-41b1-98d0-98513bcf936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7237429-e6ba-415c-a5f7-4fcd274d31b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b13280-1ff1-4243-b6f0-26d7259e7a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03989ea1-32e3-40e9-8661-3aedbbe3a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f58bbaa-6d48-40c2-8d0c-a69af6d1dd74",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25efe36-d23b-488e-bef4-5438fde628d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99ad689-f7fe-4f77-a198-1e323fbc6779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d0bad2-8025-40e2-aa22-b483c0ab2923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ca1f32-c2dd-49ab-8d3a-030d9aba2fdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdfe957f-a2b9-4950-b3c5-8ef52f5ef822",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e00be137-b180-452e-a818-319c8f1caae3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a3edc0-481f-47f9-a859-c3d48b06d983",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8130519d-5f2d-4f34-94b4-c19629021fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c856d-07bc-4b95-9051-b7eef03c8dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f947947b-25dd-4814-b77e-1c907bb0b526"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97d32dda-2a46-4e93-ba21-790a4ccfb220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3affdfc9-f41d-4801-a37a-a7ec6d1efa7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5443fded-bc52-4104-9d45-ba7d481fa260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca1165c-9e75-4399-8031-1d0d0b8a04fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b302d162-9601-4d8f-9910-6fbf4cf58c12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f1b0650-2f3d-4868-926e-80a7b91623a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18bf3d7d-5c1d-4c3f-a4cb-ec0be4861a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "717c388b-534b-4598-bc79-c7b6f5892b77"
            }
          }
        ]
      },
      {
        "id": "bf32babf-b95d-41d9-b242-4013f36948df",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2d4cd014-2b38-4b43-9110-48b5af8ac7d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e75ac9ac-ea8b-47f3-93a6-f42c8fa5a422",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "778da92f-c9a5-4184-a64b-ba61da8762a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77245fa9-4a7e-4547-9fa4-7e3db9f57d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cbc147-1ead-4e2f-8f4b-4f797bcd37c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff945efe-dea3-4126-9590-db21f2db6658",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f09780-041e-4df0-b23c-4f8c89165749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b048b183-b2b9-456c-9ed0-d63c4ae65fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8295da-01eb-4907-9354-3ad479869f04",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818eb60b-3839-4b78-9276-e1c78a755a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a3ea8-994c-4b0d-8637-c53a87d0d902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c058e261-bea7-4a78-ae57-8560d75778b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5779d6-c56d-4382-baf4-df8408f39c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5602d3b6-559d-46e2-9781-81f71e0b1219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d37880c-519e-4b25-b081-3fb7b243d629",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486549c2-ecc8-4710-a7b3-a4ff6e645908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817fcd3d-3376-4353-a00e-a0a45913eaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670590b3-a4de-4892-b84f-30db4afb6ae7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f017378-08da-4b4c-80da-d8e14cf98fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2934620-71ab-4e1d-9c3d-decaa276a8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a3fcaf-9c51-4988-8c60-d625659c52be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc34a349-7ee3-4b86-969e-0d073c0d19df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89b844f-6d3b-4de1-a34f-557fd5cb7b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb0bfb7-c8bb-40ac-b80a-b2649c9c8598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de3128e-0074-4f3e-b10e-2c916e97174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b62217c-b2c0-480e-9f91-e6cb46670b9c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdd6ea3-e717-4b01-b5d5-83790c6bc062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09747ef8-ba5c-47af-bc71-30b96e809499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d363f95f-45b8-44b2-97a5-ce95330fe9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa51ecbb-572b-4011-bfea-2d3ff9c976f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949b03cf-ad3e-4e89-9e85-cfddd4df3152",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cf727a-0126-46ed-89f3-1a9296445811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899fd3a2-8777-4b31-bfaf-58e8fef15231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb0077-745b-4858-80d7-2333232758bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e9e03b-0ae6-4a9a-b75e-05f592f80e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f576141-6974-4470-adb3-570c44dc4856",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cbf421-1bb0-46de-880c-ec19c06e3366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f9e6c6-5df5-4e86-8e8b-b5125269ca18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e791a4f4-9685-407b-bcd3-29176dcf0099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51f6263-3f29-4ec2-aced-b7df24514a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c9ac23-c799-4890-854a-4aa59beeeea9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3124bf-539d-4b09-a34d-94f3294428e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338ebb7e-76ee-45a5-a9e6-9f6d1d5743a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de8de12-3c61-40aa-bb19-16ded5fb3f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818691c9-4966-4a3f-bdb5-3dc71963c2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3491b9-2934-4008-ab89-8c0c4b20762f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5630fb-bfba-444b-b994-b754fee5dfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16faefc0-7a08-4c49-9e52-b38edf3b9832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71edbc2f-c8d9-4e27-b79d-09488ae36d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b9e522-4a1f-48b3-8950-9256b7fcf3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccdff86-24f3-4eca-86cb-aeae35c7f1a3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4e87db-346d-4f8d-83e9-6223196959b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c840704-be03-47f1-894e-211ca267edfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ba893-2607-4c0d-8b7b-ebecfd035c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d7374c-f0f2-4824-85e4-a00ea663345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f4be00-2b26-41bb-8d7e-16d13240184f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d5877c-ea2f-42c1-860b-f82f7f2bda56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaff1f8f-68be-4ab9-aa04-32782c6ea16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa522b97-5091-4ea5-8ee1-b732829fc7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06958d4a-fca6-4a82-b596-3c6c27f49e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf0db81-2cfd-4391-8d3f-02eaa062c6ca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd5f97-8792-48c8-8e65-09cec204a46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614111dd-f3f8-4185-9d7c-38f672eb2a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc6fe5-5857-4c65-a7a2-33b494c184ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbb7c59-88c1-4d2b-a9fb-3506b09c365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd11246-34cc-4d55-993b-7b97bd1b22a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97c875b-8df4-434c-aa2d-ea73890db7c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27192f3e-3ce2-493a-82eb-591d2dd4c1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a1bad4-e7be-4823-b90a-f7e9abac9711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4019537c-b258-4425-9705-13dfcb626df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04e57ea-6304-447d-a28c-ba515f397bbf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedcc987-4059-4909-92f1-dfacd984da12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e475988c-6191-4602-907d-b2bcae930f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc99328c-c409-4f59-82d3-ba32b673055c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1eec5f-7a64-4a05-96b4-893388b17720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fff72a-0f66-4ab0-be93-3142d7e12729",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f449a9-1f30-4a61-8373-6c848ccf3cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57f701c-8aa4-4b5d-8f4c-4dcf69dc35b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c48021-7d66-49a4-a9f0-d2b2242812cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207c6369-07b2-42e6-bc0f-33bdc419e077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9942b633-0d73-4d47-8c71-5b99dd6fd69a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00afd724-91df-409c-b7bb-41e05b4d86eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c806ae-e211-49cb-8e98-15fa8a2dd89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f820c0f-42cf-49ad-8a7d-3defb26f224c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e138fe-974d-4a85-b24d-08b0a6a9734f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd09c636-6a34-4354-9a8c-aea2fc5452eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f567ea2-942d-4963-9a3c-59c35efb9107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4c850f-278a-47e5-a59a-61d7eef3b681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326ca623-b5b6-44e5-8360-1ce65a37b2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16545941-ac0d-4161-ba46-7c5d4d7d7dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc9c53b-36e7-403d-be44-69d0abe14da1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247ebf4d-a8ab-4321-a8bf-14a7a6cb7f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00294d37-c03c-4bab-b9f0-6c134943aa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f2283c-2c01-4481-8e37-025d83f0ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94310e37-99b3-40b6-817b-f4989714e44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766cdc24-45fb-4154-848d-6d5966e2352b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b0942-2cdb-4ee9-9b73-c251b53f758f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bba30ce-e14b-47f8-a9b9-e3e8c956b0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6964ced0-ed84-420e-9e15-b12dddd79179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e2077e-ebfe-4656-99ca-b399b74182d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ec62cb-f000-4670-9b45-f89f01e1b261",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7856cc-41a0-41ea-adb8-bada69ea821d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a01f99-b1e8-425a-bdae-f116af63082e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d4bed0-0605-484b-9775-dc7e6ed4dcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab5236e-f331-4c77-9523-3a91d184bc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c982a55-4163-4de1-9c22-cd2c8cb2edc3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50dce4d-d035-4cbb-aaa1-fd3bb40df5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd50e08-717f-451e-9286-150a5ee223ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ddca86-b481-4b1c-ac11-c13968eb212b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bc69df-36b5-45e9-bcfd-7c497d02b09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a6854-6d41-4676-8fe8-23de161340f0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa5e085-e1b3-416d-922f-2617929536c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163104b3-7911-4c23-a694-948e82a02777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae55918-cc3e-4ef7-96ba-425137fe38ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da47f2-b9b8-4b95-ae27-bdc7f048e017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6ccdf-0bb1-44ea-ba4d-3274e5223574",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a2300e-b417-466b-bb90-11d77cd8476c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96194118-e30c-4aa1-a49a-dd9af95be323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d4e6fd-93e6-4863-896b-f0c254e4f84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889bb1f9-a917-4cd1-859a-6dadc78111c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8926486-c711-42b7-8e2f-a81361adc6fe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f730e907-8a58-40f7-ae68-bed1bafa58b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd3e96c-9126-4184-8c02-0c5270a33c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9326b88-57ca-4271-a293-8290cd01b3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408aa1f7-01f6-46d5-925a-23317e2fcce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887cb56d-ab8d-4384-b1e2-9d4ffff28c72",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b7e056-e1e2-497a-bb45-76853ac39cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d3b1f-6453-4a79-b5a9-c68268e2515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb31048-42b2-40cc-8bd2-674fa17849fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f34e4bf-b6da-4a11-8814-92ba4656b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63448ee-296d-4567-a660-739b65bc88fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e63bdcd-efd3-41f6-9c86-e90cd4f6d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e051311-afdc-4593-9566-71eef6e3619b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21a448c-3754-4746-82e7-bd8bd994b834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83fcca7-c078-439c-a0da-5edbdcda4fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c268646-de01-4033-8185-5a5838d35ce5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d060cd0-9a54-4cf5-beac-fc9cf863ccea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3b7f3d-bd1b-4dab-9a73-575e3facec8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2478b9c-f796-45e1-bf55-ba5cb69a1f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adb0f80-f00a-4195-924a-87a95993f154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a973cb0-dedd-4685-87b1-59a64fbc196a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391c7b2c-9d2d-4f1d-a662-9b38127905b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47041c0e-42d7-4829-b16e-61e291b2ec98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329ba937-df42-4c0b-aa78-b496df41f459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203f3954-387f-4574-b3ea-e0faeabda669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898ecba9-f42c-42e6-8456-553e8eb64cc2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8683ff1-cea9-4b73-9e26-f935a979d1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79980596-2775-4ff1-b40b-c6143aadf212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008cd891-7ee3-4702-9dfc-6fe842b883d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc42623-50f9-46a3-85d6-327cdf83af9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dffaea-dd9d-4eae-a940-85406d2823f9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0653a2-5c84-4cd4-8f96-a3b65260c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8d973c-7da1-485b-a2ff-ab0f144c4081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e6aee1-4286-49cc-b38e-48c0fd1029be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0e047f-e023-4621-ada0-393c9799dd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b410b-8f8c-48e1-97ce-de43768df7c5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d33028e-6dd3-4075-b463-b97cf76a1964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc55a315-9063-4967-a545-f25738e7df97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7a562b-f3cf-43cd-8168-cf55d53b4613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c194b7-1c94-4c97-b7ac-6967a1bc2bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b82523f-f923-4e8b-9689-bc13a6762c2f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e86608b-720b-4e25-9b3f-808c3e3c42c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae90ec33-eb86-4ef6-8f30-41cd0b959a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee50c1-f88a-48ac-a588-01794d53d175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5c38bd-3193-4e61-af59-74c80dc131dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eedd4d2-99f0-4a36-92e8-f67b2b088742",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d1ce08-ee50-4b68-b204-9c813560b773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fe464a-f510-4a4c-9707-fce850aba293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bd6640-e9b9-4f8f-9b52-fb9de68d6de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b387b6d-4eb4-48ae-bcb4-4a7cc86776e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1839514-a335-496a-ac89-08c29e55ee5a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9164bf7e-d4c6-42d2-92db-48fbd20c617d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ac94d9-28e4-4fa0-8382-0ad72396c182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd5ef1d-5a6e-4802-94aa-0b81f1834fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c35e5d-d026-4220-bc02-b63d7ab439f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253bec8b-7aab-4818-bf68-748b92580f4b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b263d6-1510-4d30-9b01-7c8e17292ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263745d7-1aa8-4ff2-907f-13f8cc9c54d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ba4c3b-b4f6-4bfc-9ed8-d431dad385e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3a098b-dd92-4126-8933-8cdaf6ab1029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090adfe-c1db-4231-935f-0866789a5913",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dcdec0-7184-419a-9e96-e22315fec713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b93bf41-b100-49d1-bb2b-7d2113c954a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134c66a0-bba7-43d2-b6fb-01f3fa894eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f71259-1acd-4602-8752-b621a1f621dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b531430-91ea-4be9-b169-6add49da6a96",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb0f70-eb30-4fbe-a58d-b240c638bfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2233d2-28b4-4f23-995f-01a4d63949d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7183e721-6446-44ec-b1e7-3c40ea7600fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abda2fe-86d2-4e60-a288-0b6116737eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8c43ef-a49d-4ebf-92ba-f1f5bc5a5285",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78903587-ff7c-4d72-9193-c1b30c5a2efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c05e851-d5c8-46cd-8a8b-a2eec4b4fd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a6f78-b653-4e38-a5a6-387c42f9c64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711f2c7f-d7d4-44e0-8649-788498c207a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048747f6-040d-4f65-8e8e-c9f01935696c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eb8490-cbd1-4e51-864d-e58f58b345c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7bc899-69d8-4a1b-a3c3-73823d5474b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45233ef9-c298-440e-9d5a-d553e30718ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75de3073-0392-4dba-bc49-07120707e7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93bb03c-a637-41e0-9363-a5ee2328fccc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bb8892-5fd6-4eb3-a00e-3bf74646080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f8fb2-ce05-407d-b8c1-e31ee073333b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7862b0ab-096d-4fe0-9e8b-3bbba26b5c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ec21ea-1f20-4188-91a4-0f3d2a1abbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f4dd0-bba1-4e89-b039-6b63db6b4233",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d4f761-93d9-440f-8258-788dc802ea84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b52c273-4d49-4aa6-8c12-4196de7cced8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf3055f-f252-4138-89ee-422627103cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d336e4e-0f46-47d2-bcc1-26b32d9e9b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73948529-fa7b-4704-b84f-13326f1f2390",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c7ae70-12c1-40ca-b4ec-120c5192b095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f334f5db-967a-4b08-a98d-f142668baf1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c714acd7-25c1-4844-acbb-3e08204bd680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07b84ab-3c66-4e47-9c67-cea255f650a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6727ffe5-39c2-4648-8473-ad58391021f8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a60012-e778-4516-a4a2-c1a8a1b7c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed71862-e487-476c-bf4c-3de0a0b5b461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21566b4d-abf2-4420-bd04-8d45d51ec570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4447299f-28ba-40e8-b5b1-c8c0bb172176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd33c3-3c22-4ec8-9449-c8d9f08451d2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e559f4e0-9886-41ff-ab0a-a789f3752a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5e5d0f-e5cc-4db9-a05d-dfa00edaf94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb82d6a-3b9d-418a-b6fa-d640604217c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d823ce4-3c6a-4627-b9f4-02ee760fcc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22063392-187b-4f03-9e24-c48d550e780f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d7554-486c-47e6-8fcd-374bf31fd986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e7b822-b92f-41c0-b5db-6b62034cb04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10048c5f-0061-45bc-a035-053a079d219e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da407c73-39d8-4229-9aea-38cfe3c4003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e5e310-3a30-4a45-bbe7-986a58f8df29",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a9ba3-5d7d-4546-989d-4bb416ff8bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b75da3-d75d-4e3f-903c-1cae3578dcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19327c23-31e4-4214-829b-27a80d9b7331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2214135-a36a-4827-9b30-43df5a518109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b51e122-7fb5-4321-85b3-9de9e1d837a5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f12eeca-d65d-4d7d-9c40-d7602574ade9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025b5765-f226-43ec-a4dd-a80b95ede30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e834e2af-3d2d-45d7-abab-a7d669cec507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7670aeb0-27c8-48bc-8579-91089d235dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925ff89-1a39-4515-9894-2695b8b18f1f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343cbd43-d918-4b00-9fe1-2b7fd3378aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61498fd-badd-48de-bac6-cb8e7ab161d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829acaac-e4d0-4bf7-85da-e2c24112f39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6605bad9-6570-473a-b87b-49e1987de296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaaf113-ccb3-412d-94ae-c719bb7c7f0e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2ae161-2721-4dd7-ad97-539a399b0b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1c4ed-dcbb-4f6a-8d6e-66f38f799b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985dab5d-9a74-4f33-8d47-941c1923a364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369cc0fa-9787-4f1f-92c4-d83d60f80648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df3a874-c643-49ba-bdea-d351fc26908e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf7929b-067e-45e7-8f0d-57387904a928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a63c224-8c4b-4284-b636-4c066f867f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f107e5c-1389-44b0-91d7-f2f215f30096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b1d107-85cb-4dce-a514-9daa26f7d402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6bfa3b-9dc4-47c4-94fe-dfb638ff95a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980a5208-3c74-499f-8260-480954598cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df497be5-a592-43a6-82b8-0c85bc5b6c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404c77d4-95f2-4765-a1c2-45850b7ebc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da1eed-f0b2-424a-83f3-3f6ec07405cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76777d68-d64b-48c5-a54c-efbae4dfa522",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60d8ef3-28ad-4342-a33c-805d1d280a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06b9339-6fa8-4560-b8dd-b05a8c99064d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bccb5a5-6b9c-4a87-96d5-ac7fde68633c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3502c881-f6d3-4009-8371-05928b6e3298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a2ee74-035c-43ec-a83a-97ca685f7160",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03761f7b-4312-47ac-a230-aab964ff36b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e304ade1-fee2-4aca-b85b-f2e280aad674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057df0c0-9bd2-4783-b990-cb337df9f93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8eaa83f-2a1e-4195-8b44-3421fb92740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cee4145-447f-4339-bbd0-96d8c51121de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad80f37-1ee6-4818-8991-f83b40eba638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c11551-a5ba-40aa-b81d-b685fd25dd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295466c4-1dc4-4b8d-8d05-d9ce86a8c697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb440de2-c1b5-41b7-a658-7db911e67fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d257a2-f444-4d24-a473-17349cdda72d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2518da-ba97-4013-a4d7-a2ca6e1d13c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d380b14a-4fa4-4b9d-9ce3-f32944623d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e97139b-c71c-4fb9-9864-01b36e2d6885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bb715b-8001-455b-b437-f503c9016da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b03f1c-f86b-4f7f-bc04-d49ced8d9253",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece820a6-f35c-4683-85ae-9e8dfa344ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73700f-de58-44b6-bcd0-467e9d93cbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df8138f-cc5f-4ce8-b24d-f2ba162ec853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3af2146-954f-49ae-bcd0-fb9dfe6c7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d43671-d5be-4410-af6b-9e317706af95",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd72ef-5939-44d3-b210-2e3ac29d08c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24e75a5-3715-474c-9960-60b31495f8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e4282c-c406-4374-8574-c8e4258c8ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1725b2ca-ea89-4595-923a-280d6a8672a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303fd3da-7e4c-4061-944c-dd3a032f71e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e123f7f-59b4-4942-b178-95fddce1bfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1f7509-a180-4bd1-9b65-4159844416f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9196c9d0-39e3-4d9f-80ec-825dc76970e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fd2908-b58c-4d84-91b8-6df2eacf290f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd87b2-cb2c-421f-b402-571e259088cf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc6328-8a0e-461c-a324-2597797cf52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8248893-6b2a-410b-bcc7-0e1b1fd440e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf5092-b94b-474e-b076-a65f1cb183c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddc249c-a5ba-4fbd-80e1-399da37128ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c164286b-4399-46f6-bcc8-bbca6417abbc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de010cc-28fd-44ed-9b18-786cf9bf09a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aba4ba-acb9-4376-9c62-75387c20b6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dee3cdf-8211-4036-965e-54981d90423e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e09ea27-4168-42fa-b715-573d9070f54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ca6c4a-5330-402b-95ca-900b98455827",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2315db0-27ae-4dfa-a3cc-dea831e606fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bf069d-01a8-4fbe-803d-8ca283521cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8578c8a2-224d-4a77-89da-41ac6d563c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909b0deb-b0d1-48df-b4f8-0bf8f5b9f0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2e1fc-1fa4-4142-ac33-23a59d17bc29",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f946b0b1-a654-45ec-bea9-1e0dccd94305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e63a3eb-f01c-4707-977d-143af0d814de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf58a16-39de-4bf4-864b-0990f89dd668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aac6501-be57-4eab-a9cf-1a89180da64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a29477-a04e-430d-b4c8-ba7f619649ec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea92087-9a60-4d93-8fc6-4357d17f9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bd9f56-7a28-4d24-bd8f-bd2ca5b73e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95da954-6490-4744-b274-0f42159505e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61976ed-1345-4894-bacb-79d56ae73299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb75e7-7713-4095-883b-139ee6a985ef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6126b1e-d02c-454f-83e9-7212a57c03b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70af2027-e647-4df6-9e4a-e98ea675080a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ade787-ca1f-4ac8-91ec-e589a79a8121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63610c9-2c9f-4a2a-a543-5813acb2b47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd37e8d-79ad-4b38-9ab7-65f79b151d9e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466dfb47-94cd-4bf0-97a8-6ecd870bb26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c269c952-aebb-44b7-9131-2ec3b98d4bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee1156-cde6-40b9-9663-0a4857434742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b53328-8354-4b6b-bf60-eb03bb484f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c23964-1d9b-45fc-875e-f4627ebf38e6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27507f70-f7a2-4a5a-8104-f36023a52456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5cb47d8-866e-40a6-9616-00bed101f33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b008a6-54f6-4e74-968a-a99f31542135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d528658-07a8-4821-8c9e-e429c0d96d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b6160b-298a-41f3-95fd-fa965b86b9bb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591bac43-c059-48b6-9b6d-9e20d7a4f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893bafaf-ff49-4e16-aa54-d87d9ccdac2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e86deed-5665-4fc8-95a1-50787d2f6341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468e6b2d-9e7b-49bc-915e-98ecb8fc3aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f750c3-9ac1-47f2-a328-1e0882362fba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec775a7-7b67-4410-8e1e-999f98e55ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21081d31-b36b-4647-b0ea-fe8d38836784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62407fa4-7788-4c79-8c67-949907cf4fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7792589-9219-4018-8cfe-50e1d475177b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760fb776-211f-46f8-bbfa-ae0f083f4113",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc4a708-6c49-4740-a42b-3f463df734f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007603fa-4631-4b7c-a160-f4ebdbc40877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79f99bc-7881-47db-beb0-1bcd649200c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b2140c-a5d3-4ab6-ba2a-277724ae241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a52b8c9-684d-4162-9192-b071be343300",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0a60b3-8443-4340-b364-f37de2d3d503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c79840-1b02-45bd-b07d-ae826578c456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363393e9-6e8b-4972-a4cf-9b18787d83cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de34315d-2ad0-4cf5-9936-6e256b3f5fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4b43c8-19bf-4509-86f4-ec8a600b42d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b013b9a-8b09-402e-bbdc-d4cb67e71329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845da5f6-5af4-4255-bc94-695cc5ba4b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414a53e6-f263-42de-8692-5144cdbb617e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b334f4aa-c72e-48c3-9fa2-d7aac5b18cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b21c6d-0d59-4147-b195-2cad4e244ce1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6fd891-17a5-48b3-86fd-01bb185cb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36de1b79-d105-475a-99c1-19924e3792bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fe1fe4-066e-4f4a-b3b6-7eddcf1ee842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e545937a-ffaf-4c10-95e3-0f0fd6edd4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089e9fc6-9301-4e62-92dd-5191ff111e53",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aaf0db-e438-4af4-95a3-f044cebc3eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e15d94-2e44-425b-813d-a4054b363597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76051795-a1a5-4c1b-bda7-9845676d04a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a49e117-1dda-4775-9319-ab97ee4f2023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c2ae39-366f-464e-9b89-9dd1ed5c2c36",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60f653e-cdc3-4f8a-8ad8-ec5d6494fa38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f06705-39d8-4303-acc1-9b86af95ebf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e5c5dd-2efc-4dd4-9b91-e375d96b530e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2de853-3805-414f-88a3-a268ffc5c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7683398a-6d73-4a53-a4e6-74b930b727c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6e47fb-b5ca-4c5c-949b-029ad102a14d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15fed30-7859-4b05-8f43-89326a893dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1624f16c-c104-401a-b933-600f3ab52a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0a380b-3aac-473d-87a8-f9794c9fb22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb4b319-b7c2-4d7e-8911-c295a9a837ed",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb91bab-55b3-4938-a3e2-4af56ed42e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8ac707-2002-49da-b1bc-5debe4510c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f5787-abab-4049-a7c2-286cf11e5193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2de3a2d-fdee-4e2e-8e02-992e04b59ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dde75a-12ce-45d0-ad36-01e328694af7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb11598-4abd-4ce1-b6c3-9b0c8b95673c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50891ec0-5e49-4c7d-89c1-293c8592bdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d7fe8f-bf57-4fd3-b06d-968247ce0bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cec9cfa-2678-4827-80d7-5ed9f1908ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee36878-152e-499b-8203-be75a5abeb11",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076f14d7-c9dd-4f07-8c2e-247c3f267804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb4bdd3-224a-47a7-90cf-a27ef3c16a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aff06f-d8f2-4f32-83cb-6384f4eaa47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862205d5-7dbe-43db-90f1-3d471dafce76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cea3af4-c150-446d-b0cb-e21789c27765",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ffec3a-746c-460e-8380-bfb8e32d7d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52cd6142-95cb-4652-8900-eb7e703a57ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68534c42-8001-4769-ad15-36508a03ecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd0b236-7844-4792-a5c5-7b6ab894c944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac22517-f75a-42ae-8a64-711f69b69e6b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3048865c-6316-49d7-80bb-d53643b7dba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eaf0df1-cee4-4ef6-974b-99469a69fd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ec4c0-3f85-49a6-b181-6794c3e2e784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a390ad-ec80-4d8f-8e42-2817b83eb884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcb0b1d-2004-4d54-93ba-759405c9f838",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b179b26-b576-412b-8cd4-53bb4b9e597f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86df2adf-844c-47f9-9b41-d573e3f40a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a18f2e-9989-47fd-9f36-7727e9957f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219b6ec4-d6f0-4357-a488-e188b0b79dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c4c9f-bf6d-4dc4-968d-4e372e0ed6ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6672b73d-a65d-4c9a-80b7-480397ec1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f4b068-4f3d-469d-b39e-512ea9e379c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36266794-8f58-404c-a18c-765ab4714bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff185404-2d76-4d65-92dc-13bf03d143a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dedd632-1264-4b89-bc43-cb543f69f469",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb5a86d-8c89-4448-91a4-6f34b6b7de36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9aa7d2-9c34-4bc5-b96f-015457f58939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6880df1c-64a0-44bc-8812-acc6e236a097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4862d5-afae-48da-8465-ecf3a6b527d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec29dcd-d726-4973-b494-34d97c25138f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef37077-e799-4b57-ab2e-8473ecdd4bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5afc9fe-4bdf-4be8-a3f8-4a90201977f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac966eae-b1ac-4767-a768-c0fadeebb7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8feba36-4eed-48da-98aa-83ab5426465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1143f3c1-870d-432f-952c-5b907178c701",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923de54d-b862-493a-96b0-21f09052301b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98dd5aeb-5ea8-4715-a57e-f0a84a59dc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31abe16-29b2-43cb-9fc5-75ab132c09e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbac93d-5361-4488-b616-3090f7b321e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2263e7-0427-42bc-9ab5-7e3a96e21790",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb263e2c-5259-4be5-adf6-0b55f2d1ac19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c72fb8-ba68-4438-b492-0d699babdf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5c5a9d-c6f7-4720-98d9-b42cd9275e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8afbf2-69f6-4148-879c-a75b4b3ee2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd703d14-e83c-4f68-bb03-658bbd69b02b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d041bac0-09a0-409c-acd3-1111c29ff3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13a795f-cacc-43fc-bb4d-8878d65bf5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfbe831-a98e-4822-992b-d49f4b69677a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b70c78-b882-41e3-b3b6-c3433d5eb6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242a431-2af9-4a66-9fd5-bcb613e0fa9f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0f7297-bfc8-4d65-aae9-00d53654aec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348c1aa5-bac2-4260-8e2b-d97bcf4e4c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917cdaad-f334-4ef1-89ca-a6bea1147846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1250b06-cadb-44da-9479-888be8e3094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baecf559-f441-4cbd-bbd9-9d165fb82ea9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14dbe76-295b-479d-ba5c-6db212b16422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecf6ceb-364f-4f9d-88f6-4b9ece3a5178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708a3ef7-4a55-4c1e-b776-e4dabe99051c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5952fb91-e93d-4cca-ac63-9af0e5b6b6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc1aa4-d620-49bb-9ff4-2a939310dd28",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a18436b-edf5-4bb8-8fbc-c957afd3ed8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3967bb-cec9-436a-b6fe-53858d4d5acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878a33cf-3226-4d48-aa9e-5e5f8039e126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10d8a38-260a-40ce-8fe6-fc0249bcfd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5152c2d8-eb20-4489-82a9-c768086226c6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6f9e48-32ca-4771-b72f-76936122f3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f834c9b-7fb0-4460-88dd-8c5a2a2c48e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dd045c-3daf-488a-b5f3-658c38732d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057b722f-51ee-413b-a4fa-06a5aa3e82f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7b3149-d916-4c3c-bfa8-c4d86016ac82",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9301c780-33f8-4e2b-a006-de5463e50072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9763c6a6-3296-49f3-8b7e-1a481ce2cd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2decbec1-6127-4f6e-85db-6da8c71ba088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d99325f-03a4-4b0f-8bba-ed10ba214350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c874ce-2538-442c-a0a2-22d74fe36a40",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dea746-677c-47a4-9b34-030cdf8300ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ea397e-bb86-4a31-bb70-492c09e51bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931c6d1d-e6f6-44e9-b8f7-0de0d3393c05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba96876-3199-4ae8-bf04-4e0773e31fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdf8af9-d41b-41c8-a226-7a4728c964bd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29813ccd-c3ef-47d8-9e29-6102fc5c62f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a441188d-fd92-4816-bb83-71bd3e6646b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c722c28a-2b27-4cb3-ba1c-d4f406ad2990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1eab33-8183-4ebf-a921-b9f0b0ad777c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61add4ba-6b8c-4859-97b9-b6e79269f9d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b55c085a-7ad2-43f5-9b40-bc702e231d84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bcd5b60-62ea-43dd-a58e-4620fd0d3f96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36115ef8-56e1-4ba1-b60f-e9f37354cb38"
                    }
                  }
                ]
              },
              {
                "id": "f224c41e-368b-4842-85f5-875b1812e952",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4080f79e-7d93-43ec-bb74-bf33e2285416",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91fe55-cea3-4e52-803a-e32a2d750a7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "714d5b8f-d58c-4c21-9c1a-032ba121e85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6f9035-a15b-4abe-9c46-4f57820b4eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a39f75b-0570-4217-a600-18a09e2232ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62223845-109d-4d4c-b04d-d454600063f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a66461-3a0c-40b7-9097-f78fe55414c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea40ff37-c5f1-4cf0-9785-eb57df05d5b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc581439-e872-4fe6-a233-02980fe86b05"
                    }
                  }
                ]
              },
              {
                "id": "439b571b-54ad-4c9a-ac9d-adc4845e6738",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2124df33-dd2f-4571-86c9-6cad9c81ab59",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3521fa-53ad-4efa-b195-b52f24f95682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3cdd655d-77b7-4224-bd10-1871df92cfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1c6a01-49b2-4520-9043-1a7ab33a867c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5abdec-1fdc-429e-aed5-6b56bae75979"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a9185dd5-b434-4b90-b90a-511e5991ee5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8435617c-291e-46d0-bd40-3ce3420c7466",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fb66c9a-0c32-4984-beb9-03a47cd7fbe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "54f9c456-cfea-4380-b81b-96fbbf069e83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ad1398-8a18-4a61-9dff-417f4bb54fb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c311c5-466c-4a83-a69b-7e2d18abaf2b"
                    }
                  }
                ]
              },
              {
                "id": "ec848e90-8841-456c-8f92-5204bb39e41e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4e3512-fd2a-4e0a-aaa7-4a090ed2beda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "50723921-0c6a-47b2-9845-7983ce0a5a16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bee1491d-a92e-4eac-ada9-e252f35e39f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02e2b72-5a3e-4e49-94e0-530a8089ae05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b872910-f5db-4805-8f75-94ac85aebe16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "05ad7a24-f8a4-4f5a-a867-ef7157d3ef5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c52ea696-47fb-4596-9eef-91173e64e635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38991c00-577a-49e9-a42b-a60ad7a9b445"
            }
          }
        ]
      },
      {
        "id": "643bdf22-ea5f-44be-8561-72f77ba03076",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3e57691f-042e-441f-8e5c-392f49244544",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3bcc5b8-162f-4586-a004-55bf251b9af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf79fa10-af90-4c0a-a2db-d1e399fe917c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c972dcde-a9d8-4c8c-84a2-f46f4639234b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7375bb9e-cb64-47c6-bb06-44a35dc1ca8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458853d6-8236-44bc-b7db-640ff0c3aa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ffce61b-dfc9-4492-ad91-e56955a2f6e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a429af83-1a37-4869-8a37-63cf3d1cff13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "242e8f76-4cb6-4e28-abb7-58b7361168b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e811ce14-9dcc-4c3d-82a5-6344f8c3de91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2181298-d657-4c26-8fbf-ce5098167bd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44dfbb98-89b1-4359-a532-a0e24f1e0494",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8a968eee-b351-4b67-9137-337dbe1ed345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dcc8704-2185-4799-99a9-800d06701606",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb797e4a-e8c2-4e66-9079-9eca9b1117d2"
            }
          }
        ]
      },
      {
        "id": "572b58bd-70ee-49fa-bfea-c329966e3a06",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "86274a0a-9a81-4ac0-9836-5d578936cad6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a22bf7bd-40fa-487c-b6cf-82cefcebf72f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85e942fa-a830-4896-974b-426b0144ce49",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0295faec-4a00-4c15-828c-0e9d20ca5bed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12822e1-864f-4624-8a4a-9f2efcd031ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b310ba2-7237-4732-a8cb-45d13ddb1357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ff0f3dc-69f1-4f32-9dbc-4dadcd0bbb9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e1da9a-3b69-4e01-b0ac-3f0beac3c8a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e455730d-45b7-4fd6-9211-4b88dd0a6aa7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3daf25d3-e967-4238-b8f9-25e7f32ef205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0caadb86-85c9-4d92-b274-1d198bf52051"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6045111b-b8bf-4627-bde6-1474149ebbff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce975b78-654a-4a24-8185-b339f6ac056e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be5ef2fb-900b-4f55-89a8-36361ac58aa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efe83c4d-713c-41ad-8955-e61be83a5dfb"
            }
          }
        ]
      },
      {
        "id": "ff5a0198-5f60-4e17-b80e-4a66d83ae5f6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eac8aca9-9f5d-49d5-ab02-555e9a6174ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaafbfe8-2728-4e35-b3d1-35302fe91e57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9c9e550-1886-4647-a4ef-f3c32e51901e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea284203-a2b5-4898-8740-28a180f4acdc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e7b86b-f062-4a4d-b2ff-64fcd77b0795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f6d70-ae69-4169-aad3-0a37dc39495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cd4b1d8-3f99-43c8-b9e1-20694146d07b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0310e4a-a433-4f58-99a9-54e7be40da35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce788e8a-ed85-4207-9030-8930ae50d00c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1106de3-7a5d-4b0f-abdb-8a71451442a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feed3734-e368-47e1-94d3-267f76d35ef1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5899e868-86ac-4f16-9808-d833c1ae7360",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08d213ad-d931-4505-a15a-1d2d04120146"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bedb1881-3e6f-4193-8169-7606297a59c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d4623be-c2a4-4f46-b0f2-05d572d337be"
            }
          }
        ]
      },
      {
        "id": "60a15256-d5f8-45aa-b5e4-57074591792e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d1b7d14-9013-4c61-869a-3689002f5733",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af0691a2-e968-4359-b8a5-7ea0f0583287",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e28c4217-7a62-47ac-8e9f-9aab8afc8d6b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4740fbe8-0749-4d95-ad6f-a4de8d9c9013",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b29502df-3df0-4fd6-99e4-acad8daffe17",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 238.61052631578949,
      "responseMin": 4,
      "responseMax": 8862,
      "responseSd": 1097.3181722350498,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699317270916,
      "completed": 1699317348266
    },
    "executions": [
      {
        "id": "c26c0280-0d47-4c66-90b6-68fc4419aaf0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e31ad805-3c6a-49a9-a670-47dff514705d",
          "httpRequestId": "0146d8ee-1a20-47be-9901-7fb054a11dfc"
        },
        "item": {
          "id": "c26c0280-0d47-4c66-90b6-68fc4419aaf0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f5f324c0-c868-4aed-9080-9fae8df60f19",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "eb11ab4c-8ec5-47f0-b272-d93e5d7abda2",
        "cursor": {
          "ref": "fcf093c2-48cf-4012-bbec-1b86ef9ae29a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "daaf65e4-bf70-4f97-9fcf-54f7895b3225"
        },
        "item": {
          "id": "eb11ab4c-8ec5-47f0-b272-d93e5d7abda2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ba023219-c792-44fe-85bc-1c2fbb6e5072",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 0
        }
      },
      {
        "id": "b0bd5c59-dea1-484b-aed7-1dc71ee5e41e",
        "cursor": {
          "ref": "085fd521-c362-4553-85f4-54b912b385a4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "39f6defb-3a3c-4d48-b6f8-e7f2a502ec9c"
        },
        "item": {
          "id": "b0bd5c59-dea1-484b-aed7-1dc71ee5e41e",
          "name": "did_json"
        },
        "response": {
          "id": "2a799680-6386-45d3-a9ae-04a62bae9997",
          "status": "OK",
          "code": 200,
          "responseTime": 1376,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e22411-4896-4ee9-a111-0c2c4793810d",
        "cursor": {
          "ref": "b716cf03-02ff-49ec-964b-58bd0ca4eca4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "824d0177-162c-4259-9117-8dcd2dd48717"
        },
        "item": {
          "id": "33e22411-4896-4ee9-a111-0c2c4793810d",
          "name": "did:invalid"
        },
        "response": {
          "id": "c871fd72-483f-4e60-9fe0-9268209ca43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e22411-4896-4ee9-a111-0c2c4793810d",
        "cursor": {
          "ref": "b716cf03-02ff-49ec-964b-58bd0ca4eca4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "824d0177-162c-4259-9117-8dcd2dd48717"
        },
        "item": {
          "id": "33e22411-4896-4ee9-a111-0c2c4793810d",
          "name": "did:invalid"
        },
        "response": {
          "id": "c871fd72-483f-4e60-9fe0-9268209ca43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae46095-dc9c-4c89-874f-49b2e730308f",
        "cursor": {
          "ref": "8ba065c4-4cd2-48fa-9639-dc2ba24306f3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1a063056-1ef4-4c46-b5b2-3872d9252cdb"
        },
        "item": {
          "id": "4ae46095-dc9c-4c89-874f-49b2e730308f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe4466bc-ff3f-4f99-a28c-66989a14ef48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 157,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caa1358-7129-4b93-b5d7-54635b0815c4",
        "cursor": {
          "ref": "27a0e5ba-4b95-448d-8e59-988361ee2cb4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f91c7887-e844-4443-9205-7241d1a28905"
        },
        "item": {
          "id": "5caa1358-7129-4b93-b5d7-54635b0815c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4481af83-8c3f-446a-b92d-5f6c250d504f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc76f85-da43-4918-b1ae-ce88225c7c29",
        "cursor": {
          "ref": "fed3fde3-2327-4319-99aa-06f4143d423a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4ed7897f-033d-4143-8fc8-763470f4dc7d"
        },
        "item": {
          "id": "0fc76f85-da43-4918-b1ae-ce88225c7c29",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "911fdfe6-9092-490c-8184-3567d8493239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c5741f-1841-4931-881f-376f58f4583c",
        "cursor": {
          "ref": "4f413d2b-a356-403b-a96d-90bcf02f8754",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7012d855-c92b-40c7-9dcc-e5087f346e6d"
        },
        "item": {
          "id": "25c5741f-1841-4931-881f-376f58f4583c",
          "name": "identifiers"
        },
        "response": {
          "id": "5497558a-0fb1-4c03-823d-7c9bbcd6ec4f",
          "status": "OK",
          "code": 200,
          "responseTime": 2468,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a09f7-38c6-4a03-aedb-515581c235ae",
        "cursor": {
          "ref": "dee2cf6a-32f5-43d6-b291-fb22cd7eccfc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b3ea8982-7337-4ec1-9b9f-267dca31ae45"
        },
        "item": {
          "id": "591a09f7-38c6-4a03-aedb-515581c235ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fffe5764-f2e2-4986-8f59-140d33ddf96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c0801-240e-4a29-8e53-6ca00254d0b4",
        "cursor": {
          "ref": "3259fd6e-5c6c-4d44-bcfd-00e34ebd352d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c7001bdb-cd4e-4e18-933f-9ccbbb55a695"
        },
        "item": {
          "id": "214c0801-240e-4a29-8e53-6ca00254d0b4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4d02362e-fa81-4d24-88df-7083de205eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ec881-db0b-4014-a4b5-a19e566433d8",
        "cursor": {
          "ref": "d7d8c764-e76e-4d53-997d-ec87d9e0e00b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f79d4917-bcf8-4556-81e3-38b57f9f2d32"
        },
        "item": {
          "id": "902ec881-db0b-4014-a4b5-a19e566433d8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f286832-5484-415a-93f7-ced605620777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72229cc4-b209-4717-b0dc-d56db2820ef6",
        "cursor": {
          "ref": "35c1d469-3bdb-4714-a5c1-21f9c11ca128",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "efddab88-1356-41f0-ad8a-97525689618c"
        },
        "item": {
          "id": "72229cc4-b209-4717-b0dc-d56db2820ef6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "90622705-964d-48d6-b111-1023b49751d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca3aa00-3063-4698-bcc5-f47bcf7a290a",
        "cursor": {
          "ref": "405dccf6-823b-4646-94b9-5d8c0a82a767",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "38cf3867-53cf-4b32-905b-6f00b1942946"
        },
        "item": {
          "id": "dca3aa00-3063-4698-bcc5-f47bcf7a290a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5757468e-a4b6-4019-a4c5-ac8d56cdd437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722e4c96-7389-4b70-be7e-3423757e4c2e",
        "cursor": {
          "ref": "36d42126-953c-4279-be86-e540e9e6025e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f6e645b7-82d1-4740-9acb-f3b1d5592189"
        },
        "item": {
          "id": "722e4c96-7389-4b70-be7e-3423757e4c2e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6af5c700-be54-4c90-86a5-432f0a2feaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4731e3c-9800-48ad-8aed-bb19a2a57abd",
        "cursor": {
          "ref": "76fea9d2-a9d1-4bbc-97f4-cadd940a04b4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "30916b23-4d8a-4d81-9494-45fa7789c8dc"
        },
        "item": {
          "id": "b4731e3c-9800-48ad-8aed-bb19a2a57abd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02da9a75-49fa-434a-b46a-8e65e45e222f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fa4f9-fe48-457e-9687-a5c77647c603",
        "cursor": {
          "ref": "eaceeb2f-1136-4be6-9960-4bc64c51ee1d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f64f6ef4-ed76-4e86-9b8c-527cdafbd85d"
        },
        "item": {
          "id": "547fa4f9-fe48-457e-9687-a5c77647c603",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b87c41b6-c124-4e16-a5a3-4f71dcc58e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc70c7-9666-47da-85b4-d94e320b8752",
        "cursor": {
          "ref": "21f2c64e-7704-4c7f-bae7-b939261c0b45",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e0556b42-ce58-4016-a2d5-0d8339533edb"
        },
        "item": {
          "id": "4dbc70c7-9666-47da-85b4-d94e320b8752",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0091dc41-6c55-4e57-a521-756a101a8473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f398b3bd-fcfe-4bd3-9299-a377833c9456",
        "cursor": {
          "ref": "eda92d4c-1621-4976-ad3e-547c5ab8a239",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "235d68e1-5a72-421c-9dd8-d2efa9e67aff"
        },
        "item": {
          "id": "f398b3bd-fcfe-4bd3-9299-a377833c9456",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea17fb2e-1b8d-404b-bf52-925e7327cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b20a9bb-d3d4-4c7c-859a-079737cc2efc",
        "cursor": {
          "ref": "d27d8b8c-6ea0-46ce-a556-9a6a4114ec65",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "740e389b-cb10-4c20-b03d-8718e1107beb"
        },
        "item": {
          "id": "3b20a9bb-d3d4-4c7c-859a-079737cc2efc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e2dc6001-01f2-4e6c-9db9-9144c3766455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b70d0e1-ded3-421a-b031-ae780a57f9cd",
        "cursor": {
          "ref": "524392e1-47a9-4ab4-8c51-3ff3dffe90a3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "25d66f75-452e-4577-a5c3-0df57d962112"
        },
        "item": {
          "id": "5b70d0e1-ded3-421a-b031-ae780a57f9cd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6129951-1aa0-48e0-98da-7a3d7997ed52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d713efc-d3eb-44f1-a5d4-56e833817369",
        "cursor": {
          "ref": "504ff3e0-e9c2-467d-afb4-5af886b031c6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "95a859b9-4260-4a95-9140-2479834547dd"
        },
        "item": {
          "id": "6d713efc-d3eb-44f1-a5d4-56e833817369",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef1cd731-e315-4be8-9bf8-de2b386b8daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d975d2-4da7-453e-a287-60829c7cab83",
        "cursor": {
          "ref": "80d26c08-8229-45b3-b3ae-7e89bdc7e7f1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa1ef59d-152e-425e-8bd0-2a836c3b2d17"
        },
        "item": {
          "id": "e1d975d2-4da7-453e-a287-60829c7cab83",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3ecfccb3-8215-4bb7-859a-8e279106eaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3402a48-8a44-45ef-a65d-7830a4dc861a",
        "cursor": {
          "ref": "cbbb4a94-39aa-436c-81ad-b1ac9db7b5ea",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b4f24378-177c-4ce8-8acb-1844d5db6928"
        },
        "item": {
          "id": "a3402a48-8a44-45ef-a65d-7830a4dc861a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8d72aea6-5f8d-4e73-b796-072085c9e8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5ba69b-6b3d-426c-9092-fd2f1c97abf9",
        "cursor": {
          "ref": "c1202c40-86b9-4936-80fd-bbb8e6502332",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64264f26-83bd-41ab-911f-4d43b870843a"
        },
        "item": {
          "id": "7b5ba69b-6b3d-426c-9092-fd2f1c97abf9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f12db4c8-4aa6-4f92-b453-e05ec3d4549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e61a2dc-6cee-447c-89f6-dab15498cc6b",
        "cursor": {
          "ref": "6c4e4186-44fc-4427-98f1-85db8f0eb4a3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "70f4ab99-1bbc-44c1-bfb7-15f149961f84"
        },
        "item": {
          "id": "2e61a2dc-6cee-447c-89f6-dab15498cc6b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "139cef4a-8877-49b9-b034-a2d5ff560802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f860ab-c4fc-4d85-8a13-f94bd8f7ba43",
        "cursor": {
          "ref": "60b2bbbc-ea8a-4ea0-8742-342c307e44d5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3ee39ae0-900c-4d62-9252-f88c6fe43d32"
        },
        "item": {
          "id": "04f860ab-c4fc-4d85-8a13-f94bd8f7ba43",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "97244cab-06a1-4f59-aadb-72bfe7315887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb3054-c08c-4510-a084-c11562f8ced4",
        "cursor": {
          "ref": "905db292-83a2-4011-ab08-b40a347fdb67",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "547aa632-be99-40b9-b624-eab00f55f76d"
        },
        "item": {
          "id": "43fb3054-c08c-4510-a084-c11562f8ced4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8bf1d3b-fb63-48e6-a1d6-d70b9ef2b540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835c36cb-ee05-4de9-a2ea-99302e4f2f6d",
        "cursor": {
          "ref": "e0cf7c93-42c1-4bd6-83ac-19106dcfd56a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b7fcf289-4849-415d-9f1b-5d003a945905"
        },
        "item": {
          "id": "835c36cb-ee05-4de9-a2ea-99302e4f2f6d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9240c33-70e6-403d-8211-c35b614453ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12969dd9-41d8-4e24-91cc-fe6d71f863b9",
        "cursor": {
          "ref": "a063dcd4-c66d-4963-9951-f2a2b9682521",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fb27a5ae-e40e-448b-b136-e9a88b802e51"
        },
        "item": {
          "id": "12969dd9-41d8-4e24-91cc-fe6d71f863b9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d5f18653-5df8-429e-a66a-62a3b0875fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfa5e1-fa35-4f37-b3d9-6608dac9ed37",
        "cursor": {
          "ref": "a65fe008-9f90-4274-bc38-ad0922acf4c6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d2c5f8ec-8f21-4041-8ee8-3139d97162e2"
        },
        "item": {
          "id": "ebdfa5e1-fa35-4f37-b3d9-6608dac9ed37",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a2f17e5e-56e8-43e0-9292-38318787d4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8a43f0-3572-49c7-b9ba-495d58f0f3b3",
        "cursor": {
          "ref": "8dac6c52-a1af-4f06-8d6f-5d4322e4f48e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c90db27f-a321-4946-a246-96739c00942f"
        },
        "item": {
          "id": "0c8a43f0-3572-49c7-b9ba-495d58f0f3b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "598c6e6d-7648-4500-8e2f-cc16780b211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f4eaf0-e33a-4eb8-a6a5-b8cdc2b8e185",
        "cursor": {
          "ref": "487c8757-60a0-4962-ba41-27e8b0ba6a6e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "60531976-9718-4f90-9767-9bdf29320be6"
        },
        "item": {
          "id": "52f4eaf0-e33a-4eb8-a6a5-b8cdc2b8e185",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d93640ad-d805-497c-8a7b-a7d5d5843dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a9f0ec-ae0c-4a1e-9715-961399bb5c31",
        "cursor": {
          "ref": "a13cdd11-df85-49ae-9a60-1dfc9a320bd2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e7927cdb-f201-444b-b98b-d890c3e18b76"
        },
        "item": {
          "id": "b0a9f0ec-ae0c-4a1e-9715-961399bb5c31",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a5bab0d0-e39a-42aa-a7a8-c92633ba57e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51be1507-2646-41a4-a3b6-8394b8faa082",
        "cursor": {
          "ref": "fe777660-f3bd-48db-9661-a747e5e30b72",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "777a16e8-d671-4bfd-96de-3b4653b17023"
        },
        "item": {
          "id": "51be1507-2646-41a4-a3b6-8394b8faa082",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3a3d25aa-51e1-4cff-be37-086185d30091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35af0ea-ec56-4ff9-98c3-c1083f1d9631",
        "cursor": {
          "ref": "d7d8e382-cd61-454f-ada0-5aec4ab09042",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5609cd9e-d37a-4d99-a795-b0cc4e5ffd25"
        },
        "item": {
          "id": "e35af0ea-ec56-4ff9-98c3-c1083f1d9631",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c12065a2-4a5e-44d2-b699-aa1fd46b90ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2109eb-bfcb-49d5-8d50-2c5352a66b7b",
        "cursor": {
          "ref": "cbb7b759-75fd-46ad-bc07-f6c602382f27",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "72f40a4b-31db-4ff4-a16d-9790f896b815"
        },
        "item": {
          "id": "ba2109eb-bfcb-49d5-8d50-2c5352a66b7b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "380989af-0f03-414c-b423-398adbcf363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66cc13-5ae8-402c-a3c4-b2e7650564ef",
        "cursor": {
          "ref": "7b8fd540-5313-4928-a34c-f34828dc5038",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d4d58c8e-9f27-4321-80c1-f686e7e82223"
        },
        "item": {
          "id": "de66cc13-5ae8-402c-a3c4-b2e7650564ef",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8e3a877e-2382-4b3c-8753-1e6845db6f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39e09a2-efdd-4918-83ca-620018dc5dc2",
        "cursor": {
          "ref": "7df9aea4-f93b-4365-aad7-95af06dd5569",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "62e6ea59-76a6-47a5-93dd-c910ddb3834b"
        },
        "item": {
          "id": "a39e09a2-efdd-4918-83ca-620018dc5dc2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aee66b99-8077-4777-afd0-39a5dddf0e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0487a3-0de6-409a-960e-0241bcf5d61a",
        "cursor": {
          "ref": "d668c92b-5daa-493f-9f32-7054b496b31f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3971edb0-59bf-4d80-8518-51ca2ac9dcaa"
        },
        "item": {
          "id": "7f0487a3-0de6-409a-960e-0241bcf5d61a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7c7221f6-774f-488d-800f-62f56c505e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba9bbba-8da0-402f-9374-12c9fd47c1b1",
        "cursor": {
          "ref": "e771eaab-8f1f-416b-a612-895c318d52c1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f549cc3d-b692-4cc5-af66-bd052900002f"
        },
        "item": {
          "id": "7ba9bbba-8da0-402f-9374-12c9fd47c1b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "20f34c63-5952-43ce-b838-d464f27c28ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1e7e4-51d7-4bdf-83f0-8cb9e266b660",
        "cursor": {
          "ref": "82ba6870-c13f-437c-9f32-990ae0cf213a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98af54e1-c9e1-4b77-b792-cd0f80bd3a0d"
        },
        "item": {
          "id": "e8c1e7e4-51d7-4bdf-83f0-8cb9e266b660",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f93c92e0-0cce-45b3-bc42-3ede091f0f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d86875-4e18-44eb-bf36-1657c0053a82",
        "cursor": {
          "ref": "a507e2d5-ad09-4158-952a-c33bb3f157b0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2e72ccd9-c33c-4855-92dc-ce309aae84a3"
        },
        "item": {
          "id": "67d86875-4e18-44eb-bf36-1657c0053a82",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47dd6177-f6af-4aad-8a07-19d35cb43475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b210dd-18d2-4b96-88af-2100368f4639",
        "cursor": {
          "ref": "f9685b16-9786-4561-95d3-1cc3daf59ccc",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a6215fc5-86b0-4a9c-a9ce-70aa482a58d5"
        },
        "item": {
          "id": "78b210dd-18d2-4b96-88af-2100368f4639",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84803042-3a4a-4fa0-acfa-fb6c1b988bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ebc742-715c-4f12-8053-4bf101857a98",
        "cursor": {
          "ref": "0622202e-704d-4d38-9f01-f0752598cbfb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "64881d55-7aa6-4ed3-a615-31fbe6af5786"
        },
        "item": {
          "id": "79ebc742-715c-4f12-8053-4bf101857a98",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d00679b8-1dcf-485b-8c1c-dd2169af28c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1412,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76a4ae8-7f87-4893-947f-1fc38721be0e",
        "cursor": {
          "ref": "d856eadc-c830-49a3-9a3a-474e59e74197",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "88045521-1031-4700-901d-71a56f4d492e"
        },
        "item": {
          "id": "b76a4ae8-7f87-4893-947f-1fc38721be0e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d48775ab-8a30-468e-9c58-a6f1f3ba47fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d443fe5-bb9f-4eae-8a83-5866fe625000",
        "cursor": {
          "ref": "400db745-d2f2-4706-a6cc-78454b20d890",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d5d342e-ab50-41b3-b4bd-7ce23c755225"
        },
        "item": {
          "id": "5d443fe5-bb9f-4eae-8a83-5866fe625000",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2e2ca6ca-7a99-46f3-85f2-e85f1166ce82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff91765-5fb0-410b-9b1f-7322bf5df2e7",
        "cursor": {
          "ref": "258f9320-31d2-4396-8a11-fc7b7df6f6c8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "315f21d0-66c5-4c11-aa7c-99b4d85b913e"
        },
        "item": {
          "id": "aff91765-5fb0-410b-9b1f-7322bf5df2e7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "24f1e07f-fa73-49d4-bff7-737efd276db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4501425-fb19-4a8b-81ba-5d876600168a",
        "cursor": {
          "ref": "087bdc17-4ad4-4482-aadd-f0e660615523",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "008b7e84-fb5f-4fc8-9f32-4d93dd5796c0"
        },
        "item": {
          "id": "f4501425-fb19-4a8b-81ba-5d876600168a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6e6f75b-ec24-4a5f-881d-07da8009c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9dad50-1f90-467a-a1a1-6d3bd809506b",
        "cursor": {
          "ref": "215d64cc-21b9-42a3-9383-2f1c8535e146",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13109679-e2b1-4cf5-ac87-b0ce6e642bca"
        },
        "item": {
          "id": "4e9dad50-1f90-467a-a1a1-6d3bd809506b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19a2b1ec-175a-4a8a-9cd1-7692653e6b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4813e53-8a1b-444f-ac0b-83971daa4105",
        "cursor": {
          "ref": "038488d3-eec2-4b16-b3dd-f6e8dd3dbd76",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "698da901-b456-4008-ae55-4b7a26fd487a"
        },
        "item": {
          "id": "a4813e53-8a1b-444f-ac0b-83971daa4105",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b3ee324b-74ee-4f8c-a2da-0acf49f8ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f95b4b2-d3da-4314-8909-c91bb039e72b",
        "cursor": {
          "ref": "47936edc-9a87-479d-a78f-bba371ead140",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "453d39d5-8484-4377-963a-40596837633a"
        },
        "item": {
          "id": "5f95b4b2-d3da-4314-8909-c91bb039e72b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d09c779-c814-49b6-bdac-84e40964fa30",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1443,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffb525d-d202-4dff-a86e-bee740be90e8",
        "cursor": {
          "ref": "22e3f6a2-a6bd-403f-b9c9-073793960b2a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d49e5d16-4da8-472d-a141-866bc2b43313"
        },
        "item": {
          "id": "1ffb525d-d202-4dff-a86e-bee740be90e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "24c3959f-207c-46ec-87ab-5af187456922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eab62d1-082a-4f7b-a2af-2259d94cc28f",
        "cursor": {
          "ref": "d90a2e24-1d4b-401c-b8ca-eb6897a6063b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "42dc4263-48ae-46d5-86eb-4a38e116644e"
        },
        "item": {
          "id": "7eab62d1-082a-4f7b-a2af-2259d94cc28f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "80e9064f-2b96-453d-a3f5-96628ad18a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74411459-cbc7-476d-9570-b448f5cdddf0",
        "cursor": {
          "ref": "f6e1b380-1282-4fc5-ba67-3af3bea69168",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b53a3537-662b-45d4-9488-c916551e36db"
        },
        "item": {
          "id": "74411459-cbc7-476d-9570-b448f5cdddf0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b0528157-1177-4c0c-817b-fbcf68e1415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08622942-891d-4f7b-9944-be96e25b191b",
        "cursor": {
          "ref": "8643f62b-c3be-4091-b46f-71021ed8f492",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4c7c051f-03d4-4438-ab28-a2cd788ae7b1"
        },
        "item": {
          "id": "08622942-891d-4f7b-9944-be96e25b191b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a88f3a60-37ea-4688-804c-ff85b52d2c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6127a-ff56-4a4d-9aad-2d157e637277",
        "cursor": {
          "ref": "82e780b3-db29-4e06-bd8f-2275a5016f4b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e911c608-8a6f-4218-83a2-a7d26b7a90c7"
        },
        "item": {
          "id": "38f6127a-ff56-4a4d-9aad-2d157e637277",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "58737332-5db9-4b55-ab57-28efe21f9312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e6e28b-5414-4e0c-9024-1b7d5947f53f",
        "cursor": {
          "ref": "6e95326b-5be9-47d4-876a-27192141611f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1c187a8d-ece7-44e4-a0ef-e3790a2cd46f"
        },
        "item": {
          "id": "48e6e28b-5414-4e0c-9024-1b7d5947f53f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cb56d2b9-1201-4422-8027-91adcabe3ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92009603-a1b1-41f8-8f2f-5b398567ac30",
        "cursor": {
          "ref": "dcae6805-1813-4c9c-8189-fb631f1018ab",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ce2bcd9-e6b5-44e5-a063-91e2a207508b"
        },
        "item": {
          "id": "92009603-a1b1-41f8-8f2f-5b398567ac30",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aedf4216-4996-4cef-82be-bf0b1c129094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a91949f-b0a0-45b9-b318-7026aa775ec4",
        "cursor": {
          "ref": "8ef6a2c6-8b7f-4ee7-96bb-474af916d7ed",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fcac0780-4356-4b6f-92b0-a256da781764"
        },
        "item": {
          "id": "5a91949f-b0a0-45b9-b318-7026aa775ec4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "061f9cf4-c8ca-4f9f-89ae-670079ca3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1058ffd5-37d7-435f-a817-dd2faafd77d8",
        "cursor": {
          "ref": "527b67fa-f019-4cde-9962-c2902c2a20ca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "825c0cc4-d46d-4a2f-b04e-dbaed1c74f4b"
        },
        "item": {
          "id": "1058ffd5-37d7-435f-a817-dd2faafd77d8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "be645cb6-fb85-4942-88e7-4b1b5ab3b0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b7b29-4e9b-43b9-8467-fa6f595d6986",
        "cursor": {
          "ref": "85d2ced0-d4a9-4fc4-b3cc-36a0282a0734",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4fd99cb8-87b6-44eb-a319-038b9a28259f"
        },
        "item": {
          "id": "1e3b7b29-4e9b-43b9-8467-fa6f595d6986",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "50cd1614-9da8-4d48-b661-6884098500dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517db47b-fcc8-40ae-a688-555fa7c0520c",
        "cursor": {
          "ref": "949d999d-d588-4e2e-aa9a-cc71d1ffce64",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "045b84f0-8f25-4c80-81d1-aae346923834"
        },
        "item": {
          "id": "517db47b-fcc8-40ae-a688-555fa7c0520c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3924dad-53a0-467f-b087-b67f7cc1d8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53a681-6963-4af5-974f-45d07dc28ea0",
        "cursor": {
          "ref": "20ea985b-df0f-4898-8e08-faff7f9904d8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4094c85-fa08-4aab-b324-930e5e1d86c6"
        },
        "item": {
          "id": "0e53a681-6963-4af5-974f-45d07dc28ea0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4bd4d404-be3a-45f5-bc89-aec0c5444bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e83d4-8478-4022-97f2-33e0305ea377",
        "cursor": {
          "ref": "bc52557d-8984-4b14-ae7c-9000c7c0f5eb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cfc34c4c-8b92-4275-9871-7b20f0533f6d"
        },
        "item": {
          "id": "145e83d4-8478-4022-97f2-33e0305ea377",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "60d80f3d-12df-4dea-8c20-4ad0dfb3343c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f941a6-919e-4cfa-b727-de1bd46c07c8",
        "cursor": {
          "ref": "63219cc7-8aa9-4dab-b766-f0466a667cd3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3800029-4d3e-45b4-baeb-44384ef0dba4"
        },
        "item": {
          "id": "a9f941a6-919e-4cfa-b727-de1bd46c07c8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8627e3a5-72e8-49a8-a3aa-a8f0aadf80b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b05188-f9af-46b4-b6fb-7fa745e37673",
        "cursor": {
          "ref": "41263411-da03-4021-b4e2-2a5a41bcfe62",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fcb3815d-95c7-4e9c-870d-71ed9bafd1fa"
        },
        "item": {
          "id": "93b05188-f9af-46b4-b6fb-7fa745e37673",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63d65b1e-e489-4ade-bfc5-526e307a7bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ced007-bf42-46d6-9b65-82d99413e243",
        "cursor": {
          "ref": "fb0c8429-a3b0-43b7-96c5-1692b2bb075b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "df0ca07e-e1bf-46d2-bc15-9fc4faeb0c54"
        },
        "item": {
          "id": "01ced007-bf42-46d6-9b65-82d99413e243",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d56ec063-5bc2-4de4-ba38-667f79e84e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb765ac7-b498-4a25-a826-465f2f3fa550",
        "cursor": {
          "ref": "f1de4a75-8419-48aa-aeb2-8b7a874491ae",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "13166143-d730-471a-9f2d-e6c2e9867d8f"
        },
        "item": {
          "id": "cb765ac7-b498-4a25-a826-465f2f3fa550",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3897435-09a6-47e0-8d9c-421fee184828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b853612-1544-44ac-99b6-425bd0e3f463",
        "cursor": {
          "ref": "3ccaa948-f372-4504-ae77-0ffb154485d6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be977f54-76fa-490b-ab9f-d135c3cae2a5"
        },
        "item": {
          "id": "2b853612-1544-44ac-99b6-425bd0e3f463",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "631efc39-b5ad-4546-a0f3-c417b1bf9946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77fabf6-7a2f-4711-ba65-181b86094ceb",
        "cursor": {
          "ref": "29c8ac93-4946-42a0-a3c6-5e92de9e0cd1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd102351-805f-4ead-9c83-0765a2d786c7"
        },
        "item": {
          "id": "a77fabf6-7a2f-4711-ba65-181b86094ceb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6220edf3-4873-4bc3-93e0-e27540c273e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ffb94-7296-4179-af91-473fd7605385",
        "cursor": {
          "ref": "fa1c0614-e154-46d8-9bf3-d9c895a0a8fa",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1ca58c23-46d6-4678-93dc-8d104b721350"
        },
        "item": {
          "id": "ba7ffb94-7296-4179-af91-473fd7605385",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04a7fbd4-5365-4279-ba04-fb6d35ce0bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a26e32-1ee0-413b-9ae9-754f88ae2502",
        "cursor": {
          "ref": "dbe28d99-4eb3-4124-a093-40b0d06d6d92",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "493ecc75-c63e-4045-ba58-6fba72e9bad4"
        },
        "item": {
          "id": "38a26e32-1ee0-413b-9ae9-754f88ae2502",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d4e7ade3-d31b-4b5f-96f6-75e64e87bfb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df355bf-197d-477d-ac42-9d9e56679b2e",
        "cursor": {
          "ref": "63e7cb76-202f-4417-baec-09c40e39387d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9da4f115-12dd-4eb9-9f10-f498996ecf6d"
        },
        "item": {
          "id": "9df355bf-197d-477d-ac42-9d9e56679b2e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0a0ba299-bb85-4c9b-9c98-5c69a6b31073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6165aa0-f806-46a6-9a4a-db2a74d37267",
        "cursor": {
          "ref": "00025f75-c5e0-4711-b7ae-b5090f856661",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d352dda4-18ab-4d8e-991c-c93120e35480"
        },
        "item": {
          "id": "a6165aa0-f806-46a6-9a4a-db2a74d37267",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0d3ef9a5-72b3-462e-9b11-eb15fd65a8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1606720c-cbe2-4968-a4ff-e5193be90da2",
        "cursor": {
          "ref": "ddd9e67e-580c-4482-ad33-09392182f7f1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8849f23a-c332-4868-8e38-c987fbf552c1"
        },
        "item": {
          "id": "1606720c-cbe2-4968-a4ff-e5193be90da2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8a93456b-8833-4de4-9631-6e6689e708d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4f142-da29-41dd-b754-99f0d70d2ddc",
        "cursor": {
          "ref": "6e5d3a71-f6fa-46a8-a1b5-814f302b81cc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "334f6c5d-8663-4a25-8c62-9702f19ab6a6"
        },
        "item": {
          "id": "c3a4f142-da29-41dd-b754-99f0d70d2ddc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bcf62fc1-a7ec-4110-82b3-784c13262b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5c2c0a-e29b-4bd0-8662-66aa8f5d37a9",
        "cursor": {
          "ref": "ad61a703-b44a-46fe-8708-9984db35ad70",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e21d7740-57b8-4b6f-843f-313ed60eeb6f"
        },
        "item": {
          "id": "7b5c2c0a-e29b-4bd0-8662-66aa8f5d37a9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2304c1fa-75bb-4b0c-9a2d-3e6c891655f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b768f-0bd5-41c6-83d3-267a6200fce1",
        "cursor": {
          "ref": "6fe0b991-f0d2-4b5f-9ec3-92c0d9ea8223",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2b9ac49c-4608-4534-870c-5727c6f518d5"
        },
        "item": {
          "id": "236b768f-0bd5-41c6-83d3-267a6200fce1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6650df9a-34fd-4de8-8238-821a052d01f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635fae40-45ee-49ee-b8cb-99ccdfd930d0",
        "cursor": {
          "ref": "8ddf5a3b-ff50-43e8-9c7a-57a0c3ea1708",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b7c60c76-19e5-4421-8523-ae6c36dfdf78"
        },
        "item": {
          "id": "635fae40-45ee-49ee-b8cb-99ccdfd930d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f939460-a5b9-4e8e-9a8c-b6706b983daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace307d8-7c36-48fb-98ed-cce636f89877",
        "cursor": {
          "ref": "6373fc6a-5bc5-4c44-9f31-9fabfc598a31",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8c68d682-d0fa-4e03-96f7-c94e5984d75b"
        },
        "item": {
          "id": "ace307d8-7c36-48fb-98ed-cce636f89877",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fccda1fd-bd98-42da-a9e9-b5de199d15de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd02b35-d94a-4b08-acfe-cc712e94cf7c",
        "cursor": {
          "ref": "9996e8ad-4d4a-4883-b5c4-b42f12790fcb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "511abcc6-b024-41cd-b2a9-ae57f2afe0c8"
        },
        "item": {
          "id": "6dd02b35-d94a-4b08-acfe-cc712e94cf7c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5030fb18-7bf3-4a82-b5bb-4e656da74dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa7ca1-8519-4adc-8290-18806e99f330",
        "cursor": {
          "ref": "af678a44-e029-4958-81c6-fedbf59e65ed",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4aeeefff-e5a8-412c-8e98-c486b2fd785c"
        },
        "item": {
          "id": "d5aa7ca1-8519-4adc-8290-18806e99f330",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5cc8dfa5-1ca2-4991-8541-98d9b0d7b9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daadde89-d6c7-4b0d-8678-693eaee0e6be",
        "cursor": {
          "ref": "816b0430-a133-416d-aef5-f43539b4af48",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99adcd14-7971-4a28-a3e5-688c60d32c8a"
        },
        "item": {
          "id": "daadde89-d6c7-4b0d-8678-693eaee0e6be",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49b1cc24-bf7a-44d6-a3b0-281e1cdade1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a1d0c5-e316-42ce-8927-fea72d636710",
        "cursor": {
          "ref": "0e33c065-9f7d-414d-98af-53b17269346b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9fcd679e-ff78-44a7-a6c3-a547880c440c"
        },
        "item": {
          "id": "40a1d0c5-e316-42ce-8927-fea72d636710",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "61237012-ae67-41de-af0d-590525899d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dc8cfb-a3d0-4e01-8b22-c144d2440629",
        "cursor": {
          "ref": "cd294b53-550b-4f77-9973-bf0809dca6d9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7a8e466e-4244-4ec5-905e-16fb2cd58466"
        },
        "item": {
          "id": "71dc8cfb-a3d0-4e01-8b22-c144d2440629",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5584bc8c-5417-4c66-995a-830055d3d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170180eb-eec7-4f79-9333-2e82c652daec",
        "cursor": {
          "ref": "aa94db47-7728-4010-8b87-3751d1450ed6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1ebe6782-0317-4a0d-ac94-33a69ca8d4fe"
        },
        "item": {
          "id": "170180eb-eec7-4f79-9333-2e82c652daec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f9363290-66fd-4710-a64a-445fa81483fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe9cfe1-5e55-4ad2-a868-4b5215545d36",
        "cursor": {
          "ref": "f8e0fe36-2e84-487b-a29c-bfeb5407d742",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb9a3ecd-0bf4-420b-983a-b42289d6640f"
        },
        "item": {
          "id": "5fe9cfe1-5e55-4ad2-a868-4b5215545d36",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "03219af2-ebf4-4746-8b03-98f20532155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02756159-d0e5-427e-b844-ecb3d9fa7b5b",
        "cursor": {
          "ref": "369b154b-e788-4967-b400-152818541fa4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74549a0a-b614-419f-b053-d8625385641c"
        },
        "item": {
          "id": "02756159-d0e5-427e-b844-ecb3d9fa7b5b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3684f4c8-1fa3-4d2e-9eb2-25caebb43cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b15cee3-49b1-4f7b-a495-9866b268cd65",
        "cursor": {
          "ref": "c425a47b-6391-4fc6-bac3-3b9581cc696e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e207485a-ffd0-4c16-a7d0-c3bbf61a816b"
        },
        "item": {
          "id": "0b15cee3-49b1-4f7b-a495-9866b268cd65",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "83f59f90-7f66-4d74-9537-984c53f81901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1966e4b-5498-421a-b2a8-5b434f59096e",
        "cursor": {
          "ref": "2cb706a0-a7e9-487e-b40d-e6cef98ce92b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bbf903b6-6440-4920-a966-c4a32260b01e"
        },
        "item": {
          "id": "d1966e4b-5498-421a-b2a8-5b434f59096e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a6d9e27e-df87-4ff6-865c-c34ca5aef195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b7c031-acd6-46da-9cd6-066c4e1de605",
        "cursor": {
          "ref": "43de463e-b6a3-4859-a29d-94459e7cf12c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "70b729e3-cdc5-4c21-b481-51868724196f"
        },
        "item": {
          "id": "72b7c031-acd6-46da-9cd6-066c4e1de605",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9bf99f6-ce77-4eb1-a748-dd689eec62b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7022a4-eb92-4282-a891-5dd0e732106e",
        "cursor": {
          "ref": "1ef868ed-756b-4cca-9ec1-97986aea023c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "53c7c7bb-c681-4ba8-9d7e-b5cf2a378879"
        },
        "item": {
          "id": "1d7022a4-eb92-4282-a891-5dd0e732106e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "92a2998d-3729-4d73-aa52-2936bd2d5bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f2536c-6f40-486f-9295-cc9d32a0e1c8",
        "cursor": {
          "ref": "2a31f784-35c4-44c2-aca8-2f7688b6af83",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04b8636f-5083-49d4-b635-40a1e45a3ee6"
        },
        "item": {
          "id": "d3f2536c-6f40-486f-9295-cc9d32a0e1c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c42ee31-385e-46f4-bab7-3abc53c7c6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1047455-877d-4f75-b04a-6175c54d05fc",
        "cursor": {
          "ref": "ad9c82ea-095b-4bbd-8ec4-0051be05a1b2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06f53f73-78bb-44cb-92a5-ccbb4d535e9e"
        },
        "item": {
          "id": "f1047455-877d-4f75-b04a-6175c54d05fc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1f8037b-3ab0-432e-ae95-730c9d1c715d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0875a-6d10-4fb7-86d5-a3e3e4f93335",
        "cursor": {
          "ref": "5c4c85d2-5511-4a4d-8ce0-63c1b459ad33",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1bef2703-d272-4f6e-bbd8-98314b060c1d"
        },
        "item": {
          "id": "88f0875a-6d10-4fb7-86d5-a3e3e4f93335",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "75b3cb8c-e05d-42cc-bfa1-eab802c7d8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b389c-9c50-48b1-8401-2d4f31827028",
        "cursor": {
          "ref": "02445b24-b76d-496c-8ce9-842cac0cce09",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "969f3dd4-c651-48e9-a67f-ffe06a3465f2"
        },
        "item": {
          "id": "294b389c-9c50-48b1-8401-2d4f31827028",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "244fcd04-82c6-4f33-9868-88e411854f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f70406-9497-46fa-8e32-ef57c062c9b7",
        "cursor": {
          "ref": "7a906b13-1d6e-4fb9-a953-334aafb36677",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c5212c33-e30c-416c-9a41-5db8f1f84c07"
        },
        "item": {
          "id": "a5f70406-9497-46fa-8e32-ef57c062c9b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "992bd6c1-32c7-4d4c-8286-9211c8bee62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28c8cc-84bd-4597-946e-527c8ca4717e",
        "cursor": {
          "ref": "f8a1fe09-2240-4102-b281-d0bc9cfe0da1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "72815d32-7604-486c-86e6-e166f5e2645c"
        },
        "item": {
          "id": "fb28c8cc-84bd-4597-946e-527c8ca4717e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "415b658f-28bc-4e5c-a02b-ff16283d15ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcb31ad-dea3-4b81-9afc-6227e443201b",
        "cursor": {
          "ref": "5f11ccbc-82a9-463a-a325-e2ecc9a03eb6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "304ad1d7-3d92-4576-875b-683369f06987"
        },
        "item": {
          "id": "4fcb31ad-dea3-4b81-9afc-6227e443201b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "27dc63e2-7088-4a8a-86ac-440dcf2c53de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb41b79-d3af-4ec0-ba4d-10029e70a634",
        "cursor": {
          "ref": "b080714f-ea50-452b-a8d3-0113bcb1693a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ac9bb752-56ab-4f17-bc40-a6c33ee4c7f3"
        },
        "item": {
          "id": "5bb41b79-d3af-4ec0-ba4d-10029e70a634",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2b6a526a-f70d-423f-a6c8-f1e1687e6541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2923eec9-80ce-4240-b5e2-e5131096e447",
        "cursor": {
          "ref": "c0b84c8f-512a-4eaa-a4bf-ecb8506ca72b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "414af677-4e8f-4f22-8cb2-7d0fa26916b7"
        },
        "item": {
          "id": "2923eec9-80ce-4240-b5e2-e5131096e447",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d8fa5d20-8857-4a71-95fc-3a8fd878d8c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367bef2f-79d0-4e93-8bf9-48e4180b0e72",
        "cursor": {
          "ref": "5a3e69eb-cd4e-4254-a789-46d8495927ca",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd6f4782-3584-4491-a36c-c60308ec3a51"
        },
        "item": {
          "id": "367bef2f-79d0-4e93-8bf9-48e4180b0e72",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d926b25a-0482-4b62-9306-ee957c2b3e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f2a402e2-0b36-4f78-b8eb-c8afd0e0095a",
        "cursor": {
          "ref": "2056d64a-786a-4054-84b9-56fb2039dce1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "611f3a80-bee7-4656-8d24-ff8ec5187a55"
        },
        "item": {
          "id": "f2a402e2-0b36-4f78-b8eb-c8afd0e0095a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3eccaffe-898d-45da-b499-2a9043d6c2c5",
          "status": "Created",
          "code": 201,
          "responseTime": 8862,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b6bbbc-08e4-4aa0-9e6e-d23ec5226e9e",
        "cursor": {
          "ref": "866fb7fe-15e5-4835-be02-e450d798fcbd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3dd82cda-c109-4394-a2e1-80d73161f69a"
        },
        "item": {
          "id": "e0b6bbbc-08e4-4aa0-9e6e-d23ec5226e9e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bfa7595a-c718-4357-8540-710d16a60fb4",
          "status": "Created",
          "code": 201,
          "responseTime": 7840,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d300ff61-be30-434f-a828-d93a569fff3e",
        "cursor": {
          "ref": "b0b88c04-8d5c-433c-be91-9b2311dcbea5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0b8f99f3-02ae-4a7f-ae72-5dc9efbd24ca"
        },
        "item": {
          "id": "d300ff61-be30-434f-a828-d93a569fff3e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "06f85f01-fb7e-4aa1-9873-aa744e5ebb70",
          "status": "Created",
          "code": 201,
          "responseTime": 8563,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3b1fc0-2a28-427b-bf14-c9644b8a383a",
        "cursor": {
          "ref": "fc9c6f27-7f88-41bf-aa36-d24d02366ff0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "004217b0-8285-435c-94d2-114dcb634fa6"
        },
        "item": {
          "id": "0b3b1fc0-2a28-427b-bf14-c9644b8a383a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70bb9218-7c99-4365-a6f0-444f80c31a53",
          "status": "Created",
          "code": 201,
          "responseTime": 7865,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c4fe2d-157e-4c25-adb7-7438f9012166",
        "cursor": {
          "ref": "7b369358-40aa-4d33-ba1b-aa41195587c3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a3ffb9eb-bac8-4af7-8190-cca2a5c99c8f"
        },
        "item": {
          "id": "57c4fe2d-157e-4c25-adb7-7438f9012166",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ef7b4666-50d5-442d-a50c-f0dd6f4ae4ce",
          "status": "Created",
          "code": 201,
          "responseTime": 7900,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "368bc7bf-1bbc-40c6-8515-d6e5c38f753b",
        "cursor": {
          "ref": "956e3695-8357-42e2-bda9-736cab8cfbc2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "10428380-a811-4feb-a724-c8c80de670d7"
        },
        "item": {
          "id": "368bc7bf-1bbc-40c6-8515-d6e5c38f753b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41f62040-e062-4c09-9d2a-60efe5554560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4a16a2b9-0650-4737-b064-3d3e62aba297",
        "cursor": {
          "ref": "a8757b68-cf69-4e7d-be03-6f534dd88f79",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9d1c85db-f6bf-43b2-859d-663b48f35ca1"
        },
        "item": {
          "id": "4a16a2b9-0650-4737-b064-3d3e62aba297",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "743d8e3d-0b0d-4618-9893-b170d48da6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39cd59-4ed8-44a8-b397-de28de6476c5",
        "cursor": {
          "ref": "7d3dbd3b-f063-4ac4-8a0e-79f0cbdbb23d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3a0812ed-ea7b-4044-ad51-e3a8156d7758"
        },
        "item": {
          "id": "fb39cd59-4ed8-44a8-b397-de28de6476c5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb992040-d0a3-4c7a-90cd-64331c8af6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867852af-c720-445f-a1f3-25e48662910c",
        "cursor": {
          "ref": "928913a4-fb13-4a7e-8e24-4d24066bb47e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a934aca5-2257-4235-a513-3addc8f82b99"
        },
        "item": {
          "id": "867852af-c720-445f-a1f3-25e48662910c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7e84830-1d45-465e-bebb-5ab42362794c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7fa9ec-a122-4c5e-8308-402425081304",
        "cursor": {
          "ref": "ee53e252-e649-4aca-88a7-f318a7683557",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "919e01c9-325a-46ad-8244-9fd9f58fa81d"
        },
        "item": {
          "id": "dd7fa9ec-a122-4c5e-8308-402425081304",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "78b64f71-4bf2-486d-94cf-ea8d870c6983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38226ef4-c7aa-4554-811d-9210c2a9960d",
        "cursor": {
          "ref": "d5bd9aa9-309a-4d6d-84a0-7358a4f42e09",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7734f3fe-063c-41ff-8dc1-f569ecd589cf"
        },
        "item": {
          "id": "38226ef4-c7aa-4554-811d-9210c2a9960d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7c4a482c-8894-48d9-9d60-5f5dab7be9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b945133d-d290-46bb-9e4f-b26c02e5e55e",
        "cursor": {
          "ref": "bbdb9728-fd84-45f4-8415-1378a91daa7c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aa249d87-ad1e-46e8-bbb4-56a7ce78e5a2"
        },
        "item": {
          "id": "b945133d-d290-46bb-9e4f-b26c02e5e55e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "629b40e4-2889-4568-ace4-abe29036a9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed824d7c-82bf-4fda-85f2-b5771df5f448",
        "cursor": {
          "ref": "1521f790-9e17-4abd-8450-5479702c3cb0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "167bb8b1-664b-4802-8b62-5427e47feb46"
        },
        "item": {
          "id": "ed824d7c-82bf-4fda-85f2-b5771df5f448",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d96040e-d1de-4886-b4d9-1a0f04f53d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf262a9-3b33-4221-8161-d3761e53bf67",
        "cursor": {
          "ref": "7d1f4112-84c9-4907-a52d-1a4abd895061",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "970d2c71-7f78-4a26-bc66-22bcf1b59668"
        },
        "item": {
          "id": "dbf262a9-3b33-4221-8161-d3761e53bf67",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "831c2d98-3f1f-42d1-8e65-1a0ef16bf53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed752e6d-78bf-40ef-94a5-dcfd5a2a881d",
        "cursor": {
          "ref": "4f2581ab-7a76-451e-b956-7a3acea1bbab",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "53ec3760-a75f-49cb-b8b6-5cf1e95f5645"
        },
        "item": {
          "id": "ed752e6d-78bf-40ef-94a5-dcfd5a2a881d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7035d8d8-2a38-4a6a-9664-e01e5e27a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845271e6-da97-477a-8e85-1ad09809cb47",
        "cursor": {
          "ref": "f4e8ab9e-d4f4-4177-a896-cad06eaa53fe",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e5c1bb00-6512-4542-aeec-61934f52c27a"
        },
        "item": {
          "id": "845271e6-da97-477a-8e85-1ad09809cb47",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b2346e9-1658-4d09-9582-a8cda3ebe49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1686d3-4697-4f4c-865b-20092ccfe1e6",
        "cursor": {
          "ref": "21124d97-bda5-4952-83cd-e2f27a13729b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a0597d0c-7629-4118-817e-22b492e0a37d"
        },
        "item": {
          "id": "ba1686d3-4697-4f4c-865b-20092ccfe1e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1b2e431-435c-408f-9de5-68859b41e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5472282d-55a8-45f3-9ccd-58fdd843f1cc",
        "cursor": {
          "ref": "963c4585-3940-40e7-ac19-abed4d120955",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "db330751-55cb-450d-8ff1-1abd76f4a5e3"
        },
        "item": {
          "id": "5472282d-55a8-45f3-9ccd-58fdd843f1cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b46aaad7-58ea-462e-b920-326a67a3713c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a6a825-ed15-409e-b040-a732527e7016",
        "cursor": {
          "ref": "c1465981-f3e0-40d8-9426-efde958fc966",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b3b80f83-2111-4315-b92e-8d895b814966"
        },
        "item": {
          "id": "b2a6a825-ed15-409e-b040-a732527e7016",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "153b58ee-450a-46ca-935b-413d0756b18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce0aa04-0129-48ec-b772-1b0b6d03f7e0",
        "cursor": {
          "ref": "bfd1edb0-ffa9-4655-bbe9-9f40e4bc9185",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bd834bc3-bc59-4e56-bf03-2433c6f808cb"
        },
        "item": {
          "id": "5ce0aa04-0129-48ec-b772-1b0b6d03f7e0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d549c96-658e-417d-b91a-77bac4b4840b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dd5899-9ee9-47f6-9dc3-e83667e9235b",
        "cursor": {
          "ref": "3830e213-644e-4a60-a777-0857e50f5274",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "87046c87-2659-450a-aa47-4d9d5b7d1d92"
        },
        "item": {
          "id": "78dd5899-9ee9-47f6-9dc3-e83667e9235b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f77f8a4b-7c59-4a16-ac9b-860506670c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add7520-2420-402e-b248-c70b08757456",
        "cursor": {
          "ref": "c48dabee-12af-4847-ad6a-addc67de058e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "11446f41-2e48-4ebb-a899-9c3543713116"
        },
        "item": {
          "id": "1add7520-2420-402e-b248-c70b08757456",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7b7e708-ec37-4175-b8a4-ed5acc0e148a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8ae486-456c-4c08-9aaa-fa55871a1149",
        "cursor": {
          "ref": "f9f64af6-a5f5-48e4-b629-a8bd9149efff",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fd114d5b-6e4c-49fa-8249-b7a3c96810ae"
        },
        "item": {
          "id": "bf8ae486-456c-4c08-9aaa-fa55871a1149",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7128a0a8-2d4e-4ec8-9d8a-54c6d65633ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986af924-6124-476d-b9d5-12778eb7f8b0",
        "cursor": {
          "ref": "39fc1121-e652-411c-9f27-9ed86cb19db0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "341d3202-3679-483f-b5c0-444155c1d9c1"
        },
        "item": {
          "id": "986af924-6124-476d-b9d5-12778eb7f8b0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b5c59be7-ec0d-47be-8da3-8268e197dae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c3ee5-9561-48a5-b47d-add741a699e4",
        "cursor": {
          "ref": "852b8762-b99e-4558-9f50-dce0f4fc7df6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16db07ee-f649-46e1-a0b2-28147e5a527b"
        },
        "item": {
          "id": "332c3ee5-9561-48a5-b47d-add741a699e4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42413b7e-daaa-43b2-981b-6ad82d1c04f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d96cb25-0582-4d27-a92e-5b5ea51ec1de",
        "cursor": {
          "ref": "f2dd05ac-1cb4-477c-b5e3-1e8a6ca0577e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "db81a1b7-22ca-4148-9a2c-e6ba0b448f38"
        },
        "item": {
          "id": "6d96cb25-0582-4d27-a92e-5b5ea51ec1de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3398f0d3-e2c9-46c3-807e-ea4d0f9ffb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42f1867-b0f9-473a-8ce1-904426ddb491",
        "cursor": {
          "ref": "ac140561-2aa4-435d-bdd5-79c8273bc6df",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0ed07c6b-b928-4096-8550-a12456c06183"
        },
        "item": {
          "id": "d42f1867-b0f9-473a-8ce1-904426ddb491",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "726a67d1-c0f8-498a-9566-63e94ac2c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76ac9de-c108-4ad2-a99e-c1ed35735663",
        "cursor": {
          "ref": "4c39c611-798e-49ce-a037-40674c30d7d6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c1376a53-0b7c-4b96-937c-55c4bbedc7bf"
        },
        "item": {
          "id": "e76ac9de-c108-4ad2-a99e-c1ed35735663",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6793eb13-3004-4d8b-8dd0-f6e453950585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac48bb9-bceb-4425-ae7f-05a47208701b",
        "cursor": {
          "ref": "746bd65a-ef57-4450-ae00-4b12b10e178d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "889ae44c-9374-4c51-bbbe-4506676f3b91"
        },
        "item": {
          "id": "4ac48bb9-bceb-4425-ae7f-05a47208701b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "563992e3-37b1-447f-8c4d-1854cf5b93f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31cc368-2dcc-4bda-baf7-38889393324c",
        "cursor": {
          "ref": "5ae46743-a915-4ffd-a4b6-8427f231df8d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "507627e0-ee4d-4006-9fe1-a742c6acc66e"
        },
        "item": {
          "id": "f31cc368-2dcc-4bda-baf7-38889393324c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e58e35f0-c127-40c0-b5c4-9f64978d30da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d57d0-a0c0-4b69-9e1d-dc869aec01d3",
        "cursor": {
          "ref": "df29f625-af79-4c70-b880-f5aced82bbe2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "33d54ab6-2f66-441b-8dc8-3394cc150d89"
        },
        "item": {
          "id": "1d8d57d0-a0c0-4b69-9e1d-dc869aec01d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6ff3c57-89f0-44be-9279-bb6fabbeb9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03d12a9-e72b-44ef-8a32-839f2c28ebf0",
        "cursor": {
          "ref": "c3b9017c-3936-4940-a191-24d24d718a93",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "768b3b1c-5ea5-4f43-a16c-84b16fabe6fc"
        },
        "item": {
          "id": "d03d12a9-e72b-44ef-8a32-839f2c28ebf0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e22a37c3-a5ad-40fc-b881-62ab56bbc202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b061ded-3cc0-49d2-b70e-ff327187541f",
        "cursor": {
          "ref": "27eca8d6-33f9-4e46-a63e-19d295f561ef",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "784fb418-7af0-40f5-8b2e-a4ce522b4e47"
        },
        "item": {
          "id": "1b061ded-3cc0-49d2-b70e-ff327187541f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8bbd8a26-e271-4ea3-9547-bf41bfa47b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d55195-6bd0-448e-8cc4-a39b30027cb9",
        "cursor": {
          "ref": "2a1ea0d9-f2a5-43df-861f-7ad0e6b1e1ee",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "64085021-9cdb-4555-9438-06cb32c02f2f"
        },
        "item": {
          "id": "e9d55195-6bd0-448e-8cc4-a39b30027cb9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7e26126-b876-4ace-a0b3-6bc4c08b13f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b543f-f156-477d-89aa-1da7f95aa3ab",
        "cursor": {
          "ref": "e9a37101-18bd-4104-a4c1-c2d8e499f149",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "23b367bd-e865-4b66-9b20-8d5dd6d61028"
        },
        "item": {
          "id": "539b543f-f156-477d-89aa-1da7f95aa3ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51d0a7b4-db90-4d98-ae0c-aedd8c455ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831f7703-6e13-4894-a9e5-a5a1c582704b",
        "cursor": {
          "ref": "b0eb7194-1ca5-4069-a85d-d1788539956c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23e2460e-35f1-44c2-976c-0e7ebfe121a9"
        },
        "item": {
          "id": "831f7703-6e13-4894-a9e5-a5a1c582704b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2d42ffd5-a9d8-46b6-a73f-20c0eb10bb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2dd2b9-2ee0-46bf-8b84-015236b40408",
        "cursor": {
          "ref": "dd24b04d-62fb-4d23-9b52-ef5ce7fe69ea",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d37cb690-7fbe-434c-8c22-a249a9f971fd"
        },
        "item": {
          "id": "9b2dd2b9-2ee0-46bf-8b84-015236b40408",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0118d3e1-a75c-4d23-af8c-267c9c58aaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ea74d9-1944-4033-a0ae-5a60eee02d5c",
        "cursor": {
          "ref": "d00f6ee8-1ed1-4e16-8e36-3515f52df773",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "99341810-1841-4637-a0fa-1423ff77a28b"
        },
        "item": {
          "id": "71ea74d9-1944-4033-a0ae-5a60eee02d5c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "10453a50-5a48-45d6-afc3-9cd6602d27b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d2fb80-7550-4b00-a457-ab6d8288947c",
        "cursor": {
          "ref": "3ff0a1ba-3e63-4ba5-b1d5-72f30e080fd0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ca34001b-3011-47f9-9f2d-724b4c5917a3"
        },
        "item": {
          "id": "49d2fb80-7550-4b00-a457-ab6d8288947c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "53a97a5f-20c9-4d1f-abdc-951d2a73019c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff884100-20c4-4e74-a270-4363a4aa8e51",
        "cursor": {
          "ref": "d4718ef8-df51-4b27-9faf-c562e8efbf14",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "44a00ad1-cd41-4bfa-a1c6-0a229a9128dc"
        },
        "item": {
          "id": "ff884100-20c4-4e74-a270-4363a4aa8e51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "feca2b33-aeef-4921-b018-6e90c6ed2afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646edada-7e60-45a9-acb7-b08e5df85291",
        "cursor": {
          "ref": "225bf844-2980-48b2-9af9-d3985e490d94",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1bdd4516-c6a1-418d-875a-b29b9e9a46c5"
        },
        "item": {
          "id": "646edada-7e60-45a9-acb7-b08e5df85291",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18a50486-766b-4fd1-80c2-36b0c54c4e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66ee7bb-0375-4c2b-aa67-2942df5230fa",
        "cursor": {
          "ref": "bb02108e-05f8-44a5-a7ab-4e2629d0a09f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a6e3852-608d-4a32-9eab-71364636e6d3"
        },
        "item": {
          "id": "b66ee7bb-0375-4c2b-aa67-2942df5230fa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "608dc3c6-cc75-4bb3-946a-446a0abb313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61664408-327f-4c44-8e94-5d36800ac808",
        "cursor": {
          "ref": "7d5569ae-a506-432e-a8a6-213af76d8715",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4a7f6e1f-7325-44d7-a6a8-7b87583801a0"
        },
        "item": {
          "id": "61664408-327f-4c44-8e94-5d36800ac808",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61a8a7da-d20c-44de-9a7d-da5272e0fb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e1e510-3f54-49ea-bd13-1b0453bcac0c",
        "cursor": {
          "ref": "dffc5f83-a70e-46ba-93c6-aeb245be36af",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66d7eb84-f437-4cdd-9bd0-c0856dc601c7"
        },
        "item": {
          "id": "00e1e510-3f54-49ea-bd13-1b0453bcac0c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5c1628ec-0568-4ae4-b3d6-9440ef04638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d137a816-3b10-45e9-bbc6-9666ba98f41b",
        "cursor": {
          "ref": "8c67a8cd-2177-48ac-99bf-fcac359fa5ed",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6298c248-8380-4825-9db8-07b6be64804b"
        },
        "item": {
          "id": "d137a816-3b10-45e9-bbc6-9666ba98f41b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18a47859-b68d-4334-b274-0eba5233be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b041a-5770-414f-800c-3b9afdc7258e",
        "cursor": {
          "ref": "ca823d78-41b8-48d6-ad9c-7e4a7a08ff26",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c2588bc9-0de7-4f26-bfc7-2e276b2a4efb"
        },
        "item": {
          "id": "f88b041a-5770-414f-800c-3b9afdc7258e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b9524d2-2b76-4659-a6d6-e442a6d1ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f15348e-86b3-4750-8aa1-dd55853d2458",
        "cursor": {
          "ref": "ae739363-6a03-4180-92fd-ec3c6f50aa96",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e514a673-aa4a-474d-a55b-958ed21773f9"
        },
        "item": {
          "id": "0f15348e-86b3-4750-8aa1-dd55853d2458",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "430e1298-2e9c-409c-bf2d-c7505332dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28751737-6b48-4c1d-a904-536f091a51ee",
        "cursor": {
          "ref": "32ee3590-298e-4ff2-bba0-3f7e4cb17d24",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f87128a4-c760-49e5-a3d7-e5c8f3dd52bd"
        },
        "item": {
          "id": "28751737-6b48-4c1d-a904-536f091a51ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "868af587-fad9-4a46-ae69-afdcde8b011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fe5c0f-30f0-4a0a-92d7-7570d4c55102",
        "cursor": {
          "ref": "7ea8edc6-4449-4ed9-95a1-46527847b724",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8e1a7709-360f-40d7-8397-0e62da129407"
        },
        "item": {
          "id": "35fe5c0f-30f0-4a0a-92d7-7570d4c55102",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf05ed76-a9b2-419e-82b3-0f9f57b66add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9326d4b-3649-4cbf-88d5-f26d0392069c",
        "cursor": {
          "ref": "f1a7f255-ac99-42e5-874f-83d83855b13c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ed023607-70e6-42c5-86a4-d17cdf78a6f3"
        },
        "item": {
          "id": "b9326d4b-3649-4cbf-88d5-f26d0392069c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df203e22-90e5-4f19-b1f5-fa17878ceaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b09bd6-a4d8-4ce5-b031-81bac8804a34",
        "cursor": {
          "ref": "f8e289ce-dc27-4fcb-8722-e5287a80b944",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "db75c309-bc7a-4db3-a32f-76f8ef4ccf43"
        },
        "item": {
          "id": "60b09bd6-a4d8-4ce5-b031-81bac8804a34",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1b7bd9a4-b9c6-42f3-a609-faa1426aa07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80662b0a-8066-42f9-93fd-262ab12cd2a9",
        "cursor": {
          "ref": "ce76f64f-d968-47e5-a50e-5e339ae24ae3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3018ea05-5d55-41ef-9a60-e99d0a501a32"
        },
        "item": {
          "id": "80662b0a-8066-42f9-93fd-262ab12cd2a9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dddb9a63-313b-4a72-9f03-a964193ef691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2741e4c2-dba6-4d0c-9fa8-52e58005267c",
        "cursor": {
          "ref": "851eddd5-343c-4a7c-a5ed-a8630842e4a7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f337b98d-ee51-47bb-a280-dfa7882a85e4"
        },
        "item": {
          "id": "2741e4c2-dba6-4d0c-9fa8-52e58005267c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41da3f5c-38ac-4226-ac19-909b70019d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5dba54-6ad4-44d0-9b10-86fa51ce6a4d",
        "cursor": {
          "ref": "1f9ebad0-3d38-4adb-84e8-c21507fbf1aa",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "39fa7c71-5a96-470e-9f09-bd5c04dafeca"
        },
        "item": {
          "id": "9e5dba54-6ad4-44d0-9b10-86fa51ce6a4d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c656d49d-c9f4-4876-84f6-af5b1df0c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe0ef88-8ddc-41c3-9905-7faa64742240",
        "cursor": {
          "ref": "0b5665d4-1c4b-4be2-9d06-4548844f148b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a658aaa4-45fc-4d9e-b118-d72755b52565"
        },
        "item": {
          "id": "8fe0ef88-8ddc-41c3-9905-7faa64742240",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcef252c-530a-44f3-a40a-13435162700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069dd38b-b7e6-4a24-9ecb-337fadd00274",
        "cursor": {
          "ref": "0db44e3e-c408-4a4e-a4a6-1da42ccdaebc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9c4ddd6a-5e7d-4089-8198-55771abf6b7d"
        },
        "item": {
          "id": "069dd38b-b7e6-4a24-9ecb-337fadd00274",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e6700b25-e5b2-4b65-abf5-833c596475df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff03df7a-41c8-4ad1-a669-8c6bb8371b49",
        "cursor": {
          "ref": "b0a9f436-5d6b-4e8b-8090-e99301943658",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "598ec674-3941-41bc-8575-152651b1817b"
        },
        "item": {
          "id": "ff03df7a-41c8-4ad1-a669-8c6bb8371b49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f8e1962-c9c2-4913-bb54-0b1aa3bb1cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae492d8d-1c6c-4146-97a9-9328dfac5050",
        "cursor": {
          "ref": "f869a7f0-cdb8-4310-8d6e-32450b7365c9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "00734b9c-25d4-4f1d-b2ff-07789b3e1934"
        },
        "item": {
          "id": "ae492d8d-1c6c-4146-97a9-9328dfac5050",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8cbe937-baca-4d7c-89f2-ca972d0b4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04d6148-9801-4908-a88a-500f0832db84",
        "cursor": {
          "ref": "7272c46b-dca3-4b8d-a67d-66d904f2e33c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "98c5f92a-5fc9-45cf-a3b6-2ab71b01c37a"
        },
        "item": {
          "id": "a04d6148-9801-4908-a88a-500f0832db84",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "31f84963-e32b-4ca9-990d-2b38da2683d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3427cf-8ff3-4fc2-b548-224b12063a80",
        "cursor": {
          "ref": "86e20e04-89f5-43ed-806a-6e17b22f03cb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8695ceef-e778-49e2-87da-846e885bd206"
        },
        "item": {
          "id": "ec3427cf-8ff3-4fc2-b548-224b12063a80",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32ed60a9-a15b-48c4-ada0-b411ee720b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23aaa5e6-83ad-458b-ae49-4096235da7d4",
        "cursor": {
          "ref": "a35281c7-4ff8-41dc-af35-5c4c81fc62c3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "388d38dc-72ef-4eba-aefe-feb1bab78a14"
        },
        "item": {
          "id": "23aaa5e6-83ad-458b-ae49-4096235da7d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0dc2e76-38fc-4bd8-b9ad-325b50f654e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1ae15-98a1-4cae-9b02-815f41b002be",
        "cursor": {
          "ref": "b2e69724-e7a2-466e-9346-4a962a21e49e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "587139a5-1781-4653-8df5-cb0969d297d2"
        },
        "item": {
          "id": "94d1ae15-98a1-4cae-9b02-815f41b002be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c994038-5ff9-4b51-aeef-4ad4ad06ec49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae206cc7-2950-40b3-a038-b75c93e1ae96",
        "cursor": {
          "ref": "b9b5b58f-d8fd-463a-9774-f6741ab0bd88",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a0565511-97e2-4119-9466-975710d86626"
        },
        "item": {
          "id": "ae206cc7-2950-40b3-a038-b75c93e1ae96",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c988fbd9-4793-4387-9e52-0877ce2e7f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d09a2a-a99a-4a97-b063-31d6a09ffa83",
        "cursor": {
          "ref": "b129b51a-384a-48a3-99d9-2cc9e4ea5b90",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c03b297e-0ca2-48a3-8ac2-41de1cbb71e0"
        },
        "item": {
          "id": "63d09a2a-a99a-4a97-b063-31d6a09ffa83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "de838bf5-9a4e-4599-b059-334a84a18fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399445ba-a100-4716-922c-e5abaac5987d",
        "cursor": {
          "ref": "f47d0a4a-1bbb-4f75-af21-14a3edfe6ea9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "76f21be6-4fb6-42e6-9ec7-caf9b3e49c7c"
        },
        "item": {
          "id": "399445ba-a100-4716-922c-e5abaac5987d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88133a73-45a2-4c77-8e45-3cb2a3eee852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b556419-deb1-4e9e-ad73-3294982e9b0c",
        "cursor": {
          "ref": "8ccdb7cf-68f0-4ee0-bc9a-fe840d835493",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0f37bafd-7848-4f61-a4f6-0b1e5a0fbffb"
        },
        "item": {
          "id": "4b556419-deb1-4e9e-ad73-3294982e9b0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2b4b8c69-1f4d-4cc5-b9c8-a717ba68bfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fb6dd6-f2da-4858-9dd1-45144e8d5400",
        "cursor": {
          "ref": "e40b2808-f7c8-4dbf-8f26-4567ce5a9eea",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "08bbf058-296b-47fd-93a9-c291a2264146"
        },
        "item": {
          "id": "95fb6dd6-f2da-4858-9dd1-45144e8d5400",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e375c3f-d324-4c04-b47f-d775add2eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b974342d-d660-4dea-9e90-25d2a3e0f2e5",
        "cursor": {
          "ref": "6b2c64c9-8f80-4b81-ba99-48c9dcbae34b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3319c6f7-30f5-4688-a480-c592d04a8e93"
        },
        "item": {
          "id": "b974342d-d660-4dea-9e90-25d2a3e0f2e5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a362e0da-4022-4eb5-9ebd-5f7411c3a19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a5823-77dd-42fb-9bda-5302a6aae3ec",
        "cursor": {
          "ref": "3b87298d-a88b-4c85-b0c7-0a2551fc78f9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "18973d57-d4ca-4d6d-90a5-7fad5713ffee"
        },
        "item": {
          "id": "5c4a5823-77dd-42fb-9bda-5302a6aae3ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "859fa72e-7e94-4e24-9aaf-fe967d54654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75155bb4-65d8-4f92-8189-e26874ca0340",
        "cursor": {
          "ref": "783514df-b949-4825-96ba-b5ba93cac9ad",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e24d99d1-a981-4a4c-af36-ca3e943ee336"
        },
        "item": {
          "id": "75155bb4-65d8-4f92-8189-e26874ca0340",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d7af3942-a471-491d-b1ec-8aeb3d82a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd0f605-159e-46fc-bf43-0f2b7464f4aa",
        "cursor": {
          "ref": "718822ac-f5c7-44d4-aeec-9c6918c49c00",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "91a4da20-a58a-48ea-8b7c-aa1262fa5085"
        },
        "item": {
          "id": "3dd0f605-159e-46fc-bf43-0f2b7464f4aa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3b372a72-df3e-4c4e-89ee-188170ae78da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8539c3-76e9-4756-9685-f7859daed936",
        "cursor": {
          "ref": "61f013fe-ed33-4872-a743-df4b157443be",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "242107ad-f573-49aa-8e1d-57dee61c2a20"
        },
        "item": {
          "id": "ac8539c3-76e9-4756-9685-f7859daed936",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c82b4a64-c135-45c5-a0a9-b52f7ae140fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe7756-bb61-4c45-891b-b9881b3b565f",
        "cursor": {
          "ref": "0e9bdfc2-258f-421c-a0b4-83111754501a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d6d65d01-afd7-4d24-9405-aa4b1ba82cb3"
        },
        "item": {
          "id": "68fe7756-bb61-4c45-891b-b9881b3b565f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5ba25a4b-6df4-400b-aabd-a73c84f15a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c1f43a-03ac-4146-b5da-eef2d8897aea",
        "cursor": {
          "ref": "9c060516-26f1-4098-b4fd-0d233a6e3491",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f1ab523a-cb87-4252-aad5-ea1abd7b985c"
        },
        "item": {
          "id": "70c1f43a-03ac-4146-b5da-eef2d8897aea",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ea379d65-418b-4d5b-88e0-466a4ee893f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1216b97-9a43-4684-8e42-11e42c6cd278",
        "cursor": {
          "ref": "112ab8e1-096e-4e85-9541-e86b0e22fde4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4a48982c-41d2-471f-93bf-406196fafc7e"
        },
        "item": {
          "id": "f1216b97-9a43-4684-8e42-11e42c6cd278",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4ccbf70d-0e4f-4e50-abe8-108148167db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f58bbaa-6d48-40c2-8d0c-a69af6d1dd74",
        "cursor": {
          "ref": "2df2f8a1-1e38-4e82-9ccb-2075a9328ff3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1a429bba-df6a-4c7c-8a7a-198dd805915b"
        },
        "item": {
          "id": "6f58bbaa-6d48-40c2-8d0c-a69af6d1dd74",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "659f6e07-c6d4-4a7d-a83b-68483e810aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00be137-b180-452e-a818-319c8f1caae3",
        "cursor": {
          "ref": "2b48a064-900f-4e2b-86a6-10ce65a6a71e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e908b43b-dddd-4142-b149-edb05d6086d5"
        },
        "item": {
          "id": "e00be137-b180-452e-a818-319c8f1caae3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b6cf09b-107d-4ac5-8c60-6594cb860c89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778da92f-c9a5-4184-a64b-ba61da8762a8",
        "cursor": {
          "ref": "d7f5f49a-bbb6-4548-b074-fb95b8c6d567",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ca4cfbc9-66e8-4aff-b0ae-6f795a7da56f"
        },
        "item": {
          "id": "778da92f-c9a5-4184-a64b-ba61da8762a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d3be4769-e649-4e74-9b63-d527432fb387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff945efe-dea3-4126-9590-db21f2db6658",
        "cursor": {
          "ref": "0c4c470f-4807-465a-89be-edf4e11cc26b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7f8112e6-0fcc-4567-8f86-0f66b9d8cb46"
        },
        "item": {
          "id": "ff945efe-dea3-4126-9590-db21f2db6658",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f9e6fc06-9ffb-451d-8947-87f9c8b225af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8295da-01eb-4907-9354-3ad479869f04",
        "cursor": {
          "ref": "e2285184-d077-4175-a17a-547884357dd0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "974521b7-b524-4e02-8c3c-a402940656fc"
        },
        "item": {
          "id": "1f8295da-01eb-4907-9354-3ad479869f04",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5f88de4-f847-4f83-bd66-05e3f78c9e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c058e261-bea7-4a78-ae57-8560d75778b5",
        "cursor": {
          "ref": "c9b59fc7-e3d2-4c4c-8a02-984241e9bf86",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "913c1b77-446a-47f8-b0f3-c8cb7d77a131"
        },
        "item": {
          "id": "c058e261-bea7-4a78-ae57-8560d75778b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "867db94b-14bb-4e5b-adb7-64156352fb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d37880c-519e-4b25-b081-3fb7b243d629",
        "cursor": {
          "ref": "21d359b6-8106-4c4d-a96b-cdfdd1d3f0cc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "32e5300d-9472-45c7-a4ae-490b047eb7fd"
        },
        "item": {
          "id": "2d37880c-519e-4b25-b081-3fb7b243d629",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5580883c-da66-4c32-9312-471494b06f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670590b3-a4de-4892-b84f-30db4afb6ae7",
        "cursor": {
          "ref": "be74a812-ae40-4bd3-956f-4f0dec749387",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fdf92969-b63b-4296-910a-e1f0706fe619"
        },
        "item": {
          "id": "670590b3-a4de-4892-b84f-30db4afb6ae7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "116e2762-02bc-419e-aaa3-37088fa44d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a3fcaf-9c51-4988-8c60-d625659c52be",
        "cursor": {
          "ref": "f640e6ff-c8ed-47db-a1da-36879a2086fe",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42703180-6193-46c4-a707-6661fdb254ed"
        },
        "item": {
          "id": "55a3fcaf-9c51-4988-8c60-d625659c52be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "85753136-6472-442d-942d-24ccdb2e839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b62217c-b2c0-480e-9f91-e6cb46670b9c",
        "cursor": {
          "ref": "6b232689-e6e9-4526-b59c-05ddc9ddf5d7",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d843a0fe-1714-4436-8b28-4c62ab7d70a3"
        },
        "item": {
          "id": "1b62217c-b2c0-480e-9f91-e6cb46670b9c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "796ec432-b704-41ac-8424-142f3f823d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949b03cf-ad3e-4e89-9e85-cfddd4df3152",
        "cursor": {
          "ref": "cfcc61f9-ac79-4061-a7a4-779f82d945b1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e2fc654-a4c3-4902-96ad-130d4061a76a"
        },
        "item": {
          "id": "949b03cf-ad3e-4e89-9e85-cfddd4df3152",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b4d9c044-5a99-4d97-99eb-8e789a0835fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f576141-6974-4470-adb3-570c44dc4856",
        "cursor": {
          "ref": "16df774a-457d-4e16-8fde-60691d6fd1d7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f30a2bce-e719-4fb3-b2e8-018bd64fdb06"
        },
        "item": {
          "id": "2f576141-6974-4470-adb3-570c44dc4856",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "571f37c0-e49b-41d1-a17f-d83b2985a606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c9ac23-c799-4890-854a-4aa59beeeea9",
        "cursor": {
          "ref": "0a4b103b-4a8b-47eb-9623-bc2da7b80222",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7517809f-4b33-413d-9281-e2c97c0ec609"
        },
        "item": {
          "id": "17c9ac23-c799-4890-854a-4aa59beeeea9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3cc4d683-459f-4a56-8718-810fe2791fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3491b9-2934-4008-ab89-8c0c4b20762f",
        "cursor": {
          "ref": "59af63cc-8399-477e-b37c-b2d10c506572",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f3573f07-5c4b-4b54-93b2-a24ece529866"
        },
        "item": {
          "id": "bc3491b9-2934-4008-ab89-8c0c4b20762f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fe33f7ca-ff39-4d58-8ccd-8046dcbd8985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccdff86-24f3-4eca-86cb-aeae35c7f1a3",
        "cursor": {
          "ref": "710eb0f6-4520-45f1-bca5-e0db6b59678c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b5fa83b-9ffa-4945-aec0-94e0be9e89cd"
        },
        "item": {
          "id": "9ccdff86-24f3-4eca-86cb-aeae35c7f1a3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b1972c1-6a3f-42a1-b64b-004ec5ae18b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f4be00-2b26-41bb-8d7e-16d13240184f",
        "cursor": {
          "ref": "0ac32946-2d60-4907-b464-9d2aa2c4a8e2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "770ef46c-1fd0-4b6b-b292-d4b5c9e5457e"
        },
        "item": {
          "id": "97f4be00-2b26-41bb-8d7e-16d13240184f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "66bd2c53-8c82-459c-bc41-622b0444e5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf0db81-2cfd-4391-8d3f-02eaa062c6ca",
        "cursor": {
          "ref": "081e528f-390e-4ebb-b6da-c3f2ed71aeec",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7506eb43-f356-4e11-9900-600a5c26cb9e"
        },
        "item": {
          "id": "0bf0db81-2cfd-4391-8d3f-02eaa062c6ca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f823233-8d93-4cd4-a5c7-44357bbc5b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd11246-34cc-4d55-993b-7b97bd1b22a5",
        "cursor": {
          "ref": "254dbacf-9111-41a7-bb04-14cd5f4d17aa",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5035031c-8337-424b-82fb-e9312dbd9805"
        },
        "item": {
          "id": "0cd11246-34cc-4d55-993b-7b97bd1b22a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9480f940-57bf-43d7-8c15-5708dfa9e6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04e57ea-6304-447d-a28c-ba515f397bbf",
        "cursor": {
          "ref": "ed3dd568-7efc-48d5-a8c4-c28c1689e681",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a12e0481-be4e-4ad6-9f4b-5feca484a821"
        },
        "item": {
          "id": "b04e57ea-6304-447d-a28c-ba515f397bbf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7fbcb27-7184-49c9-8a01-fe8e15c05639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fff72a-0f66-4ab0-be93-3142d7e12729",
        "cursor": {
          "ref": "adc946f4-4349-4b01-bb2e-76e2b8df1904",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c106ceb1-8466-4f61-aa37-92d8b9ff26e8"
        },
        "item": {
          "id": "a9fff72a-0f66-4ab0-be93-3142d7e12729",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "16e12914-72d0-4a1e-913d-8f4a281572a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9942b633-0d73-4d47-8c71-5b99dd6fd69a",
        "cursor": {
          "ref": "1ad933bb-a1b6-4bba-b0d1-3b9195706f2c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8b4659f7-8cb7-4032-bd96-00e766b51a5c"
        },
        "item": {
          "id": "9942b633-0d73-4d47-8c71-5b99dd6fd69a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aadde38d-7241-4681-8544-6c66175ac60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd09c636-6a34-4354-9a8c-aea2fc5452eb",
        "cursor": {
          "ref": "f3e45453-32c4-4b22-a71c-c344def44cbb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9d148084-a016-406f-8ef8-08b21f5843fd"
        },
        "item": {
          "id": "bd09c636-6a34-4354-9a8c-aea2fc5452eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c891a0f6-eeb9-40c0-b899-4c343550c2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc9c53b-36e7-403d-be44-69d0abe14da1",
        "cursor": {
          "ref": "ea4817ff-84f2-42d0-bb53-134ca21b8714",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db365d8b-3d14-4128-82cc-dc58b8f79eea"
        },
        "item": {
          "id": "8cc9c53b-36e7-403d-be44-69d0abe14da1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5e8459b-2c63-4888-9c8a-0f9c9c8927b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766cdc24-45fb-4154-848d-6d5966e2352b",
        "cursor": {
          "ref": "f84f303e-93bd-4c55-ae9c-5400e85d55ce",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8235e8bb-ac22-47bb-bbdb-4d712059c7ff"
        },
        "item": {
          "id": "766cdc24-45fb-4154-848d-6d5966e2352b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5bfee9be-92a5-4562-98be-b3831c7590cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ec62cb-f000-4670-9b45-f89f01e1b261",
        "cursor": {
          "ref": "134550f4-4eb9-4397-aa3f-12a3f577c5a5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8c301dae-c545-4191-b7fd-b2111e89ec3e"
        },
        "item": {
          "id": "18ec62cb-f000-4670-9b45-f89f01e1b261",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "37b2b64f-3bcd-4e4c-9784-3a414d2674cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c982a55-4163-4de1-9c22-cd2c8cb2edc3",
        "cursor": {
          "ref": "bffcb05a-caa8-44db-b44a-14d6ddda947f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "71169f21-bfd8-4ac4-ba96-03487f71fb1f"
        },
        "item": {
          "id": "5c982a55-4163-4de1-9c22-cd2c8cb2edc3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a5f9a0fc-f227-4bb1-adb6-1005427ecac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a6854-6d41-4676-8fe8-23de161340f0",
        "cursor": {
          "ref": "b3088973-03ee-4e23-b4d3-aab5ee008fc1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "29563fc9-3faa-4221-917f-f1fa92fc0458"
        },
        "item": {
          "id": "4b4a6854-6d41-4676-8fe8-23de161340f0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4640848d-d8eb-4fd3-b255-de3c4428531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd6ccdf-0bb1-44ea-ba4d-3274e5223574",
        "cursor": {
          "ref": "99d42a6f-f3aa-47b3-a7b1-40f3a7b5fb88",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad0f68b1-16f2-4379-8dfe-f2ac7e715508"
        },
        "item": {
          "id": "4cd6ccdf-0bb1-44ea-ba4d-3274e5223574",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4cc2dacf-841d-4d55-a9eb-87b1e9ff6328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8926486-c711-42b7-8e2f-a81361adc6fe",
        "cursor": {
          "ref": "6ea8619e-c533-4bac-be57-62f0253757a3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0fd9576b-b476-4faf-b56e-4a15f6ae1955"
        },
        "item": {
          "id": "b8926486-c711-42b7-8e2f-a81361adc6fe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "14e0fe28-3b87-4e78-957a-2a80a507da1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887cb56d-ab8d-4384-b1e2-9d4ffff28c72",
        "cursor": {
          "ref": "f87ce047-b696-4eb6-bf25-3e2cf7cb124e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8530d1d6-00be-48cf-9c10-94e61309f245"
        },
        "item": {
          "id": "887cb56d-ab8d-4384-b1e2-9d4ffff28c72",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a73ac259-7ddb-43fa-b6c2-8eb5ebaca191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63448ee-296d-4567-a660-739b65bc88fe",
        "cursor": {
          "ref": "4825b0d0-ac4b-4066-a002-357a429f6c24",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6bff1da5-827f-4063-8773-d61373d454ac"
        },
        "item": {
          "id": "a63448ee-296d-4567-a660-739b65bc88fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "95f87465-aee6-4e77-99cf-df9cb41e9bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c268646-de01-4033-8185-5a5838d35ce5",
        "cursor": {
          "ref": "a514e47c-ace8-4466-8a87-593682df580f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9ea5606-87b9-4162-b27b-5e22e7368836"
        },
        "item": {
          "id": "7c268646-de01-4033-8185-5a5838d35ce5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c3e6890e-b000-453f-a378-87a1c24043fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a973cb0-dedd-4685-87b1-59a64fbc196a",
        "cursor": {
          "ref": "7d2b0018-4c6b-4915-9332-0b5b2ec18b61",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dd7eab1e-46bf-463c-a8a7-1486ef0a23cb"
        },
        "item": {
          "id": "7a973cb0-dedd-4685-87b1-59a64fbc196a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a1f55533-ccbc-4b84-bd76-9554cf7dd4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898ecba9-f42c-42e6-8456-553e8eb64cc2",
        "cursor": {
          "ref": "3cf84e5b-d944-41e0-b65f-778214283a15",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "931ce96e-00b8-42b1-bab1-39a73432374a"
        },
        "item": {
          "id": "898ecba9-f42c-42e6-8456-553e8eb64cc2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9164ba25-53b3-4fc0-a14c-796c3f0857f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dffaea-dd9d-4eae-a940-85406d2823f9",
        "cursor": {
          "ref": "9f768ffa-b985-4db6-8491-a1bc5d2a1b22",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2b103a90-7d5e-4b8b-a994-342eb30bae33"
        },
        "item": {
          "id": "e6dffaea-dd9d-4eae-a940-85406d2823f9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "79c20b96-8adb-49bd-a5ac-ccc1a4fd522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b410b-8f8c-48e1-97ce-de43768df7c5",
        "cursor": {
          "ref": "1f6c4aec-8dc6-4cbb-808a-66803a6486a5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f785b491-d429-4616-bae5-fec27c3453fe"
        },
        "item": {
          "id": "456b410b-8f8c-48e1-97ce-de43768df7c5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bd08023d-283c-473d-baee-c6573a8231cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b82523f-f923-4e8b-9689-bc13a6762c2f",
        "cursor": {
          "ref": "98e1d72c-7833-4c08-a724-e5e6771e0f0d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "59bcdca1-a160-4826-baac-f24211175c19"
        },
        "item": {
          "id": "0b82523f-f923-4e8b-9689-bc13a6762c2f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "929aac07-b10f-443f-8870-5504d1b8cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eedd4d2-99f0-4a36-92e8-f67b2b088742",
        "cursor": {
          "ref": "8a8f26ff-1f16-4801-9fa1-4789bee87aa4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f0ee5ef9-6b83-4d40-a6b4-cf6d6550fa57"
        },
        "item": {
          "id": "9eedd4d2-99f0-4a36-92e8-f67b2b088742",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ca59475-553e-4a0f-b821-64b7759b7ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1839514-a335-496a-ac89-08c29e55ee5a",
        "cursor": {
          "ref": "830a7405-fcc4-40ad-a795-816f29c4d3a1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8e7a1f3c-b75a-494b-be8c-2f547686e98a"
        },
        "item": {
          "id": "f1839514-a335-496a-ac89-08c29e55ee5a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7a6bff5f-6021-41b8-8817-a50d57d35daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253bec8b-7aab-4818-bf68-748b92580f4b",
        "cursor": {
          "ref": "b0b4b6cf-7d09-4dc3-98f4-cdca8479b999",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "66d86115-acd6-4e6c-aa72-49f04d3dac46"
        },
        "item": {
          "id": "253bec8b-7aab-4818-bf68-748b92580f4b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "660142b0-5bcf-473b-9b8b-35f597050dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090adfe-c1db-4231-935f-0866789a5913",
        "cursor": {
          "ref": "378c6f47-df33-45cf-9754-fa423a32c1b2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f7d9db25-cb04-461b-a6cc-e3f85c98d223"
        },
        "item": {
          "id": "7090adfe-c1db-4231-935f-0866789a5913",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "83ffb2eb-79f4-4bfb-9dc0-1914a20dc2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b531430-91ea-4be9-b169-6add49da6a96",
        "cursor": {
          "ref": "1f602b57-8d90-45fb-8dff-76a821a6afcb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a0e7a87a-7466-48cd-b492-97de136a733d"
        },
        "item": {
          "id": "1b531430-91ea-4be9-b169-6add49da6a96",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "49fc9e7c-cf71-4b18-b50f-542b2d2995ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8c43ef-a49d-4ebf-92ba-f1f5bc5a5285",
        "cursor": {
          "ref": "502a0a98-897b-4319-8a61-06f222d3b485",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6a673c91-6d71-4ba6-9a7e-a1b198929338"
        },
        "item": {
          "id": "0a8c43ef-a49d-4ebf-92ba-f1f5bc5a5285",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c4f7fb24-7e15-4ce4-a39e-22720f1f0f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048747f6-040d-4f65-8e8e-c9f01935696c",
        "cursor": {
          "ref": "05fb6ba6-e382-4605-9b11-62bd43a29264",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ccbf5a6d-e7c6-47bc-a797-27ac37def363"
        },
        "item": {
          "id": "048747f6-040d-4f65-8e8e-c9f01935696c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "762c74cc-7c81-4c93-a20c-f33888e8b48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93bb03c-a637-41e0-9363-a5ee2328fccc",
        "cursor": {
          "ref": "21f8bb57-1f5f-47cd-8288-01529981d384",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bcde22e0-626e-4c4a-824d-b2032a4813d5"
        },
        "item": {
          "id": "a93bb03c-a637-41e0-9363-a5ee2328fccc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97462b6c-c6e3-4ce7-a9c6-c3ee274f1f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f4dd0-bba1-4e89-b039-6b63db6b4233",
        "cursor": {
          "ref": "0acad221-8b80-4bee-ae21-d2e474c8f990",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b8bb4f9-a797-4c28-90e3-bc5896c12af9"
        },
        "item": {
          "id": "012f4dd0-bba1-4e89-b039-6b63db6b4233",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "80f9d40a-91bb-4694-a738-bd48caa5af57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73948529-fa7b-4704-b84f-13326f1f2390",
        "cursor": {
          "ref": "447a7be4-973d-47b9-b01f-c788876017db",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a600b34a-097b-48a4-a1c4-077209a87e97"
        },
        "item": {
          "id": "73948529-fa7b-4704-b84f-13326f1f2390",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83d85f04-7ff1-4c37-99e2-6b885ab081a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727ffe5-39c2-4648-8473-ad58391021f8",
        "cursor": {
          "ref": "cd0cf1b8-9f90-45c1-8dd6-78c0b261443e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "06a8d9db-d942-46b4-b28d-9a09f5244a5f"
        },
        "item": {
          "id": "6727ffe5-39c2-4648-8473-ad58391021f8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8e9ea2a9-566d-46b6-819e-854515cc67d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd33c3-3c22-4ec8-9449-c8d9f08451d2",
        "cursor": {
          "ref": "7025b316-d231-4dd3-96a2-aaf73f61a717",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7148c0b7-f086-41c5-9b1d-72864d3dcb15"
        },
        "item": {
          "id": "7bcd33c3-3c22-4ec8-9449-c8d9f08451d2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "713e510c-38a9-486f-8614-861204c27ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22063392-187b-4f03-9e24-c48d550e780f",
        "cursor": {
          "ref": "2afc9b66-46dd-43a4-acc6-4696f070e731",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fb2b1b96-88ed-422f-ad98-4e241e51b62f"
        },
        "item": {
          "id": "22063392-187b-4f03-9e24-c48d550e780f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "28e98c8c-db5e-4c98-98d9-a7b192b696b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5e310-3a30-4a45-bbe7-986a58f8df29",
        "cursor": {
          "ref": "1a63fbd6-9416-4879-997c-d2a7a9fe44b4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3ee4a85a-62bf-465d-88cd-cfe9732d8e4d"
        },
        "item": {
          "id": "86e5e310-3a30-4a45-bbe7-986a58f8df29",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "84999ce7-7aec-4a75-9047-934971a6b96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b51e122-7fb5-4321-85b3-9de9e1d837a5",
        "cursor": {
          "ref": "3ffadc4a-07ac-46ac-a759-e710df958d1f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "06ce8790-17d1-4fad-a097-8ab452c48eaa"
        },
        "item": {
          "id": "5b51e122-7fb5-4321-85b3-9de9e1d837a5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b3249bdf-4d92-4a85-8ceb-442df8105419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925ff89-1a39-4515-9894-2695b8b18f1f",
        "cursor": {
          "ref": "352114f9-7b68-4239-9599-676bc00e16c8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a1c6b5fb-c851-46f9-8b24-00708acbf0e9"
        },
        "item": {
          "id": "a925ff89-1a39-4515-9894-2695b8b18f1f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "86fd67fc-fc65-43ab-8ca0-d5211f816ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaaf113-ccb3-412d-94ae-c719bb7c7f0e",
        "cursor": {
          "ref": "d292b6ab-e66b-417c-90a5-add542d7538c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a9093d0c-65c5-445d-8981-bb6cc72ad94e"
        },
        "item": {
          "id": "bfaaf113-ccb3-412d-94ae-c719bb7c7f0e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a01424b0-e550-40c1-99cb-3ebef880b57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df3a874-c643-49ba-bdea-d351fc26908e",
        "cursor": {
          "ref": "e3303913-387c-4976-9ad8-8a768c0dcef2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1a0d3db5-a372-44a2-bf57-bfc1791b1797"
        },
        "item": {
          "id": "1df3a874-c643-49ba-bdea-d351fc26908e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d644feb1-5b3e-4a72-a20f-8cfc0f6f41e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6bfa3b-9dc4-47c4-94fe-dfb638ff95a1",
        "cursor": {
          "ref": "f0d1ea6f-d746-4442-8d27-f81c1162b033",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e42aa94b-0d51-4620-a9ef-000f2f67a3ae"
        },
        "item": {
          "id": "0e6bfa3b-9dc4-47c4-94fe-dfb638ff95a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7ddeafd8-b265-4cb7-9d73-afd6dbf3cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76777d68-d64b-48c5-a54c-efbae4dfa522",
        "cursor": {
          "ref": "c9af2087-88ed-494f-80b0-4be090c6f5ee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "996e6d81-9585-45a3-985d-dba1e6622e07"
        },
        "item": {
          "id": "76777d68-d64b-48c5-a54c-efbae4dfa522",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2fa66ee0-784b-448e-9f80-086a72615c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a2ee74-035c-43ec-a83a-97ca685f7160",
        "cursor": {
          "ref": "531c801c-2464-49ab-b12a-192f82e12dbc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8f164ea2-2ea4-4c46-83cd-1cf719f491ab"
        },
        "item": {
          "id": "08a2ee74-035c-43ec-a83a-97ca685f7160",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7b82ace4-dc1f-48fc-a524-ba91a2f955fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cee4145-447f-4339-bbd0-96d8c51121de",
        "cursor": {
          "ref": "81d3825f-a25d-4001-a700-cb47757d0e38",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e766cf2e-a87f-4414-af26-2d9705686938"
        },
        "item": {
          "id": "7cee4145-447f-4339-bbd0-96d8c51121de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "35877ab6-eed1-4b2a-aba4-37d3792b690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d257a2-f444-4d24-a473-17349cdda72d",
        "cursor": {
          "ref": "80ee3811-5ad2-4a66-962b-8873557bed81",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9fb7815e-26b4-4c4e-9cde-9f12fc7a2496"
        },
        "item": {
          "id": "33d257a2-f444-4d24-a473-17349cdda72d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bc476c96-fe45-4dd0-8619-ee5096adc27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b03f1c-f86b-4f7f-bc04-d49ced8d9253",
        "cursor": {
          "ref": "7a2c04a5-37d2-4914-88dd-5ede2459417b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "159862e2-a4c2-4bb5-958c-af5dc063bee4"
        },
        "item": {
          "id": "03b03f1c-f86b-4f7f-bc04-d49ced8d9253",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c16f6be5-45a3-4d5b-a1cb-c701cd89d797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d43671-d5be-4410-af6b-9e317706af95",
        "cursor": {
          "ref": "0d79fb20-f15b-44be-979b-e28eddbd73be",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e28cd186-1d43-44d1-8901-95e35ff4527b"
        },
        "item": {
          "id": "20d43671-d5be-4410-af6b-9e317706af95",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d44600be-dae3-4ed2-81a6-738440432ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303fd3da-7e4c-4061-944c-dd3a032f71e2",
        "cursor": {
          "ref": "e5ea6c5d-328b-4981-adb3-6bb34ba9c74d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3fe48cd9-04ea-43f9-95c9-98152ce221b7"
        },
        "item": {
          "id": "303fd3da-7e4c-4061-944c-dd3a032f71e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "76eabc03-36b3-4774-a2e3-560c56990530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd87b2-cb2c-421f-b402-571e259088cf",
        "cursor": {
          "ref": "1525b228-77e9-45b4-9d66-e41667dfb5c0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f74e237f-b280-4bf1-be83-cdde133fa411"
        },
        "item": {
          "id": "debd87b2-cb2c-421f-b402-571e259088cf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "313db5ba-b348-4fb9-b8b3-dc6a06a0c1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c164286b-4399-46f6-bcc8-bbca6417abbc",
        "cursor": {
          "ref": "9bbe8ee0-93e0-4aca-9d37-a07f7619c8ae",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3eb070a3-dbe2-4c00-9fcf-76dc95f2fd0d"
        },
        "item": {
          "id": "c164286b-4399-46f6-bcc8-bbca6417abbc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c628fcd-aa98-45a5-a8ad-e0ecddadbbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ca6c4a-5330-402b-95ca-900b98455827",
        "cursor": {
          "ref": "90fdd9cd-8366-4134-a2f5-3d3d76b52571",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aa85bb51-470a-48c8-bec2-2aee19c38ae0"
        },
        "item": {
          "id": "a9ca6c4a-5330-402b-95ca-900b98455827",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f96331d4-bd13-42e6-a6c4-58d9e9a07068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2e1fc-1fa4-4142-ac33-23a59d17bc29",
        "cursor": {
          "ref": "43270331-fb1f-4359-b872-5f644dd2f0bd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "26de4c32-29ee-4bb1-ab63-7aff906d919e"
        },
        "item": {
          "id": "e9c2e1fc-1fa4-4142-ac33-23a59d17bc29",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "47c36371-5188-41e3-81ac-99d18619efc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a29477-a04e-430d-b4c8-ba7f619649ec",
        "cursor": {
          "ref": "09a78b8c-4c15-4fa9-9b64-e3a1e48589f2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd6f59b6-8cb6-48a3-8d26-2bcf2c1a24fb"
        },
        "item": {
          "id": "34a29477-a04e-430d-b4c8-ba7f619649ec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7d28b3cc-f8ce-4538-be90-23722aebadb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb75e7-7713-4095-883b-139ee6a985ef",
        "cursor": {
          "ref": "9af824f2-d9b5-4e42-bbfd-5f170dcc5830",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "175803eb-45d1-4640-a6d9-f69b85d3068d"
        },
        "item": {
          "id": "53cb75e7-7713-4095-883b-139ee6a985ef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "08d0783b-6f0d-4a88-a4e2-7aea41ab19d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd37e8d-79ad-4b38-9ab7-65f79b151d9e",
        "cursor": {
          "ref": "8bcefb95-ea39-46eb-88bc-2abd6e24b67a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4180d52f-ba93-4564-a80b-3fc1ac013742"
        },
        "item": {
          "id": "8dd37e8d-79ad-4b38-9ab7-65f79b151d9e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "80d2bdc2-6fad-4a07-ad25-a12650f4b5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c23964-1d9b-45fc-875e-f4627ebf38e6",
        "cursor": {
          "ref": "34384392-4ece-4d45-a4ba-82ffa049bc11",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "182534ad-b099-4b23-8556-305521d895d6"
        },
        "item": {
          "id": "a6c23964-1d9b-45fc-875e-f4627ebf38e6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b54502e9-ede5-4376-91d9-2aaf9551ba08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b6160b-298a-41f3-95fd-fa965b86b9bb",
        "cursor": {
          "ref": "0fe6a811-32c8-431a-a7f6-171dbc3aab03",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8e08fb01-951d-4fde-a049-8717760fb0b7"
        },
        "item": {
          "id": "50b6160b-298a-41f3-95fd-fa965b86b9bb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "70cb5485-0cd1-404d-84b4-4f72edf53ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f750c3-9ac1-47f2-a328-1e0882362fba",
        "cursor": {
          "ref": "bc2c69ec-dc31-45ed-9a42-49c216f7b6d4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a5307b89-8cd6-4367-8fc5-c923505060f4"
        },
        "item": {
          "id": "61f750c3-9ac1-47f2-a328-1e0882362fba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7fe9bfa3-f7f0-4774-997f-6f054714a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760fb776-211f-46f8-bbfa-ae0f083f4113",
        "cursor": {
          "ref": "5e235375-ada1-4e03-9551-aac28f2abe32",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f6a29c06-0721-49f7-a283-3e09666e262b"
        },
        "item": {
          "id": "760fb776-211f-46f8-bbfa-ae0f083f4113",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f5d4daae-b52a-4ebd-b8a2-cbedbaff80d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a52b8c9-684d-4162-9192-b071be343300",
        "cursor": {
          "ref": "db14f807-2172-4dcf-ad19-89305121ed52",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8e7bd83c-9b92-4703-bc35-881f8f8967d6"
        },
        "item": {
          "id": "2a52b8c9-684d-4162-9192-b071be343300",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af073413-1f63-443d-991a-ec952af50870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4b43c8-19bf-4509-86f4-ec8a600b42d9",
        "cursor": {
          "ref": "09e4b50c-8794-4573-a09f-92ce4d2db40b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a320db2d-0174-4575-b684-caec9810dbeb"
        },
        "item": {
          "id": "1c4b43c8-19bf-4509-86f4-ec8a600b42d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d2cd534e-9c43-4fcd-9703-cd1bf8409888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b21c6d-0d59-4147-b195-2cad4e244ce1",
        "cursor": {
          "ref": "288ce25d-e3fb-46e8-ab4d-1b065d64d83e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "db8ce43f-c7c9-4b29-b025-56029be5a3df"
        },
        "item": {
          "id": "90b21c6d-0d59-4147-b195-2cad4e244ce1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c4b89a76-ac8e-4606-a280-ef61030d0d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089e9fc6-9301-4e62-92dd-5191ff111e53",
        "cursor": {
          "ref": "b86577e3-9771-43c6-a6bf-660207983003",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "39cf3d5b-87bf-4bd1-a104-2c668fb777ec"
        },
        "item": {
          "id": "089e9fc6-9301-4e62-92dd-5191ff111e53",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "57476e46-7eac-4a30-b460-e8ba1196b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c2ae39-366f-464e-9b89-9dd1ed5c2c36",
        "cursor": {
          "ref": "5293cf1e-a8f1-434f-8c5d-32cda45c7659",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1a7bdbca-1e4f-4c34-8fbf-44a00aeb426a"
        },
        "item": {
          "id": "d9c2ae39-366f-464e-9b89-9dd1ed5c2c36",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b7dd07cc-d204-42fc-978e-1cb8161cb6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7683398a-6d73-4a53-a4e6-74b930b727c9",
        "cursor": {
          "ref": "01f063ea-0234-466b-b335-31026dbc73bf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "84a45483-a539-41fc-ac02-df9483f3e9e5"
        },
        "item": {
          "id": "7683398a-6d73-4a53-a4e6-74b930b727c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b17306a1-986c-4024-96be-2996f9645b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb4b319-b7c2-4d7e-8911-c295a9a837ed",
        "cursor": {
          "ref": "b4226e0a-3ee6-479d-a028-64de564c745b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "60b98c65-e84c-40cb-bcc3-5e4f1942f150"
        },
        "item": {
          "id": "efb4b319-b7c2-4d7e-8911-c295a9a837ed",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b1413aa4-5fb5-4445-95cc-71558530210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dde75a-12ce-45d0-ad36-01e328694af7",
        "cursor": {
          "ref": "7a55a09d-63af-42e8-af05-6b0142b7f2ea",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "33b25f1f-8233-4168-a060-8d035fae1a6c"
        },
        "item": {
          "id": "f9dde75a-12ce-45d0-ad36-01e328694af7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc052566-ec93-4f03-81a0-8fe182e8d90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee36878-152e-499b-8203-be75a5abeb11",
        "cursor": {
          "ref": "1741b054-c0b2-41dd-b34e-4ac318d0d12a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "14d460b2-b64e-40d1-a276-ac1ffbeab548"
        },
        "item": {
          "id": "eee36878-152e-499b-8203-be75a5abeb11",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "51f8483a-e802-4150-9d39-dbd6452745f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cea3af4-c150-446d-b0cb-e21789c27765",
        "cursor": {
          "ref": "ed1b541e-3493-46b6-8c62-8566349cf31f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "03c4dc04-aadc-4494-9e94-c8737f40416e"
        },
        "item": {
          "id": "1cea3af4-c150-446d-b0cb-e21789c27765",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fa4449f6-6729-4efa-8ec2-9386d178a347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac22517-f75a-42ae-8a64-711f69b69e6b",
        "cursor": {
          "ref": "0aec82f9-d9f6-4426-9946-4e742c063c86",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "494dbe1d-5b95-49f4-98e7-6af486c8487f"
        },
        "item": {
          "id": "0ac22517-f75a-42ae-8a64-711f69b69e6b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f4f176eb-eee5-44d3-8124-ac30bf1ef73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcb0b1d-2004-4d54-93ba-759405c9f838",
        "cursor": {
          "ref": "28bbc96a-cc7a-4b97-a544-ceb434246b8a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "18021ca1-c2e4-4c49-acf7-e45c95b30664"
        },
        "item": {
          "id": "dbcb0b1d-2004-4d54-93ba-759405c9f838",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b7a77ae-29b3-4b32-9758-71379eb7b237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c4c9f-bf6d-4dc4-968d-4e372e0ed6ae",
        "cursor": {
          "ref": "cce16b1b-ece9-4e7a-abfb-d629e319a221",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5120820c-28b6-4a9c-9ac8-7dee6001e622"
        },
        "item": {
          "id": "8a2c4c9f-bf6d-4dc4-968d-4e372e0ed6ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6b5d7e6c-30f7-4298-bdeb-68ce5c908b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dedd632-1264-4b89-bc43-cb543f69f469",
        "cursor": {
          "ref": "1959293b-b2c5-416d-a49d-02b9e1c98613",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6354698c-05f7-4ce8-be0d-c14aa5764afc"
        },
        "item": {
          "id": "1dedd632-1264-4b89-bc43-cb543f69f469",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bc95da3b-fc2f-4e40-a5c8-69283b456f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec29dcd-d726-4973-b494-34d97c25138f",
        "cursor": {
          "ref": "d8b98c6a-5af5-4d55-bf8b-a72a10aa44dd",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "41f8e549-f75d-4592-842e-a9f1357ee89b"
        },
        "item": {
          "id": "fec29dcd-d726-4973-b494-34d97c25138f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "467cb552-0798-4c4a-9766-dc929fb2fd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1143f3c1-870d-432f-952c-5b907178c701",
        "cursor": {
          "ref": "b9533e36-5e3e-49ae-90c8-ad06474b17d0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9e7bdb6a-2d89-403a-a377-097b9fef93c3"
        },
        "item": {
          "id": "1143f3c1-870d-432f-952c-5b907178c701",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1cb747c2-8996-4ec2-afb5-520093a65cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2263e7-0427-42bc-9ab5-7e3a96e21790",
        "cursor": {
          "ref": "4af55d40-35b3-4ba0-a173-38b24c1ef087",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "42543719-2e83-46f0-8b52-7474cb1b49be"
        },
        "item": {
          "id": "4f2263e7-0427-42bc-9ab5-7e3a96e21790",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0eb4259c-c263-4775-8539-ebd805a78bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd703d14-e83c-4f68-bb03-658bbd69b02b",
        "cursor": {
          "ref": "e7cb33b4-a238-4e8c-b4ed-5b12dec790d4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f706c8a4-2177-4755-8372-cc0f7a5fb4b2"
        },
        "item": {
          "id": "bd703d14-e83c-4f68-bb03-658bbd69b02b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "23916d5f-9cc9-471b-a399-50af0307e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242a431-2af9-4a66-9fd5-bcb613e0fa9f",
        "cursor": {
          "ref": "1f4ee61d-387e-4313-9cde-1cade396a63a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fca9f209-93e5-472c-a86a-3a973e3e10be"
        },
        "item": {
          "id": "f242a431-2af9-4a66-9fd5-bcb613e0fa9f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "29b822da-a854-4430-9fb4-c93310569a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baecf559-f441-4cbd-bbd9-9d165fb82ea9",
        "cursor": {
          "ref": "c8ff90c4-b5d2-4bc0-8a67-e29647e395bb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ae0fa05f-3490-4da4-a092-498896befcf5"
        },
        "item": {
          "id": "baecf559-f441-4cbd-bbd9-9d165fb82ea9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c5b784fd-e3e7-4abf-90a1-41d873d0eb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc1aa4-d620-49bb-9ff4-2a939310dd28",
        "cursor": {
          "ref": "a00be1df-d2d9-407e-996d-fe3c05cade92",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dfd1af8b-2461-4f8b-86bc-ac344c77e01d"
        },
        "item": {
          "id": "ddcc1aa4-d620-49bb-9ff4-2a939310dd28",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "465c884b-78ac-4536-98ff-1bbfe78c3194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5152c2d8-eb20-4489-82a9-c768086226c6",
        "cursor": {
          "ref": "0fe2a3c3-69c2-4301-8eed-928e49cbd32c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4e332ff0-cf51-4ae4-99c5-15a36f8abb95"
        },
        "item": {
          "id": "5152c2d8-eb20-4489-82a9-c768086226c6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aa326103-67da-45fd-8c28-993c6281a767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7b3149-d916-4c3c-bfa8-c4d86016ac82",
        "cursor": {
          "ref": "f7ab54d4-4f45-4e40-992e-ff9f5ff5d8a1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0b8f647d-f507-43a2-a362-30b6cce2b33f"
        },
        "item": {
          "id": "dd7b3149-d916-4c3c-bfa8-c4d86016ac82",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6c03f5bf-16ff-40d0-b142-c3f61835c891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c874ce-2538-442c-a0a2-22d74fe36a40",
        "cursor": {
          "ref": "f7fee521-5035-4fd4-a78a-aabd61152da6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b8282924-df51-47f3-b753-33bb6a4add47"
        },
        "item": {
          "id": "c7c874ce-2538-442c-a0a2-22d74fe36a40",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ffb26176-ff06-41d3-8f8a-e51f9ffcde74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdf8af9-d41b-41c8-a226-7a4728c964bd",
        "cursor": {
          "ref": "ffa521e8-9290-45a0-b1f3-b2e2f05596ee",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d69ddee5-82f3-47e8-8aba-2f30fc6706be"
        },
        "item": {
          "id": "ecdf8af9-d41b-41c8-a226-7a4728c964bd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f489874-7a66-4e09-bf09-15ccd3122a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4080f79e-7d93-43ec-bb74-bf33e2285416",
        "cursor": {
          "ref": "d4899d3f-e8a5-44a5-8da1-7fb77c74c21f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e2b6ca97-716e-4ad4-b427-7ad0307a5dc4"
        },
        "item": {
          "id": "4080f79e-7d93-43ec-bb74-bf33e2285416",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "824180b0-2a2c-4554-bc20-0a374377d39b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2124df33-dd2f-4571-86c9-6cad9c81ab59",
        "cursor": {
          "ref": "9697c40b-9308-409a-a4ef-ca6372f2c352",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "400608cf-54f0-4362-8b45-42064251fbd2"
        },
        "item": {
          "id": "2124df33-dd2f-4571-86c9-6cad9c81ab59",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d8d91e38-ae24-4824-aaf7-c2abb8deb5e5",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8435617c-291e-46d0-bd40-3ce3420c7466",
        "cursor": {
          "ref": "a9c06017-c054-4d8e-b29a-63a4c536bba4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bfc575b1-750c-449b-842c-c644a75a3f22"
        },
        "item": {
          "id": "8435617c-291e-46d0-bd40-3ce3420c7466",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3ff0ee3c-7696-456b-a8f7-9028fa41e525",
          "status": "OK",
          "code": 200,
          "responseTime": 1819,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec848e90-8841-456c-8f92-5204bb39e41e",
        "cursor": {
          "ref": "34fce9e4-3da6-4aa8-801e-fb7923fbe9de",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d2a5a87-60ea-4b99-8ebb-75f11748af6d"
        },
        "item": {
          "id": "ec848e90-8841-456c-8f92-5204bb39e41e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7d64a4b5-908b-4e47-94b1-3a791f85184f",
          "status": "OK",
          "code": 200,
          "responseTime": 2003,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79fa10-af90-4c0a-a2db-d1e399fe917c",
        "cursor": {
          "ref": "2a244584-3499-44bf-972c-eb9f75716707",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ff6c92d0-2ea4-4f8e-b7b5-7a302a04c950"
        },
        "item": {
          "id": "bf79fa10-af90-4c0a-a2db-d1e399fe917c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1e8f86f-ca8e-4f12-bc56-dac5dd317cbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79fa10-af90-4c0a-a2db-d1e399fe917c",
        "cursor": {
          "ref": "2a244584-3499-44bf-972c-eb9f75716707",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ff6c92d0-2ea4-4f8e-b7b5-7a302a04c950"
        },
        "item": {
          "id": "bf79fa10-af90-4c0a-a2db-d1e399fe917c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1e8f86f-ca8e-4f12-bc56-dac5dd317cbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e942fa-a830-4896-974b-426b0144ce49",
        "cursor": {
          "ref": "74bc94d8-0e51-4a46-9ca1-5633a5bf8805",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bc6c92b4-074f-4d3e-af72-283374f2b737"
        },
        "item": {
          "id": "85e942fa-a830-4896-974b-426b0144ce49",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b18920d2-0563-4dfe-b02b-495659824957",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c9e550-1886-4647-a4ef-f3c32e51901e",
        "cursor": {
          "ref": "6675d2b1-6185-40f2-94ce-3c85a815e943",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cfa9ab04-237a-4281-9b41-b1411deac92e"
        },
        "item": {
          "id": "d9c9e550-1886-4647-a4ef-f3c32e51901e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ef6d560c-833b-4156-a285-10f27403338b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}