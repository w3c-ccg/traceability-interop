{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7285d86e-7b28-4222-b69c-9eb4db6150e0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b70365f1-9801-4cce-8232-ead899fc2287",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27259516-45cf-463a-a1a0-fd7e3d31d2cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63056be2-9a27-4341-ae7b-dca46eafc363"
                }
              }
            ]
          },
          {
            "id": "41719e4f-8c9c-4492-b27d-536c75276cbe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "126a8673-43bc-4f57-8ecf-26b0cc31bd38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be6aca02-b77e-45dd-8a05-d125cf4ed695"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8845848b-18fe-40cb-9b94-47b8b70ed1eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "035dd831-6ec8-49b8-936e-5d2221467478",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9f3c7dd-c9a1-45e0-ad00-aa9353272022",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66c748b8-3e91-459c-9016-22d7d6e75b8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04701d35-4041-413d-a6d2-6a143cc5043e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d447aebd-ee8d-461b-b202-01c2d5d5f4d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b153796-617c-47aa-86e2-b68615706e68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45ed44c8-9d4a-486d-83a1-27c9070f21ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a290dca3-a284-4b14-80b9-703205bf36a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8748a92-f0f0-4392-925f-9cd42fd8ac8d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9aff121d-0c53-4eca-bb5d-16d35272e9b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35753f69-9118-4059-bd57-2ccc4c2d9afc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad3bbf71-a78f-492d-8554-c02a8cd16eef"
            }
          }
        ]
      },
      {
        "id": "dafde642-2317-4d46-8b5b-1edbc91f2806",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bf173450-fc5a-48f4-a047-c5ae8f24ab55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0a0a6aa-1aa3-4abb-8648-b316750c5c4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "415ebddc-f9b5-45b7-83bb-3f8ab76270d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9695693d-9581-40ff-8226-343f790f0965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e056474-8308-4578-94a3-bf5e5fab73c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41de981f-f11f-4ffb-96cf-4d4b8129adc9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a5bfa9-8da0-4970-8cab-91f1f9af2e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56b0bf73-c34a-4233-8c1a-bf6afae98e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17f4178-3be9-4d7d-8b1e-54cf83d95bd6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285460d0-d222-42e7-b707-87dd23d71bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e25270-d7d5-49bd-82ab-897f92a6a1eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c21a202-b246-408a-9c51-df6d87b7628c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6199f1d-8205-4417-a78e-78763a11ab4a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07491cf7-9979-4822-864a-65aa074ca7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58d65882-1a17-4fed-bb5f-c81c21cac365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e3d863-b32c-4e7b-b409-1e057dffd71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c93d23-c34c-4085-92d3-b38faeb30ad8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6c41738-e87c-4bc6-a23e-5807a8e003c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4b4e795-1c46-489e-a744-7deec104c389",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1fc6fff-4fb5-4447-b546-01909fde13bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c50b438e-72ac-4daa-8226-628f2cfb45e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a8fca55-7887-468a-9df3-402c3a95e092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c33378a6-ca9b-41b7-a71a-9ce8ffec818a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0206366-3e20-4670-96a4-0292b673c718",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "916ae970-b89b-4e36-b89b-8e0e8f997127"
            }
          }
        ]
      },
      {
        "id": "ae82e3df-f329-4f7d-9e2c-6fa564cf7863",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "395db40a-a967-4b12-abd7-28bd654b1601",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ed400f1-e588-4c71-b33d-6c05253944c3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce4339de-762f-42b0-b751-6d61f6fed76b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c34c80-91cd-4df9-ab8d-dab7117bfe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719df25e-59bf-4ddc-8873-6c72e52d1d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451c3ad9-a01f-4d85-814f-b9c1823b298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "828dccf4-9b4e-4c95-b6c8-b902af85bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3855ccf4-0532-4924-a0c1-724d48e1a281",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1626252d-fd61-44d7-b02f-0654682a8281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9035fbbd-0f89-434f-97e6-dc4763a62e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b63fa5-1749-44b4-98b4-65ee45ccf28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e823e0-6957-4d1a-b349-2484293c878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c2394f-eaaa-4325-910b-fcc08eb4e856",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae1d383-4eab-44a9-8bf9-3c93626eeb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9216b5-0790-4444-a616-edab7e3855e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19e1a6e-62f3-4be9-b8b0-e1c736749fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e748309-1569-4d01-bc26-ada2c19ea437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e8ff6a-c449-4ec0-b04d-afd1b53a338c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e8f726-c79a-422f-9501-34f577eb6493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760a08cd-c9b6-4410-a766-9a76c627b047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc46b52-85b7-4f36-bad1-d5e8d748d903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9370861-1a57-41de-9161-605f553d080b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24f5572-37fa-4857-b25f-140a131834a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f507ff-fb2f-438a-8386-bb677bbc08aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7bc084-4b2a-4f62-b1b0-eb846d5bf856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2affbe11-d6cf-48e6-8e0f-2d8aed78debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d832fdb-3c39-427a-a8c1-c1b54d9efc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab0346-2ed0-40e5-a904-1d5f2a039b3f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b941a6e6-6565-450a-ae95-6f0dd3158076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63003306-1f38-4566-ba8c-3fb0ec64bdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5f9034-7f34-4d16-b951-57ab36b30047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "882a9a05-fa28-481a-983c-8dbfbf7a8172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4fe6ed-2779-4074-a8ac-cdaa0a67a24a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c83cc02-639b-4708-8be5-d720fba40016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248d3ac7-d2c1-45d4-9064-4e6a41df1efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24b29ef-3026-4005-9087-5f369cbb3f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a98d344-1348-43e0-a9c7-5fbfd1c52d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7d2e6e-7c95-432c-b848-51aecc34c513",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec9faed-4cd8-479d-9043-04fb85d1ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eb2a1d-5dd3-4b5a-9772-d7652f3cb45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0effd11-e8a9-48d9-b798-92d90763004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4307fa-a6fe-4a21-945a-2efcac5d82e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8a9c38-dc7d-45d8-a892-3243db855349",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd61c5a-f0b4-44bf-8d09-a8f73876b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b70aaf-cc40-4a9e-84f8-3343609eb4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bd0c65-e1f7-4c44-9286-bf5f9bad1e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63cc2bd6-d67a-4597-bda6-cd3ff6217599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89db63da-8751-4be0-ba11-5567cb172bc7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a38434-1083-43ba-8b9f-509224927aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ed49c5-d602-4f9d-8d3e-5fb467484199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2f88e-e173-4ff1-8bb8-32b8f10c01b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "722d8a0a-039a-40f0-9b78-ea23e6b159ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf5d209-c5c1-497f-a54f-29fc38c6632f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e8a52b-7b68-4203-bf18-513126a5fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c352ba3-8cb6-47e9-9eb4-ed9b88fa5dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d706e5-97d1-4b87-be2c-ff0d368f0466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbd302f-d7ad-4c4d-9077-53b0a3d70658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b3812-dbdf-4033-990d-972f4e43c1c3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66630081-9e9d-48d8-ae07-914ee9901905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c144a7-5df8-4fc8-9767-47a5324ca351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c2b6fc-1a82-409e-9434-993394820cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8189f6ca-ff1c-405b-85c9-67615e217115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a62d9b-368d-450d-925f-e18bdb180e66",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c7f5b-ccf4-40a4-b539-184ac3ad381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea47bd57-dae7-4aab-8d6b-956bf778a119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db549d8d-8ca7-44db-b8a2-b0ac700a92c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6171c21e-2942-4aad-925e-7fc6505ddb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099c462-43c5-49d8-96bc-f36e33c2b29a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f126a31c-d6d9-4427-aa22-afbb1e415b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9f2fa0-bc3d-49ed-963c-6019b3ad8ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf8fc47-a9b5-4c2f-b1f3-043366f8c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a02c75-de64-424e-b0b5-42682afd12d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b058fec4-5a69-4070-9229-25de821dc447",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5b1185-5aa2-4347-af33-82e3ec08388b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87390b1-276e-481d-a49a-3684a97f177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab41a012-4108-4bed-8006-0132ad0f5074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d929a20f-bede-45a1-9b0c-6149fd148621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecc70eb-2666-4917-8dbc-720385ffff5b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340087b7-c84d-441f-89aa-871a0d985257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1a464c-7c07-4e2c-a0e7-edd248c8477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c4c443-ee10-487a-b14e-1743de8fdfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6563c0e-843d-4593-a210-269ea991ef78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab54b76-25c9-4019-b8a5-7db5b97d3ab0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a495ea8-338b-4d5f-9a5c-69369c5b91b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1baadc32-7a53-4ac2-8fad-db93487184ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b6d5e4-a5f7-4fb8-a57f-58c0cf4617c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da3a9ef4-145c-4b48-801b-d8e96487db17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826405a-cd2f-459a-9609-d869f63acc4d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d2ff2-678b-45b7-9a67-592e3229b1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ae3c1c-7fc9-43ae-9714-cc36e5fd454f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb1a79c-3bb6-49e8-8877-2c5ef4bc547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4162ff7d-4e3e-4851-afe6-0a7a8bdcb01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4704c950-ef94-4eeb-a017-1b518175759f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ef653-c35a-49cd-8ace-7126a8421a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0517171-be79-4caf-9c82-776372359d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b984eb-6d18-4641-8dbb-bc590f4ed1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a01bd03-65ea-48a9-a240-75ad59770e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cd263b-3317-4eee-b778-e42dd81ca019",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2084c3c9-2a99-44ee-a8fd-e39e637e5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d38d373-33a2-4f0d-80e8-2361197effd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be76fd-b699-4664-a77c-3c077cb46cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d7296d-9b56-4cd7-b53a-5cfb59ad43f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2d30ae-4054-4baf-a629-ee3620c9c117",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ffa407-bc76-4771-b3f0-98565aac8819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f99edf-6281-4f58-bc89-f85da5e11ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8061a7-52b2-411a-97bc-9e35aff3ef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbb6f6d-576b-41c3-9e14-f487badd1976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71fc670-9d52-4839-be72-aa32637f0b3b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8871a9d4-3c78-4741-ba02-6c0a5cb5a9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e9273c-9578-4d58-855a-51921b001a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b05fdf-6d5f-40c6-9325-acfdffe0897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e318a51-9bd1-4a27-a4b4-0f115f3fc696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd88c46-0041-40c8-a349-22f8608e74a2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b85c2e-a7d1-483d-a2f0-460ef4ae8cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748701d2-aa17-4fe5-a5f0-29fbbba64574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe4751-e4c4-4aff-a9aa-a1799badb9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fba588f-9154-4abb-adc3-72c0c7c7f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8575eb-af34-46c4-be6c-93ad857504c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf30ee6-4873-4642-952f-a4ef5c71b97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57bc773-321c-42e6-8d96-c1f484f2e93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4312751d-599d-48ec-8868-ea8416ca0c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88847f38-f273-4445-8ecc-aeaecd8b7edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d320e572-7459-4b3c-97e9-750fc66bc236",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07a859-cca0-4903-936f-473db50a902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42bf766-8332-4111-878b-dc8057432daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ea521f-557f-4b5e-9bfd-bd1b99485dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4dbb5d-b274-4c3b-9cca-45bae8a45def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d72a56-710b-4973-a3a4-975ab3f2b6fc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cc9b99-3973-414f-a0eb-f00c0ddeb05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b326f497-d658-4fa8-b27e-edce703e2cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5555f4d9-cc32-4ef5-843a-813363a60261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fd83a6-97d4-42fa-afd9-d86950b3abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3853297c-7754-44b6-92c9-90a95d1224ec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b010f4d-d4bd-4040-847f-7528ffeea311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1b4de2-71bd-40ec-aa2d-cd66462cca63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c193d-edf5-4179-8ebf-a5f6b99ffc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f7aebd-205a-41fb-aa42-c7b012b7cc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c024dfdc-f3c5-47a8-b1af-d1ae73a04d53",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5aa094-39b7-4291-9616-81d1987829b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdbfd31-83ba-4fdb-8bb6-16bd9896ce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f07cea-1f21-4b96-bfa9-4a624ac51b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca71bd89-ce23-4ada-89fd-5568891d23fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568f94c7-8fe2-4369-a184-5d7af5fefc04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333c33e9-7f3f-42af-9eab-d283b0b5bbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19573586-1d50-4191-9b14-6db3ec56bf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f77b754-3f0b-4210-8dcb-72cd4d38560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f234d21-b83a-4201-a3d9-238f628141da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5eb07b-eb78-4288-8db2-fac220a235d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0f51c-fa43-453f-90ed-112b3acb4146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e9c53f-421b-4ed5-b8c8-e5aa485335a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a405994c-64a2-433f-bc63-e16f76e73eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdbea7b-ae74-44c4-bd02-cbdb5c8c95ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e98685a-2c8f-4a1d-bbe8-35e06c4912be",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e98fe2e-0d7b-46bb-8b38-583510b655cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23b1133-69f0-4f1c-9242-136b84c71966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9921e83-636a-4cfa-869e-69627cf9c391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61cee4f8-7478-4729-8ee2-bdbe8353239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5904a848-e8ac-4cac-a04d-8b408397542e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99db9bf1-507f-42a6-8206-79ab18051d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54f139e-1793-4c27-8649-66c490279293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab8ed15-ed72-4631-bf65-a901a2bc42f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4869a288-d1ca-43f3-90de-0ed3e81b7b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8497b104-b639-4b86-9c14-6144deab3f89",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e3631-e390-414a-9240-0f8d25155518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaf9e18-8f63-4903-80e2-da6735e20657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9910c343-09fb-4f01-bc30-026ba00743f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bf274b-8658-4f02-b880-b13f631a4061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6baa7f9-f07e-457c-916d-6c820335cf93",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca6e72a-6051-4d1a-985c-44e6b17639c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd837561-8dca-4fc2-8958-b8380f4525be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bae958f-135e-4630-8028-3495b10d8c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "638e59a6-8dd1-40b3-9c8e-95b5fdd2203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1a610-7340-4be7-b990-f7e4e66a5141",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d87751-ef18-4719-b11f-79a4960a0716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae56238-bb05-4bf8-b4f9-b877d55f1aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9485f3c4-9e08-4720-b3b6-d2f28afd2f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "246f369d-ec89-4601-8b7b-424f8555bd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e662608f-e811-43a4-a26a-ec60c2e0be3c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df06526-cb2a-49e8-87d5-8961b4e710f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c29c88ab-30aa-4854-80b6-3dca9c9e2904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e936533d-5b65-47bd-9089-05164399a9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6f9e03-f664-4736-b325-b393a0fc9715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea51416-6194-4377-b1e1-158c5b042385",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d096e5-0fdb-4bac-aea4-9a72974c23d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a24422-4e9a-4b1f-83c1-8996d5642036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05276850-1e8d-4831-8723-c218e816fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50bbc28b-b85a-42cc-a4e3-bb639e67cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d00ef51-aea9-4ee3-916e-824402df506c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef42e6-a49c-4463-946a-9e8eafb8a867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e883fa1b-c10d-4c85-a61b-86c3ec0c5692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50e1fa8-c6a5-4f39-8b16-5de2c5f01fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb18e58-d627-4641-b3eb-5994ed310a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5555aec5-163e-4c2a-968b-c7e0b428c4e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d074473-e812-4573-ae09-870b8e21e7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50faf49-0777-4c40-ad79-e62eab8ed498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10992b2-4bf5-4855-a538-1dfefa2bfff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d21453ba-83b3-4de1-8ee6-79b8c6d50a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2915d2-e6e6-4275-b67b-00790521f13f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8eb248-64f7-47fc-81d2-5a950a4b64ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e30ebde-562e-4fb4-81f2-edafd1dca336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982b9ab6-5afd-49b1-b8eb-28b92cce8cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de73c21-fdd3-4a50-be0a-a7ec13c544e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1237095-aba0-4fa3-a951-b2a3e8d5ebaf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d8f0af-2453-4a1c-8c37-ec972071ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6d3c26-497a-40b7-8901-35842ed5226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e989880-8a22-4f81-b250-b38d136ba272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2c0d7e-3959-490a-b8aa-5f75683c3557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa349e9b-5899-4e08-9a90-67ab54a3372e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d700ad-8590-44e7-a72a-b08ccee5daf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a6a65e-6923-4d9d-a94b-76dc2ceda00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277ba682-38a4-420f-bf41-527055d39ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "981e8270-8e02-4b59-bb25-ede8f9dd7c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2dd6a6-00f8-46a3-b12d-5011c2b91a95",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75765f9-8a3c-4895-b7d0-de84ef91f9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8d9279-b925-4fac-b44d-df50048d9d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13364e2a-6a52-4675-bd43-c4ea46e0af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e98293cd-6cf8-4455-925e-90154b11af80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae650c0d-f776-4b3b-873f-fa01a51a6f27",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a67f83-45c3-43d0-8646-1e9d2e9acd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d4f00f-e8c5-4906-ae23-1e220b849da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c10ee-30d0-4cf4-a5a2-21a50337db6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f87843-65b9-49d5-83c7-3042fe2efeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1830a442-acf9-4808-b65b-8fa0e759bb9c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b3620-950b-405d-983d-a3bfa8ca53bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b8f372-eb01-46c4-97a6-f38304596836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5e069a-c248-4794-8925-9ca66d49c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f622ea56-f040-4e7f-afe3-03b2c0f957d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c69583-e652-4ddf-901e-4ef8b8e6c76d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5760d6d3-59ab-45b0-a387-86e81bb96f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c497db64-5cf8-4fd5-8ee0-73a9bfc460e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c6c7d1-3381-4063-a948-8df7e340c97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a18de23-eb09-4dd7-aeab-01fb0043b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87079697-1895-42a7-b9cc-80e6ac8d503e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9aef2-7dfb-42e5-8341-49b44704ff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2498074-c454-4e0a-a656-919a08e0fbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc16385-1613-42d3-86cf-abb42381a137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f56b1bb-3a27-469c-873f-52e0b816d420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d65ee-3c9c-421f-9e55-6689cd00e5bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0bc8a0-ee49-4e00-a8b0-c143652492c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49892808-387b-47e6-bc40-3f4849658151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48186c-95b3-4a64-89ff-88edcad208de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8165be8-ed15-4fce-aa2c-2fa6129387f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327c2f92-7957-4432-809b-54b86653160e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e348115-1c7f-4583-80b2-ee655ef36af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cce1b3c-e258-4705-9269-659136a3b99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddf158e-a68d-4d15-a534-98dcc1443026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16e118f-86c2-4a3c-add8-0578b537509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e177acd0-3c99-46b3-a80d-5a542a6b8c0f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d80a85-b18c-4f9b-b99f-eea32a79ef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21b85e4-c4eb-4b30-94ad-30cacde364d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79cc8e8-0135-41a4-b052-d8b15279caab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4873726b-54b3-44a7-a61c-b4e451261c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763e9fbf-97de-4054-b580-2c5674b4602c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab04c01-a1fe-4aa5-a3b0-627a863e297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfbd075-3581-4dd2-a0a9-bcbb1f571f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2774afc2-8e53-4b56-8030-6971087233fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5ac2da-9b38-4feb-a350-a56185129b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6a01b5-5f4c-42a7-8b0e-a59122ac3a24",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef0e0d4-f2a7-4b1a-a136-f9d2c9c5aad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cac8f9b-ea06-4514-92bb-bcde97766fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3603196d-618d-426e-bafe-0b6098b2c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4157c3b3-9e0a-475c-9afa-84aa51803835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be31330-6d98-434e-8926-8df2a2d28ac9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0055aa3-6ce1-42e2-aeee-1022fbc54366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ad9c21-d2d9-4ade-b274-5744569322b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6afa6a3-55bc-45a9-b31e-6886da7f7d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee94ec2d-1b95-4e73-8e16-f3e76b46979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6deb81c6-962c-4514-818b-ebd200ba8eef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d9e41c-0855-4bcb-83ed-aece1aef613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdb565b-efb5-4d55-b8db-5cf57d0dd622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa9cc97-aa12-489e-b662-324baa55ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65accd7a-51dc-4dda-af7b-befad7425ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcd95b8-68bc-4781-aa9c-b37ceaa11d2c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aeb3ff-199a-4c76-98f6-92f4867ed5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4f8a9b-1052-4929-9556-9e292997fbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ccf390-ce2c-4c8b-92af-97004f9af7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d599cdb-7fba-46a5-b8a8-979d33d774dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125ff1ad-76f6-41b4-ae57-546127c02ff2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c728e285-3ed6-414b-b9ac-b8e219af9cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa866c9-a8b5-4f38-961a-8ef2e124fcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370c723a-f5bf-4d1f-9547-72079f7f187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b26b9153-fbf2-4e73-8716-a205125f262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4371d214-b54b-414f-b368-f14814ae64a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5981fab-d1e0-4a32-a606-7f09fdca4f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4690f5-d632-42e7-8743-9e39b4c39e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dfef45-d34b-45c1-b309-7e0e6ced88df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b2c271-3bc1-4a17-8e7f-fe11b8cb06c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b4a15-1091-44ad-9a30-440039201c6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1e9880-3830-4e4d-b7b2-8710a98f6785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d21c53-666f-46ab-a6ff-6363c50b30e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0f9c9e-3487-49a1-b732-13d0ba0d6ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c2255a-2491-46b5-8d83-174ef54f7ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8b22de-a8e5-437c-8efa-63230f2ff1cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c0792-0880-4f6b-8306-55c76a9f1539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccf372b-7a55-4a00-8dc7-1dee767db496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbbab98-3e20-48bb-b8e0-0c9690809817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab796cbc-64ad-4e56-9e59-8d0dadf74a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb078034-466a-482f-9bd0-3e2d7cde6393",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306741fe-ab35-43fc-8057-69d12c87b873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c32255-82e7-4601-b15f-59df045226e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756fe06b-7929-4dbc-9a6a-94030368063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a04a24-2dcb-4966-9bd0-8174f5d37187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cdc256-f3ef-4011-a4d0-42c29f8e25ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d7bbc-0342-43bb-8fa9-84829d6f2a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8361fdd3-b892-4820-8b2b-ce32afcf58e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da7c4f-5ee8-4646-9c30-b9736dfce896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8965beb-2dda-4449-98eb-cddf931c723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee1b1fb-d0f5-4161-8515-3263ac60a2a6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daff7b9-ba49-493f-9d30-038849f5d61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ec2340-b19e-4001-a50a-2f499c66bfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f351cbb-f91d-4ae1-ad8d-bd84d927fd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd756f74-4a30-4054-af2d-5e577fb135bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bee49a9-2fe6-4917-a066-2b1d571075fd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c2eb52-dc29-4346-9a8e-84ae84e41099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b00b18e-baf6-4674-be97-cd174784bdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fea54e1-e0a4-4022-b1a4-1223e6786bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa22d0d-cbaf-478b-89cb-bb2bfd379a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99044dc1-d0ec-4956-a498-3c52ce56ec3c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ccffd8-2fcb-4d72-8918-06c62f66f5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbd3930-6d3a-44e5-b15b-18fd64799799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f4b53-eb78-48f0-8551-532e5e4a3904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "633ac9d5-51f7-462e-a8b0-afaf8aa0ad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75148ed4-06c5-44b1-b824-dad2b82f2592",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26984ba-0ff1-466d-af16-045473d3d241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510cf1ae-b714-4fa2-baf8-7b1d58e65d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b219808-6b1b-40d5-a7db-af6333044e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "963f36ce-a25e-404f-887a-8479fae95acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7b0f42-080b-4b53-9742-23275400fd8e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673364d2-bf39-43bb-b520-32b0c59f31d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6926bc3c-71ac-4c6a-9ed4-3ff071487b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec9dd10-bf85-404f-a2fa-4e132ad83789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a70115-2956-4a6e-8aed-6f58aad4c183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077869d3-b09f-4270-b4aa-a0d17047f477",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d8533-2435-4c38-a438-6931f45a3cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3497415-3c3a-4ff0-83b6-166c6f6717c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ee1dca-1d84-4f68-b551-f6f515cc982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bce25416-a39c-40aa-a900-ce466bb45f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36de8d3-c414-4439-a525-6436f77eeae4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289f3786-b62f-4698-b041-80c06532642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dce597-93cc-4aa6-9597-23fc2b0dc7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d6849e-9303-4c15-a052-fd43c26fe105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "059ca208-1cda-458a-8174-615e964b3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ef2d1-630e-4db7-a100-3f9506d5f673",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060e523a-03d7-4433-a2f4-01e86b248f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0c18d4-7e48-4dfd-b57d-afd5ac41a4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425f02ee-0775-4756-8bb7-3df2e167c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab3486b-a3da-4c04-bc97-ca21bb3ffaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada1112-b81b-49c0-aa49-b33afd0b350c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3037290-7b47-407d-8ed4-8933f1888e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aded671-b444-4315-9f02-dbbe58e53032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0a044e-f04c-49a8-846a-caa82af8f465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf3eac-e8b5-4cd3-b9df-6582fda74e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9d2a61-33b2-4d55-a789-93f4d8483018",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cede69-0d9c-491d-b82d-a2b82d9976b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92d23eb-a631-40f8-8aa8-6fe80ff1a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aa86c5-910f-4d55-813c-9e1f991f910f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01deb89c-6240-4034-9230-2dc256d5ea0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b07a19-5548-4bce-be31-07217624e13e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e273d-0232-41f5-a5c9-23a24552162a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce01fef-af9e-4cc9-ba49-2dd90ad9f5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34243dfa-fa3e-46d8-a331-2e5b05f68249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ff5080-fb86-474b-9594-3c17e73bf300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6adc985-6577-4c74-b957-a5efdf2bb973",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873f7a54-1dcc-49ab-b763-3d82d63bc433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ed3c6f-1a1f-49fe-8a96-1fbf343649e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad72e94d-6f97-4721-9558-d972545ea325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2150b8-ac7e-4b78-97db-f27349934bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f688be25-3411-4fa9-a799-7f19648d937d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f4760-f1c0-44b8-8767-02336d2e072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508b3fe2-11c6-4009-aa79-1f0275f95e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d093d75-3f9f-4604-839e-6a98e8c7b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403bdde6-e465-49a7-b787-8be8771a229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e73e784-c3c1-401e-bef3-2015057c26eb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da9b38b-22aa-4590-83a3-cdd321c2e26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6917aca-b837-40df-a7b9-d3522a4e7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64143a3-40b0-408d-ab72-b5a84f2535d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb5c5f2-a149-4807-82ec-23984b46f0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59e4bc7-f152-4c7c-bdd4-7653b0e39fa2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6263b65c-3780-46a6-8433-907519c946e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1b0e13-0aae-4c2e-857b-8df1b9ed7c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14abb83c-09d0-4b83-885c-7efc59b3abe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f055c026-14be-469d-9fca-1058761a78c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8dcdfe-c343-43be-b538-a6d299a37106",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3225673c-044d-4a9c-aeb9-fcbfc3cdc701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062a28e6-bd63-4aa4-b98f-2e72a3249fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb59cf1-2e20-4470-8343-89f73822ef07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17469bb6-f0a2-43fe-83a2-6efa8101df6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be270e2-2670-452b-bcec-ec6b9149f940",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113920ca-e8c4-4601-b9f7-08814a289ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38eaaf81-dc29-479c-8d58-0db47a983e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c9a55c-910c-4cc2-b742-d8ef566431ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44bac1bb-2890-43fa-82c4-68de2aaa467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9981bece-e548-470e-a7b7-d5693bd23184",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7229906-bb0d-4552-a950-c75f6df5a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d86c93-eeb3-4b0c-94c1-81bb595bef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763aa774-10e7-4bef-a186-61de29943d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aba14e9-6c15-4f8d-87a8-75294e870b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc92c5be-fa3f-49d1-8899-c32d5c55068d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa63e60-e470-4981-b81a-7e250683fff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834fd2e2-bbe7-439e-8511-3d25e7d78231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94df460c-1ee8-4ae1-a23c-3f86b6f222bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f24b6442-0cf6-49de-8fe7-070f208fadb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a86d298-8db5-4957-a988-1f4f2e60f967",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54ef541-6f64-402d-89bd-6b702d1aee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7752a1-c49d-4f96-9035-0d3501013a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64dd39f-695e-4b4c-863c-93778df8cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db345c4c-b971-4448-9377-c8755286f6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a9a96b-4927-4f13-a542-6dda42a8fa2f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3b9bf4-8e4e-4244-be83-3d87c8e401bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f1a008-2089-4489-afb7-8fa1807be328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1caa3b4-420a-4abc-b6fe-fa265957b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f37103-b61c-45ac-8b1e-c927276cb4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a208a1ae-c810-4bfd-8a0c-112a3f07f010",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6769874f-5e0d-44cd-8b87-33b4e06e1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da20dca5-b4b6-4198-8162-2b8fb7469969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e7a81-85b4-4039-b166-9f78e7dc2905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "866a5a45-aa08-4011-9e9f-4e26aeaa8d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f745a01-8ca5-41ed-88a9-68b0fe17d4bf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93b3c37-ec12-4d18-9b48-eed0b04f6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683de944-09b6-4d35-83ed-f800eef9e74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d6c32-facb-4731-96dd-15b892504542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "184eb01e-c21b-4f68-b782-5691f30f04aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a7406f-dc5d-4647-8c7c-2916a5d1f3aa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2346416-15d4-4414-900a-7e314172e2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3bf80c-127c-46c8-be46-3e90dbbf152c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0508e819-3710-4772-9310-230ae68fc3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6bd3aa-1233-4053-bd39-c6623001ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b21a662-3932-4d73-9e67-45175e70fde6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfd4a65-d161-412b-9e84-86ef9d79f6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7794df-805e-4fe1-8738-9488cc9a6710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069bf100-b7b8-431e-b8e6-7002f03c4256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acfb0a8c-1de3-4efb-b908-dfbd606635a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91625cc7-c21f-4101-8886-bc8057497185",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7cc39a-644c-47ec-a257-2e55dd19bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0fdfb8-679f-429b-98d4-93842bd57176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00106f6c-94dd-4dba-b273-024a7b939a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c55cfa2-0d73-4657-bbb5-2d3f356fd047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50310e1-7f68-4f38-b696-12addc9beb94",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45143e0-d3ea-42c8-b99b-a305febe2a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6032f349-3a3b-4bed-bde3-8a53da04ef08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a73377-95dc-4886-a352-870d9f6b72c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41a15b0-1860-4cb7-90e8-055ff6381444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822dbf6c-29e6-402c-a1ed-64713a4df2cf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d9a51c-5889-48bf-8ace-cb05e47e27fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9adabb-b65a-4701-bd03-fda6f261dc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7f31d1-798c-4c9f-b2a9-3a07d9f0d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3970da46-2244-498b-a66e-0731d75926ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ec065-f4e1-45fe-bba2-b68702092905",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b80b15-6fce-4cdb-b702-111d5d8d3f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e12fd2e-543f-46fa-8a37-e9ebf15d879e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e31eb8-e932-403f-bd59-fb0892bae4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88df7345-4bb1-4d55-82ed-b32209223ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c7066-c9e7-4a65-99f7-602efd36eb08",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142588e4-a6eb-431c-8c8b-32e4311ec15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c805e49b-886b-44a1-aeb8-2ae97631ebb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f920d09-6141-48bb-aa84-c9a5f21a6f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c79361d-1c75-4c04-ab58-73b358539de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864eaa03-5692-418a-aa81-8ea11dd16056",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557d4108-3197-48ff-b857-8f0118fbb08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3be6ad58-d138-4a82-82cd-18a4dcc4ead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c6767d-fca8-4e6a-b74a-bfcf359dfb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a85658-9f2e-4a39-b2df-c69c8cbb6b47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "795e7bfa-c30b-49ad-a925-842da6cc04e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "530c1ecc-f985-48b0-bcce-81b347113548",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960da8cb-fb55-4450-895b-ac1fde0916cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0519f6ed-0fd8-4dad-9924-fbb14d21135b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08531005-8063-4fb1-a7c9-9cf63e1a233c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99246a48-73c6-49c8-9468-304a897f985e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81bed151-52b9-4442-b97e-b1961b24be87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc6b32d3-59e7-468b-a86f-c57a5ed0796a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aee2f61-0314-4ca7-a27b-1550678d5c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a71a52-1851-4e04-b4ff-f0bdae62a403"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3583a69-2253-4b55-8653-f299b8d09e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70369289-121c-4ffb-b324-dff695514813"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2772637-79ed-42bc-93a3-9eadbe7d13ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2642fd6c-7088-435b-b831-6bd04c612389"
                }
              }
            ]
          },
          {
            "id": "7a76da32-2ca7-471e-a439-3c726f79e065",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91cb41ce-66f2-4ed8-85f7-6cff9f67928d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "967a7610-faf8-4b8d-9ac3-300641c6f332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a3a87e-d4dd-43cb-adb1-c4153498b352"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36f7dcfb-a355-46e9-8f57-4787c3a8a8f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73b30053-b29e-4ddf-ab4d-3b5fabda7739"
                    }
                  }
                ]
              },
              {
                "id": "13eac2bc-b013-4d9d-b1cd-e577ce76911c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef941d2-81c6-4c48-b925-37a3c8b3683e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1596d2ae-10a7-4505-a8f6-75be1f4d691d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05e8e7c5-35be-4df1-a5b8-6fd5cd3acb10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e064c654-b644-47f2-8900-f26dfddb5177"
                    }
                  }
                ]
              },
              {
                "id": "4e57d4ec-13e6-4082-81bc-c0b800bc0c8c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2e9ff45-73e5-432b-98b5-aeb1f4c4ef95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4552956-a650-4857-b88c-a84e2c6ee9d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e40138a0-92f6-43cd-824b-00e96e4edcee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f6b028d-3eb9-4d4d-bfef-cf3ae484e218"
                    }
                  }
                ]
              },
              {
                "id": "918c47f2-7113-4b72-947d-dbe9b621cc62",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c81bfc-798c-4d1c-941e-d07ca76b0111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05feab28-6a06-4179-8fe6-288a88c39460"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c57c0ac-2472-4944-9043-be8f8ef4ad4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bb2a5566-2a88-402f-b31c-ed9ddac75291"
                    }
                  }
                ]
              },
              {
                "id": "b285049a-ad65-434c-97d8-bee96377adcb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3543305c-134e-452c-90e1-514f8e672497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "196ced5c-07f3-44c1-ad20-1de60d13e741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3af330b3-0b5f-4b87-9602-d87cb29700a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f12933a0-00be-4762-ae01-662a0512f822"
                    }
                  }
                ]
              },
              {
                "id": "9ba700a0-3d2c-46f4-8fa5-ee0a2ebdbdaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c03ca980-02ab-434a-a153-362237b45abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e7ecc44-45fd-45bd-9664-412db905ef5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "866eec94-4a63-4113-b862-f09cb34b04a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34ba2590-324a-4e2a-8947-e0883426f5ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd16334f-600e-44a8-a24c-f60879fa6864",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7e7cd9a-e9b7-454b-8243-8835b620b0bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c5b712a-9353-42cb-bbbb-c63d55b0697c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b151a3a-01b4-4b72-8527-d96627b48cf4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99272464-7d0e-4574-a198-87e659f02daa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2598b114-9bcf-43ab-81e2-c0a792c71a36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a143ea17-e6dc-4bf9-885f-5cf18e719a75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03647652-ba9f-4717-92df-5c9c693f27e3"
            }
          }
        ]
      },
      {
        "id": "2ce411c9-8d17-43eb-8db2-d592fbc49e23",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7024ab5d-e432-470f-9b22-7c887af75dfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "578b7e60-5c69-44fb-87dd-13c1717afec6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e91e7af6-2ae0-4a54-8475-aae8ec57e6bd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d77826-5aad-4fdb-9fa0-cfd9ef1975be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0495d9aa-4ece-4441-8850-868b61f6e4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaf2125-9417-4cf5-a32c-32b1dd7354fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef71f7af-a654-4c63-8715-43147e3713d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8f730a-5a78-4ea5-b742-394f00dfab01",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a137461-2e6b-4cac-acd2-51e0461bba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd9b955-3b31-492e-bba8-ca2bb63e618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e88538-f3a1-4dd5-90aa-bc7702ebd953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded67abd-f9e7-4dfb-8bb4-cd0339e3def3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d25bdd-afea-4a8e-8646-de14e0f9256e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8147c-da0d-4bb0-bf38-f70b5fd4d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dd208b-f247-4af9-987b-c1ec7711b9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaafd78-be30-42be-90a6-93354343ada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad36f6e-051e-4e16-b66d-9f35562e1e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c5c3b-42ab-48f1-9188-d47c16c5f059",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cd6978-b6b6-4b34-aa2e-dabcc0eec215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4aabad-d14b-4f5f-bd22-937d02b04efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4deb29-ccaa-4a2b-87e7-58bf30d77e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e3ca9-515e-4947-a831-dd23805ba7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28206486-5864-42c5-ba84-d57724af65de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa5797f-5638-42a8-b480-7a8c30a31d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da77ef68-fa8d-4456-989d-0f2da7fca89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18e5cb3-b062-4a91-9915-3988c2365a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b03467d-51db-4fc0-a342-03c17a52fab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c1b34e-566a-4788-b7c2-4a39bae94949",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16130717-8c83-48de-91e5-745638866305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d472d5c-482f-4c3f-b4bd-c362a1cf510b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9104d5-127e-45cc-a209-32be221da920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2002cd84-8588-424d-a413-9c70c4fce7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862b3a1e-1819-44fb-8db8-27ed36f4978b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cb77d1-d18a-4fd3-ad3e-88c533d4697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29bca88-2d8a-434c-94d2-964b6b13deab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c894d762-6dac-4f22-b8ca-346d5c7e5dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ab9422-1433-4d2b-b086-5a5e93ebbc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80708c-0d78-4e99-b844-09e13bd71540",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c438f09-eb41-4c4d-a47c-ac83e485175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bf7c71-37a0-4384-aee0-3245ed4c8525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3945c6f4-bde1-4d84-970b-7b4155be6c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "146d0351-873d-437b-a292-06a56aef68fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16f9357-c902-49af-871c-163257848e3b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb3c0ad-bb91-4464-bd61-94e8bf2a1c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1108b414-e373-4525-8797-164433ec0229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3bed70-6b0d-4d1a-b08c-bc4f0a4589cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5f104c-06e9-4908-85ee-e2bbd18abf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74bf301-c053-4210-a932-a983f5434894",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18f8697-7711-4688-abef-622315330d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebc8156-0559-4ec7-9d6d-25d1f7efb065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5d65d-6968-48f7-bb02-4d0f60636f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "468a0e75-623e-4b25-880a-93f2e82f1204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9366c28-f3d5-4f18-ada7-4d06724be3a2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba097690-0926-4088-ba36-ecb7a6fdb805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bf6c09-f6ba-4c7d-97a6-d25357c6e0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e7dac0-ac6c-45e9-9ef3-32fd2d634a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "417d3fe8-6e4b-4c79-b229-9611b80157a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee9cfa-22a7-42e2-9397-4d3fd4c3756a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5067258d-4329-42e5-b5c4-e1d99db5d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4f5dd1-f4cd-426a-b56a-fd1cee3b6da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43bf11-3f07-4a55-b996-bdb6b0753fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7acba14d-26b8-4523-90ac-82510df437f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dcda7a-2d29-4b33-a2d9-9b4d6bfa499e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb1f1e8-4db8-4a14-b74d-b6199259d8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1541a767-51a3-4e82-aa23-dc18b890e595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420df295-b05a-4dbe-93d1-6b5da0a68862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85fe919-a41d-4cc4-b576-eca0303e872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc5cadf-6668-454b-a3e4-2f5314fcb094",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781dd88e-7a99-4280-a87d-9a2dec44c51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d57532e-094c-45a7-bfdc-d726673b3b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc70c89-68fc-4c87-8430-91928da28345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26999406-92b2-42a4-99f0-11dddebd8d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd56026-6f4e-4b80-afde-f0b9f4ecfb7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb0d792-9829-4494-ac64-b84161f0d932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792db8d8-cfef-43d5-96f8-dcace502c91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba1fe01-1cf0-4133-8442-35851d593161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c73c870-968d-4836-a14d-99ebbe7e31df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5d11c6-081f-469e-830e-46d20e5ab25e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeb91a2-2a81-4838-a8b9-74cf9f63e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06129b4b-a52c-42ab-96d3-10b8ba91920c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4042a6-e832-4c0f-9e84-2cbbc577448d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e22acf-038d-4d31-b9c0-86c2f677c7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d1edbc-3339-42b2-a47e-16890639deae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1bf6a9-5b0f-422d-a2e6-b6e69265b56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71aa1923-e7fd-44bc-84b8-b32f5f8b25ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb38242-3560-4d74-8d65-5c31c5360644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38e39b7-efda-4536-851e-4296fc3d1605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2423b7-94dc-4321-af2d-e57e583b10dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4951ac0-86cb-49d2-85a5-f8c8d8a3955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f08d0-dacb-48bb-9b93-687027496da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e8658-9f60-4e59-93fe-68f4c85295d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7072778b-3497-4821-9325-dd6baaa98ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4290efa-bf3c-4bd3-8c4d-7fdd3de2202d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d292e-788d-45b9-bff2-3041d585e981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a36009-cac3-44f9-a876-c74eadcd41b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475cdd6e-de7c-4438-92db-2f9541ef3b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90bd9fe-ab44-40f3-a595-f2c5a0df3be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8d030c-2ee1-4512-98ee-89db0d786374",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06f1aa3-57c0-48cf-8633-a0bb020ff296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcecd2c9-ffe8-49b1-8d3f-dd3bba000b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d38dcd0-414c-43a7-bdec-519eb1d96982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06849f09-2131-4b67-b749-25847edc639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f975a5a7-3fb5-489f-b468-9d476bd2e76d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ed09b-e18a-445c-9239-86332cd7ca9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6242cab-c385-4711-ac3b-344ec412e867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5986ab-cd6b-4b3d-9e05-fd2d9d86e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f554e14-703e-4289-9563-3ab3f78fc43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdf5f1-947e-4ab9-9892-beab7756109a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c8881e-f654-4dc2-b23d-439fe5cdbd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d46b3c-8061-4cea-b793-a6b44a463b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5cebd6-5a62-45b0-996c-f01e3df21fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c581df3-bd48-4791-882d-056594233b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac9a799-913a-420f-aa10-b3f4b8c18930",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac78b9a-4cb6-4cc4-88b1-6902e40aabeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b4dfc5-dff0-4804-8f55-01df94347800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6026f600-b4c6-4548-904d-df0de200614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ee33b0-6ed0-49ea-a239-973fef58c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92681f3b-4fb2-4caf-a671-fd2e2eb4fb95",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb82e4a9-437a-4e34-978e-83c21a728ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7724daf3-4103-4429-8663-c82c277b5b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9ca8ce-7dc6-465a-bada-6db306491ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37de5dfc-8ec6-41fb-8b1d-2d4ef98a5646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd045b3-b080-4741-a12b-68e0718d64c8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8800c5e6-6784-479a-8c6c-772918bd178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df437d77-9773-4701-83c1-9c8bf71ae350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e784fb-d701-445d-ac95-513f6a9350ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23705ec0-6b8e-488f-81a6-a68d6aed07a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d3ef8-cd84-47f7-851f-5fc24b5142b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fdb5c8-863c-4e0e-9594-c8700183bdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6325b9-9b55-46a4-8ddf-f3f7ccd4b02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca8c92b-5ac8-433c-bf7a-72ed484bdd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f41c2f-0566-40bd-b09b-3a243e88835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e021dd-dc18-4139-8665-2c47dfa0e1fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c52a53-1022-494f-a068-9db5a161981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d802ab-2674-40ab-a443-92368da7ea28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac1e1fd-3e7e-41c3-a2fc-c2ab0d00b531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1fcf95-caf2-462a-bdd6-680ca6ad20af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d993cc-b9cc-48fb-ae3c-b048dee15892",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9553dfed-f337-4242-9c34-315e7f8a624d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97895f2-10ac-4bde-aad1-cc4c3827368e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9818230-a570-49de-a21a-30017c742ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc16682-36ea-4156-853d-1f213b4f01d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d418865-d437-40d7-9e7c-158e7f686c49",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7f4dd6-6cfb-4189-b5f7-39fd05bd2d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2e3d00-328d-4cae-b99c-6be721d4647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb486a-c070-464c-a7d1-55d395941136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a7216a-fed4-4f2b-a587-3e32449012d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941b5902-bcd4-446f-b615-d8d0aa569291",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ae504-2ab8-4881-bc47-318303e177ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10636a7d-201a-4720-801a-cf9bba22790e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f9513b-72d9-4bb4-9d94-e0ef37971e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "171c3613-ba57-4682-ae7c-986a36ea5100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a2afd6-559c-462e-9fa8-8f9faae3eeda",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d194ed-d2c8-4b00-a08f-f7fac123c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83463a7f-070d-4586-a4b0-df7398a3fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7c9f0d-9c64-41c4-8285-1922888b3f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3259ce1a-a8ba-4d68-b0c0-8cd3fcac5e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2897d6fb-7105-4929-9eaf-9e80dfc81e01",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8dc8fb-2e2e-4f65-97d1-df181bc3f373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f23e07f-7148-4a11-b472-8dab6b583f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c3fc74-c84c-48cb-8ecb-74ce270c3142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203c01f1-f06a-43e3-8564-e9b18f06b5c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3eefdb9a-719e-42d1-8c2e-a0920de396bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08c59897-0021-45d1-b238-1c28b3a3dd79",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b063662-256c-4a54-a430-a8ec075bf999",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc13d24-4109-4d42-8e19-f11b1b7d1b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bdf6b0-b7eb-4e50-99f8-db0d25502987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18ec0311-4872-4fa5-af57-d291f74cb321"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f7b9531-1bab-4702-8274-34b35da36c12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc3952bc-bab4-4514-883f-798c1cb09288"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84653fe4-2ef2-42fd-82b5-3eecdb847ff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4d4817e-fba6-4a6d-a5ed-089c36efebf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e462855b-7cf4-4aa8-b3f9-d05be08934de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1817c7b6-aec4-46b4-b5dc-37287864158a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d466bea4-ad03-4d73-903e-ce41a3d26b40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5a10024-78bd-40c0-a503-fe978ed7d6fb"
            }
          }
        ]
      },
      {
        "id": "44ac1428-817f-40ef-8fab-69e909d89395",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "48eb5485-b5de-424e-a8ee-23adef358f95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b048dec-8393-487b-ae4c-6b0199ea9ce8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5854f3f3-d432-426b-a521-081ed85719ba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47c100-6642-43a0-801d-95459fa7a04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607db053-a6f6-42c7-a20b-9d1cbd6aab15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b0df9-f04e-4dc6-95f4-9c3e5dc19415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e924032-2cab-441b-b0c7-5e40a4d0ccfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e3b6de-90a4-47f5-ba3a-391d4fe722a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8d88c3-7685-43c1-8811-a711656dca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d35a783-b967-432f-a62a-8aa4a2b00dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b3546b-e675-4cd8-9fb4-0267c9f1f50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a5cf04-f01c-4f76-9ff4-e11866662d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ac946f-89bc-4a21-b273-4f042b084564",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f1fe39-27aa-4295-be11-e26c32633c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3994b7-f235-4f3e-928b-d0715aa76e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1577ae3-24c4-4dd4-9a32-aabb3f284fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e8baf7-4467-4474-a960-837e5e15bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b0d617-db0b-40e0-b672-86e07e5f7cab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd2c284-bf10-4394-8914-aed61bfe0142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285ec942-87f4-4e4f-9abf-c5dea9bfa9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d633b818-9ec5-4433-a358-4b5fddebc448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd02f8fa-db4b-4b0a-a4fd-9251e1ef3b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185eefee-08c9-4919-9a4e-3658076434cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3790559-6eb9-43cd-98a9-182a5c8b8d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29e3c5-5bf4-4d42-8f9b-8a8d995ee270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16035492-9f40-4d22-b13c-cf2685e9c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f67a7a-ef24-4acc-82d6-4a53f8c77ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962f3ddf-62e7-4ffe-940e-be4375dbf7a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c8c253-d4e8-4062-a2b5-fa0f5ed18dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d705862-6dd0-4831-a2a9-7fadd1fda752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424557f8-8f6b-4ceb-a6d3-1fb2ffee95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4972a4ec-761b-46c8-a2d1-3d3a5c8a894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214bfe2a-e5e8-4bd8-ae3f-31d8bb0adfb4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a15210-0e95-4873-b5a8-83820f0ca722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39990a87-57ae-46f1-8bfd-7b26dc47811c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b765053-45ea-49f7-a416-1fac78dfa850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6c227e-641a-4d6d-bdd9-d053f8af11ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c4d19c-7f6a-40b8-a4bb-86293325d60f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fac375-4edb-4382-a644-511b0c0c62ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829e7dfd-d86c-420e-89ae-42b105d3dbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee64f4-d045-4497-8884-06198e4fc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36776bf0-2da9-4553-9a8d-e10fcf43876e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b4ce5-a2e2-414a-aa34-a279603ba28f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaaefd5-c97d-4a34-b8be-6c907addf1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93302f6a-4a1e-46df-8e47-610a45677fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80aacf7-c701-4b85-9d9c-35a4c246f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c13fb0-cfc5-4a92-8e1c-3462f8e2d166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c63da2-a9a4-45a5-8c9a-b2fe61965599",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7927a1-9c33-42ae-9cb8-56e37dbccc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af7e7c1-6e55-48d2-9445-f1c988a095a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc86236-0dd3-49aa-9b10-324fd07863ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea3e105-cc95-48ad-9dcd-fcbdb25cae31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a267dc0d-4509-4cea-9c73-6432b2dd2671",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bddc54-87ec-416e-b24b-e3320d074ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e0c2fa-7a5a-4b73-abc2-2dfae20150aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f00bb-2686-4a72-8563-91ce6b45440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9e4898-f5a9-4636-bbf4-4cf6f8fcbb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b914a1-0e02-47c9-9f6e-c7b537ec844d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b70a407-6de0-4527-b015-3c3072c65407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d4e0b8-da31-4ebb-a5c2-5d0d184aaf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd51eca-e139-4d47-aedb-fcd4b30206c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dde94ef-aa95-4ce7-956e-d57e7e5d9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bf4a78-309f-4b9a-b396-0509d65d28f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66c41a8-a31e-4e9c-bfe8-9bd6637bbd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66739e9d-b5b4-40b9-aede-abfbe020df04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5c38d9-c90f-47df-8d0b-da76102bd604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b694e6ca-452a-4b7e-91a2-c03fa126de45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b9f4b-8c14-47f6-8821-fab3c8d47f15",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaa984e-1ea6-42d7-ae06-7cc5a63ded16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b867d9-bfce-4828-bd80-6748607cdf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb9face-e7b1-4ffa-9fd6-645a10b12e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dad0370-a4f5-45ed-bfcf-d239461b96ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f1c254-a4b2-4a60-b373-98603c80b669",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd79e5fe-dd0d-4f0a-b089-11ea6ec406b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a6310b-6d2d-476f-b022-45b4d9b9a045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db54238-a9b8-45e2-a585-53b77f2a652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1645cf63-36b6-428c-94d6-843b4af2c4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72b8b93-325d-4a0f-9e3c-86d5a0896bd5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdd7987-b417-49f1-a6f4-c22de0e1b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e652bc21-b9d8-4006-b86c-289e2422a49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f5e2f-5e1f-43ba-8d50-6e0afdd9c278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "752973ec-a8ac-4bdc-8ffd-aa6c91a4975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18af52e-e23b-4151-ac9e-6a8b789576b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbbd8f1-ec75-4767-b9ad-d8cb71606049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e2bb68-2f08-4892-997f-872d4009f113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed077975-cf98-4fda-95aa-a673c1919be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56df514b-2ef9-4b1a-a404-fae57140028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613b16e7-a535-4695-a906-b1faaaf66c1b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5c723d-6916-4fc6-9bf0-236634f5504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aecaa9-8c09-4d06-9474-729169156724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e3dbc-9e47-4572-bdcd-30635088df8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cec675-d972-4dca-8c2e-8ae582f0abf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8924eb1-a81b-4728-ab8c-369c2c1ccc40",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ac3cda-49cd-441a-a7b2-0623e4b4c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0e1d15-5121-4fde-b7f2-797e55e403b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c399a83f-97e3-4e38-8430-055fca746a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0597b082-0634-403f-b1e3-19796d552564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c91baa-a04d-4365-92e1-6fa0d053acec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9898a-8e3b-4dfe-a666-a1674ca18775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aa91d4-04f4-4398-ad32-4e3902970026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539aee48-90a9-466a-b31a-6bd51e302447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c95006e-50e9-477b-ac99-90f099225241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9376dd8a-47de-4622-acb9-6443be02ce92",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a76c9ce-e40e-4062-a034-c3f63a196c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d717d3-72c8-4f19-ac6d-ac71c58b3351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3012de1-58e5-4347-89bc-842043859b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80178048-bc7d-4939-805b-ac6bcb37ce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d21d6f9-ac4a-4f09-9bd5-7508aeda0540",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592f637c-a802-462e-b286-078b034f35ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7756632-08d6-4ff4-9b83-d360912dd1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1091e7d-b7c5-44c1-b16e-5c1999d3667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b1d64f-7623-4159-85a0-acd879044afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591eb83e-2d69-4118-b1b8-ecf81671a8ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827ee9f7-e8e4-4547-874f-afd688354087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3744a2ca-f1d9-445a-a2bd-6baa42a5a510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2f3d84-b3b8-4b81-b079-7db5d40dbcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2296e21-307c-4863-995b-148eecddd602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01886ab5-2ad7-457d-bf26-ef45ddcf6ee3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd21b61-12d3-4dcb-b524-94e9e603755d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b091aea-8b0f-46b6-8dd4-faee5b917432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd39e3e4-3b17-4896-a23b-10c306c93010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71230cfc-16a7-474c-a939-c1d82c329689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bed677c-abf6-4294-b5d2-4f5996cec522",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c75587-33e4-4d33-888b-80c2026ee97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916ccb22-9e5a-4220-9b0d-d108f75faa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27754ec-630d-42de-b889-4d911218dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdb60dc-839d-4bcf-a6dd-5fbb5fc77624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf3d4b8-db03-4fd3-82b1-7c3370156ac1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554795f7-609f-4887-a68e-93d8a77ecf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6c300d-deb2-46d7-807f-4878863486e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027c3c44-0ace-4c98-a6ee-0993e05261c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e54102-99f4-42c3-b9f4-c80f12bf300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309cd841-0419-441d-b23e-eb65c4709183",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c24d117-2338-4ae2-9863-8fa977cf848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5e99c5-856b-4670-9bc6-bc260d671ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed532ba7-bc20-4213-bfee-540471585448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "888cbbb3-19b1-48db-beef-c905aaac6bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adb7d24-e06a-42cc-b587-db78de4168a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76537811-fc97-44f7-a76f-aad0ad07a49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0324ff57-c6e4-415c-b419-805ee42127f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e9514c-f086-4ce1-898f-61adb939c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85e7aff-a20e-4cdf-b9fe-ca6452312521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2ec86c-e2df-4f6b-897c-6059fbc65ec8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf37817-c2b4-4b11-8e1f-c4873dc6326f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfb71d0-d656-4bfb-9d4e-569b8505ed33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db857ea8-cc3d-4b90-9985-77d9f4e8566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53dc079e-e77e-48e6-b1e3-966f54570d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9013d33-e366-4cd5-b063-87238256e554",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74b987-5563-47e9-965c-2632f629b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f974a469-9f50-4802-a233-6d90534b8970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f1d6ec-7004-4649-b40a-d3ac9a2eb121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "921a3c13-88b3-4d0b-857c-15b76d9572fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c82cb12-990d-43a0-bdf5-184510e3d6ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e45bbeb-7d5d-4d2b-9a95-41840e18cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c83e18c-71ca-4d7f-b8d3-66044e1a3ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c091046-c66c-4f00-a462-49c4c8b0bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a2efc0-5842-4e9c-8472-4f34c820e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e661d4a7-d252-4f9b-8c29-abf46a29bc96",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61d660-8515-4f0f-a1f0-4ee89b8ece0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699db9ca-5970-41b4-9570-ee7df0047a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af2d3f1-7b81-4a79-af20-cfb4999dd3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c746236-8f0d-488d-84ba-14883e1d1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45924aeb-1159-40ee-8f5e-50dd2d42e6c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ebe958-0f16-4de7-9677-3b53fa0ea6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40ffb39-4d23-4a95-b83a-48c8d8a0444e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b706a07a-21e7-4c39-a53f-f9dd3a3777c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ac0ed2-e80b-4189-a02b-d04c1e7f0927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a952bb13-1504-481e-a1a6-fa2421cf127e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3acc1f-bede-42d1-8ee8-025f27c75a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a8ccd6-136c-478c-8152-5fb68fdaa0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d3e21-8487-4f7d-b968-d44f9060a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "448814af-86a5-4228-8b37-63b3c45c666b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97aae6-bbf8-41ed-8855-f9bf00f23d01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1974bc18-4f15-4eeb-af60-cc4ace44a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfc4a3e-a2f7-4406-b3a4-4d8743a98bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d087dd3-1aee-4c00-baa5-7cb110b8cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e057bb03-1d1f-45ad-b861-abac06cc3a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b10ba2-dd2f-49f9-ae2a-0f0d1a406aac",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2461d034-b58a-4886-a3a9-41ab570ebd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1515997b-a9ce-40ca-9ab0-a8a310a88c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946bc0d8-57f7-4384-b3ff-2193b8e87314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05337c51-e3eb-4471-ae8f-9223f9f77010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154959aa-ba86-448e-9c97-1074bd1f73b8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858e7d6-6023-4d5e-9de3-923a0f73aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e99ab74-38d5-4185-90f5-97a606c33cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3c5f5-363c-49fb-9b57-313cacb0d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "265d585b-32c4-4bc1-bde8-3cca8e4d1e9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea4b56d5-46e0-48c6-a210-7c59e7d5fa5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f22a39eb-94fa-4170-85b4-5411186b0ce2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ac56e1-f326-4065-9f97-44a509d03b14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a037e082-a97f-481e-8ddb-35ab1b35f7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268993aa-bf39-4531-b0c9-9d4bbb382193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85ba671b-cdc0-448c-8b76-5971604b9f00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e9949e0-4f08-42aa-abde-23d407eca74a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4172953-7653-42a2-9066-d6c2a874c0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c627b5cc-b6d2-41b8-acff-9c55ec01ef10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6651fb-4b84-41ae-b9e0-2b13b4c7f218"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8968ad4-d2cc-470a-b7af-14a2483b6216",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1868533a-853f-44b9-bae0-031239b1102a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bee66280-335e-424e-980f-758a8b64b06d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94de36bd-24ee-4ac5-87e2-ec2d00b71807"
            }
          }
        ]
      },
      {
        "id": "56f6f45e-d5dd-48ee-b188-0b885d03cedc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e52067f-66ec-4d12-948e-1902b4559898",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c832e07c-b2dc-43d2-ac94-521696deb64e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1efb668e-fcc3-4e7c-9483-eab392d6dead",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc756976-02b8-430c-ab06-c7bda4c5d1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1529bfa4-cc8e-4d64-9b94-159d7cc874f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea204e8-08b4-4503-970b-8aca6aea8601",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4641c5cb-ec03-4870-bd24-91de1aecab11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e1cf53-fe1b-45c4-bdce-3028bc036b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e59049-dc99-4ffe-8430-d973ab25d9a0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d1abb-ba69-47ed-816f-e296e4f771e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbbbcbb-b589-4b6f-b4db-4786e3f5671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c624942b-6ec3-4577-87ab-1d431bd8393c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22829399-cd11-4c05-b21b-fa063984ee95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3c316c-2577-48c4-85de-ba5a8be708d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d0e6e5-3368-4e93-aba1-7234fe4f11fe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df992c26-3935-45af-b214-709231b0c30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3fe8b0-00b2-491d-82ef-6805c95dd528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40864eb7-8ee6-436d-babf-a0fb697d0216",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15993aa0-b453-42bc-94c6-400d2d04354c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0b9505-58fc-4473-a362-f3b0e338b53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825ee62b-78b2-4947-a72f-f373dd3aa812",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def66f92-3cf9-4898-9a46-14946590c7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66166bde-656a-430d-be20-e7372bcb160a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df728794-01f8-4b77-8f28-3c3f5e91db4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32474acb-cbf8-4faf-a3d3-f6961d9d7fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645e6b43-0f08-4960-af53-ea3408d5f784",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea152d-79bb-4280-b476-bb000e747ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889146c1-4fa2-4b75-8a6a-59b2e4da7796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec9b5e6-9883-495e-8812-554cbd4fdaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96729b3b-a297-4d38-b2fe-f10b16a4812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45ce64e-2489-44c9-8595-1bea10489cd3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5568f6-713c-4897-ad5b-41bcdd2af005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4da500b-6d04-44ea-82ff-5f0581442532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04ac9c2-d810-4b7c-b090-f9e3030fe557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e8e794-6c0c-4ac8-8deb-be95d027da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03423ce2-edc1-4454-ba2f-a422acadf641",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f8b580-f5d2-4edd-a751-c15026716e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61eb431d-4e20-42c8-b28b-20431989f095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecf23e3-8e8d-4738-aba7-0cbdae6d4ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526efa8d-fdd3-4391-8050-c57ee3d00dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1fcd28-a252-4a21-9334-cb80720fe0b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f9998a-aec1-4ebb-8835-9c2b9a766a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677cdb0d-c4e3-48fb-b70c-265ca59d27da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee7e35-b769-495c-868f-c264eb63be6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f8cc00-be74-4303-ad71-60016e1972ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b5526d-b39a-474c-a517-e4d8eb501f9d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2c61be-1000-4974-bfa6-235ad9903c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd52323-3a86-450d-aefa-00a9efcc0888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13502db-8d9e-43de-82af-327ed5e71b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5732e50b-86aa-45be-a41d-40f8be4c6556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11924927-7714-412d-9b4a-00cbdaa57ae6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ccf12c-8732-40ae-9dc5-e66182a2c7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b823eb2-9574-4376-bc62-70111a2d9042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a1b05-9491-4db3-a0d3-8e77882f90aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36d6ae9-ba0f-482f-b8c1-cfc81548b5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5079408b-89ef-4056-9da9-3116af27305e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099ab2a7-e8d4-4540-8c4b-6ce515dca6a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ddfd82-6f9c-4ba4-807c-06a55da9e60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db14f05-5974-4132-8d6b-38d6789ebc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3fb00c-f877-41a7-91e5-a5e6b6ed339d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae14cd9-239c-41d0-95de-503aa65bfab7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b7d6f-ee0a-483a-a3ba-c57319b5e317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc38777-08fa-4981-8e84-961e0c2a76af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e1c801-7a1c-4222-8e58-f27931260f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7164ef9-3279-40c4-88e4-2e1d73470c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c830f1-fc26-442e-a391-7405ef6fd6eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d45e8-f9d2-4854-9d92-af1826fe2b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30e155f-692a-47d1-abc4-43c26ab9b2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba98c89-a21f-49ec-973b-6b77abeb44a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6141886-5035-4f5c-8a52-fe09d818a8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a65bc-7c68-41e3-b971-57aa31c97b65",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170744c2-130e-4250-be11-5bc57c7dc3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58ebf5b-ac92-47ae-bed3-61c7b1522bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502aeb2b-0a0e-4f42-8ce7-4eef6c55e33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb291b3-ddcb-4ba6-b7d1-c5f989704c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dada0f92-a492-453e-98e2-5e0429e9aa09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a8073a-87d5-4c65-9559-d8beef5fd35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78256194-fa01-4f04-910e-ed43f70aca01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bb9174-4963-4337-b5e8-c68f7fd04b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c4b2bb-7bad-43f7-bb63-048bc00b2506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23924e9d-faae-4dc5-a26f-9ff4cb16706d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135d78b6-d97e-45f4-a492-945f427f6f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdaa74a8-79b8-4949-8526-126d3326a1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9314aec5-d532-4ad8-8ff5-d6e5c3870b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fc2b81-0c86-489b-a08d-f69d56471f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a4ccb-8650-474e-9afd-c4031caf5822",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ef9a1f-319e-4161-9bb7-e49b5f390937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b6a830-aca9-45e0-a871-ad1030d53711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9348b2-d0cd-41a3-beae-93fc08fcc7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dfdd92-3716-40e2-9109-1f041246fc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deda55bf-8d4c-4de1-b23e-510cf9d4eb20",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b1e417-26dc-4bb5-9c25-d5b330640246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3e899f-fbb4-4dc3-a559-5c19a5adf35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a468de-fe93-4ded-b7fc-53131aee4c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4542e07-b495-47fd-8acd-409368459276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bbdcc-3320-4f18-a3c2-fe7111fb0b51",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5692bb70-ded3-4ad1-b26f-fbf09c9ea37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513c3b83-9f99-40ee-8ee5-f1c240067f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfd029e-1283-4327-8b94-db193a9753fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00a58c6-4b0d-4168-bb19-907a4fcb8bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5de648b-1652-43b7-9d95-2a7becf94e6c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea2f79c-6818-4248-ab7d-fa406293cc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de78d66-116c-4a2f-8bce-4ed0252bafe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d29569-3939-4e34-9374-ed4b13e13098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f741766c-03e2-4ee5-a0d9-3aa353fb3936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ec1e8c-9106-4d73-aec4-a6874a50cd4c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a648372d-2ce8-4410-89db-1891a1310542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c0551f-e603-470e-bc20-ac6f2483cfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5374bf05-d583-421a-b69d-b1def72d0197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385af7c1-fd43-47cb-93aa-d97505bb23ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225341ef-2c1d-4986-a56f-88fb4935fd12",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5abe41-4548-4e73-8998-cea195959896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cf3cd1-70ec-42d5-8ad3-4d44d2a8d8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e4cf1-b2fa-453d-a2cf-5725aae10834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67570031-bb11-4d93-b032-300e7f7b9b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c45054b-3210-46c9-966e-0775aa24cf36",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d795373-bb09-4724-8932-4feca1a03d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360acc58-c4ac-4c74-b5ef-b2f4fa8065b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a1d925-2b27-44e3-be0a-b4ba955e697f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d258d4e9-80ad-4ccd-af50-2745417ed5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04df4404-362b-4255-9559-a63477cdd7e1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8336ee-fa28-4195-997d-40768876fcb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0499c4-ae24-415e-a8dd-ad222c659173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba61366c-00e8-4b4f-9e0d-eb4dc24698a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91dd167-394d-4b73-971e-7ea262c225f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7237dc4-b3b8-46c0-936f-c3241c7ddc1c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c62f82-5b9b-49f3-b283-399a688dd865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8aca150-c07b-4028-abd2-bc588e3f66a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ed62f8-5108-4ca7-b6fc-238dbb4569ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19093454-d919-4ca5-890c-92a374f3fc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9658316f-0c6a-4e92-9dab-07560ce4d3b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34048e9-ada4-4e71-a9b9-f045a33ff83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69981f0c-2e66-4355-b5f3-0045f65a89ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e8d1a0-a652-43dd-954f-9bee3d3afc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5230075-4ab2-4643-8d81-dfc95bb497cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc500d-5a99-42b5-aade-fe9cb1fffa45",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777135d5-c5c7-4a87-80e9-0671c38b4d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89338f36-72c9-44df-b418-611aebfe3d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a95856f-3557-46b9-8889-0f173507e05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997fef94-e3e4-47c1-bddf-38f4239b0e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de62f3f-96e0-4fa7-a966-2f0407409702",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680ea4d0-5a38-4d33-8730-bd4c58d2b795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20465c75-d069-4989-989a-ccd4344adaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e37959-b852-49c9-abd5-f03250188d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4940556d-820d-4232-bd74-88082e1d3638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e6349-6367-49bc-a068-7ef9878aa9a4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a4a543-cac7-4964-9c18-e7468acd903a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30a3424-7feb-4604-924c-c19e1fba964d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19c641c-65a4-4672-b334-f5f80d7fa4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d0d85e-70b3-46de-a5db-e903359793e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e16b0-d24f-4fd8-ae51-f5a258890a5e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871e9082-a505-4fc1-9624-4ca1a248bc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b6c850-beba-4a69-bda9-a93646b6202d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ace0d0-bf52-4bc5-9cad-a7d775dd1061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a244ba-ca7a-438c-9d99-0fb648acb0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176cb4d7-a728-4611-8c58-ee247b65e84f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b53b028-55ef-4430-8622-b554f6c6cfe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9abc568-a3e2-4422-b97b-34a2f6ccfbc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c35275-e1fc-47ae-8005-52c4d3f6ad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd8f964-6875-4e32-a708-48efa541b1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166c89d4-0391-4d18-a1e4-492d15787fa2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5651dea1-959f-45cc-a950-11dc3b4c9dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f8e03d-169a-4f69-a5c4-ab95a2fa7e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f843c6a3-5d95-470b-b7bf-2eb689f2381a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5722e25b-6f7d-4a8e-89c9-062649b6058e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e703c7d4-c33e-449f-9c15-32dd6d69611f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca645f3-ca12-4ce1-8127-6cee2fa6766c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b884ea65-2f63-4ecc-8a2f-a0f83c47c56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2a9106-f9f1-4a9e-8578-be0a85b701c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d17d48-4bb5-4987-ba38-89dce71597c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeb5fac-8189-4892-b62e-d968bef1a61d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6c932d-e741-4ab3-b35d-40d3c187cdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dd260f-6873-4c9a-a5aa-bc1ae3b73ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41752a8-58b6-44d9-b24c-7d62a4c75601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da93df4-18d0-46be-9528-a0c886b8b8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b992eb-2394-4d6d-99cf-531917b808db",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf3d5c-3f28-4280-9ea9-a649855be7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158cf458-facd-41f6-bc72-feb0f96c4997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b69e4ad-7a26-4249-ac18-64f8c682952e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fa9e0e-cb12-40ba-919d-ccbf04ba8b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7afcb03-2762-4c5a-9d80-92a35373c028",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d0d121-d971-4702-8ff5-83731478ee9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2607b4-7288-4a5f-b92e-4fd92790d28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee241a55-bf9e-4d66-9773-6a4dfdb524e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82224ab-6c79-4442-b3b1-3b6b08db6683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c130200-fb25-4f21-a21a-26a1a128ee97",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eaee06-3fd5-4ec7-95e4-b931f634b4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fe6338-b112-4e25-9d31-62e691fc92ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782920d5-4977-43f1-98b5-81809bb6e3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f133a1-3ac4-4285-8594-f0d2dca77ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0153774c-ef01-4021-bc7b-a060e4bd783e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cb4f14-6f09-48b4-bf8c-3cb11ccf03cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fee98d3-2790-47b9-a05b-ccefd5811cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de6861e-f0f6-473f-a5c0-f4a43ae0b4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf58741-5585-4d57-a9d6-c3b3a214c0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b9ac0b-b713-4f36-b627-a4aade3a2ceb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77925d5-1a99-4c88-a4a8-c409341f9c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9082171f-585f-44c7-9003-666b2c6e7081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8e7c0c-e2f5-46aa-a816-ca5a38542057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f2feee-e0a0-4ca5-9ed4-345d08e0faff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1954b0-8f05-4b5b-9178-b57092d10dd0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa53036f-fdc5-4e20-9e57-eb7380d83a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc0bfe2-29bd-4356-af95-b9eb4ac06d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b11fb3-90f3-4612-8080-139f994dc5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afefbdbc-a75d-41cf-b883-2bd0428623ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb58bfe-bd5c-4ede-a9be-f344ec913c79",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e998f5-1415-431f-bba2-0481fc7f7d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef6e2e8-fb5e-4011-be8b-969079db5a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26abb102-8702-44d6-a72b-66e60966a096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335c3b6d-9f7b-4cc4-b01e-5f5222d0be46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0752c53b-9dfc-4349-a743-b58b3d55fb8b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1b040-52de-4b93-bbd1-8cfffaf07256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf0c1ef-4ad1-4720-9339-007827d3dc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e75ce2-3b8b-4730-bde9-281e2988e7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9a1a9a-b7b9-4b00-a96d-d2028ab622cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2078e04-7890-43b7-964a-13a6f4ec8778",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cdde4b-e58c-4076-97a8-39b268880899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372edec8-7049-44ff-9661-8b10f781808c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10da4f53-6db6-4f53-a87f-728687e055a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8f272b-609a-48a5-bb73-57af83e40fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a82389-45e8-4141-b4be-9d6a5fe09cf3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc32717f-d02d-4f0d-b8ea-e6b32624dd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4660a7-a602-45ae-b113-18ae54fd4586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bfdba3-a4f8-44f3-9073-b4261f1e3167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d9761f-2496-489f-b68c-3cd95774ff4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5e21c2-7da6-4789-8333-1da123f135ff",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54735e5d-98c0-46af-8a87-24d3142f8176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff85e58-981c-49b5-b9ea-23670aa9e4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5546eea2-ef63-4c3a-9f76-eaf62f32dcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28166027-22e3-4cef-ac94-07b32e669392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51138050-bdcd-4a66-8be7-2e42bb903e4f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd4e3b1-12de-48be-98fe-1b2c9cdb89b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba97b279-e61e-4cd5-baf8-cff1525ae5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a185e-b7f4-4bf3-8682-f914a7f675fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d527b8-e949-417a-9965-eb06557f965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0a021e-e616-407a-8cfd-59d401fd4799",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5178b9-7b83-4dd0-9de5-a985f46f4bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae89e7-9c31-42d8-ab43-5c83046a907d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b38cc2-2177-4d65-82e0-a6343fd098a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e63859a-9cf9-4ee2-a062-f01328b5f5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e295b823-4199-4dc4-9f28-21e99e760c3d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0f70d9-ffdf-454f-96b7-98311d991426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964abfd5-0e41-412c-a65d-a0fedf949108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9336420-3650-4c5e-91ad-d4e342f98155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e7e0b9-e933-4570-961f-d4ac5a497149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac29ebab-45cd-4d8c-b20a-1ebf1d8fe086",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233c6cae-0104-4048-b72a-156f8688e1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c741443-2d20-4406-bacc-dbc87fb3fd22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1065e082-e4b4-43a3-9469-b2e4e4d7ddf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91366334-d847-4bc6-af21-b1004af21514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6770cf-6147-4dd0-966e-8a1e6f9632bf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0803a2-2b77-4584-a609-cce0ba54fd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26546d99-2cb2-43b9-bcdd-5acf9fcfd5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5b81be-79e9-443f-ae12-beaa765ec1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919dde2a-0e96-4ae5-bb21-9c610a761889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c4dc5d-63cc-499c-881e-9c8a74557141",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e07e368-3ab0-4a55-b5ad-588dfe4b5139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af23c008-7e8d-4385-97a8-6083e522f300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f52a2f-4d5e-4989-90bf-0ef47d639c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2700f060-4836-4a3f-b5f7-34a1571d1ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b74bcf-b8d7-4c39-b8cf-0aa667471597",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2eb764-3b32-4919-90d8-4734329edf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55eafafe-74ef-452a-b00d-7341b672dd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972afd79-ce0f-4b7a-b3a3-655207406d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3db6ba6-6302-4c9f-82d8-6cd7a40490a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48fbe7f-7924-42d9-92d4-89c7e1cec2ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd8070-9972-4294-afcd-564119eec584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3718b7-850b-47be-9186-09f4a1c5a47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66d608c-446f-4272-ad5a-80cd513b9fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f6de6a-e65b-40aa-8c49-c261293964df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d969079d-0ef5-431c-8156-e68a7fb05dd8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a85485a-6ba9-46c2-94e0-9c0e1bfdc2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c314c7-d6fb-489b-83da-5cac9e8109ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddf902b-152c-494b-b15a-93ca390ec5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce30d51-4a9d-44c0-a10b-9fd475c800a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb067c6-e1e0-49dd-9ed1-65af9d1d4022",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1aef132-a6d3-48d6-beac-665b7a360a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabdcba7-0ba3-4a19-a1ed-12fb455b2e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fca715-fbeb-499a-a53e-8796de8e91c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494dc0fb-4015-4f08-b406-bd723556a606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e893cb-4fcd-4482-98f2-adeb86e40df5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d53552-ea45-4ded-882b-56efbdc07e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ea6459-a27b-4760-8209-3eab7b8d745a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad110db0-88b2-4914-846f-0692a9e6dfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb5ac23-3ab8-470d-8978-8dc8ae09b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358a16b8-5b48-4c09-b993-9a406c0a0d20",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f228b2-0190-46cc-8c50-eab5ffbb00ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d712265-22e1-4aab-bb2d-f17df72f2c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f4babc-4bca-43b2-9dd1-1ed5d8613435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3b04c9-799b-4404-9377-262d86dda7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca97924-ce76-408e-854c-1dcd4c0bfcdc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77926a-62a5-418d-bf6b-6df304e47223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c481107-3c52-4129-936e-7202a1b627ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0099dfa3-fb1b-4804-97f8-b888fd753771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c6d4a8-6b64-4f8d-9f1e-e697255e6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995fdc5-0274-45a1-a1e3-c9613bec5282",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c715a9a1-c23a-48ba-8530-dacf1eefc9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8362ccbb-4c75-4854-ae27-5b9845c980f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f7319f-a440-4e34-a66c-9dc794ef447b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a65da3d-ddb5-420e-88ca-90de3c01fe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dfcc79-46ff-42c7-8f43-bb4f448e1413",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9733ef-5f7d-4b7d-a3c8-4aaf5ab2547d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef29f71e-ba65-477f-b965-7ff353a8dcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc1702-c8d7-4f88-b238-618710d836c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4cdd18-04eb-4fa7-8b05-621fe6ae878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f4b7c5-66a8-4d8f-922c-1ef561ba06a1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737ec8c0-e5e1-4437-a9c1-fa1bcad96a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1840f7-34c6-44da-b6e4-78e1246bf5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aee544-92f1-46f3-8652-e41548ecd293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad5e124-e43f-469b-bc79-57566461934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14416952-98e6-4472-b9b4-90506c777dfa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a61c572-ec4e-48d0-8508-b39d5e13ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3146051-3b23-47dc-a39d-91f8b9102697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f3f29-3a9f-46a5-a164-2bb13f874d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca6d8e7-db2c-4eb4-b295-6f8d003126c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a2173f-af58-4ed2-afc3-2d946669a2e7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78cf582-2d1e-41b9-9c8b-d265bf50af2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3806789d-95d8-4bf7-84a3-da8ce0d881c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb16062-4ade-4616-8631-310793dbfe0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b635d2cc-1535-4f1a-b8b0-4509503cc463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c53866d-fe6b-4164-a029-0feda08bba17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a06da0-a041-4f94-950c-312e9194f4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52a8af8-c5f5-4843-8619-1833fddd59c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497bcd5d-2913-44cb-b188-b119bd78bb13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e942855-754c-4ebd-ba47-ebf94517f0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7384708-f469-460d-b083-fd7ce1c560b9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0703557-31d0-4070-9b5e-fc42f4506abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d803c5-08a6-420c-a488-3ee12543a84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a443d5-7acb-4f77-a35d-63b2530b85e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a41a2a9-42e3-4d6a-b9f4-4cc17aa84142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520e8bb-8cf6-4ede-bd11-c886cf4e1a32",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c9e226-945f-4645-a961-f58565d76d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52eca451-5bf1-4781-b762-1fdf402d0a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e9ffa5-5747-4e67-abb9-2f8fb11b2486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32dce4a-abe4-43a7-a601-66a4ba02a614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4fe430-61b8-4567-bb6f-c01316777c07",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2c7937-c9c7-4579-b513-d0ad7c6508e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db377167-bd1d-4aa2-a83c-d30f7051996e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc89cb0-83e0-4a9c-a5df-fc3ddcdfabc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef256f-440f-48ba-9536-5708e575a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2306ecef-7708-4fd5-84f4-1e72d7fc4426",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72370657-447d-4bf7-be58-a7c0c317be9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee2c996-a620-43a9-9bbf-0a520f28cc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f895ab2-8b38-4c87-9c48-2a21a6db8dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bd5a6f-ac38-4b8a-ab57-1e64c3dc61b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7773fc27-783c-448c-b2bf-6e4dd0591d53",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f99c29-e462-4156-b785-b57f95227175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a97a44e-ad2c-4729-96e0-7ca3193918df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231b0d6d-642e-42a3-9e6c-b59f0f3ac4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2ae071-ce11-42c0-ab61-0c70bdf6b143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb207c3-a59b-438e-9da3-72e6652803ed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ad287-01f0-49a0-8c69-2c8c7af021e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cecb66d5-1b16-4c38-b57a-27a861ebb263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ded8de-e29e-4eaf-9fbe-2356ddd3c8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254fea5b-0be2-4f1c-b609-2a9d5bddb45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c9f6b6-07dc-433c-bbae-602847347ce5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1631d3ba-2f65-4bf7-aa07-02ad445a0208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88a6eba-d8f3-42cb-8ed6-f004b277c142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1995e7ba-8d41-4f8b-bfbf-4942c9da86ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596de7e4-8756-4396-9e3d-eedc25996c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc78f87-9ab2-4845-87ac-17b72a429329",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f03da6-540e-4309-b9b3-bfaf1595b236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdcf6ab-a8ee-41c3-a3f6-22b14d162a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2825060a-0618-4cfc-ac44-10c209f3ac45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5eb04a7-7c91-4839-95ad-9db75b8d0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b87975-fdcc-40d6-bc47-0063089878d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7cd0a8-f34e-42a7-8e74-a38151548e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e177e52e-ea6f-4a64-802a-122d4cd430fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca450776-c17f-422e-81a7-c5214febf467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe6e745-b34b-4709-964b-437ef16b849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb20f8-292a-48dd-946b-9ff3fb954387",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd075dbb-6404-4f08-bc71-859c11c1f531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf340a2-e398-4cd5-866e-9a3bcca6c8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858db9d-3051-487c-a215-f7490f68ef09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70d4bd5-2044-460c-860e-b4d8e3cd8efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f52999d-dbc6-49d7-9443-965c5512f509",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aa002c-444b-40af-b96f-a0fdce0be2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68142a1-aa2c-466a-ad5e-01e6510021eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35241bc8-0968-486f-922f-95027042a809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae950d2-6fa2-4dc6-a2c7-068838cd8870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a79e4c-808a-4bd1-ac08-5037d29098e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ab537c-678b-4b5f-bb59-d81554e9ef29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb57e556-8d48-40cb-8d83-b14de1de5c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad90e87a-442c-453f-88c1-8ccfc113a8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971a986c-fb6e-455b-b55f-607d9ae11408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c21e89e-055d-4b52-916f-05e83a26c1e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe71756-697d-4858-8bce-c3c22d509d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8609addc-c701-4c98-a395-d84a6cdd482d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b0e3ea-74e5-42c2-992d-0bec5a5069e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a8957e-214f-4317-ad0d-27b677505724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e78929-42fd-46c0-8f9a-84ddd270b0c8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f32ccc4-5531-4fb8-9095-5df235cb1163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872e2dbc-8215-4d3c-9eb0-e27ee410e612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff432f90-bda4-42bd-9c1d-95a66feba5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce63891c-a606-47e4-b739-8962d2c316e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92252a96-45a3-40e3-b18d-39ad4ff7e967",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4cc6d-ea0c-411c-9e6b-8484283fa9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41cd314-dfbb-4ecc-9ab2-667af3543016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773b9177-6056-4fd3-b8b9-70c0f41ddf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5915195-3d8f-438f-a81a-b76a400ac8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05f527-36d3-4147-9ecb-2dfa6d6baa5e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d76261-a22b-4a81-ac80-257bb3c5674d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39eb143f-b189-42cf-90b0-d0074abeb25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d93dcf-ca6b-41f6-bfb8-f4aa6f686870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9eec241-a99d-41f9-aa53-e2d3f649d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753e694-c08f-4cba-be7b-0b41286434b2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4895d3c9-ebbb-4ef7-9015-bd5980201964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b9d9ef-854d-417b-a35f-b1da819bdf99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2680290e-8fcd-4b67-b756-ce67957d79bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de808b7-ade7-4126-8fe2-b404b931ff34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51e8b1e-469b-4243-8d49-0b55b5516bab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c903be88-000b-452e-a23c-413c67666081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427f5d8e-7f64-4607-a738-d215c80e97c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56529d19-6219-451a-ac7d-0e95681a95fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083a46cf-6515-4c6f-8018-f263b607527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ea111e-fd33-4fe4-981c-4efce5690c33",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df355217-6201-48e3-aea8-d2d3b7452f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65256aa8-2b4e-4f2c-9d11-5591804ff625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f58d3b8-f8df-49b8-96c1-076a3a84cd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cccac9-3c64-4dd1-ade8-fda0247cca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce38d4da-422c-4a15-a566-4f7c58e1a803",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfc1a39-170d-4d29-a641-1365b9662a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5549f4db-55f9-4df2-9a0a-7119bb114a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59fa6f2-c9f5-4dce-80f5-41942a6d293a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ddb5ad-ea91-4b02-8e6e-e8df01d49b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec540615-dfec-4481-9065-c703e053ba29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b74a268-afbb-4fa5-ac11-50a7f064d883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c200cb-c823-4a0b-941f-42a8f16126b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8f95df-1827-4379-91d4-511183bd57de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f3e899-bba2-4bbd-b34c-23a1c8cce2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371d1e2e-f2cf-4ce4-8c6b-9dce43e00474",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bf2375-8790-4d55-a486-3eef46fc6683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9bbcff-caf5-4669-990f-90297c052f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649fd1d3-48af-4cf1-b227-a71f6cc5672a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c1a92a-3c38-4612-9b41-ce04f27039ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b70bf76-9c02-4020-ab14-2fb81d4f90c5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc99eb49-ef5b-4ee7-b314-d4403a3142b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96527a1-f0a0-433b-b37e-974bafd17a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b45bee-ee58-4e8a-a99a-3e7f575f1d72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d452d8af-2378-4f7b-9fdd-b760f1bdf570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a5a13-36ff-4840-a9de-1d21153f2c63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a130372-6229-45aa-987d-421ac2e565e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cdc8d9-ec96-4425-bc75-b4464e3bdc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ba635-a7f8-45e4-b01a-d45926e3aaae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bb89bc-cab4-48e8-88d5-1de69a161012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9198130d-5491-4a1c-9aaf-4c83630b1dfe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a4c141-c271-4c80-88df-5b7552d704ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a215b3be-d5f2-48f1-bc27-a655307f0f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6440d4d4-69fe-43f9-9765-b126c7a16a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad0d1a9-9261-4bbd-8415-e214ee811c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e86523-db70-4525-9479-18f149553ab5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57821b2f-3f36-425d-9d77-c091ba7ec97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be700585-bdcf-4930-9542-53ea23884004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c7944e-ba07-472f-8fa5-fd4706d9913d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f323c166-5eb5-4045-94ef-fa576d620ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a66f33-e1e6-4734-82b5-0bc6cb873d0a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47255095-021e-451d-a7b8-f192d41c09fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c00d5b-6faf-4b32-b001-662dfc0f1bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f30b8fb-7b0f-4fac-bbcb-3681118acf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d9d096-c5f3-4514-99b4-1ae3a7ce8464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701bcfe8-ed77-4b87-895e-d1e76ab6f3f4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd01d074-5ac6-4422-a671-b5984778207d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90086268-a9a7-45f3-b8a0-abb57c8f6ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e9545c-6adf-4763-a60d-a133ec2f994e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ae3376-a622-4797-91a5-88f2fcdd7005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e171ab0-f5a4-4c7c-803a-5e7605664abf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ba142d-45da-4dfb-a179-de825b721538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b052bc82-db2c-4260-a82b-6a8e129c71f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95304317-7514-47d2-b894-06e3efa68cfc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7916b86-8d10-49d1-ae1c-bf40b5fcf833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0deddf6-dc0e-4366-9abf-360e323064e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a2380-8346-4aa8-b34a-008ee03f2282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed28f40-393b-499f-a9ec-9c72a53d872a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff90897f-f52b-472d-a838-1e93dca0218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3504e6-fb7a-4678-b26e-257b6b9d4a23"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e834911a-3bad-482d-98f8-3decab88c476",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54f58969-59b9-4406-95a6-57da5148bcab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67d3650d-7ee6-4bf4-ab6c-aa31b96e0ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "814a5377-8931-4bcd-8c92-5b5254cc5aa7"
                    }
                  }
                ]
              },
              {
                "id": "6b5306d6-f147-4872-95ee-83c340ab8f4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec188515-e43f-4870-a89e-9a24e7a4a51e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29d583b-e2c1-4116-b81c-c820a5fe1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a62544f1-bf8c-4e61-b8bf-f422224154f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96383e33-fc31-44b9-9b63-1621a4b4113c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c42e08a6-71bd-4ac2-baae-318ea26c72af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57f85339-74fa-43a6-b154-738acd4ff654",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34f3e02e-28b0-44c6-b78d-d0596e5014cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c311ef-7621-4376-a565-6a0bea3689e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c2e9f7-0b75-46ac-8b08-964ab83e98ee"
                    }
                  }
                ]
              },
              {
                "id": "42a67586-5b6d-44d9-9cb3-c3e9cbab3dd2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6867cf56-438e-445e-92e8-01c50c977e82",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4686ee2-3310-430a-8f6a-27ab0acd5e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6fffb50b-b60b-4fe9-9669-0fbab26cb2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0245753e-f7c7-45db-8406-09ffe8582bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f289f621-2d34-4502-a220-17de5b8d388d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "097730d5-0c1f-4cf0-a152-3fa733841664",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1685738e-982f-43ee-a993-201fa9956a29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d2653e-ec24-4588-a5cd-9c68c1515a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f2c7c18c-c1da-4318-b0d4-a3785def192e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c67e1bdc-2f01-4215-b57d-2a62e28a6813",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1149bf3-731d-4e45-9a98-eb7a144db971"
                    }
                  }
                ]
              },
              {
                "id": "221d837a-4f1f-4997-b025-0b8be80457ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc155671-1656-4f05-94bf-32c54546c3f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2130924a-e5bb-480a-8ca7-0daa3bf6ce44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee77a871-17a1-4f27-be64-63fc936404e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "028360c0-785f-47fc-b449-ed59a5fbc2d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "204dd77c-1ede-4d76-baa6-06c85c27e4e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1f7fe8d6-177d-4314-a434-3ae3ef7d2e4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54bf98e9-b4b6-44f3-ad37-210b6a061260",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22b4696b-fc3b-418f-b85c-e906fbb56530"
            }
          }
        ]
      },
      {
        "id": "2ec438eb-5003-4406-8337-a4dfeb18bea6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a67b81e6-bc46-4ef3-a47c-c4b7a187eedb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22b5ef34-2436-4497-b6eb-2340eb2b4066",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ee7292-9e69-4f7e-aec0-2249052e1dfb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c29cfd-5f44-47cf-bbba-e6e4f3e78e16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "291b2753-2cf9-45c7-ac67-e36e2f50c88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c0e47a-fe6a-45ec-ae68-0103c3335807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f7bebb7-c85a-4557-922c-8fc4179cfdce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1409c774-0c98-46b5-8ca1-5b44dcc270f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9e964ca-3370-459d-b3fd-cef75226b332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92746956-0e8d-4603-84c4-6e2e010a99ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c33a599f-02ba-4ee6-adae-b23ded091cf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22d46d3e-1f35-4cf2-87b3-7a8975d0ee84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "112567e5-3bf2-4cfe-b962-3e1c44efbd9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cffad0d-9d1c-493c-b50a-bff50f7b9c4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fd6b86c-df69-46e0-a8b7-e5ec79a18aeb"
            }
          }
        ]
      },
      {
        "id": "37c149ed-0f8b-41c0-a289-ab7275557cdc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8350145b-9f20-45d0-a1b2-9b79c6686437",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca03ae70-14c6-4894-821f-71697ebd2c11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfddf507-6c5f-4165-88bd-fb8d91fcd3df",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9263d1-2f83-4732-bb17-2bb48e35222e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42e4bafc-59bf-4019-bb3d-7c7f3d8592d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e23433e-1231-4e48-89a5-1a4fb8f9bb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2997dee-3787-4986-9db0-6f3e533229e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee58dbb4-3097-412e-8e7f-bd598ebb4a9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f975a34-f68b-4efe-bc0a-a69acd0bf03d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81be6bc4-e343-4367-ad51-b394f2bb3ca3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8f0cd22-5d0e-4bea-8b4e-5e9032550e05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "589fa3ef-c190-4dfe-b887-6aa529cf84e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34b40d1b-e27f-4cdd-a909-5ee530eca9c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf33efd-a5a3-4b67-8cec-d8be110a06c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b665c6da-cec4-4100-852f-9fc19ec93848"
            }
          }
        ]
      },
      {
        "id": "daf9bd0a-01fd-46b6-9a50-43d7b4c2df12",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "91288e0b-ffc8-49b6-8ec4-c83f254b64e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4f84fcc-c1a3-4b1c-a5c2-6435f77f1740",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52363f52-fc9b-46d1-8f97-09aa0858e647",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad66361-0b37-4883-bfba-ecca25a62acd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17c3730c-402a-4bfc-93ab-da08e904a3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c007391b-baf8-4737-bb68-2e3383b0b34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0892c392-861c-4aca-96eb-bce4823699da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "959be8ad-b71f-4724-ad28-d4ed22cf5d50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b74f203-d8b2-4531-8a7f-a8afdf015488"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19fe59c8-517c-4f30-9a2f-e9d67db27e77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22c5c82d-bba0-4d7e-9771-049fde057120"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb93376e-72c3-45a9-848b-015ad5864d78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7db4144d-618b-4b54-9613-6905952bb24e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b840b8fc-d4c6-40b3-9dd8-cd342dc50eb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc9e690b-83c8-404b-8035-bdbc0524f993"
            }
          }
        ]
      },
      {
        "id": "f42022f4-9b25-49b1-a141-8c66a92cb61c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da099f81-67b5-4bf9-9362-fc78bf3836d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85167f7f-a395-45c3-8a35-e7d2a3e00884",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "364dbdeb-fd00-49c4-99c1-e3a08df87b91",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2f4edf0-6445-400f-9f6c-a33acff09d9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e774cc7c-30cb-4870-b915-c8e558189917",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 310.21126760563385,
      "responseMin": 11,
      "responseMax": 6900,
      "responseSd": 852.7772758033386,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696033936520,
      "completed": 1696034036720
    },
    "executions": [
      {
        "id": "b70365f1-9801-4cce-8232-ead899fc2287",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a300710-47d9-43d1-a17f-121e17d1d76b",
          "httpRequestId": "f16446ae-1c28-4aa2-8f0d-932efd542d80"
        },
        "item": {
          "id": "b70365f1-9801-4cce-8232-ead899fc2287",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e604813-7412-43de-981f-fbc2908152b9",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "41719e4f-8c9c-4492-b27d-536c75276cbe",
        "cursor": {
          "ref": "fddecbec-e4f9-42f1-b600-e22f2d3bc8b1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "479c0ecd-4e1e-4bb1-bd80-b5c8862385cf"
        },
        "item": {
          "id": "41719e4f-8c9c-4492-b27d-536c75276cbe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4e876e91-9e7c-4ec5-8b38-7f517566b5ac",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "f9f3c7dd-c9a1-45e0-ad00-aa9353272022",
        "cursor": {
          "ref": "db31b4bc-ff54-4b83-bef2-0a659b64af86",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "582d9a88-90b7-43f6-8588-e8b809283965"
        },
        "item": {
          "id": "f9f3c7dd-c9a1-45e0-ad00-aa9353272022",
          "name": "did_json"
        },
        "response": {
          "id": "0cc1bf7c-b02d-4bd7-ac8b-26d82b46c484",
          "status": "OK",
          "code": 200,
          "responseTime": 1326,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415ebddc-f9b5-45b7-83bb-3f8ab76270d5",
        "cursor": {
          "ref": "972c05f3-934e-4d11-88cb-e112d33a74c8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdda929f-e28f-4fa1-b63a-b755a7115e7a"
        },
        "item": {
          "id": "415ebddc-f9b5-45b7-83bb-3f8ab76270d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "f23b1dd2-1aab-46d3-9e98-463046d0bb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415ebddc-f9b5-45b7-83bb-3f8ab76270d5",
        "cursor": {
          "ref": "972c05f3-934e-4d11-88cb-e112d33a74c8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdda929f-e28f-4fa1-b63a-b755a7115e7a"
        },
        "item": {
          "id": "415ebddc-f9b5-45b7-83bb-3f8ab76270d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "f23b1dd2-1aab-46d3-9e98-463046d0bb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41de981f-f11f-4ffb-96cf-4d4b8129adc9",
        "cursor": {
          "ref": "ea938022-e726-40f9-b9b1-0f6bc2550f91",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6366cd95-ddb6-4517-b1f0-91d693bc4e86"
        },
        "item": {
          "id": "41de981f-f11f-4ffb-96cf-4d4b8129adc9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "096d9883-11a7-499f-8f73-11844aa71706",
          "status": "Not Found",
          "code": 404,
          "responseTime": 405,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17f4178-3be9-4d7d-8b1e-54cf83d95bd6",
        "cursor": {
          "ref": "3f884ad3-ecc4-4a28-be76-1922d22cddca",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa6d304e-434b-4fd0-85a4-f07afcb2f077"
        },
        "item": {
          "id": "b17f4178-3be9-4d7d-8b1e-54cf83d95bd6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bbb37951-e72a-4dca-a53d-0741b5d6f377",
          "status": "Not Found",
          "code": 404,
          "responseTime": 263,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6199f1d-8205-4417-a78e-78763a11ab4a",
        "cursor": {
          "ref": "784bdf18-dfc7-407c-bd66-560fcdcb2f4d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "13af572c-fdc4-4452-ade6-9a81cc6d5284"
        },
        "item": {
          "id": "d6199f1d-8205-4417-a78e-78763a11ab4a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "23bea147-71bb-4955-b644-21428f042138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4e795-1c46-489e-a744-7deec104c389",
        "cursor": {
          "ref": "d20a3c40-2691-4102-b800-0a1ba27afefe",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "596462c8-2663-4c0d-a392-d1766f724c65"
        },
        "item": {
          "id": "d4b4e795-1c46-489e-a744-7deec104c389",
          "name": "identifiers"
        },
        "response": {
          "id": "70a0b329-dc91-4950-83dd-665aa2d8096d",
          "status": "OK",
          "code": 200,
          "responseTime": 1050,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4339de-762f-42b0-b751-6d61f6fed76b",
        "cursor": {
          "ref": "3d74116d-b1bc-4bd0-aecd-b48bd220b2a6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e2faad3-6441-411c-9f4d-cad0f47bf6b7"
        },
        "item": {
          "id": "ce4339de-762f-42b0-b751-6d61f6fed76b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bc68b967-4879-4a87-a158-7d1c88be6e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3855ccf4-0532-4924-a0c1-724d48e1a281",
        "cursor": {
          "ref": "19671425-ffff-49a3-8905-f208788726c8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8e6c0aef-37ac-4db8-a801-f8f8922b223b"
        },
        "item": {
          "id": "3855ccf4-0532-4924-a0c1-724d48e1a281",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9a941d9-31e7-493c-996a-e5b2e7fadc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c2394f-eaaa-4325-910b-fcc08eb4e856",
        "cursor": {
          "ref": "aa8c8333-6a6f-460d-9c88-d125d412c978",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "afec7147-e81b-4b57-9ff0-8db50da49451"
        },
        "item": {
          "id": "90c2394f-eaaa-4325-910b-fcc08eb4e856",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3c89711a-b6da-4468-ae72-38cc63ed0c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e8ff6a-c449-4ec0-b04d-afd1b53a338c",
        "cursor": {
          "ref": "3449fff7-ff24-4bac-bfa0-f66ccf3cbaec",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f36eacf5-9668-447a-87dc-bf515660a115"
        },
        "item": {
          "id": "d1e8ff6a-c449-4ec0-b04d-afd1b53a338c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "51cd8a64-e28f-40f2-acfe-3defec9018c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24f5572-37fa-4857-b25f-140a131834a0",
        "cursor": {
          "ref": "7d3898f6-d5f1-4d5b-a03d-1b7f7d7a92a8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "92b665e5-15ed-4ad8-bd25-43ee9697b138"
        },
        "item": {
          "id": "d24f5572-37fa-4857-b25f-140a131834a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "effbfe63-146f-4023-a188-a0bae24c11d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab0346-2ed0-40e5-a904-1d5f2a039b3f",
        "cursor": {
          "ref": "eea493b9-0665-41ff-94d7-748e26c701ec",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d23db2d5-b1a7-4dd5-a40b-5f3a2f82740c"
        },
        "item": {
          "id": "f3ab0346-2ed0-40e5-a904-1d5f2a039b3f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a21a4ab8-c0ae-490c-b121-35ca92dd9069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4fe6ed-2779-4074-a8ac-cdaa0a67a24a",
        "cursor": {
          "ref": "b174e493-7c6f-4913-9452-aecbaa289f5d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b5ceaee4-fa74-44e4-8406-bef7750793cc"
        },
        "item": {
          "id": "8d4fe6ed-2779-4074-a8ac-cdaa0a67a24a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "00ebb477-ba68-4e0d-8df3-df7ea1ca0467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d2e6e-7c95-432c-b848-51aecc34c513",
        "cursor": {
          "ref": "06a44af2-7210-482f-969b-6f3053a548f7",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4bd4d3ed-355e-47c6-8570-c25fcc16ff04"
        },
        "item": {
          "id": "0e7d2e6e-7c95-432c-b848-51aecc34c513",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "deb3d9f4-8a9a-42ab-b02a-310eed970d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8a9c38-dc7d-45d8-a892-3243db855349",
        "cursor": {
          "ref": "3d281e54-ea11-4a3a-87d0-671425f051cb",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5905b544-4e10-4764-ad70-d4a20f77fe29"
        },
        "item": {
          "id": "0a8a9c38-dc7d-45d8-a892-3243db855349",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "13430315-05cb-4fd3-8bb6-7799147b7ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89db63da-8751-4be0-ba11-5567cb172bc7",
        "cursor": {
          "ref": "5e5916a0-ed58-4f7d-8193-aa83090e561e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2d4a2d7c-7b7b-419d-bb4c-98ef88ed79fe"
        },
        "item": {
          "id": "89db63da-8751-4be0-ba11-5567cb172bc7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f60e4353-7dea-4280-be54-5f057c61d375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf5d209-c5c1-497f-a54f-29fc38c6632f",
        "cursor": {
          "ref": "f09a451f-3d71-4234-a931-67cca8c6c4c2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1cac201e-8859-49cf-8374-0018ca2185ea"
        },
        "item": {
          "id": "cdf5d209-c5c1-497f-a54f-29fc38c6632f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d05a89cd-28f6-4ae4-a29e-65c8fd4d2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b3812-dbdf-4033-990d-972f4e43c1c3",
        "cursor": {
          "ref": "04952ff5-1e4d-4878-a250-e7b9168f5709",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "799003d6-2cae-41c4-bd96-d49f150d7330"
        },
        "item": {
          "id": "7d7b3812-dbdf-4033-990d-972f4e43c1c3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dba4c61f-f2e9-415d-8f52-e53b590c145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a62d9b-368d-450d-925f-e18bdb180e66",
        "cursor": {
          "ref": "14a3a098-1b05-42f7-9928-96a0f4324ec0",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8d9433ee-1fc9-4d25-a598-3a8c38b23113"
        },
        "item": {
          "id": "52a62d9b-368d-450d-925f-e18bdb180e66",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "10864aa7-db45-4650-a067-4fe8aeeeb32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099c462-43c5-49d8-96bc-f36e33c2b29a",
        "cursor": {
          "ref": "255a10e5-1918-4f73-ab48-c95304dc9d8d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "36e6e3cf-5a2a-4dbb-afa0-f036f3744aa1"
        },
        "item": {
          "id": "0099c462-43c5-49d8-96bc-f36e33c2b29a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85a96dab-6978-42ed-b295-3560e6bc4ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b058fec4-5a69-4070-9229-25de821dc447",
        "cursor": {
          "ref": "27fabe42-e52e-4d45-ae6f-fa610e1a7070",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e9fe7ced-12cf-4886-aae2-8ebaa8fc1f15"
        },
        "item": {
          "id": "b058fec4-5a69-4070-9229-25de821dc447",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c4bbeb37-272e-4856-b6f0-e4ba8b43d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecc70eb-2666-4917-8dbc-720385ffff5b",
        "cursor": {
          "ref": "bebf0ac4-942a-461c-acb3-af4a41f589cc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c83bdbf-c232-44ce-96c7-ee0c8db2310e"
        },
        "item": {
          "id": "2ecc70eb-2666-4917-8dbc-720385ffff5b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5bbe81f4-bbd2-4c57-a089-25d690ec7ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab54b76-25c9-4019-b8a5-7db5b97d3ab0",
        "cursor": {
          "ref": "04128c48-072e-4600-9e26-54275ccab532",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c114b830-7603-47ba-9512-b2c5247181f3"
        },
        "item": {
          "id": "6ab54b76-25c9-4019-b8a5-7db5b97d3ab0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44fce2e9-fd51-48aa-8f94-446d97b8e482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826405a-cd2f-459a-9609-d869f63acc4d",
        "cursor": {
          "ref": "286b7862-6a62-41b6-a317-53ea8dc89052",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de8e803d-ff57-4034-898c-2f7b3beae7b1"
        },
        "item": {
          "id": "1826405a-cd2f-459a-9609-d869f63acc4d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dcb103d4-db57-4f03-93d0-de8f9716cb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4704c950-ef94-4eeb-a017-1b518175759f",
        "cursor": {
          "ref": "4ecc2de7-d479-4e62-91e4-294e8ea3d606",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3153a0d7-229a-46ad-8dac-42a87cb6a74e"
        },
        "item": {
          "id": "4704c950-ef94-4eeb-a017-1b518175759f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bc4e4b6-6d5e-43cb-a3ce-4aa2f459883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cd263b-3317-4eee-b778-e42dd81ca019",
        "cursor": {
          "ref": "9ede45b9-3a02-4a6f-abd5-3c48c609307f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "12e06c1e-ab0b-4d5d-bb47-f78c3d2689d2"
        },
        "item": {
          "id": "d4cd263b-3317-4eee-b778-e42dd81ca019",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8916cc3f-7da6-4dff-b9a1-0eaaa6c71f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2d30ae-4054-4baf-a629-ee3620c9c117",
        "cursor": {
          "ref": "5bc273d5-7ecb-494a-883b-9cd809aa8716",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "999396d1-5511-4282-beda-faf67b7f753a"
        },
        "item": {
          "id": "de2d30ae-4054-4baf-a629-ee3620c9c117",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fdeb2b30-721b-4477-9d1a-eb7788a1d771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71fc670-9d52-4839-be72-aa32637f0b3b",
        "cursor": {
          "ref": "dc9dc7b1-c781-485f-a8eb-ef2f990567c2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ddf0bda-8569-4e30-9746-21588614e37f"
        },
        "item": {
          "id": "d71fc670-9d52-4839-be72-aa32637f0b3b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d4dcc996-5cce-439b-adfc-7522b2cca7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd88c46-0041-40c8-a349-22f8608e74a2",
        "cursor": {
          "ref": "32946771-2bf6-4647-926a-a189dc994746",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b0891d3e-7de1-4207-b171-861a5d223a93"
        },
        "item": {
          "id": "6dd88c46-0041-40c8-a349-22f8608e74a2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b75225c0-43d4-4b9d-81ee-e549b4c2768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8575eb-af34-46c4-be6c-93ad857504c0",
        "cursor": {
          "ref": "7e0d7e5b-8e51-475c-a08b-5d81666e7d50",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f8c22d3f-9cb2-49fa-ab54-6bac1addf175"
        },
        "item": {
          "id": "7d8575eb-af34-46c4-be6c-93ad857504c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3e5b9222-6c0f-4a39-9704-b86b9814c22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d320e572-7459-4b3c-97e9-750fc66bc236",
        "cursor": {
          "ref": "c9c40543-8cdf-4f83-8b84-7bc5c2e698d3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "280d6b0d-8433-4015-b3bd-3ee4ca7c7086"
        },
        "item": {
          "id": "d320e572-7459-4b3c-97e9-750fc66bc236",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "116a7ac1-57f1-46a8-bc50-daf0f100f52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d72a56-710b-4973-a3a4-975ab3f2b6fc",
        "cursor": {
          "ref": "4b38f6c7-6818-44f8-b307-cc380410a1ab",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bec14f3d-f0a7-4323-b984-f982bd6246a9"
        },
        "item": {
          "id": "55d72a56-710b-4973-a3a4-975ab3f2b6fc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4d87c9cf-34d2-48dc-9fb2-7551f32e544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3853297c-7754-44b6-92c9-90a95d1224ec",
        "cursor": {
          "ref": "7ba6b02d-8b12-4731-9d3d-9995259280a6",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3116effd-6855-4f9a-92e2-b1bf1f1f3d91"
        },
        "item": {
          "id": "3853297c-7754-44b6-92c9-90a95d1224ec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6960fd46-f305-4071-8aac-fce03f247ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c024dfdc-f3c5-47a8-b1af-d1ae73a04d53",
        "cursor": {
          "ref": "6a6b3139-d627-4045-8da6-350ce12070f5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dc682b2a-4915-4e23-adf4-715e6c975a29"
        },
        "item": {
          "id": "c024dfdc-f3c5-47a8-b1af-d1ae73a04d53",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "49853f42-aa1c-4999-a396-4e70d40ec121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568f94c7-8fe2-4369-a184-5d7af5fefc04",
        "cursor": {
          "ref": "4e8aac63-8366-446d-9154-36fad62e8f42",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f8fef20f-86ac-48d6-a314-7a20b1e67857"
        },
        "item": {
          "id": "568f94c7-8fe2-4369-a184-5d7af5fefc04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d6e819f-837b-4be5-b382-464ae5721b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5eb07b-eb78-4288-8db2-fac220a235d4",
        "cursor": {
          "ref": "6ed2442b-69a1-4361-8b42-db5ec2093d31",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bcf00615-ff02-441f-9ebb-7c18d76bdd64"
        },
        "item": {
          "id": "4e5eb07b-eb78-4288-8db2-fac220a235d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4ef8ff57-c20c-4e5c-a828-9cf3d28a45fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e98685a-2c8f-4a1d-bbe8-35e06c4912be",
        "cursor": {
          "ref": "2bc234f2-374f-4188-87fc-b9beb2c7a5c3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4cfa171b-6cea-436c-9c72-a0edf433a514"
        },
        "item": {
          "id": "8e98685a-2c8f-4a1d-bbe8-35e06c4912be",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7208ea86-fb73-4222-9907-c52b3dcbbbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5904a848-e8ac-4cac-a04d-8b408397542e",
        "cursor": {
          "ref": "3a2cf1c7-ba6e-4123-a4c0-bd48e73a84d4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab1aff8d-ff1d-4315-bcfd-54138d95ec7a"
        },
        "item": {
          "id": "5904a848-e8ac-4cac-a04d-8b408397542e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "394a188d-cf77-4936-a961-fb1f10f562d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8497b104-b639-4b86-9c14-6144deab3f89",
        "cursor": {
          "ref": "d69bbaaf-7d81-4bf8-a32f-b085b7bedb90",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1cd2457a-f1fe-448e-bace-6169bf2200dc"
        },
        "item": {
          "id": "8497b104-b639-4b86-9c14-6144deab3f89",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "740a2f7b-e4ee-415a-91be-c6ac72c2d265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6baa7f9-f07e-457c-916d-6c820335cf93",
        "cursor": {
          "ref": "c6f84083-b4ce-4b58-9733-6a4ec533769c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "30d3935e-ba8b-4948-a58e-90566e7bdeb6"
        },
        "item": {
          "id": "f6baa7f9-f07e-457c-916d-6c820335cf93",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "46e9134f-8582-4ea3-bafe-462cd2fc9463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1a610-7340-4be7-b990-f7e4e66a5141",
        "cursor": {
          "ref": "239f7813-4f6e-45e7-8d5a-555b49db5552",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ca80fb58-78a8-473a-a12e-27a8d206873b"
        },
        "item": {
          "id": "73e1a610-7340-4be7-b990-f7e4e66a5141",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "04481a9d-04f1-4390-a27e-400d20c88bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e662608f-e811-43a4-a26a-ec60c2e0be3c",
        "cursor": {
          "ref": "f3406c7f-ec87-4a53-bf6f-42b3a53beed0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c1e2ab4-639d-4817-be01-47be3c334db2"
        },
        "item": {
          "id": "e662608f-e811-43a4-a26a-ec60c2e0be3c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cc2ea8cb-2d09-4df1-9841-a823e9acfac3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 592,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea51416-6194-4377-b1e1-158c5b042385",
        "cursor": {
          "ref": "fca1ba94-1135-4257-a896-2ca4d55bcdfd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5dda2752-87f3-49d2-8c3d-39e0c10d1442"
        },
        "item": {
          "id": "6ea51416-6194-4377-b1e1-158c5b042385",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fbfdb630-70d0-40ac-bb97-9ad0d2148d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d00ef51-aea9-4ee3-916e-824402df506c",
        "cursor": {
          "ref": "c3538fff-4012-46cd-9613-fbfdd0f82b73",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9012e88d-950b-4489-aa30-8f29e43675cf"
        },
        "item": {
          "id": "5d00ef51-aea9-4ee3-916e-824402df506c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a8ad690b-de66-4240-96c7-eae0bdc30962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5555aec5-163e-4c2a-968b-c7e0b428c4e5",
        "cursor": {
          "ref": "a9dd51f7-9400-4264-a670-8e2c8347cfc7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50f1fee0-66af-47db-8d39-33a3ac7cd0b5"
        },
        "item": {
          "id": "5555aec5-163e-4c2a-968b-c7e0b428c4e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "76c8a757-db7a-474f-afcb-2c7f8a8bc26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2915d2-e6e6-4275-b67b-00790521f13f",
        "cursor": {
          "ref": "76afe332-756a-466e-85d5-69cbf5214c45",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f542e446-b8ee-4d58-a5ab-fb9bb9e50cc3"
        },
        "item": {
          "id": "9f2915d2-e6e6-4275-b67b-00790521f13f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "55af5e3a-a6a0-4201-9165-9cc3df3fcf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1237095-aba0-4fa3-a951-b2a3e8d5ebaf",
        "cursor": {
          "ref": "d88442c0-8cb7-4e90-bfaa-cdaa5623a91d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34627fab-2924-46a9-b09e-f874ab98c898"
        },
        "item": {
          "id": "f1237095-aba0-4fa3-a951-b2a3e8d5ebaf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d5f4b2d0-0386-4ec4-b9b5-e52b5fc74a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa349e9b-5899-4e08-9a90-67ab54a3372e",
        "cursor": {
          "ref": "3c28518c-ae85-47b9-8d74-114d098d3075",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d684701d-3de0-4cf6-94cf-e794fbda2b09"
        },
        "item": {
          "id": "aa349e9b-5899-4e08-9a90-67ab54a3372e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f33113f1-2cb4-457f-b68d-a1d7f96ff08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2dd6a6-00f8-46a3-b12d-5011c2b91a95",
        "cursor": {
          "ref": "763fe18e-5fc7-4ad1-9874-b81c04d8eb9b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3b298fa-b3b4-478b-9e58-20883def08a8"
        },
        "item": {
          "id": "2e2dd6a6-00f8-46a3-b12d-5011c2b91a95",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "efaf6b6e-c875-4d26-81fc-a0101c11c4ae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 593,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae650c0d-f776-4b3b-873f-fa01a51a6f27",
        "cursor": {
          "ref": "2133882c-0c59-48d5-a43b-049eb563f5b5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "503c853a-6bc3-4df1-aad2-93588a21936d"
        },
        "item": {
          "id": "ae650c0d-f776-4b3b-873f-fa01a51a6f27",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3e578fe3-b8eb-4985-a625-6d680e6d9949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1830a442-acf9-4808-b65b-8fa0e759bb9c",
        "cursor": {
          "ref": "2b3a402f-7638-49dc-b7ba-52f2fcada230",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32f17b0f-300e-42da-b898-43c3b697aead"
        },
        "item": {
          "id": "1830a442-acf9-4808-b65b-8fa0e759bb9c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "591d8515-a476-451a-a257-451530723f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c69583-e652-4ddf-901e-4ef8b8e6c76d",
        "cursor": {
          "ref": "13710f35-778a-4d6e-970a-08a1067ba491",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a0cc0e1d-7f2a-4e45-870c-54670ce33a4a"
        },
        "item": {
          "id": "84c69583-e652-4ddf-901e-4ef8b8e6c76d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e9046b2f-1eb5-4aa1-95b9-07cd729a4c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87079697-1895-42a7-b9cc-80e6ac8d503e",
        "cursor": {
          "ref": "4f33d87e-e011-46ad-9af8-558c73a1278b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe852984-08a6-45e1-ba97-a1f2f5f9c6b8"
        },
        "item": {
          "id": "87079697-1895-42a7-b9cc-80e6ac8d503e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "45436483-ed34-4732-8fe4-7addcdc4ef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d65ee-3c9c-421f-9e55-6689cd00e5bf",
        "cursor": {
          "ref": "defb3768-cc47-43ef-9269-bd3f64f4a858",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eccbca35-5193-46c4-9c10-abba0b0ba94f"
        },
        "item": {
          "id": "668d65ee-3c9c-421f-9e55-6689cd00e5bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aac2fc00-777d-467c-ae2c-5bcfa7a7a74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327c2f92-7957-4432-809b-54b86653160e",
        "cursor": {
          "ref": "c14d716a-f884-4235-89d4-9fdbefd4505d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9dc5e6e5-ae17-43e8-a390-4e2f1f83193a"
        },
        "item": {
          "id": "327c2f92-7957-4432-809b-54b86653160e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "047eaf19-5b23-4afe-8956-12c8cbb5597b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e177acd0-3c99-46b3-a80d-5a542a6b8c0f",
        "cursor": {
          "ref": "29695128-5792-4316-b9e8-90f57e9541c0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6b74e499-ad20-4f62-ae13-e652f52f6141"
        },
        "item": {
          "id": "e177acd0-3c99-46b3-a80d-5a542a6b8c0f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "137047ad-4a8d-4c48-b34d-4aedcb9ba28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763e9fbf-97de-4054-b580-2c5674b4602c",
        "cursor": {
          "ref": "e8e9b115-998b-4bea-b403-080cbbff354c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "45ce652a-c76a-4a54-93a6-3732bd502df1"
        },
        "item": {
          "id": "763e9fbf-97de-4054-b580-2c5674b4602c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a08a91fb-b413-4073-bfb6-8c55582db621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6a01b5-5f4c-42a7-8b0e-a59122ac3a24",
        "cursor": {
          "ref": "5414da00-1f02-405e-b03c-65172da11f2e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d8b5617d-29aa-4e7c-ae26-59dcc549b898"
        },
        "item": {
          "id": "0e6a01b5-5f4c-42a7-8b0e-a59122ac3a24",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "92fe550e-cf99-4d14-b8d4-019d90ac06d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be31330-6d98-434e-8926-8df2a2d28ac9",
        "cursor": {
          "ref": "4f8eefc0-a420-4da1-92ce-6c5fbb2bc276",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b3e5b786-2552-411f-b217-9a96b3588044"
        },
        "item": {
          "id": "1be31330-6d98-434e-8926-8df2a2d28ac9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2efa3be2-8584-4975-8c5d-d82f1bc35bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deb81c6-962c-4514-818b-ebd200ba8eef",
        "cursor": {
          "ref": "9e64112d-107d-467c-9e05-607cdae7fa20",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e8f5809c-b348-4af2-8bf2-664052ee93ce"
        },
        "item": {
          "id": "6deb81c6-962c-4514-818b-ebd200ba8eef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4a259e39-ae57-464f-954b-54a02bd49392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcd95b8-68bc-4781-aa9c-b37ceaa11d2c",
        "cursor": {
          "ref": "d32e9e82-04a6-48e6-a089-e1bbd5a01186",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4bd7eb85-86f1-4eca-a39f-48ddc6053c7c"
        },
        "item": {
          "id": "9fcd95b8-68bc-4781-aa9c-b37ceaa11d2c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0c2fc0e0-3110-45b0-b4cc-fe9893192022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125ff1ad-76f6-41b4-ae57-546127c02ff2",
        "cursor": {
          "ref": "803f0038-b576-40c8-8ffa-5e86c4df3942",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a5557721-abb7-4f2f-9e99-e125c8a60058"
        },
        "item": {
          "id": "125ff1ad-76f6-41b4-ae57-546127c02ff2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f62c8a4a-ebf3-4185-bbd2-c0f1f2a2b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4371d214-b54b-414f-b368-f14814ae64a2",
        "cursor": {
          "ref": "f06795f7-9d70-42b7-954b-de291516013a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1e28cd92-85c3-42b1-bcc8-0d259a14c334"
        },
        "item": {
          "id": "4371d214-b54b-414f-b368-f14814ae64a2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a05f9dce-62d4-4738-b78e-20e0ece57cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b4a15-1091-44ad-9a30-440039201c6f",
        "cursor": {
          "ref": "1a2d2419-3d0a-4f86-bc22-6144e1216c5d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "54996993-b5c9-43db-8af9-a4e9cf6ea9c9"
        },
        "item": {
          "id": "b23b4a15-1091-44ad-9a30-440039201c6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3ff9e14c-002f-41ad-baef-4d4aa677af66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8b22de-a8e5-437c-8efa-63230f2ff1cb",
        "cursor": {
          "ref": "a4fb9073-4ecb-4816-a14c-339410c66d1a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7880b52c-19f1-4bfb-8546-2d3c3917d9f6"
        },
        "item": {
          "id": "fa8b22de-a8e5-437c-8efa-63230f2ff1cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f60060ce-234a-4a00-9a5d-096100252b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb078034-466a-482f-9bd0-3e2d7cde6393",
        "cursor": {
          "ref": "b89cbcd6-bcf1-4c44-8d5e-38bcd17ce11f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cf17d36b-ac39-4651-a004-79350a085481"
        },
        "item": {
          "id": "eb078034-466a-482f-9bd0-3e2d7cde6393",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e648777f-df06-4c42-8c52-8d8506ab5f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cdc256-f3ef-4011-a4d0-42c29f8e25ee",
        "cursor": {
          "ref": "b802e74b-5723-4166-8a0b-1be32d257c4a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "90fd355e-6bb4-4691-8f73-1d1b86d7e8cd"
        },
        "item": {
          "id": "a0cdc256-f3ef-4011-a4d0-42c29f8e25ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "34d79cc4-b3fe-42bd-aa34-6ee9578fc578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1b1fb-d0f5-4161-8515-3263ac60a2a6",
        "cursor": {
          "ref": "049026a2-1ddc-4da9-84bd-9de6dd0bca3e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dd7d54c2-9221-41e5-b626-973329f3b5f6"
        },
        "item": {
          "id": "2ee1b1fb-d0f5-4161-8515-3263ac60a2a6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "007e7a8f-2b7d-442d-a361-dc395ee8c0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bee49a9-2fe6-4917-a066-2b1d571075fd",
        "cursor": {
          "ref": "7afbbcd6-379b-4d17-8506-2f145a44d6fa",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bb4eca37-443c-4c35-bbae-3b4b40c70adc"
        },
        "item": {
          "id": "0bee49a9-2fe6-4917-a066-2b1d571075fd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "41e9a7f3-2b8f-473c-bc8d-39bbace50ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99044dc1-d0ec-4956-a498-3c52ce56ec3c",
        "cursor": {
          "ref": "213b2f08-8327-4692-ae24-0c5bc817f75a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b281f719-fda3-41bb-abe0-4fa9ca3646b5"
        },
        "item": {
          "id": "99044dc1-d0ec-4956-a498-3c52ce56ec3c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7d9ab0fe-10e8-4aaa-96ca-edda26f5e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75148ed4-06c5-44b1-b824-dad2b82f2592",
        "cursor": {
          "ref": "cb351054-c1ba-49cd-bb3c-9ec6eb3cdb2a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "77e4115b-a2c4-4676-ad27-50a35cbb6a41"
        },
        "item": {
          "id": "75148ed4-06c5-44b1-b824-dad2b82f2592",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2937697d-55f1-4901-b3a1-dc6a5f195246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7b0f42-080b-4b53-9742-23275400fd8e",
        "cursor": {
          "ref": "fce04ba8-489b-4781-8321-3a8ef32bf926",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "411c4701-b9f7-4ea9-83aa-6da709e47dba"
        },
        "item": {
          "id": "2d7b0f42-080b-4b53-9742-23275400fd8e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3c3b5e59-cd02-49e7-b45d-60ebbf2428f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077869d3-b09f-4270-b4aa-a0d17047f477",
        "cursor": {
          "ref": "56bb3768-4f3d-405c-bd03-dd2f4544cc94",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "55fe0c6b-f2c0-4594-817d-bd34c4f06e11"
        },
        "item": {
          "id": "077869d3-b09f-4270-b4aa-a0d17047f477",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "51071db4-9faf-4856-9a5b-b1922d3e4196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36de8d3-c414-4439-a525-6436f77eeae4",
        "cursor": {
          "ref": "30a1afb8-1b74-4b60-bb21-e559abe7b6e5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e78190ca-445f-4e99-b79e-12a7104facd6"
        },
        "item": {
          "id": "b36de8d3-c414-4439-a525-6436f77eeae4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6eefce84-302a-4588-8a02-363e54e83857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ef2d1-630e-4db7-a100-3f9506d5f673",
        "cursor": {
          "ref": "e089b5e0-bddd-4e9e-9827-c777c303e1d2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f8ac9e0f-549e-4382-9b20-5b80454c4151"
        },
        "item": {
          "id": "2a2ef2d1-630e-4db7-a100-3f9506d5f673",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d237cf8d-e55e-4082-bf65-96732940fd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada1112-b81b-49c0-aa49-b33afd0b350c",
        "cursor": {
          "ref": "517b6d8d-4f94-4f95-b3f4-83f23861f6f0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "512c4927-302a-46d3-ade9-016255d9117b"
        },
        "item": {
          "id": "1ada1112-b81b-49c0-aa49-b33afd0b350c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "43cfa888-81ab-42db-97f7-0d31426131be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9d2a61-33b2-4d55-a789-93f4d8483018",
        "cursor": {
          "ref": "f8e79b66-eb75-46be-a1c6-1d5d413ef285",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ddec26fb-44c6-4c85-93de-ed1ac29bbce1"
        },
        "item": {
          "id": "cd9d2a61-33b2-4d55-a789-93f4d8483018",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1809715d-c1ee-4e4b-9ee4-f642855b45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b07a19-5548-4bce-be31-07217624e13e",
        "cursor": {
          "ref": "adc8bcf6-e420-4459-8861-765c42db32c5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "079b6050-1e8f-4a4e-b088-5202a99e099f"
        },
        "item": {
          "id": "d4b07a19-5548-4bce-be31-07217624e13e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3c3d369e-9d02-4ebf-9dd1-9d1ff3b6ad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6adc985-6577-4c74-b957-a5efdf2bb973",
        "cursor": {
          "ref": "85841aa1-4979-487f-9ad8-939f758a40c9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "626aad45-d12b-4a57-9d42-3d92d807b296"
        },
        "item": {
          "id": "c6adc985-6577-4c74-b957-a5efdf2bb973",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "14f928b7-304f-4cf2-8c10-3f2aeb485803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f688be25-3411-4fa9-a799-7f19648d937d",
        "cursor": {
          "ref": "b444bd67-43a4-4ea4-b766-a77a2e0eefdf",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "13725b05-a1ae-4a7a-bf2b-e87c696e1df1"
        },
        "item": {
          "id": "f688be25-3411-4fa9-a799-7f19648d937d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4124cf87-b4d4-4532-b1bd-7d0262b73c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e73e784-c3c1-401e-bef3-2015057c26eb",
        "cursor": {
          "ref": "a2c92332-e319-498e-a7d7-6a4575fa9c90",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8f19a894-2a1e-4fa8-9b1d-812b541d6db7"
        },
        "item": {
          "id": "4e73e784-c3c1-401e-bef3-2015057c26eb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e90185f3-a800-4de4-8299-986686ea2233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59e4bc7-f152-4c7c-bdd4-7653b0e39fa2",
        "cursor": {
          "ref": "eb066cfb-ec81-48a4-a704-3d3d222bb25d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1912e276-86a9-4820-b185-33ca594a60da"
        },
        "item": {
          "id": "c59e4bc7-f152-4c7c-bdd4-7653b0e39fa2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30360555-ba75-4516-8737-800d9b5f4999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8dcdfe-c343-43be-b538-a6d299a37106",
        "cursor": {
          "ref": "d5c49bea-f0f7-4be8-9d73-2eec3e281ee0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cbdc5760-e20f-4c16-b526-8420eb046165"
        },
        "item": {
          "id": "1c8dcdfe-c343-43be-b538-a6d299a37106",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68cc628d-a748-4712-bbbd-accee6f3edc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be270e2-2670-452b-bcec-ec6b9149f940",
        "cursor": {
          "ref": "c25e4edd-2cea-4732-ad38-8893c1dbacc2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c068a1db-a868-4697-b16d-df4a56514baf"
        },
        "item": {
          "id": "1be270e2-2670-452b-bcec-ec6b9149f940",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5ed9850f-8be0-43a1-8839-7c501d9565ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981bece-e548-470e-a7b7-d5693bd23184",
        "cursor": {
          "ref": "599111b6-340c-49e2-9a5d-6719d867a589",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "971e0478-682f-4204-a464-e155cce2fb41"
        },
        "item": {
          "id": "9981bece-e548-470e-a7b7-d5693bd23184",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "78f48f06-52e7-400f-aa02-a2d0b719c3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc92c5be-fa3f-49d1-8899-c32d5c55068d",
        "cursor": {
          "ref": "a90f3692-5edb-45c7-989d-c3c2f36c261f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3e2de566-dc78-4a52-8a52-ba5ee46f3a9b"
        },
        "item": {
          "id": "bc92c5be-fa3f-49d1-8899-c32d5c55068d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aedbcf15-719b-481b-a8d0-b0d2dd1685f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a86d298-8db5-4957-a988-1f4f2e60f967",
        "cursor": {
          "ref": "b4016ba4-f450-4dbf-93b5-f99e47daa283",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2bfbeac9-08dc-423b-b393-5d135002225a"
        },
        "item": {
          "id": "3a86d298-8db5-4957-a988-1f4f2e60f967",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4fc57a5e-e5c9-41b2-8230-248d77ec452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a9a96b-4927-4f13-a542-6dda42a8fa2f",
        "cursor": {
          "ref": "1fd975e6-280c-4edf-b54d-c126ea807cd2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9386c8a4-1277-4867-a736-60f80fc8051a"
        },
        "item": {
          "id": "70a9a96b-4927-4f13-a542-6dda42a8fa2f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9caa88f0-e2c9-4fee-b819-ff977488833b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a208a1ae-c810-4bfd-8a0c-112a3f07f010",
        "cursor": {
          "ref": "1037b7d8-0f85-4b40-a7da-07c69a09492d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "82115b81-34d0-473d-91b2-4b0a9a73a202"
        },
        "item": {
          "id": "a208a1ae-c810-4bfd-8a0c-112a3f07f010",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cb2f7f17-7727-4ada-8431-513cd6e2f60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f745a01-8ca5-41ed-88a9-68b0fe17d4bf",
        "cursor": {
          "ref": "ebdb5f91-a03d-457a-b032-4cf02cdb51b2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "318c1365-0e10-4ecb-adb7-1c62a2293e5a"
        },
        "item": {
          "id": "3f745a01-8ca5-41ed-88a9-68b0fe17d4bf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "07f6e6e4-b4b6-483d-a73c-d5b324348451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a7406f-dc5d-4647-8c7c-2916a5d1f3aa",
        "cursor": {
          "ref": "387f8a5d-aa49-4b00-9a2f-e0feaa1703a3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "544ab670-d43c-492a-aee2-e23003db7b25"
        },
        "item": {
          "id": "a3a7406f-dc5d-4647-8c7c-2916a5d1f3aa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "af7fc3e7-ccf0-4816-90e0-6bd88e8bf42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b21a662-3932-4d73-9e67-45175e70fde6",
        "cursor": {
          "ref": "29fbd965-0a04-43c1-b17a-81c87a131eb8",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c97a21fb-4c9c-43eb-a9ad-1d1300117400"
        },
        "item": {
          "id": "3b21a662-3932-4d73-9e67-45175e70fde6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "728973b6-dbbe-42c3-9797-949f227fe825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91625cc7-c21f-4101-8886-bc8057497185",
        "cursor": {
          "ref": "13e177c9-12f0-4c20-98c7-320fd0b01d30",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5f645fb9-c5ec-417a-8c36-a2c3e0f65b9c"
        },
        "item": {
          "id": "91625cc7-c21f-4101-8886-bc8057497185",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45bf19d6-3a80-434d-a221-b27d071fec32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50310e1-7f68-4f38-b696-12addc9beb94",
        "cursor": {
          "ref": "1fe82d64-176b-45a1-81a1-7a3b996e1315",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e7f9f5b7-e47f-461f-a4d1-6066658cbb40"
        },
        "item": {
          "id": "b50310e1-7f68-4f38-b696-12addc9beb94",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9b7abca8-dc77-4099-b8b1-ed222f440074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822dbf6c-29e6-402c-a1ed-64713a4df2cf",
        "cursor": {
          "ref": "a07a0b99-0fe0-469d-b594-573b93e166b8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7a6cdb4f-aac4-47f5-b816-f5075578482a"
        },
        "item": {
          "id": "822dbf6c-29e6-402c-a1ed-64713a4df2cf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bf2e4565-eed5-4341-aeb7-03877d90b78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ec065-f4e1-45fe-bba2-b68702092905",
        "cursor": {
          "ref": "c729e595-d2c9-48c8-a49f-51a80bc3d9a3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "19ed2658-1dfd-4fa3-9d0d-eff43b08f8c0"
        },
        "item": {
          "id": "118ec065-f4e1-45fe-bba2-b68702092905",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fc858495-2120-4956-9f56-18f0652c232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c7066-c9e7-4a65-99f7-602efd36eb08",
        "cursor": {
          "ref": "b83ae92e-151f-438e-91fd-eb9bf243ec18",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c5190703-79e7-422c-8b9d-4bba1ca88699"
        },
        "item": {
          "id": "0a6c7066-c9e7-4a65-99f7-602efd36eb08",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "937eb333-ce88-411e-bcb7-e2eaa59b02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864eaa03-5692-418a-aa81-8ea11dd16056",
        "cursor": {
          "ref": "3e089ef6-bb8d-4b9e-9e59-40f4956e753e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fd68ffca-eb3f-46d9-b484-0e76ed396a5b"
        },
        "item": {
          "id": "864eaa03-5692-418a-aa81-8ea11dd16056",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08d8a76a-ad2c-4cb8-8b6d-edfe47134c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c1ecc-f985-48b0-bcce-81b347113548",
        "cursor": {
          "ref": "1a0cccf0-712a-490e-8912-03f0d8e101ca",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fb3a291e-4ed2-4249-9e52-c27673793d06"
        },
        "item": {
          "id": "530c1ecc-f985-48b0-bcce-81b347113548",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0bcca431-cd20-454d-b60e-4c6b770b443f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb41ce-66f2-4ed8-85f7-6cff9f67928d",
        "cursor": {
          "ref": "ed9c6c68-8fdb-430f-8e68-25203525beef",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "284fb8ce-c5c8-42b7-9d76-c69834ed3a1e"
        },
        "item": {
          "id": "91cb41ce-66f2-4ed8-85f7-6cff9f67928d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6fd0c59f-42e1-4e16-accd-d215786b95a0",
          "status": "Created",
          "code": 201,
          "responseTime": 6481,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eac2bc-b013-4d9d-b1cd-e577ce76911c",
        "cursor": {
          "ref": "6b12dba6-2a62-4c06-8d67-656e20339936",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2c440347-24ce-4f56-acfb-52870c093605"
        },
        "item": {
          "id": "13eac2bc-b013-4d9d-b1cd-e577ce76911c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fe8b1609-b59c-4f34-b27f-98937c38b7a4",
          "status": "Created",
          "code": 201,
          "responseTime": 6900,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57d4ec-13e6-4082-81bc-c0b800bc0c8c",
        "cursor": {
          "ref": "b00a1719-144d-41a3-86a4-ea9cb6e10eef",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "27b44f67-e227-4ed5-8965-94fe07efecbe"
        },
        "item": {
          "id": "4e57d4ec-13e6-4082-81bc-c0b800bc0c8c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e099286c-197c-4746-931e-2ac7cc08d5d8",
          "status": "Created",
          "code": 201,
          "responseTime": 6538,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "918c47f2-7113-4b72-947d-dbe9b621cc62",
        "cursor": {
          "ref": "ccd702c5-9342-4b7a-83f2-11105ef6fb05",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d16ba9d0-fbbc-4ea3-9cc2-b41f3c371128"
        },
        "item": {
          "id": "918c47f2-7113-4b72-947d-dbe9b621cc62",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "75c69a3c-0f7a-4201-9d60-c048f588c770",
          "status": "Created",
          "code": 201,
          "responseTime": 6276,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b285049a-ad65-434c-97d8-bee96377adcb",
        "cursor": {
          "ref": "4db3b292-386d-46e1-952d-933a065e7acc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "50519409-3a8a-4984-9ed8-d7a40081c7f3"
        },
        "item": {
          "id": "b285049a-ad65-434c-97d8-bee96377adcb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0a3c78ad-b7a9-4105-acef-04ded5620322",
          "status": "Created",
          "code": 201,
          "responseTime": 6529,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba700a0-3d2c-46f4-8fa5-ee0a2ebdbdaa",
        "cursor": {
          "ref": "d71464de-69e2-4ade-bce5-3ce2d6639450",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d35e82f7-8fcf-4d7d-a1bc-fe5b25523834"
        },
        "item": {
          "id": "9ba700a0-3d2c-46f4-8fa5-ee0a2ebdbdaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "77ab9d92-100f-4d67-b810-b95f1364111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e91e7af6-2ae0-4a54-8475-aae8ec57e6bd",
        "cursor": {
          "ref": "2264fa77-a34c-42d0-99b0-208a95c1bbc2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f16437ca-9eca-4ae4-afb2-65cc33de2432"
        },
        "item": {
          "id": "e91e7af6-2ae0-4a54-8475-aae8ec57e6bd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77b3cf10-1b72-4f44-91fc-97ce7ef16cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8f730a-5a78-4ea5-b742-394f00dfab01",
        "cursor": {
          "ref": "14466748-799c-49f8-9e5d-afcd8bb502b5",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0b4e2b03-56b8-48f0-96a2-5c71dc82ac7b"
        },
        "item": {
          "id": "9e8f730a-5a78-4ea5-b742-394f00dfab01",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7b52d14-d7b6-4884-b566-472953e69917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d25bdd-afea-4a8e-8646-de14e0f9256e",
        "cursor": {
          "ref": "687dc255-7588-4cb3-856e-577f1d677ee9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "120e4025-5deb-4fc3-95f9-1053705b5d30"
        },
        "item": {
          "id": "d9d25bdd-afea-4a8e-8646-de14e0f9256e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "25ec5d0f-6aa3-40f0-985b-0d29d8f8996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c5c3b-42ab-48f1-9188-d47c16c5f059",
        "cursor": {
          "ref": "cc85eadf-bf77-48fc-a43d-00e3d0e2739e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dc3eb2ac-dc0c-4809-95ae-1554e0b086d2"
        },
        "item": {
          "id": "641c5c3b-42ab-48f1-9188-d47c16c5f059",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc7c310a-7934-43a7-8a11-e786cba17746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28206486-5864-42c5-ba84-d57724af65de",
        "cursor": {
          "ref": "59537208-fd53-4b65-923e-aac709ce3017",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c1b37c6b-b92e-4322-a906-80eeb203270a"
        },
        "item": {
          "id": "28206486-5864-42c5-ba84-d57724af65de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34e1b5e2-60f2-43e5-b8c1-b0edb555d2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c1b34e-566a-4788-b7c2-4a39bae94949",
        "cursor": {
          "ref": "9218d91c-a9d5-4183-90ca-2222b9f1054a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f750b5c1-37a1-4a1f-9a67-77511e90dbbd"
        },
        "item": {
          "id": "40c1b34e-566a-4788-b7c2-4a39bae94949",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2488046a-bc24-4b29-b269-3b2e1398dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862b3a1e-1819-44fb-8db8-27ed36f4978b",
        "cursor": {
          "ref": "21f4a384-c910-4bb0-bb97-8fc189a8b721",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "585318a1-b4eb-4c8f-a7e0-b1427f79c227"
        },
        "item": {
          "id": "862b3a1e-1819-44fb-8db8-27ed36f4978b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a3275e3d-dec4-44ca-ac02-a16f9d2de770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80708c-0d78-4e99-b844-09e13bd71540",
        "cursor": {
          "ref": "8cacd4d7-a997-4ac6-9692-bd7fa9a1f521",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4fe0592d-2d31-4591-8d13-29f054491600"
        },
        "item": {
          "id": "2d80708c-0d78-4e99-b844-09e13bd71540",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "76a978b9-8505-4f8f-a172-ae6dfa4d016e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16f9357-c902-49af-871c-163257848e3b",
        "cursor": {
          "ref": "296cef90-fb22-495e-92cb-6b7fce1d93b7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5b0770e8-2a1d-47fd-91dc-398f76992cf9"
        },
        "item": {
          "id": "f16f9357-c902-49af-871c-163257848e3b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b280aae8-ee8c-458c-a66a-d8bc00d93c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74bf301-c053-4210-a932-a983f5434894",
        "cursor": {
          "ref": "a16dc63d-9e3d-4fe1-8c59-6491524fe979",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4b6149f3-7f33-483a-8772-9fcb289693d5"
        },
        "item": {
          "id": "e74bf301-c053-4210-a932-a983f5434894",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c34c4c75-3992-460a-b377-cca69a0e1a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9366c28-f3d5-4f18-ada7-4d06724be3a2",
        "cursor": {
          "ref": "fd974383-72e3-423e-b6de-4b17b48cd478",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "27afebf7-6a72-407e-a537-ed4aec4ba657"
        },
        "item": {
          "id": "c9366c28-f3d5-4f18-ada7-4d06724be3a2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5348a899-d98b-4b1c-bda2-ba849f61a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee9cfa-22a7-42e2-9397-4d3fd4c3756a",
        "cursor": {
          "ref": "19bd936b-c7bb-4886-8ef8-3bc1adca94f3",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9ab86c90-2d03-4e47-8e3e-b6965915badd"
        },
        "item": {
          "id": "47ee9cfa-22a7-42e2-9397-4d3fd4c3756a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3921db26-ce75-4886-b83d-58dc237ebcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dcda7a-2d29-4b33-a2d9-9b4d6bfa499e",
        "cursor": {
          "ref": "26f4aee0-2210-4141-89df-ecc067497e8f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5cc3b364-61dc-48f6-968a-3b7a9a3f345d"
        },
        "item": {
          "id": "87dcda7a-2d29-4b33-a2d9-9b4d6bfa499e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4f3c286-7c56-42dc-ba1f-ca6d9d2534e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc5cadf-6668-454b-a3e4-2f5314fcb094",
        "cursor": {
          "ref": "04f433f3-7ce5-4314-ad8a-15e71870dd13",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "908145d9-277e-4cf0-9642-e5ac86e8d3de"
        },
        "item": {
          "id": "4cc5cadf-6668-454b-a3e4-2f5314fcb094",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "94ccbf53-3558-42f2-bafb-dee18ac0557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd56026-6f4e-4b80-afde-f0b9f4ecfb7a",
        "cursor": {
          "ref": "b62eebcf-0497-40ee-a092-4bbf05919595",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8bbce392-8cbc-42d6-b522-336c9d70edbc"
        },
        "item": {
          "id": "1cd56026-6f4e-4b80-afde-f0b9f4ecfb7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "465e0615-3a07-43f0-87c2-58a7f549e30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5d11c6-081f-469e-830e-46d20e5ab25e",
        "cursor": {
          "ref": "c0af8fd3-5710-4d7c-95bc-6e83e6fcde59",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6aaefb82-d545-41c2-8a7a-c28d3c1a1cdb"
        },
        "item": {
          "id": "fb5d11c6-081f-469e-830e-46d20e5ab25e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be475953-303f-45c3-9e15-22bfcbee9684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d1edbc-3339-42b2-a47e-16890639deae",
        "cursor": {
          "ref": "a0c88522-444e-4fb6-8f15-d0eb70585ff3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "923b313e-43b8-4dca-9d16-bd5e043d7af1"
        },
        "item": {
          "id": "c7d1edbc-3339-42b2-a47e-16890639deae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4f7dfb8-d498-401a-964c-6cfd066d6e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2423b7-94dc-4321-af2d-e57e583b10dd",
        "cursor": {
          "ref": "2ec2ecd2-011e-4898-ae32-000c8bbac785",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b98216fe-27fc-4412-9d99-1d7a8920562e"
        },
        "item": {
          "id": "5e2423b7-94dc-4321-af2d-e57e583b10dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "663cf40b-5e94-46c8-883e-7c79404daf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4290efa-bf3c-4bd3-8c4d-7fdd3de2202d",
        "cursor": {
          "ref": "52977c08-b217-47cb-b1ed-035aadafee2e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "43804e99-8b6b-48bd-bb81-ba578c9e31d4"
        },
        "item": {
          "id": "b4290efa-bf3c-4bd3-8c4d-7fdd3de2202d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c70915ed-edb0-4b71-9b87-6a54c0ef4596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8d030c-2ee1-4512-98ee-89db0d786374",
        "cursor": {
          "ref": "950d4c5d-77e5-426c-9d86-9cd818fff88a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9a486d8b-e6cf-4e7a-97ba-169987df864d"
        },
        "item": {
          "id": "9e8d030c-2ee1-4512-98ee-89db0d786374",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09ecda11-8b5c-4cf1-ba57-b06b72fcf556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f975a5a7-3fb5-489f-b468-9d476bd2e76d",
        "cursor": {
          "ref": "8b41b934-744e-4148-9a53-20c0ef249ecc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e821f68a-f4d3-493a-bee9-0d7734c88ffc"
        },
        "item": {
          "id": "f975a5a7-3fb5-489f-b468-9d476bd2e76d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6713da16-56e9-4f41-9d0e-c4ab9ce102ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdf5f1-947e-4ab9-9892-beab7756109a",
        "cursor": {
          "ref": "8834e9a6-f7b6-44ac-90ff-d6be94d8a784",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9b6d142a-a054-44fb-bb3c-0bdc560e2989"
        },
        "item": {
          "id": "ddbdf5f1-947e-4ab9-9892-beab7756109a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ffac2ac-36b5-4c98-909f-280299c6c8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac9a799-913a-420f-aa10-b3f4b8c18930",
        "cursor": {
          "ref": "fad7931c-1ffc-4b16-8860-3dc14ec6d529",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3b86f323-29fb-4d84-897e-e323fb32d108"
        },
        "item": {
          "id": "cac9a799-913a-420f-aa10-b3f4b8c18930",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b9e94387-9870-4c49-9576-c39c6eedaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92681f3b-4fb2-4caf-a671-fd2e2eb4fb95",
        "cursor": {
          "ref": "0cb2f4e8-aa14-49a6-b848-c1cdd57f862e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac997e03-d82e-4a25-9aae-4ffd99960ec2"
        },
        "item": {
          "id": "92681f3b-4fb2-4caf-a671-fd2e2eb4fb95",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dcb84ff8-25c3-4cbc-bb3c-495c1392f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd045b3-b080-4741-a12b-68e0718d64c8",
        "cursor": {
          "ref": "bdce7913-5b23-4231-88d6-82494c0cd372",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a1ae01c-a040-4262-93ca-2691a1e9bbda"
        },
        "item": {
          "id": "2cd045b3-b080-4741-a12b-68e0718d64c8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7b619753-70df-4e83-babd-372272e83c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d3ef8-cd84-47f7-851f-5fc24b5142b0",
        "cursor": {
          "ref": "e09b2947-2c1d-4b51-aabd-f2bd3d5e4933",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "88f5725a-27ed-49ce-811f-c8aaaad2e61e"
        },
        "item": {
          "id": "f59d3ef8-cd84-47f7-851f-5fc24b5142b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5617b991-052f-43d6-9af2-c425fa873ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e021dd-dc18-4139-8665-2c47dfa0e1fb",
        "cursor": {
          "ref": "3b65b67f-34e6-4539-83fa-64ac91a72d1d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "449069f9-5e2e-48dc-b293-9e7a12485f67"
        },
        "item": {
          "id": "32e021dd-dc18-4139-8665-2c47dfa0e1fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5db07fb-f46b-4bc3-8a07-7a0cda6bce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d993cc-b9cc-48fb-ae3c-b048dee15892",
        "cursor": {
          "ref": "62716f92-569e-435b-8db7-b0d6829db365",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "797761cf-c9cb-4fa7-9a3e-06fdfd2b4a92"
        },
        "item": {
          "id": "39d993cc-b9cc-48fb-ae3c-b048dee15892",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05aa7448-1dd2-4746-aec8-b24fc0c40ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d418865-d437-40d7-9e7c-158e7f686c49",
        "cursor": {
          "ref": "0f71486c-b5d4-44de-a8d4-ee165e07a785",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3199137e-3cae-4e0d-91dc-097bbe89fa3c"
        },
        "item": {
          "id": "7d418865-d437-40d7-9e7c-158e7f686c49",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "527d22e3-3784-448c-95ee-8df1e816bb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941b5902-bcd4-446f-b615-d8d0aa569291",
        "cursor": {
          "ref": "63c4871b-2331-4ad6-9af1-e37e37be4083",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "274232a3-c613-4734-a80a-a3e1d970b626"
        },
        "item": {
          "id": "941b5902-bcd4-446f-b615-d8d0aa569291",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d816c750-7fbb-4c1e-9130-880d68ae2496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2afd6-559c-462e-9fa8-8f9faae3eeda",
        "cursor": {
          "ref": "a78abb64-89da-438b-82e3-cb831a3caa11",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa331c05-eac0-4a60-89ac-1c30a1c46280"
        },
        "item": {
          "id": "d2a2afd6-559c-462e-9fa8-8f9faae3eeda",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ddacd62-6fec-4c58-aaff-13a73a868efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2897d6fb-7105-4929-9eaf-9e80dfc81e01",
        "cursor": {
          "ref": "62f29e63-2d56-4a28-81bb-1cffb2d3c819",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "73707917-f9eb-463b-b84f-5cb1d948cabf"
        },
        "item": {
          "id": "2897d6fb-7105-4929-9eaf-9e80dfc81e01",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fa75d393-ab99-4364-8318-d8e24fba71aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c59897-0021-45d1-b238-1c28b3a3dd79",
        "cursor": {
          "ref": "376a1968-8fbf-4b4a-8467-554c155346a7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e400bbc-c565-41ca-bd34-fd4706cda1a6"
        },
        "item": {
          "id": "08c59897-0021-45d1-b238-1c28b3a3dd79",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f67cdc5-6aef-4a01-a32b-3cee0ba92393",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5854f3f3-d432-426b-a521-081ed85719ba",
        "cursor": {
          "ref": "8ed3d461-21fd-4cbc-a022-072cf4c0541f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fd60cdca-a866-45d9-a0dc-8423de9203a9"
        },
        "item": {
          "id": "5854f3f3-d432-426b-a521-081ed85719ba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7cb3120e-961b-4886-8640-92b4ec5b2456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e3b6de-90a4-47f5-ba3a-391d4fe722a6",
        "cursor": {
          "ref": "eb29a9f0-2402-463b-a7c9-247edbb6ae04",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "39987911-1a5f-4cb0-a664-92be74d764b2"
        },
        "item": {
          "id": "d5e3b6de-90a4-47f5-ba3a-391d4fe722a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4039de4-b0cd-4a01-832e-3a2f12bc1384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ac946f-89bc-4a21-b273-4f042b084564",
        "cursor": {
          "ref": "d770ddfd-723a-41d5-91cc-903edf84bafc",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6fcd2bcf-f19f-4fe3-b55a-a587d1f1a8b0"
        },
        "item": {
          "id": "55ac946f-89bc-4a21-b273-4f042b084564",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2a0e9eb7-2a4d-4b7b-9ee0-f3c432b048d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b0d617-db0b-40e0-b672-86e07e5f7cab",
        "cursor": {
          "ref": "0e8c95a5-7ceb-4de3-b637-3684a60bf830",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee2857a1-a5ce-4775-9fdc-c4c02a90718b"
        },
        "item": {
          "id": "93b0d617-db0b-40e0-b672-86e07e5f7cab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2feeb5c0-f352-40cf-9a07-2fd060f51eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185eefee-08c9-4919-9a4e-3658076434cc",
        "cursor": {
          "ref": "ff63d637-dfb7-4e45-bb4b-c8d75e1aa99f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f4ef8a16-124b-4043-af4a-d7cd643f59b8"
        },
        "item": {
          "id": "185eefee-08c9-4919-9a4e-3658076434cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "376c746e-00be-47a6-ae8b-1f82b4e6b677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962f3ddf-62e7-4ffe-940e-be4375dbf7a2",
        "cursor": {
          "ref": "c1e4db29-0b5c-4dd1-98e1-756c9e475c8b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5642711-185b-4436-8e5f-c7dfb45ca7d9"
        },
        "item": {
          "id": "962f3ddf-62e7-4ffe-940e-be4375dbf7a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "037a3bee-b04d-40d7-878f-eed0e3e8b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214bfe2a-e5e8-4bd8-ae3f-31d8bb0adfb4",
        "cursor": {
          "ref": "f898809b-262f-4f40-83ad-26ba4e717796",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2fa489fa-4635-433d-9941-88fcb807a8e6"
        },
        "item": {
          "id": "214bfe2a-e5e8-4bd8-ae3f-31d8bb0adfb4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1e09286-aff0-428a-bba5-a052e5dc7cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c4d19c-7f6a-40b8-a4bb-86293325d60f",
        "cursor": {
          "ref": "5ab0b94f-db10-4fed-aaf8-af44b0d5140f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d77eee8b-24c1-4724-97b2-2a19f6871491"
        },
        "item": {
          "id": "b9c4d19c-7f6a-40b8-a4bb-86293325d60f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a249dc38-925e-427b-abb8-f38e209cfeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b4ce5-a2e2-414a-aa34-a279603ba28f",
        "cursor": {
          "ref": "a15f2c11-e2ad-445c-9401-96b6d4da5857",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cf67469e-315e-4294-adc8-bdbf825bbf89"
        },
        "item": {
          "id": "9f6b4ce5-a2e2-414a-aa34-a279603ba28f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8cffee53-381b-413c-88d9-dd70355028cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c63da2-a9a4-45a5-8c9a-b2fe61965599",
        "cursor": {
          "ref": "98ed3bf9-a9ba-4400-8a41-d49e7f65ccac",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d18afeb4-d34d-485e-8b6b-720f1e5e4e80"
        },
        "item": {
          "id": "e9c63da2-a9a4-45a5-8c9a-b2fe61965599",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6103f039-f9a4-4165-8177-356ec2e94ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a267dc0d-4509-4cea-9c73-6432b2dd2671",
        "cursor": {
          "ref": "8d922fa7-5840-4632-b6f0-1c422b2415dc",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "500319b3-bd52-4203-8b6f-45786082dfd3"
        },
        "item": {
          "id": "a267dc0d-4509-4cea-9c73-6432b2dd2671",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e97009cb-5460-4752-a938-7527e02f91c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b914a1-0e02-47c9-9f6e-c7b537ec844d",
        "cursor": {
          "ref": "8d172961-87c2-4e0a-ad61-6599a9f470b0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb87ee10-e7cb-4c00-acaf-a4c5a1b59ac4"
        },
        "item": {
          "id": "d4b914a1-0e02-47c9-9f6e-c7b537ec844d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5042f664-f199-41fa-af58-7aeef73b1c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bf4a78-309f-4b9a-b396-0509d65d28f3",
        "cursor": {
          "ref": "b8af51bc-59ff-47c9-9b99-35385092292a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5b9fc1f3-61b4-4fd3-971d-301a3b4217a2"
        },
        "item": {
          "id": "02bf4a78-309f-4b9a-b396-0509d65d28f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eee55f0b-1413-4a30-ab30-239138377e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b9f4b-8c14-47f6-8821-fab3c8d47f15",
        "cursor": {
          "ref": "8ba97027-1370-4a4f-94ad-203955ac8ffe",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c1ded700-9807-457b-870c-63dc61e7528e"
        },
        "item": {
          "id": "ed5b9f4b-8c14-47f6-8821-fab3c8d47f15",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14f1858f-a7f6-45d5-9294-27882205451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f1c254-a4b2-4a60-b373-98603c80b669",
        "cursor": {
          "ref": "dc9de872-a1b9-4630-82a4-8b9ef185bdc5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "070a6b76-87c1-4f7e-b513-40016ae6fb57"
        },
        "item": {
          "id": "d1f1c254-a4b2-4a60-b373-98603c80b669",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b8a7f59-eae3-45d1-9b40-bd676782f391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72b8b93-325d-4a0f-9e3c-86d5a0896bd5",
        "cursor": {
          "ref": "3e6c1db6-84e9-48b5-8561-939ed3a3a8f3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cc07a884-5cf3-4e67-9dcf-44eb89bc90cb"
        },
        "item": {
          "id": "a72b8b93-325d-4a0f-9e3c-86d5a0896bd5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "833107a3-c5a0-4ccf-bf31-c9913deb2fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18af52e-e23b-4151-ac9e-6a8b789576b8",
        "cursor": {
          "ref": "4c028ef2-1aa9-44ca-8450-54c19cac350b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a001c16-5e54-4423-aa7b-e15f226fc7d4"
        },
        "item": {
          "id": "a18af52e-e23b-4151-ac9e-6a8b789576b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5bd79e7c-238f-4319-820b-21a9d13d4f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613b16e7-a535-4695-a906-b1faaaf66c1b",
        "cursor": {
          "ref": "b4992f39-aad4-469a-bee3-79787dc73ce4",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aff02a75-0a3f-4444-a086-2c47f98430f6"
        },
        "item": {
          "id": "613b16e7-a535-4695-a906-b1faaaf66c1b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe3e7957-82fd-4c21-a7cd-e184116cff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8924eb1-a81b-4728-ab8c-369c2c1ccc40",
        "cursor": {
          "ref": "f9c715ae-4882-4f94-99d4-fbe67428b41c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "86a5c04d-0eee-4ad0-9af6-036207aee19b"
        },
        "item": {
          "id": "a8924eb1-a81b-4728-ab8c-369c2c1ccc40",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dc39d0cf-da05-4a60-abb5-7a076edb7fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c91baa-a04d-4365-92e1-6fa0d053acec",
        "cursor": {
          "ref": "2657e46d-b033-4d54-8633-da475578c2cb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8915e8ae-0134-4758-bfcb-74599b252ffa"
        },
        "item": {
          "id": "82c91baa-a04d-4365-92e1-6fa0d053acec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c71308a-5047-491a-b109-2c06d8d79b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9376dd8a-47de-4622-acb9-6443be02ce92",
        "cursor": {
          "ref": "cc0b6463-c293-4954-8ea0-8ffef2ff33fc",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1d1fccbe-cc16-4967-af97-d5c923d8b1b1"
        },
        "item": {
          "id": "9376dd8a-47de-4622-acb9-6443be02ce92",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5cbe2e37-754f-4876-a0e1-07491bf72d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d21d6f9-ac4a-4f09-9bd5-7508aeda0540",
        "cursor": {
          "ref": "c17329f1-0cc0-4f09-be76-1cfde56133e8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2e757f3c-1b0f-4744-887c-061e10d14914"
        },
        "item": {
          "id": "7d21d6f9-ac4a-4f09-9bd5-7508aeda0540",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8e0d763a-0ae5-4764-a0da-0acf9712c730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591eb83e-2d69-4118-b1b8-ecf81671a8ab",
        "cursor": {
          "ref": "9ea6a2d3-1c02-48cc-addb-c94478659d90",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "44c0527b-c5ed-4c83-bee6-5d4b604f61cd"
        },
        "item": {
          "id": "591eb83e-2d69-4118-b1b8-ecf81671a8ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b8e7a6c2-3687-4bf0-a133-54b5a611db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01886ab5-2ad7-457d-bf26-ef45ddcf6ee3",
        "cursor": {
          "ref": "4c5b12ae-07f8-4278-b06b-c1d388f88bde",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "281ccc34-ef58-4ccf-9a03-699e31c0ced1"
        },
        "item": {
          "id": "01886ab5-2ad7-457d-bf26-ef45ddcf6ee3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a5651d1f-9405-4eb8-b82e-3be996a8561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bed677c-abf6-4294-b5d2-4f5996cec522",
        "cursor": {
          "ref": "5737e2ef-9828-4471-aa3c-45144ea08ddb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "23e0c20e-82df-4d43-9198-2e151bd9edeb"
        },
        "item": {
          "id": "4bed677c-abf6-4294-b5d2-4f5996cec522",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9620ddb4-ae34-472c-8ac3-15484e8da516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf3d4b8-db03-4fd3-82b1-7c3370156ac1",
        "cursor": {
          "ref": "6274a7e1-76af-4be9-bce5-2abc62335b89",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6697da10-fc66-4265-bf17-aad6e9782d3c"
        },
        "item": {
          "id": "7bf3d4b8-db03-4fd3-82b1-7c3370156ac1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c2578ad-f5ed-4646-9300-b5315266f5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309cd841-0419-441d-b23e-eb65c4709183",
        "cursor": {
          "ref": "fa0e1db1-4b3d-4971-8ebb-09d1a43adfc0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2aa9f145-b37e-4ba9-b488-9e9b7a7cc595"
        },
        "item": {
          "id": "309cd841-0419-441d-b23e-eb65c4709183",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ecf9b9a-c744-441c-b8c5-19c78967bc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adb7d24-e06a-42cc-b587-db78de4168a0",
        "cursor": {
          "ref": "1c6a51a1-099e-41c8-9ad7-4b1b41b61055",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fd305c3a-b22b-4797-a4c9-520f955a3654"
        },
        "item": {
          "id": "3adb7d24-e06a-42cc-b587-db78de4168a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "384a766b-7709-4115-b94a-ac46318cd622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2ec86c-e2df-4f6b-897c-6059fbc65ec8",
        "cursor": {
          "ref": "98450b51-fe14-4f57-b9c5-fd949ae41b74",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2d23c2af-37a8-4a4f-8e3b-6a15db5d9c6b"
        },
        "item": {
          "id": "4f2ec86c-e2df-4f6b-897c-6059fbc65ec8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52452fed-395b-42d5-b681-a475fad52ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9013d33-e366-4cd5-b063-87238256e554",
        "cursor": {
          "ref": "57592e90-54af-4d01-bb73-5241e75d0b31",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52815a81-fc72-4f39-84dd-9fcc64af6191"
        },
        "item": {
          "id": "d9013d33-e366-4cd5-b063-87238256e554",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42432b96-66f1-4d8c-9dd4-d21502dcd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c82cb12-990d-43a0-bdf5-184510e3d6ff",
        "cursor": {
          "ref": "6bf37ce6-42e3-4a76-9f66-be1304f6255d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8832e987-7699-4d65-ab0a-92f2877737fd"
        },
        "item": {
          "id": "8c82cb12-990d-43a0-bdf5-184510e3d6ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f3577e4-5e7e-498f-a634-7c187e32902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e661d4a7-d252-4f9b-8c29-abf46a29bc96",
        "cursor": {
          "ref": "5b1ca608-b827-4594-b8f8-163ce2dfc438",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c00189b-ca6b-4935-a4c5-18eb4cee9651"
        },
        "item": {
          "id": "e661d4a7-d252-4f9b-8c29-abf46a29bc96",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4f0d3559-a9d5-48be-8536-a6f627065938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45924aeb-1159-40ee-8f5e-50dd2d42e6c5",
        "cursor": {
          "ref": "a2021e82-fe52-43c6-8cc6-105fb2888d3b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9d08ef4f-9768-490f-adb0-66cb584c7e0b"
        },
        "item": {
          "id": "45924aeb-1159-40ee-8f5e-50dd2d42e6c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d1ae4071-08cc-4b7d-bb15-11f5d9982129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a952bb13-1504-481e-a1a6-fa2421cf127e",
        "cursor": {
          "ref": "2330b827-7c2f-4005-9f94-2b97c7dc40e6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c4c96e1f-3f5d-4a88-bb8f-c96bd39e8a13"
        },
        "item": {
          "id": "a952bb13-1504-481e-a1a6-fa2421cf127e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6d25752b-403e-4910-871a-15806bf121ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97aae6-bbf8-41ed-8855-f9bf00f23d01",
        "cursor": {
          "ref": "e5d35426-f7b0-4499-ab99-387859b948a5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0f5c3004-5ce9-4644-a021-0be1b8fe1965"
        },
        "item": {
          "id": "2d97aae6-bbf8-41ed-8855-f9bf00f23d01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b4cd23a8-e56c-451e-9ec7-38a7fb24e357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b10ba2-dd2f-49f9-ae2a-0f0d1a406aac",
        "cursor": {
          "ref": "066679c2-bbcf-4c04-a15c-e68c50407391",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d72b5841-1c9e-4ede-8b23-0931cb531123"
        },
        "item": {
          "id": "13b10ba2-dd2f-49f9-ae2a-0f0d1a406aac",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3fc44651-df0d-4867-83ac-914d11b1d8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154959aa-ba86-448e-9c97-1074bd1f73b8",
        "cursor": {
          "ref": "354a6ce3-b218-4cf2-bed4-0aea753eeaf7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bf0668b3-3a7c-4a12-a83f-403786d2c52a"
        },
        "item": {
          "id": "154959aa-ba86-448e-9c97-1074bd1f73b8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "13a86ec9-a450-4a3e-b58e-7e49931b54ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22a39eb-94fa-4170-85b4-5411186b0ce2",
        "cursor": {
          "ref": "4c372418-c2c8-4ba1-b68b-91b52704876f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b0920469-acf6-4f3d-b011-01c37613c7f6"
        },
        "item": {
          "id": "f22a39eb-94fa-4170-85b4-5411186b0ce2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4b4dc05-f761-421a-a0ee-456450692c38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efb668e-fcc3-4e7c-9483-eab392d6dead",
        "cursor": {
          "ref": "3786a39f-c18a-4d4d-bbd7-0df57bd258e6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "043960a6-1bd1-41cb-96e5-4245d66fd727"
        },
        "item": {
          "id": "1efb668e-fcc3-4e7c-9483-eab392d6dead",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "005ededa-f044-4ea5-99f5-4bef7b0dfa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea204e8-08b4-4503-970b-8aca6aea8601",
        "cursor": {
          "ref": "0bd019b7-a467-4781-a7b6-ec157add56be",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1bfd444d-856c-46cf-9960-fc58348d3142"
        },
        "item": {
          "id": "6ea204e8-08b4-4503-970b-8aca6aea8601",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "accfe982-ccf2-411b-8465-00d779c2382d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e59049-dc99-4ffe-8430-d973ab25d9a0",
        "cursor": {
          "ref": "234bead1-cc54-4509-92de-00690b9b66ec",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "40d9bbe3-51b0-488e-b35b-9980c883c9f9"
        },
        "item": {
          "id": "84e59049-dc99-4ffe-8430-d973ab25d9a0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "958edd00-3ef1-4e4d-9214-acc8ab4ca378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c624942b-6ec3-4577-87ab-1d431bd8393c",
        "cursor": {
          "ref": "53a82cba-6202-426f-823f-17419de3bb24",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cfe5ade8-fdb5-4531-b249-1e083bd89122"
        },
        "item": {
          "id": "c624942b-6ec3-4577-87ab-1d431bd8393c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8a646112-e588-473a-b82b-2f7b03f8b408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d0e6e5-3368-4e93-aba1-7234fe4f11fe",
        "cursor": {
          "ref": "d31f62c2-ed33-49b2-8190-899be5b295a4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6522e52e-f596-48fb-8291-cfba4b6b044f"
        },
        "item": {
          "id": "e7d0e6e5-3368-4e93-aba1-7234fe4f11fe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7835263d-4792-43bb-93b2-149f0c43ad52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40864eb7-8ee6-436d-babf-a0fb697d0216",
        "cursor": {
          "ref": "458ddc66-f169-43c5-b4f7-2247d561b9f7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "97e70c95-eeb6-4e4c-92ad-b3f379d118b5"
        },
        "item": {
          "id": "40864eb7-8ee6-436d-babf-a0fb697d0216",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3845e55-f49f-4e57-809e-5b2ab36f5f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825ee62b-78b2-4947-a72f-f373dd3aa812",
        "cursor": {
          "ref": "5f5f2219-2483-45c5-846f-a783f11c0890",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "014440cc-900e-485d-ba3b-7255bb99e4b9"
        },
        "item": {
          "id": "825ee62b-78b2-4947-a72f-f373dd3aa812",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4d517272-66d6-48f1-9fbc-8f74fca58bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645e6b43-0f08-4960-af53-ea3408d5f784",
        "cursor": {
          "ref": "4505baf6-c66a-4096-90b9-11e7b3803e5b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1ddbd579-58b9-4158-9f42-020d9ba3cb14"
        },
        "item": {
          "id": "645e6b43-0f08-4960-af53-ea3408d5f784",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "254791d4-a346-4c1e-a02c-32c087f157c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45ce64e-2489-44c9-8595-1bea10489cd3",
        "cursor": {
          "ref": "495a66e5-fc2e-4385-a9fb-05a9411a9ba1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "21a1a873-c8da-49c0-af21-7c14a6063cb9"
        },
        "item": {
          "id": "e45ce64e-2489-44c9-8595-1bea10489cd3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63cecd7b-345e-4410-a047-035b57d94199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03423ce2-edc1-4454-ba2f-a422acadf641",
        "cursor": {
          "ref": "dcf30196-eef5-465a-94b8-15cfce215d1f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "81074379-fc1f-4e85-bf60-de13bdda0924"
        },
        "item": {
          "id": "03423ce2-edc1-4454-ba2f-a422acadf641",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "db48898e-1fe6-4ed2-85a3-ead46184295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1fcd28-a252-4a21-9334-cb80720fe0b0",
        "cursor": {
          "ref": "065bbfae-7372-49cd-aa11-2637b14657ab",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "23fd4cc9-02dd-440a-b25d-9597c0d9c315"
        },
        "item": {
          "id": "ff1fcd28-a252-4a21-9334-cb80720fe0b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "21536ddd-20be-4c21-8325-c41bafd0a7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b5526d-b39a-474c-a517-e4d8eb501f9d",
        "cursor": {
          "ref": "7ba54023-9d7a-4f55-94cf-dd8e514dabad",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bdf9c1d4-f27b-47ec-a64f-424eea3a60bc"
        },
        "item": {
          "id": "a2b5526d-b39a-474c-a517-e4d8eb501f9d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3979e865-8bfa-42b5-bd95-f0620d31397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11924927-7714-412d-9b4a-00cbdaa57ae6",
        "cursor": {
          "ref": "e06d0958-8226-49f9-a9ee-858b6331d4e3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "25cd73ba-c955-480c-8d3d-4b1a91fc8c80"
        },
        "item": {
          "id": "11924927-7714-412d-9b4a-00cbdaa57ae6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d0f1c36-3ef2-4181-a5be-a00d19e28142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5079408b-89ef-4056-9da9-3116af27305e",
        "cursor": {
          "ref": "ed5b3ee9-fb57-4b02-80f1-28957189b1ec",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3012556d-3d4b-4dc4-99d1-3f15402ff836"
        },
        "item": {
          "id": "5079408b-89ef-4056-9da9-3116af27305e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e445c58a-7f8e-4621-90e0-bccb989a3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae14cd9-239c-41d0-95de-503aa65bfab7",
        "cursor": {
          "ref": "18211241-ab51-485d-8994-383b4f87bbfa",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff3e2963-66a2-4455-948e-ff00be2a509a"
        },
        "item": {
          "id": "1ae14cd9-239c-41d0-95de-503aa65bfab7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b01afa68-eb25-478f-953f-b0accf13f724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c830f1-fc26-442e-a391-7405ef6fd6eb",
        "cursor": {
          "ref": "955617af-baef-4e1d-8cbb-647212e54149",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ee19bbca-3194-4b36-9939-4afc2be76f84"
        },
        "item": {
          "id": "38c830f1-fc26-442e-a391-7405ef6fd6eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4b50b7c6-10a1-49f0-a7d2-3cc898469e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a65bc-7c68-41e3-b971-57aa31c97b65",
        "cursor": {
          "ref": "2d88b982-296b-4603-a496-a9bb22742a11",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70d8c1ae-8efe-4ada-954b-87fdf34fff12"
        },
        "item": {
          "id": "859a65bc-7c68-41e3-b971-57aa31c97b65",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6690a458-6683-4e84-8728-88411c3f9c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dada0f92-a492-453e-98e2-5e0429e9aa09",
        "cursor": {
          "ref": "384a9230-ba63-404a-b166-6748873862d1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8db31c00-136d-4391-bbb4-fd486c5782a2"
        },
        "item": {
          "id": "dada0f92-a492-453e-98e2-5e0429e9aa09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "80fdb0a2-242c-463b-b86e-5daf7e454010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23924e9d-faae-4dc5-a26f-9ff4cb16706d",
        "cursor": {
          "ref": "dc1964c9-2992-408c-b5c1-7fcafae83312",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "91c18928-9a81-4791-a31a-1567467c0713"
        },
        "item": {
          "id": "23924e9d-faae-4dc5-a26f-9ff4cb16706d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a0e1d7a8-2120-4308-9679-dbb666f0ed3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a4ccb-8650-474e-9afd-c4031caf5822",
        "cursor": {
          "ref": "e444d9ef-7666-49ed-a3c0-4d9599ded38c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d40d6dc-b223-4a53-8794-4c677d46c981"
        },
        "item": {
          "id": "293a4ccb-8650-474e-9afd-c4031caf5822",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8005646c-4608-40e7-97ad-067350346404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deda55bf-8d4c-4de1-b23e-510cf9d4eb20",
        "cursor": {
          "ref": "ba96c438-203e-4e17-94ff-6717621c40fd",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9289e12b-9c4e-4f88-88f6-d85a67da6448"
        },
        "item": {
          "id": "deda55bf-8d4c-4de1-b23e-510cf9d4eb20",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ab052875-15fc-498c-83a9-bed0c88133cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bbdcc-3320-4f18-a3c2-fe7111fb0b51",
        "cursor": {
          "ref": "0a785028-de56-465a-bf62-0b3ab4829096",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1e1bade-981a-4de8-86b3-ca0cd8fafbad"
        },
        "item": {
          "id": "f48bbdcc-3320-4f18-a3c2-fe7111fb0b51",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc4df04c-6bf5-4e4b-acda-d349cf9b811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5de648b-1652-43b7-9d95-2a7becf94e6c",
        "cursor": {
          "ref": "c3e0ad3e-6c69-428c-a9b7-340192b7ce96",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9fc4afaa-1ab4-4a8d-b37d-96deecf820dc"
        },
        "item": {
          "id": "a5de648b-1652-43b7-9d95-2a7becf94e6c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "49f1cf34-d1b3-444d-8eae-8342d82c5250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ec1e8c-9106-4d73-aec4-a6874a50cd4c",
        "cursor": {
          "ref": "5d03f932-490a-468a-b1ce-81b31e36745d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a597893-481b-4609-ab3d-43d85058dded"
        },
        "item": {
          "id": "d0ec1e8c-9106-4d73-aec4-a6874a50cd4c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7f234edb-3f07-49e6-b290-145cc15ddff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225341ef-2c1d-4986-a56f-88fb4935fd12",
        "cursor": {
          "ref": "6e08d716-017f-428c-911a-289f3d72540c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e14b6ba3-7c04-4cae-83c3-892333df1484"
        },
        "item": {
          "id": "225341ef-2c1d-4986-a56f-88fb4935fd12",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "299597cf-3393-4b45-ba7f-f62d78c0e290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c45054b-3210-46c9-966e-0775aa24cf36",
        "cursor": {
          "ref": "34e48664-1768-4b0c-9800-46c16b836a63",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3b11bebf-5a9a-46bc-a565-3b3c7a94de9c"
        },
        "item": {
          "id": "6c45054b-3210-46c9-966e-0775aa24cf36",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5d024b32-c0c9-41c4-91f2-1e03f9c01488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04df4404-362b-4255-9559-a63477cdd7e1",
        "cursor": {
          "ref": "6f606bea-3d18-4d18-a969-231a8677a56a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d1a1c5f-4884-43a7-a2aa-44d508815d81"
        },
        "item": {
          "id": "04df4404-362b-4255-9559-a63477cdd7e1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5dc3b69a-21e0-46f2-9dfc-53f5bb1dc626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7237dc4-b3b8-46c0-936f-c3241c7ddc1c",
        "cursor": {
          "ref": "6f357e99-1896-4fba-a518-35ad1cb01333",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9db22892-2dfa-476a-8a10-1d0220768ea7"
        },
        "item": {
          "id": "f7237dc4-b3b8-46c0-936f-c3241c7ddc1c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "433623dd-8619-45eb-ba03-187662106ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9658316f-0c6a-4e92-9dab-07560ce4d3b9",
        "cursor": {
          "ref": "5d33efec-d508-41af-8093-8239ed8113b0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c1f60067-bb9b-4b28-8c43-afe2a27b4394"
        },
        "item": {
          "id": "9658316f-0c6a-4e92-9dab-07560ce4d3b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0b4d4a16-c010-4636-a144-6ba6b2a95228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc500d-5a99-42b5-aade-fe9cb1fffa45",
        "cursor": {
          "ref": "6ad63acc-2a7e-488f-93c0-d473d2313dae",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8a670a9-ac7a-4d9c-ac6e-2349c03ac23e"
        },
        "item": {
          "id": "a3bc500d-5a99-42b5-aade-fe9cb1fffa45",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b8a3b6e-dad8-4c8a-b216-40d5b81bf1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de62f3f-96e0-4fa7-a966-2f0407409702",
        "cursor": {
          "ref": "24bbe914-1693-4d56-adb7-8461acc9700a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b0751a63-b7b6-4ce5-ac41-007b25d80ad0"
        },
        "item": {
          "id": "3de62f3f-96e0-4fa7-a966-2f0407409702",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "890e547d-fa48-44f6-a812-c4d5463e36c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e6349-6367-49bc-a068-7ef9878aa9a4",
        "cursor": {
          "ref": "d2b66e7c-dbfe-4561-8444-0a7c0e050693",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "03c3b537-d281-4aa7-a015-e0a03b8fa689"
        },
        "item": {
          "id": "9d5e6349-6367-49bc-a068-7ef9878aa9a4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ff7492d6-59bf-4068-9948-c56d53ffaa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e16b0-d24f-4fd8-ae51-f5a258890a5e",
        "cursor": {
          "ref": "6794463a-85bf-4c7c-8bba-af75d84055a5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1a96c650-92a7-454c-ad79-c2b16dae724d"
        },
        "item": {
          "id": "449e16b0-d24f-4fd8-ae51-f5a258890a5e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a4c70c02-936d-4a5e-b3ad-97891f9b0126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176cb4d7-a728-4611-8c58-ee247b65e84f",
        "cursor": {
          "ref": "7c2ce3ab-b228-48c5-8a71-6bc0aae7d675",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c63805c8-1f18-4a43-9814-303c877fcdc1"
        },
        "item": {
          "id": "176cb4d7-a728-4611-8c58-ee247b65e84f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "93fabef3-a69f-462f-bc5a-9fbd1afdf680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166c89d4-0391-4d18-a1e4-492d15787fa2",
        "cursor": {
          "ref": "cade9f8c-294b-4b81-8094-1aa3e8864b35",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f747add2-6d70-49cd-b3a6-98ad95285d06"
        },
        "item": {
          "id": "166c89d4-0391-4d18-a1e4-492d15787fa2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0e72daab-d5d9-4dee-ade3-dee8874ae247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e703c7d4-c33e-449f-9c15-32dd6d69611f",
        "cursor": {
          "ref": "e7844bb3-55a4-4a46-8a20-7fc3ac10be47",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ef4ffbfe-1846-43c4-aa9d-43a8c8f30fcd"
        },
        "item": {
          "id": "e703c7d4-c33e-449f-9c15-32dd6d69611f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d59cb043-c136-43d7-9c48-ee0fa6926b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeb5fac-8189-4892-b62e-d968bef1a61d",
        "cursor": {
          "ref": "af083955-fe8a-483d-a978-d2a8d41dfb05",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "07509691-0955-49a4-9f44-5aeb69698178"
        },
        "item": {
          "id": "cdeb5fac-8189-4892-b62e-d968bef1a61d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f8aec504-2c7c-4141-8a07-55345ceee2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b992eb-2394-4d6d-99cf-531917b808db",
        "cursor": {
          "ref": "65364447-6ac3-4536-a2b4-f1fec4e407da",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "927758d1-c018-4c56-8b48-71b4ba505088"
        },
        "item": {
          "id": "c4b992eb-2394-4d6d-99cf-531917b808db",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "06684ea2-92d1-4ace-b32c-4f6f7704561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7afcb03-2762-4c5a-9d80-92a35373c028",
        "cursor": {
          "ref": "d522ede2-d98f-4dab-8943-9a8a3f75bdd7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c3b8e20-1b0b-464e-aa7e-45c9c76eba82"
        },
        "item": {
          "id": "a7afcb03-2762-4c5a-9d80-92a35373c028",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f0afde05-9803-45a4-adaa-1f079a6f89a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c130200-fb25-4f21-a21a-26a1a128ee97",
        "cursor": {
          "ref": "dc805dd4-ef72-4f87-ba8f-faaefdbddda2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e76b198b-2009-4a2b-8cf1-a95690e29326"
        },
        "item": {
          "id": "8c130200-fb25-4f21-a21a-26a1a128ee97",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "924d34dc-eea4-43ab-8407-49f9641de58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0153774c-ef01-4021-bc7b-a060e4bd783e",
        "cursor": {
          "ref": "f3b0f7b1-c12f-45cc-a007-1bdfb669fb3b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "87ad7306-701c-4983-a9c5-afd60f6dcd70"
        },
        "item": {
          "id": "0153774c-ef01-4021-bc7b-a060e4bd783e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "56e14b4a-bf19-41fa-9330-d01e87b38d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b9ac0b-b713-4f36-b627-a4aade3a2ceb",
        "cursor": {
          "ref": "4b412ca9-b4a3-4905-b4fb-c6d2f3793a95",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cbab889d-6c0e-44d8-ba26-31793d5eb3d4"
        },
        "item": {
          "id": "c8b9ac0b-b713-4f36-b627-a4aade3a2ceb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "995eba46-7d7d-47c3-a4c5-fa5a1d5cd9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1954b0-8f05-4b5b-9178-b57092d10dd0",
        "cursor": {
          "ref": "6f1fb580-e5f1-4669-a298-707256b83050",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8b06c2fb-c811-4d8c-913f-84173f4fd71a"
        },
        "item": {
          "id": "2e1954b0-8f05-4b5b-9178-b57092d10dd0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3ec1b17b-ba79-4b7a-b395-7c07b9adb164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb58bfe-bd5c-4ede-a9be-f344ec913c79",
        "cursor": {
          "ref": "3efb2d30-33dd-471e-ade0-dcb84c9fcc9d",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "050463cd-cb48-41bb-aec2-d5a2e3a82183"
        },
        "item": {
          "id": "ebb58bfe-bd5c-4ede-a9be-f344ec913c79",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "66794efa-6ec9-4abb-8bab-e636b578fb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0752c53b-9dfc-4349-a743-b58b3d55fb8b",
        "cursor": {
          "ref": "52227db8-2c9f-46e3-b840-3b61da8f8811",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac455b2f-a7a6-4024-840d-b1963f92d860"
        },
        "item": {
          "id": "0752c53b-9dfc-4349-a743-b58b3d55fb8b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6448bc3-336c-4a34-ae13-d6a4365202fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2078e04-7890-43b7-964a-13a6f4ec8778",
        "cursor": {
          "ref": "a794f4dc-d892-4fcd-81c5-75ea66e0f685",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "94b0b93f-5d51-4f25-a997-ceea58b3cb5f"
        },
        "item": {
          "id": "b2078e04-7890-43b7-964a-13a6f4ec8778",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a484a076-43f3-412d-ae40-6ca6cc29ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a82389-45e8-4141-b4be-9d6a5fe09cf3",
        "cursor": {
          "ref": "b3b95f0e-4580-4643-bef8-65472f584b1f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fefdead5-5309-4ee7-9b41-9de89c900b3f"
        },
        "item": {
          "id": "35a82389-45e8-4141-b4be-9d6a5fe09cf3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5cc4b8ef-c077-4419-b1eb-79a36cca130d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5e21c2-7da6-4789-8333-1da123f135ff",
        "cursor": {
          "ref": "cc6743b9-ec86-4351-994a-52a38d9898ab",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4e77cfe3-3ef8-42f5-9ed9-2253acc65509"
        },
        "item": {
          "id": "5b5e21c2-7da6-4789-8333-1da123f135ff",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4c620fcf-c934-421f-bf2d-24c1bc93643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51138050-bdcd-4a66-8be7-2e42bb903e4f",
        "cursor": {
          "ref": "fffff431-6e2c-4cb7-bffd-574ecd662daa",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e5c5c18-7d59-4346-94e4-fdaf74e6a7a3"
        },
        "item": {
          "id": "51138050-bdcd-4a66-8be7-2e42bb903e4f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "36efc77e-fcc5-4f38-9cd9-59a17c1f8dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0a021e-e616-407a-8cfd-59d401fd4799",
        "cursor": {
          "ref": "ce59d652-c865-4ecd-9440-a1bc4ebd9943",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9b678349-d92d-43fb-9564-d8dc3ac249cf"
        },
        "item": {
          "id": "da0a021e-e616-407a-8cfd-59d401fd4799",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "efbbc19f-b1c8-4be2-9298-4ef027de96f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e295b823-4199-4dc4-9f28-21e99e760c3d",
        "cursor": {
          "ref": "911206b4-c02e-4781-9434-5810a9c897b0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d1105a30-905a-4a9a-a7e5-58e5278cfb38"
        },
        "item": {
          "id": "e295b823-4199-4dc4-9f28-21e99e760c3d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59e20f02-f57d-40aa-ad04-506a345c85cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac29ebab-45cd-4d8c-b20a-1ebf1d8fe086",
        "cursor": {
          "ref": "87052e5d-d9a7-4e0c-83e5-092b78798e45",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "40e2ed63-489c-4bdc-a319-e49f9fe2979b"
        },
        "item": {
          "id": "ac29ebab-45cd-4d8c-b20a-1ebf1d8fe086",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c140143c-7598-4292-8fd6-5a945bcba000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6770cf-6147-4dd0-966e-8a1e6f9632bf",
        "cursor": {
          "ref": "68416fb7-7c8a-4837-813e-7db9c406bd48",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4db8c231-3e55-4071-bba4-f5f235d04495"
        },
        "item": {
          "id": "1b6770cf-6147-4dd0-966e-8a1e6f9632bf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb498a41-3868-4364-8104-c8aab2048ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c4dc5d-63cc-499c-881e-9c8a74557141",
        "cursor": {
          "ref": "92af020a-c956-4197-9de7-999254ddfdc1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c647b51-a99f-416e-9bb5-47f1a082face"
        },
        "item": {
          "id": "61c4dc5d-63cc-499c-881e-9c8a74557141",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e3efe133-4296-4ec1-b0b5-c9666ebd814f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b74bcf-b8d7-4c39-b8cf-0aa667471597",
        "cursor": {
          "ref": "82ac7a59-fb7e-4bfd-8ee7-cfc43c7ed334",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "39335d09-65cd-419b-8ebc-b7b9a816d4c1"
        },
        "item": {
          "id": "33b74bcf-b8d7-4c39-b8cf-0aa667471597",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "26e032bf-ca52-49cc-b59e-6ee962c8faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48fbe7f-7924-42d9-92d4-89c7e1cec2ba",
        "cursor": {
          "ref": "5fcd3416-89b6-48a3-9ae0-879a035af323",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9bb24310-6e0f-46e4-94ec-1ba6bb710459"
        },
        "item": {
          "id": "d48fbe7f-7924-42d9-92d4-89c7e1cec2ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8ae3bdfa-991c-4f81-afd9-1455fa7eb9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d969079d-0ef5-431c-8156-e68a7fb05dd8",
        "cursor": {
          "ref": "15af83c4-481c-4e58-8036-534fafb5f46a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fe5263e4-2795-467c-b040-33512a307c05"
        },
        "item": {
          "id": "d969079d-0ef5-431c-8156-e68a7fb05dd8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "da8b0b96-1670-4bd8-bc7a-7283746bb75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb067c6-e1e0-49dd-9ed1-65af9d1d4022",
        "cursor": {
          "ref": "fe44751d-fb51-4819-8495-d1f527e002d9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fbba24a4-f393-4a4d-acfd-468996034adc"
        },
        "item": {
          "id": "9cb067c6-e1e0-49dd-9ed1-65af9d1d4022",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32c910d6-091f-41ac-bbdb-12cd54609635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e893cb-4fcd-4482-98f2-adeb86e40df5",
        "cursor": {
          "ref": "c8c01dbe-7454-4c7e-b015-0c4d318215f1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9175a4f4-f572-420f-bfa4-97a6114332ad"
        },
        "item": {
          "id": "f0e893cb-4fcd-4482-98f2-adeb86e40df5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "702d6cb6-df9a-4216-a58d-89430e51ad1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358a16b8-5b48-4c09-b993-9a406c0a0d20",
        "cursor": {
          "ref": "d4bbb571-1429-4df0-8954-8f3f97f777fa",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4d207d38-8f20-481d-bd5c-8b57e40945b8"
        },
        "item": {
          "id": "358a16b8-5b48-4c09-b993-9a406c0a0d20",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a7ed0b9-6982-42ac-93a3-6924fbf1ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca97924-ce76-408e-854c-1dcd4c0bfcdc",
        "cursor": {
          "ref": "570e0cd8-f446-4acf-a5b3-e48ff807a2ef",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6cc6cbab-f3b0-4557-a1e2-95c4581c2957"
        },
        "item": {
          "id": "dca97924-ce76-408e-854c-1dcd4c0bfcdc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e3345d5-5bf7-4b7b-842f-00176da2a284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995fdc5-0274-45a1-a1e3-c9613bec5282",
        "cursor": {
          "ref": "3068a298-9464-48c4-820d-e35175b9bf82",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "319d38e8-6f37-463c-915d-183798f883c6"
        },
        "item": {
          "id": "0995fdc5-0274-45a1-a1e3-c9613bec5282",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "25ddac91-f2f1-4888-96c4-cd9a077ca52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dfcc79-46ff-42c7-8f43-bb4f448e1413",
        "cursor": {
          "ref": "f470e920-5830-4938-8660-8f15a5c94d96",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e059879f-1e99-4831-b612-ebad900594d3"
        },
        "item": {
          "id": "c4dfcc79-46ff-42c7-8f43-bb4f448e1413",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "57ccd098-162a-4505-9bb5-d1220c537b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4b7c5-66a8-4d8f-922c-1ef561ba06a1",
        "cursor": {
          "ref": "e3d91f04-e22e-4656-8f08-3e25fdc2b68a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a8db7a01-98cd-4dd6-b39c-ddcbd9e1bcbf"
        },
        "item": {
          "id": "20f4b7c5-66a8-4d8f-922c-1ef561ba06a1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "80447fd2-32d0-4740-bd65-38c9ab7b3b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14416952-98e6-4472-b9b4-90506c777dfa",
        "cursor": {
          "ref": "4948d09b-6dd8-4ad9-9002-bab6be7b4630",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ebc463ce-12f1-456d-acc6-2b6ca70a0477"
        },
        "item": {
          "id": "14416952-98e6-4472-b9b4-90506c777dfa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "671b742f-28ab-4aa5-b4d9-bba013e49490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a2173f-af58-4ed2-afc3-2d946669a2e7",
        "cursor": {
          "ref": "a0bd0b1d-64e1-4509-aef8-4ef2ccbb02d6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d0de14e8-9e06-4d50-8161-11aa0af927da"
        },
        "item": {
          "id": "a7a2173f-af58-4ed2-afc3-2d946669a2e7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0a4396cc-ee68-442f-8abb-f1d7593ca2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c53866d-fe6b-4164-a029-0feda08bba17",
        "cursor": {
          "ref": "53bd70de-6a58-4a6b-9082-02993ca34bf5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f2648de-f431-4dd3-a552-ab6912231f60"
        },
        "item": {
          "id": "1c53866d-fe6b-4164-a029-0feda08bba17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "90913c5c-c9d1-44e5-9492-d1d1860a0a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7384708-f469-460d-b083-fd7ce1c560b9",
        "cursor": {
          "ref": "5f1e42ab-1b83-469e-b89a-b90c66d560e9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "737aa006-05ba-47b7-8d8d-c8be3db9835d"
        },
        "item": {
          "id": "d7384708-f469-460d-b083-fd7ce1c560b9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5d9caa5b-2aa8-4a77-806b-e337732e962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520e8bb-8cf6-4ede-bd11-c886cf4e1a32",
        "cursor": {
          "ref": "68732ba4-c63b-4140-b84f-a7f658e4b113",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "009aa0be-6d6b-46c5-b64d-412b3d94e30f"
        },
        "item": {
          "id": "c520e8bb-8cf6-4ede-bd11-c886cf4e1a32",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93d72591-e9f1-492e-affa-f5031cff8126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4fe430-61b8-4567-bb6f-c01316777c07",
        "cursor": {
          "ref": "fd865019-38da-4ede-8264-be463130933b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "946abef9-b319-4a08-b0e1-3d6563113e74"
        },
        "item": {
          "id": "4f4fe430-61b8-4567-bb6f-c01316777c07",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "48364495-01fb-4ee1-bcf4-b3b2c370f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2306ecef-7708-4fd5-84f4-1e72d7fc4426",
        "cursor": {
          "ref": "e3db0fd8-334f-4617-86e4-edbff7a1f3df",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "246a5b4e-de08-4e6f-a497-8385bf6f78a6"
        },
        "item": {
          "id": "2306ecef-7708-4fd5-84f4-1e72d7fc4426",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "91eaf526-676a-41ed-9f91-8822a534ab02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7773fc27-783c-448c-b2bf-6e4dd0591d53",
        "cursor": {
          "ref": "a995c274-140e-423d-bfd1-d914c31f7e9c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0189888d-8355-4de6-bd10-2adee1dd19ef"
        },
        "item": {
          "id": "7773fc27-783c-448c-b2bf-6e4dd0591d53",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8692641c-27e1-40f6-be79-d63811cbd92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb207c3-a59b-438e-9da3-72e6652803ed",
        "cursor": {
          "ref": "b5c0c35b-fadf-489b-8b85-24f3844eb942",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9eba000e-3b30-46d5-8988-5a710757a51f"
        },
        "item": {
          "id": "9eb207c3-a59b-438e-9da3-72e6652803ed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bb9bcaf-e54b-415c-9947-bed4d56a16b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c9f6b6-07dc-433c-bbae-602847347ce5",
        "cursor": {
          "ref": "5f7561b9-3d43-4a21-bec2-f393e1df0428",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd7dea9f-42e6-48d2-9a7d-2437a5a6aeb5"
        },
        "item": {
          "id": "53c9f6b6-07dc-433c-bbae-602847347ce5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "38d4c561-c67a-492b-83fd-778b73653925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc78f87-9ab2-4845-87ac-17b72a429329",
        "cursor": {
          "ref": "685f36ca-a754-4800-8d85-4d7d2c624012",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2dfa9b44-bf2f-4731-a57d-b89cb370f9d5"
        },
        "item": {
          "id": "bcc78f87-9ab2-4845-87ac-17b72a429329",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1ec5289f-b854-46a6-ba62-96f2ca50aed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b87975-fdcc-40d6-bc47-0063089878d5",
        "cursor": {
          "ref": "646451bd-d606-4b33-bbef-a5078560b6ec",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e3034577-9ef1-4ed5-9280-0e5277f1d8e7"
        },
        "item": {
          "id": "a4b87975-fdcc-40d6-bc47-0063089878d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9fff1350-d308-4a7a-8e0c-eb1477f34885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb20f8-292a-48dd-946b-9ff3fb954387",
        "cursor": {
          "ref": "802ab236-68d2-4716-b2e3-56343daeb8d3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "73242287-6f2a-4ac2-ae69-fc985ce12135"
        },
        "item": {
          "id": "b9cb20f8-292a-48dd-946b-9ff3fb954387",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "567e3ebd-ed79-4d11-a3f2-1034f64f6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f52999d-dbc6-49d7-9443-965c5512f509",
        "cursor": {
          "ref": "c5f58aa7-740e-4ee8-a836-6fd019474189",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1cfece34-9724-4412-b816-8c1f558fe77e"
        },
        "item": {
          "id": "3f52999d-dbc6-49d7-9443-965c5512f509",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fdafce74-e447-4594-b943-a1ae5d1d999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a79e4c-808a-4bd1-ac08-5037d29098e0",
        "cursor": {
          "ref": "d51507e4-8b28-461b-ba92-1614768b191c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e913be10-69f3-4688-8463-44c47ef74836"
        },
        "item": {
          "id": "51a79e4c-808a-4bd1-ac08-5037d29098e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9b75b378-fdc1-4ae4-bc79-3186606cfb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c21e89e-055d-4b52-916f-05e83a26c1e5",
        "cursor": {
          "ref": "98fb51a3-869e-4ea1-8c76-30f393fb6143",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dc1bf31e-a2c1-4348-b845-4fbadc5a3dea"
        },
        "item": {
          "id": "4c21e89e-055d-4b52-916f-05e83a26c1e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "17f13a59-63c5-4e73-a6b0-fc8db80ce1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e78929-42fd-46c0-8f9a-84ddd270b0c8",
        "cursor": {
          "ref": "53e8e82b-0c4b-4fd7-8247-463ee4a86df8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "86c3df12-4ac2-4b2d-8ccd-d29a19611574"
        },
        "item": {
          "id": "49e78929-42fd-46c0-8f9a-84ddd270b0c8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6a9aab7c-9a29-4bcf-aa9d-3e373f2c98a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92252a96-45a3-40e3-b18d-39ad4ff7e967",
        "cursor": {
          "ref": "e544dfdf-720c-492b-81b6-3d3ba0a8e4b7",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4792c510-b2ea-4650-99fc-ce3987387206"
        },
        "item": {
          "id": "92252a96-45a3-40e3-b18d-39ad4ff7e967",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "72e7d1e6-189c-404a-a6e7-84b0cc96154e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05f527-36d3-4147-9ecb-2dfa6d6baa5e",
        "cursor": {
          "ref": "c77421f5-f3b8-42aa-b096-cc643855a858",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f972d4d6-ae5a-4a9b-bdb0-86b9034f893a"
        },
        "item": {
          "id": "6f05f527-36d3-4147-9ecb-2dfa6d6baa5e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "91d137e1-b70a-4ef6-93eb-5b227546927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753e694-c08f-4cba-be7b-0b41286434b2",
        "cursor": {
          "ref": "4ffc97d3-b7e2-44ab-ae60-a3754fe0ceb1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e4b0c1c3-4ab4-4b22-a699-fbb20b84ac64"
        },
        "item": {
          "id": "2753e694-c08f-4cba-be7b-0b41286434b2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "49badcf2-dd46-4fc3-b51a-396e5d54b076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51e8b1e-469b-4243-8d49-0b55b5516bab",
        "cursor": {
          "ref": "40fc877f-f394-46d3-b249-94f9d8bfc695",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "66e280b3-0426-4928-8eec-41f3055204ea"
        },
        "item": {
          "id": "a51e8b1e-469b-4243-8d49-0b55b5516bab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3877aa03-66ba-43b1-bce2-3ea3709880d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ea111e-fd33-4fe4-981c-4efce5690c33",
        "cursor": {
          "ref": "443df87b-2e43-40d5-9689-3217fddb54d4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0877f7ae-4fc9-45c2-a1d8-be1e0820abbc"
        },
        "item": {
          "id": "c8ea111e-fd33-4fe4-981c-4efce5690c33",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4eba7bde-1f5c-4f0a-aeb9-0434982ec449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce38d4da-422c-4a15-a566-4f7c58e1a803",
        "cursor": {
          "ref": "77a18ced-a8f3-4713-a730-e59dc501e585",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d5187904-557e-4025-bd2d-23e562629e5d"
        },
        "item": {
          "id": "ce38d4da-422c-4a15-a566-4f7c58e1a803",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c887f270-a442-4c48-aa76-b4636f607f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec540615-dfec-4481-9065-c703e053ba29",
        "cursor": {
          "ref": "3bab8e51-4e90-4457-aa8f-363af1618f20",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d56df6d3-b3f9-43c4-bbeb-e9010c03cdab"
        },
        "item": {
          "id": "ec540615-dfec-4481-9065-c703e053ba29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a0de315-9f84-4517-a158-f39bc099ec97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371d1e2e-f2cf-4ce4-8c6b-9dce43e00474",
        "cursor": {
          "ref": "2114fb88-2338-47f6-8d4b-7acdc446c7b4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "033737b1-a1d6-48e5-9bd2-2da28e0bee44"
        },
        "item": {
          "id": "371d1e2e-f2cf-4ce4-8c6b-9dce43e00474",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "58f32c3c-4259-41d2-82bc-8c44e2e32eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b70bf76-9c02-4020-ab14-2fb81d4f90c5",
        "cursor": {
          "ref": "d0cbe4fc-3b96-4a12-9836-91e7a08541af",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0f42eca2-a021-4800-9950-566cbff0542c"
        },
        "item": {
          "id": "0b70bf76-9c02-4020-ab14-2fb81d4f90c5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "33b777b5-cc8b-4943-b394-181841c68d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a5a13-36ff-4840-a9de-1d21153f2c63",
        "cursor": {
          "ref": "a6ecc4c9-eea5-4335-ab12-173ac61ddd77",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "093958f5-1861-4640-a71e-af3b58802c15"
        },
        "item": {
          "id": "b98a5a13-36ff-4840-a9de-1d21153f2c63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "51ad2a2b-b2b7-44ec-adc6-6b561fa9eaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9198130d-5491-4a1c-9aaf-4c83630b1dfe",
        "cursor": {
          "ref": "0ca3a0a3-d7f4-4fa3-82d0-72daeddad419",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b9531559-1abe-4614-803c-66679fdbb76c"
        },
        "item": {
          "id": "9198130d-5491-4a1c-9aaf-4c83630b1dfe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7157b8a5-16d7-4912-85bc-e6133e6b6b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e86523-db70-4525-9479-18f149553ab5",
        "cursor": {
          "ref": "c50fe7db-3a72-4146-afb6-f6e74c3c9f4f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1e223ae9-df0e-4f93-be7a-a00f588d2041"
        },
        "item": {
          "id": "64e86523-db70-4525-9479-18f149553ab5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b0cd08f3-bd27-4302-bdec-a8f052806c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a66f33-e1e6-4734-82b5-0bc6cb873d0a",
        "cursor": {
          "ref": "548cef12-ced7-4d20-9040-478426b4dab1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a0569afc-2e2c-40a4-8b6e-f2ee16b76c78"
        },
        "item": {
          "id": "07a66f33-e1e6-4734-82b5-0bc6cb873d0a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3fe7268-f97b-401c-bf62-a1fdd804cc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701bcfe8-ed77-4b87-895e-d1e76ab6f3f4",
        "cursor": {
          "ref": "d7d594d2-ad52-47fd-818b-f4161d22b816",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cb1ba459-3cf3-4674-a337-4f41e6d3b213"
        },
        "item": {
          "id": "701bcfe8-ed77-4b87-895e-d1e76ab6f3f4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94752729-ea25-44d9-82af-56c5bad20bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e171ab0-f5a4-4c7c-803a-5e7605664abf",
        "cursor": {
          "ref": "723ec45d-0a82-4dbd-a71f-e1d3b7a63dd1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d8ec0687-15d8-4bc7-8d87-79c753b189e2"
        },
        "item": {
          "id": "2e171ab0-f5a4-4c7c-803a-5e7605664abf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a10983fa-397f-41ee-b591-fa2ed12bc5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0deddf6-dc0e-4366-9abf-360e323064e1",
        "cursor": {
          "ref": "f23cc4c7-c80f-4bea-bf38-67faa778d551",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fa8444c4-a138-448a-a8f4-8518b98b6460"
        },
        "item": {
          "id": "f0deddf6-dc0e-4366-9abf-360e323064e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "18643e74-9ec2-4a46-8e4c-2855f7802e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec188515-e43f-4870-a89e-9a24e7a4a51e",
        "cursor": {
          "ref": "f332202f-ad7d-469c-a783-109814029f05",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a316ed1e-6484-4f65-9209-b77c12b028ed"
        },
        "item": {
          "id": "ec188515-e43f-4870-a89e-9a24e7a4a51e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d0073147-7104-4674-8290-1e80b96ff9ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6867cf56-438e-445e-92e8-01c50c977e82",
        "cursor": {
          "ref": "ea49e57b-c178-4430-9561-9bfd40357dd4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4cc58636-c20b-4226-ab4c-5938efd1f482"
        },
        "item": {
          "id": "6867cf56-438e-445e-92e8-01c50c977e82",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3d4b0d2f-8603-4d4f-a26f-c4b0255ce9d9",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1685738e-982f-43ee-a993-201fa9956a29",
        "cursor": {
          "ref": "96246824-c6d9-4a3c-9a71-560d90e7482f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "562b23de-3c18-4e5b-80e9-17eb321eaa32"
        },
        "item": {
          "id": "1685738e-982f-43ee-a993-201fa9956a29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7f0de06b-db3f-490a-8791-9a72b08eab3b",
          "status": "OK",
          "code": 200,
          "responseTime": 1458,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "221d837a-4f1f-4997-b025-0b8be80457ba",
        "cursor": {
          "ref": "ab49fd71-bc76-46a3-aa62-120eff8e582d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "757d1d10-1b5e-40f3-9b36-5ceeabf10ab6"
        },
        "item": {
          "id": "221d837a-4f1f-4997-b025-0b8be80457ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bf628c70-aefd-430b-bcf6-9b7838936b56",
          "status": "OK",
          "code": 200,
          "responseTime": 1294,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee7292-9e69-4f7e-aec0-2249052e1dfb",
        "cursor": {
          "ref": "04d1aa86-bbdd-42eb-bde0-699eedd6435e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4152d74d-337f-4bec-9342-0988b1679cc1"
        },
        "item": {
          "id": "81ee7292-9e69-4f7e-aec0-2249052e1dfb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3bf6d0b1-2ccd-47b2-9dd9-89139ace6faa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee7292-9e69-4f7e-aec0-2249052e1dfb",
        "cursor": {
          "ref": "04d1aa86-bbdd-42eb-bde0-699eedd6435e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4152d74d-337f-4bec-9342-0988b1679cc1"
        },
        "item": {
          "id": "81ee7292-9e69-4f7e-aec0-2249052e1dfb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3bf6d0b1-2ccd-47b2-9dd9-89139ace6faa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfddf507-6c5f-4165-88bd-fb8d91fcd3df",
        "cursor": {
          "ref": "2df698c5-3ca8-49a9-a6cc-406b2e2273bc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c68ff038-8e29-4c05-ad10-51c9a2d097c0"
        },
        "item": {
          "id": "dfddf507-6c5f-4165-88bd-fb8d91fcd3df",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "032d6e61-81fc-43a7-9f36-10a32fa8f1cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52363f52-fc9b-46d1-8f97-09aa0858e647",
        "cursor": {
          "ref": "7d3cd98d-adb5-4bbd-8dd8-cbdaebb7bd2e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c1cac4d0-8128-4e05-bc7a-f04454a3f587"
        },
        "item": {
          "id": "52363f52-fc9b-46d1-8f97-09aa0858e647",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6fd3ad32-45f8-4877-905d-ca5af2d93ee4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}