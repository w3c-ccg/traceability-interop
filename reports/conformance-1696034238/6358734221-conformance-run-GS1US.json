{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "172e0c3f-b7c9-486d-a33a-b3cb45032e60",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6a61397e-12f5-4e80-8ad5-313bc519ebc5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fecc3ad7-0940-422b-8f22-0d28d4fbcd5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47b9f886-6717-4659-b0d8-bca9ce589bc7"
                }
              }
            ]
          },
          {
            "id": "6fc600ad-d079-45c0-b9fb-7722b3717e49",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "637b735c-b725-4f15-be14-555624d1fde4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab12de88-72f4-42cc-9f0f-b741536910a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "21d830d4-47e0-45ff-b197-97b3b63aee3b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8e02110e-8dc7-46fa-bd8a-653a57a3455e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd09bee0-879b-4ff0-aa44-8c24bb2d1251",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a60fc-154a-4221-b041-3ec4b507c1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a56aadca-53d3-4c5f-8621-cb8c1ae29ac9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30d44db4-d3da-4fdb-810c-f5051408db7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23556d96-57da-4a95-bb35-41f9d402d8ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "879b7738-a550-4147-a7fe-9392b9cc897f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77722498-05dc-491c-bbe2-435e2c50eafa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727c9769-b549-4fd1-a594-cc752af8f500",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "437fdd8e-18ee-4c17-a7ec-85c86fbd47b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6dc0d46-1729-4022-8cac-655bff47dc43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "476fe5de-92e9-4b1a-a62d-417e03f2c411"
            }
          }
        ]
      },
      {
        "id": "a705201d-f693-4fa2-8f98-23b606d378b1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83d471a0-66a4-4869-9ac2-d9394d8652ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b14e4c3d-1d51-42f9-be27-de52d14a1a8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57a0b893-2564-45f1-b204-5a9c2c5aaafb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f83a27-bd55-4376-82bb-393fd0dde62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc026688-0396-4abb-85ed-cf1421fcd97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d238c96c-6563-4e7e-85c6-0a8588ec1c45",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6774ce3f-a29e-4388-9ffb-cea9940e2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e588a11d-9ee3-4e71-9c07-dce74f0b37f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cef726-6935-469e-8dea-3b860b7e563f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2630fd4-3993-4d84-9ade-2381b1e884d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c2f00ba-06ff-4783-8264-fd6f3e2e13f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49fc66af-6046-4817-8dd4-ec9bed15c5f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a888412-7839-4857-ba43-7a5997603ddd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795cad05-1af3-4ea2-882e-04dc0430ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "775e9006-c74e-4b4a-82cf-097cf38bdc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f677923e-856c-4f68-8379-cef2eb881326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10478081-a580-4672-8dc1-2cd5e5e88899"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d36280a-7dc2-4b84-892b-23455b550a53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16d156b4-a4da-4e60-95ed-156dd8b69cd6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65c87189-21ef-4c1c-80ee-32f335db3680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ae4b67e0-f129-4dbe-ad7a-3fd73188ad3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac853a36-7e98-4e6c-9a39-70c26b3c6a15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d3b16c05-5e4e-4645-8d3d-703df1aa8a8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d833ea6-05a3-493a-8271-472f05198a73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb95b5b5-5a9f-463f-b278-7ce68b41cda0"
            }
          }
        ]
      },
      {
        "id": "342cd881-1192-4408-aca6-cc38d2ca7e12",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9731b660-ea5d-4077-a76f-88619ee4e6a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b8fc62a-593a-4f6c-99a5-bff57716b959",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c26b93b-fbec-4e74-8164-a2eb8bdcdd7c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33036def-6385-4939-b592-3a9234867795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c6b2c3-db61-4b49-a2b5-3ea40c8fa9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c136838-0e82-4cd1-8c2a-93f0d3a7b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c40c059c-904c-4123-8759-253deb5a7aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a431548-c235-434b-a91a-712c37e9d187",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf993d4a-1862-4eb7-ad4d-cd64db10e69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3044a1ec-66d0-43b4-b3ac-4961521c0351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3384885f-91d1-40f1-adfe-c201d0e5f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ea20b2d-e466-4e01-b85d-43472bbeba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3b9e27-0374-4924-ae61-2017ebe45ba5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6a61c-7c71-4951-bfc3-fa37b8e328f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2249ad1d-9917-422e-971a-103b7d70f674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1d770-4482-4339-a8a7-028f3fc4c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d60cd3e-2fdb-4231-9473-f2138070390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25722f36-ae3d-4ed4-85fb-0cf831446971",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b05d257-b143-4995-b5b5-4bd480106735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a539ef22-fb2b-4223-962b-07655c7dc5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e9923a-c506-4184-8da1-5aa949103ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3fe0e8-fa18-4e84-9702-b58197762d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1a934a-ac89-4027-9113-1547ad49d4a5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e822d2-119f-40eb-bc03-4d5783381f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aeebd0-1fe3-4f77-b47b-53a77196eb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2378f1f-8ee4-4205-8732-299b95fce513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5bdaf36-2728-4884-b561-5a7a6a8df39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436e85b-ed3c-4893-84d5-10ceafc58317",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b7cf9e-b77b-4159-9a75-6fcc1e41d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ad9d8b-f442-405a-b42c-d40fdd3c1cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbf4c5e-90bc-455f-89d5-fa5e9fe57eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b627a24-8516-47a1-85c6-188fb36f2ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8186aac4-15be-4ebd-b7fb-4ce19a998226",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e29a1c8-db8c-4415-b014-7523bfa5fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eafb5c9-ac6a-4e32-b422-eae2ed3ab79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d767613-4efb-4ffb-add8-a44e2bf6f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a173fc36-123d-4da1-ba94-eb9fea4671ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4923c85f-681a-4c30-b5b7-9a98484f0a09",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50d320e-9839-4e59-bde2-b92be68958cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657373e9-ef94-4f1e-a224-33cac1bf41cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c20b398-1f59-456e-a189-9f9213058ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef9b8911-8d9b-49b3-a5dc-2ec5793b3f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b3849b-7aef-4832-b210-4876ed82d84d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7faf51-c7e3-44eb-8858-43483126ca99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aac058-be7e-4ef5-b1fb-e8d3cabfe689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada71551-c551-49bc-944b-a0ef243172cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "927139ee-da01-411d-8288-6c99869813ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a43d7b-a028-4877-bc17-e29a2f63dfd2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422acb3c-f634-43d3-9650-8e35111ce020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b4ea45-ca87-414b-82c0-ecb2123b0ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c536c68a-d86b-49b9-904c-fc812c00b5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daaec65b-b08a-4085-9ede-acb1120d20c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a80245a-14e5-482e-b7e8-10b9799396a0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd961937-7de7-4bb4-9868-e3614e165ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a920b4f6-be52-4b23-bd93-93b36d42e830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7c7b69-7e6f-4675-9f50-ec64d14edbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac774b97-ae69-42df-8bf8-bf179032bb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2e8636-6c3f-4e28-9605-4e1eab5265a2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac5376b-a314-41a0-9ef2-bcd8a4d7beb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8290f7d-596a-444a-b658-fc230f833dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76dc113-e9ac-4577-9a22-8fe31aaec44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b9d0fd-9273-451d-8ddc-d84594fdd266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557218ad-8f45-489d-9d1f-ec8aeecad018",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1c300-9682-41c2-b164-0906f2a8635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea97d1b-bfd9-4341-afc6-92c2e936a14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408b31e6-7eec-4a5a-998a-ecf19d765a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d34655ab-bd8f-4b20-8528-956943352497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2251a43-e0e6-4c1e-bbc9-6fce7a78745f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c9a62c-2c79-4604-9f3e-52fc9b25f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b51cb9c-d479-40c1-9fe5-c6e6b967fd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cf4f5a-3f92-40d1-8028-4b8343099bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92bc3aae-738f-4f22-b52f-df94d813b01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea850e99-7f1b-4a1d-8ccb-035729cb323b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d492547-1507-4fce-8a57-6d8087b0eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f1db2-e3fa-440e-83af-afca8d036776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a78744d-6302-489e-9866-dfc4e03a5404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa73a952-eaae-42c7-ac78-85d6b0d74e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61ec93e-1592-44df-9f59-fe4f7efd0e48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bbe523-da56-4fb9-a158-89e2e99fcf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82699e7-094f-4b30-a2a4-18881a2f3534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af429d0d-172f-4b28-b9db-2de9eac6f4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa37403-f805-4ede-b903-e7241d78627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5ba4c3-6987-4e80-a41c-21ee7f3ac66f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b61a2a5-39d3-46b4-8c65-f492437c0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a554dba-3da1-4134-9527-a20932ba87cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeff029-b5f5-462f-85c5-3de8b01b2b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fcdae2c-de73-4dbb-94e6-dd6f75524db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c63b47-c44c-4fd8-bca1-da3d9c2776bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d3acc-f5ea-49f7-9c75-8cd5882fc887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4d9b14-282b-4fdc-b240-5b5986c19517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d79190-0be2-4bd2-96b9-35a16ac04edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39251f4a-ce1b-47fd-9156-7a19b0d64bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11faee8-47a5-401f-be09-9556e260a7a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d018a-bf0a-445f-aa67-5463893121da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10910067-ddc1-4fc8-b1c3-1239372e102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06b4461-8896-4e5c-bbb9-196243976b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0628f09b-9930-41ae-9081-eb11dcc89eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150600e4-93e4-4591-964e-f4d40b8594ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27015c9-98f5-442b-ab7d-c39fd812ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7960c03-ef68-43f5-a7e6-7d559f9f981e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28055492-3e31-4e68-aedf-0c0459e5736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dae2f0e-bc1a-4c0f-8ab8-6e9f5afcf04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b63bcbf-bd69-4766-bf50-3454829a71fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a2822a-8558-4fbd-a8f9-a226b889ae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7495cad-4e17-4fc8-a333-c330627852ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52572402-b7b2-4937-9a01-1db16ca3ef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce931ab-ed76-4a66-a61d-4609885958e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694c823f-55ee-4de8-a903-dd20f0e8a5e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42853b01-070c-4b3f-8ca5-eae22ede825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269c3993-426d-4d54-968b-ce828bc773cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e368e35-22b3-4a69-ba57-1f4aa7cce4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1220e9e5-bd5d-47af-a0d1-3ed4aadd1903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f127ab35-eb59-4c6f-8359-c6858fc1324f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d04f1-33b1-4156-9bc3-6be1c19174ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea979cfb-dbf8-47d5-8361-04b11f481f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4262405b-1241-45be-aa5f-81a5fef882d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2f9985-39da-420c-8841-be93ecfeea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90830832-40d3-4ffc-b840-82651d72e513",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd3938d-ebff-468e-8bcd-cb3a3baaf5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b33bc-007b-4698-b6c3-0d5c7d8d0b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9964f06-0d0e-410b-b8e7-d2ed6d2ba12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3685eafc-36d6-458c-b46a-08ad593f3963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6d26ac-41d3-4fdd-9580-65928aff16f6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb352b94-ff20-4405-84c3-d3f1f82a1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c7cc8a-9412-4663-849b-b86b048531c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da774006-226d-4148-969f-53ed345ffdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd5d0fa-da55-4b65-911a-94fb5d2e8352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b651f-fdaa-45fd-8532-d9141f1961b1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dd5a52-32b0-40b7-bc16-b62d223b92aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24bd4ff-f533-4eb1-98dc-2bb510e75e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73a932d-6508-4669-94e6-b9c5716933e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "813c7807-54c1-4547-ac20-1ba653305745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238883e0-131c-468f-a651-bd1ce9c5d386",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5ab0d5-05bb-4183-b136-00bbe2b9cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380b1c26-4dff-4901-b905-2f1a65b22ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14e389a-5881-4cf6-adc9-75f3b3480d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f04ca49-1945-4a5d-8c60-6ef0670b307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e6694e-cc83-40a4-9319-e5011b83b30b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06999aa-12e5-441e-a0c6-5eacfe30a59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8fe6f7-3210-4812-84ec-8c00ce1e5109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8f9139-4111-4574-96ba-470bb086a0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fafd47-7b83-4472-967d-05d75be73765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bea3e4-b44f-46ee-a411-a5dc53fde825",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897f02d-29a7-4d1f-aedf-c005174d6cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbacaf58-0f71-402e-8c5d-a7414e09a58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a57824a-173c-4b10-a98f-883ec53fe733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b24dcfa-b354-4a2e-9baa-5ca38fc42278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1c4d29-bab4-4064-9ff6-493a49113dff",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d701f26e-c63f-4df2-ac9b-7bffc7ce96a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec02259-e774-4fce-992d-1871a6285ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1870cfd2-986f-4afd-ac2d-d54ff7899cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9d8350-3c9f-49a8-9696-a887e4eff742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0020fe21-6649-4ede-95b5-1db913140a11",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a7f891-fe89-445a-b1f1-53057464c66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb7601-515f-40e3-b726-3025458a9c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd01029-ec76-4d14-a5ee-85de530d2900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1905f69b-e466-46b1-a710-4bde705d81e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2416d5-1f40-43f7-8f9a-11efb6088554",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d070b80-3f02-49a2-b280-deb92fe92610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6903e45b-82cf-49f5-a238-2816092d2388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c7a655-910f-4ebc-9f98-25b946acb541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e4f118-ed5e-4311-b24d-97f030b5a401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e2687-4ea9-4bc1-b3e2-f2ef24b0f433",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bbbfef-959f-4cfc-a4e0-1b382d633529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729b3f90-b1ca-4e74-8448-7a46d32b3eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ddbc18-8030-4b63-85ed-a1293f1b7015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "318d1696-77bb-448e-881e-f8bc0e876a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673988ff-a2c4-4c4b-a4ea-b0fab2fd6af7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cb27af-3592-43da-bcc4-42cdbad7d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6991f83c-c5e7-433e-8e27-652253c6dbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52b7f8a-4594-4f11-91c4-0e983056c922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf88c070-d6e4-477a-8832-728cd85df299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f13289b-6c18-4f38-bb92-2290bab1c033",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e3ab98-0fe0-4d88-838e-6a16dfa21752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d68957d-c629-4725-8581-a5c522812c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3573f2fc-e653-44a8-9851-1e8c916d1c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c27969d5-8963-478e-b43f-e177418304b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0940fb-a9f9-4cdd-8a50-3a8cdd3f371f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaaa14a-0a7a-4ff8-9f5d-b1c53e92077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8481a5a-9b59-4a96-95dd-56a276f6499f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00116e3-e27c-488c-8efa-ad6fa88ceddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38b1d68a-497f-4fbe-a289-b3e1e7dcc1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f79338-1e80-4041-8317-cb7ddc48f399",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c0fc95-21bb-4b8c-972a-e132ee58f100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991788b6-ade2-4ce4-ab3a-f3ea3674ea4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84d942-3c17-40c7-8ea8-500af7533ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "394e8d7d-8cad-44f1-8195-9c38336816ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e913bf5-9f9b-4d8e-8d34-576d7b780182",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bbd1e3-155a-4f33-a46e-df7b33042af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0095ff07-1cab-4c03-9edb-668b766f550f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf36397-d4fa-4e3c-9d5b-2123a501d987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa2e569-9c88-4435-98cd-582756e8fe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ad013-e1ae-48a7-b5fa-181b50728cbb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a8d570-787e-4f8a-8802-0fcc03f6bcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ed2aae-f3a0-4fd7-8b0c-87b71d3f64b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d4aa9-3ce8-48d0-961b-2e5e13c98435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "604faec2-ddfd-4a3f-a781-5d14a4885aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23538b7-0af9-4774-8150-b591645805c5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9799224-55c8-4a97-8cea-1f9a182eddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e047367-2610-4fe0-a4f3-a6b144631b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7bde15-d6aa-4c83-97ee-a17ef1edc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51799902-fdde-43ae-be82-c89e64a5a406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76df9575-3973-47af-bb2d-f135c0c54b70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af85224-d691-4a9a-8332-0cc990a6e78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7fcb15-a4e2-4b9e-b624-1bef60b79c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f309bee-aad8-4bd6-90ab-c5528c02dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b2814f-2e79-4c80-a1a4-20ceed7e2eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1211f42c-543e-400e-9c26-0694568763b7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db698ae5-8a14-4828-9d1c-e9a278ac06da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f0222b-bcc5-4bf3-8361-cc56a131e94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa7577d-219c-4a76-9cc9-40c2afc57bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8e72a14b-e45e-4818-b95d-eaf6c9c94950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d9157-042d-43f7-abf8-33be30979327",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c415a62-bfb1-4dfa-b1a9-b21736546136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bd88d8-01b0-4aec-a7f6-1a591bb29272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946aa0eb-adcd-4fdc-8cd0-63951b05e53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e46b20-d3a1-41f4-a1f8-9a53b0cbb630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765544e2-0f7a-4f0f-8abc-ea9131bc5fea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654228de-c376-4fed-8164-c8b42fd00033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a3a014-8092-4272-b4c5-23f06f90e494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f25e88-d991-4219-89e3-96f589798610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "00059aaf-73d0-43f4-b452-1bf37f0c2f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983198e4-42f9-4ab1-b2cd-dc6ecbf7333a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23618c56-976b-4efc-bb1a-4b6667366667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e9b306-bbf7-467c-9817-7e551f040552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01f0779-4b81-46cd-8511-14e1f1693179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff3cccc-874e-4906-9899-d9377b4775ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfb6f6c-978f-4ae4-8a4d-f86b53c2f4f8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2e8c94-bbe5-4199-824b-4edc4ca5abcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1281f34-db64-4935-84fc-0628a0507f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75b272a-2926-4634-8f5b-691e54009047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b64945f-bfe3-4782-8f28-b078c863bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b4b35c-8cb3-44e8-b55e-110777d2cef2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a853fb-df06-4d18-a608-dd55a31d9202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71768b06-b487-4841-8838-a8b6d5f7f675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50315ecc-d7fc-4928-8d21-388a039917a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca5eeb6-da8a-47ad-bd60-d9fe8fbfe1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e668dafc-28dd-4af0-b47a-d1b6412f3030",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ae1a2e-2fbd-4235-b3d4-b40a1e08fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14fb7c8-2a9e-4f8e-8e9e-9875b01449db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935d4843-658a-4fce-806c-0f8eac24e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae48a9d6-c39b-434c-bd8b-78dc3130cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f446a14-fa6e-41d8-921c-389fa6c717ff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a5400-badd-458e-93d1-baa94a866f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d8b6fa-a348-4a1f-b0bb-af4fa2f14227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4892fb37-f036-461f-aa93-0f375d9cb520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e20263-3b48-42d0-bbb7-139fa6b3aa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569cdadc-e852-4290-9f9b-79ee4d3aa1f7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87de916a-001f-435d-b9f4-07abc2507852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634275e5-760d-406c-a423-4da570cdb73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcb130e-28f1-423d-84f8-38b770e07fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba46112-8f76-4c65-8a12-df2ba20c4c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1976a2e9-7ab4-490e-b065-ad9ea3b7b655",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9368817c-feda-40d3-8887-d724417a689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4b4465-278c-4691-914a-9306fe985eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696cdc6f-b37e-4b53-9206-9ed4332631bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6307af36-6a35-4b11-bfed-66697c8059f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4ec5c8-3f78-410a-bcd3-b71f357e574c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4141076-9334-4176-8a08-f5565258e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7722d546-214e-4cd8-960c-111e4b7e9c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65560c0-1315-47bd-9ad9-dfa88c9f4c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e37df86-d02a-4949-9d84-295ef0b9a4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5ca46d-652b-443d-a56c-fc5350b36ed6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32f434-2cdd-40c1-aeb4-b3e0aad722d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b527ae3-dd60-4525-a879-0c99e3ddd2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d70968-67b3-4584-9bca-f5639f0ce774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33efa159-e442-43c9-a2ab-0192f135ab6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87761a2-5105-450b-b4d4-fd9e0b76b552",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694ee197-0336-4a98-8adb-1fe8d2a4bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8c9a27-e2a9-4338-8de1-1bc5e7fe3d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dac1e09-0c56-4503-bb56-a2f1a99ae1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "474dec96-6a0d-4a43-8254-590c5d4e7301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd0857e-3df7-43ae-88b7-b59a55125baa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7df429-0fd2-4ab6-8a31-4d7964986bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7664a5aa-4913-4bbc-8e8b-8e3e96c814e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf869b3a-6b78-429c-ad1e-dbddac1d8fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5c0fb2-6288-4108-9472-dd3849d793f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d38b5-fc4b-42b5-a917-a58ee634e854",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e1785a-8f1b-477b-8578-ffb62ca63b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c03b15c-0b5c-4d27-a71d-2a3bc6ab2594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b75c34-e540-47c1-8dcb-022652a83584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a50260-9ac0-406e-8495-5570a9d54fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2af006-839e-48d7-b462-0eb997d07ac9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89260c08-0ed1-464a-aebc-45d106d67eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d53750-8097-4944-9ea4-47143a564563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72fe8d-ace8-495e-a01d-d1f5c3816eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6231877d-c24c-486a-a177-cf820bd3ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a10890c-2be8-4fe3-a7ae-e3c6d8052ad0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8478587-8f50-4793-8778-be9f42996137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc831c7-21a9-4527-8357-cf731eeb815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257b7d0b-4a9b-4f0c-90f7-824beeabd02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1baa53c2-0a71-4c1e-94af-2c53cd7969eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd89c37b-1415-40cb-945d-82949133d058",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adf21cb-fe6d-4cc8-8f51-3e774c4b828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe1b838-93af-4c53-b793-5088da6b74b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbfc4f5-b370-4b03-b9bb-fea6f15bf366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5df6e7e-6517-435a-aec5-cb3640917662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f7b13-eea8-417e-a5ee-60383a7d7c47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e61e30-d826-4122-accf-2417d15a7d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5655b7f-e6cb-4d09-ae3a-011edaf791e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c9c3b9-cdfe-4466-9821-4e45b8336ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb1d9b4-9131-441a-b3b5-74749721afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa06251-19f7-4e1e-a9e7-02659c066ec7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe16cc7b-7901-4d68-b738-a74c6a2f524b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980b1813-4628-47ac-a421-2a0e44fdc74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d6c68-64a7-4d90-9ede-9a2a68311afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b672dd5c-818c-467e-8a53-6172c8f936b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e277cded-8d34-41e7-8abc-7c534170c897",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fae339-0ea2-42fd-b4fc-31eece9568cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24315412-ae51-4582-b2d6-32858b73e072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1a1ad2-c7b7-4470-abe8-894cc146f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c59aa1-77b7-42a1-a4ef-17b2dd2103fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555d1c51-ce19-4bbb-97a2-dc4816cb1de7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345b60a0-faf0-494d-a665-ba238fc27d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7caf0e-dcd6-4f60-bc1d-a5450ee5ad91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8185af4-9c18-4879-98f7-c78c4e897c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "147d2c1b-891b-4bb4-857b-13debe00ae4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd46eac5-5a88-46b5-bd88-b4b039525045",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc7d5a-7b04-4347-a66f-9b7af802004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f0f4ed-fb6e-4ebc-95af-95399faba404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7efdb9a-f6cd-4903-a017-8147e7c00401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b451ddc4-8763-4ad1-bef6-758cd8440a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2deb058-7800-4e7a-87ea-75c6ca18722a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd387ed-1204-4c53-ac1a-dbdb30e1aae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff02032-0a3d-4e16-b8dd-ac9bafa152b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6dc0ca-34c6-4d29-8199-a989e0ef98cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc85eaa-c8a8-44e5-964b-96800b1358b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7772dcd-302f-44a3-bc14-1a6fabdd0ac1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291263c-b4e5-4c75-bee9-c3cc67c49c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c1089c-c58e-41e7-bfd6-a75b7e2b73cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0a74b2-d7c8-4a0d-8e5a-575401312cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd80d3f-9998-4acc-830b-e4be115faae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be53cbd-6f07-4800-8b00-641361a369ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa7270d-3002-4d1b-9ff5-cf459408ff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257ad28-c3b9-4973-9e8d-1b65dd5c8c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469157ef-97b4-4ce6-a239-563cb4c32b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f606d615-4a3e-45fc-943f-d4653c2e10ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568689a5-e947-44c5-af99-f66dd2e82487",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f478082f-c0ae-4a5b-b0b0-df6b88304f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa022e04-0445-4bc0-8fce-427e7f5db265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004177a5-6a0b-4da6-96ab-3e352ef951f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2e42d3-f2bf-4fc0-99a2-898c46b28541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881e4587-11ef-45ad-8f81-0664f92d8e7c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2d4ae7-f28a-4965-9729-5e9dac3c1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec441fe-a7e9-41e6-93ce-f4ae864f0b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df4061-c8a4-4138-b797-03a30dafeb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04240360-6dca-409f-8240-a217fea0e137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dc27ca-6aec-455b-b88c-d5a9a2d642f2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2aa174-9755-4a8e-bb12-c46393c7c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c68d41-5ad9-4f08-b359-d6178e62b209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cba7669-a7e4-42c9-a779-43d26a1c3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2974d5f-eaea-495c-a02f-50e0ba5a30c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6986e2ff-785a-456e-b5a2-a35a9af15095",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372c6004-b738-4bfc-a77d-b81b67f4cbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706a02e0-f529-4725-ba3a-4daa18b18916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005fb5b9-32f3-4c2e-9b44-d3fcc9beca8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17c222a-47e5-4c07-8434-e324c2296df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95a7e9f-2af3-4b87-8642-2bdece18b78b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8aa4ed-b099-40d5-93c3-5ffe80c1481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c355d59e-0e6d-4c3c-904d-378e2e7ffed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07460a6a-1c5b-4e3d-b5d6-e9fb62987264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce4e573-7446-4d92-8f14-e8a105940885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01170bc-d202-49d4-b3c5-cf2c9f918193",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6671c759-20b5-465f-922a-127cbf72afc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0276e470-8d55-4ed7-90ec-a44c710fd74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7e267f-8062-4ffb-912e-4ed5df7e7512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b890d3-b9d1-43af-b1a5-2a778a92fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a94877-138a-4a22-821b-1ec59a8fd033",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98bcb22-a1c4-4be0-aac8-748f5f91d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc479f2-4f1e-467d-8f5d-12de1af4ea90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337e994a-6be2-4626-8f47-8f70e6e05a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e654da2-64e9-4a16-8329-ede982652933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89402ad-0cff-48b9-8ae4-fb21e37bd857",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad21046-9f95-4958-a82a-223ecaad2ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d20b371-8c62-47c7-a8d7-e80970572d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9900a2-1df1-4eae-8510-59bf3892ea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd470cd-a90c-4cf8-90f1-a9b40376696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b61d08-fba1-4393-9ed7-74b64bc1386a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f27db8-a478-4c3b-92a0-04ba626ab0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6fca63-9bc6-40da-bdac-8b8fd3e5f887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96849cc1-4129-400e-bc3f-d298e3e9643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ca90f6-ad29-4eed-a8f8-e836d387eea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889433dc-fa89-42d8-85e3-e0a962b84b77",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0ccb99-3f8c-4580-8188-d7dcd195a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcfcd75-582b-47fc-a510-e0f447c5702b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980c399c-e7b5-4819-9abc-6d62ef111049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f3264d-840b-4159-a36a-75631b4f40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecbc5a0-bd1d-4a10-bbae-f4b9bdce2be7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c257a9-f3e1-4c3a-8160-0ae4b6cc062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff033f8-ab10-4e5f-98a2-27c9821b2462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dffc31c-83d6-48ce-86f9-c16d285cceb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca05d75b-5460-4455-97d4-b09b1342fcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd641b-ddba-4e2c-b7ae-1d1bd31ad835",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c81f40-b27a-4493-9ea2-cadd708e86c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582af572-9157-438a-9d95-9931c415425d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8028cb37-d3d6-4aed-bfec-1b3a7c88cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "709ce69d-e3b5-4a93-b98e-8181cc161609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789de6cc-2d0b-4a0e-987e-af3a158629ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f1aaf-9858-4b02-b38c-999fa00bb836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e462e8c-4661-4855-8298-2c4a5990731a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96586b4c-a271-45e3-a5c5-7ed24ab31263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "558988b1-5d94-47f9-bc08-d763abbef96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b4aca1-75a2-4ca2-bf63-9ff34fabc6b8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c84fea-9d4f-4915-9871-44657cd49936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bd0d2b-3a5d-466b-a56f-c03f9008cee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed614d45-ff9f-491c-8f75-e181fd7edafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "681c5fcf-72d5-4b77-a4ef-9bff68f0252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5c6f8e-5c5e-4f44-b265-3a2fa6221d28",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889917e9-c3b1-491f-af9e-7b93e6466b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623ce4d6-1970-4961-ba4b-62c0f0aa5d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8def11aa-8577-4c87-af3f-7d197ae2b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1735322c-fd71-4c96-a2bc-9ab49ebeb5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b4655a-ca32-445b-97dd-c77729b58502",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0ba701-c4cd-4482-9d22-75d191075b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37405af-9a16-4b4b-af59-81bd41c15772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dcb002-e14c-4ef5-ad5f-702b1b8d948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a098306-56ff-485a-92e8-c0f2135655f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a6c4f-df95-4018-9b11-933c7f76e0f6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685896ca-df7e-4674-8630-6d19342a3c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36621ea0-b303-4a1f-8bc3-242d224aa970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bdcc57-0885-49fa-9378-d6abe45a8449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa9c0d8-6703-4333-bc58-d4bff104c509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141b7e11-b1aa-46b9-bedb-bf9098bf47b2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da9605-bfe4-4d64-b115-ead5f9c96395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378a6671-ee45-485a-b6d8-2039e98ac66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c3be3-8611-48c5-a212-9a2c3556540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35c0ffc1-506f-416d-b91d-9a46de332bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a7c09e-0bc2-4153-9e17-e9a8678584e9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ec044-558e-4668-bd5c-80190beb0af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9433c20-0242-4f06-a5d8-f7cff69a7855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb862ed-02ad-4812-82a3-4ff57df8ca78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ac30af-f520-4f45-9eaf-b7955209f43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf576b6-7acf-4d81-8c62-cad7cc569dfd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706bc92c-268e-4489-985c-a70be11b86fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334ac306-25cf-4c2a-bc6c-207e24e1fed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a644cbd-7387-45d2-a00f-a73f9f4297d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98be500f-73a7-4aa5-970b-f5c1caaafc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9954e517-42db-451f-b1f7-57aa0d01b13f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fcf0af-7a49-4544-90a6-9c6355ae0369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71d5de0-4bc5-4b23-84ec-96abd96c0290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0c6529-8cf4-4dc5-9743-f58fac748269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0be0a9-9b8f-430c-a93c-a5c2b02d6e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd0713-4143-4a1e-89c3-c929efa2f969",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b384e0-a0cc-403a-a16c-04eeb236679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc3f207-8ed5-405e-85ef-953f6499d14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaaef2c-a4af-4f0c-a722-5e80dc5d8918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62672089-654d-4c76-9af0-2455b22f0e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a86a16-f719-4798-ad2e-92a6dd950bfd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6284f8a4-95c6-4fc3-bccd-fcb74e6f5e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3364a499-8985-40d3-b088-dc959eefb7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b38fb-14fe-4af0-91bc-7c4c4c1cabc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d57ca136-8af2-4403-a76a-43bc3385a85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869cb5c4-8136-41d4-9fef-4ed540d24dbc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d88e6-f547-4499-981d-8dcfc39f1639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921a3270-3cb6-49ef-91bf-0e25895093c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3204b3a1-c1fa-424b-a36c-6c48687b3a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f653361f-3583-4a6d-a2ba-22b1bb5c77a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbddf33-47af-4b8f-b503-ce461007b07e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffead30-b59f-4e6d-ad31-020224e7d058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "17e175c0-a442-4301-8b34-b875394f5bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621b9319-2810-462b-9d6e-dbc4be704d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0fd573-e639-45c1-9ad2-3bb217eecaa6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "749a40f2-4f6d-448a-ad26-a456267a0f05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ed3ee50-8947-43ef-bec7-2f555b779720",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3f1823-6df9-4ca3-822e-7014e3ee571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d64c314-b1e4-4007-b4f9-6aa325cebab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac50fa0-55c0-4973-a6ba-226f52c44d25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93ba35a4-4576-416c-9b89-e9d70fd5795f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "342721a3-e3f8-4948-89fd-692a58bdd276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "906de034-91cf-4925-9915-b983cf3c1a52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f53ec93d-b825-484e-bf8c-47b7a396394a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9429c1-0eda-4df2-86d3-b86093e9a0e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fda197b6-051b-4b47-b5ff-e91da32448be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e3f80df-c2e9-4d60-801a-cc1cb11f1226"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4359aa23-d9ed-4452-86ac-67fb64a5684f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d249ea28-6846-4fab-847a-7256d7360039"
                }
              }
            ]
          },
          {
            "id": "dcf5b462-1b57-481f-986e-c1c18c0a48a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90dccf03-ec39-47af-bdec-0b5b7fd7bbe3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62ef3e11-dc5b-4be3-8c9a-985fa91650fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0682662-f1e8-486c-add1-c845d8662fbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59b5bea8-4b08-4e45-a17a-bf0390883bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5858c4e5-95e8-4bc7-8760-933fbc8328c7"
                    }
                  }
                ]
              },
              {
                "id": "7d6daacf-03d9-4caf-bfa4-16ce5ccac19e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d9a21d-d736-4d8b-9ff1-8f7cb4e14182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "989cba65-d811-4e5b-be14-18621974bff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1323196d-980d-4b5d-a12a-fd77a7df81e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc3d519d-5c46-4d55-924a-3f6964f1facd"
                    }
                  }
                ]
              },
              {
                "id": "54df5ea3-96e6-49ae-9c60-38f9307f24b5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bce181c8-8df0-4515-8842-53d125778d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c363ed3-d1dc-430c-8938-e486703d8440"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f190a5-3b02-4073-8ad5-33cd28977482",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6735fae1-c9b5-4903-8a0e-fa5a28442b65"
                    }
                  }
                ]
              },
              {
                "id": "54746bca-18d8-4f50-9554-775806f67498",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57389072-f172-43dc-9a03-c6df254d7d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a08592a-554f-458d-b6ce-87a8b303dd9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4f0d97f-2cc5-4875-9c43-37c25fcace9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c84717bb-5b89-43e8-b5a3-fe2c05a57852"
                    }
                  }
                ]
              },
              {
                "id": "943dba57-cc7b-4fd1-bebe-33826726f867",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92db1b80-fbb6-48ee-bf0c-eb549dbbbc53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d45c1f57-8d8d-4aac-9e60-887f27947ecb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c373b8fa-5be9-4264-8f26-36825fba76bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6d66fbec-1581-45a6-8859-5c878bde19cf"
                    }
                  }
                ]
              },
              {
                "id": "3afa2bb9-fce0-45be-a06b-ca30bcfb5d8c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3131a8c9-61c1-4351-9610-6ce5e45edc99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff48434f-0353-4442-b528-2665c81ae779"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac66ab1-2985-4b11-b2c9-a5d7be182465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "940cdad1-231c-4ab9-962f-3e22c5e04f30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da17edc2-2e79-4455-8e03-9c29ba852efa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97eba6f4-aa4f-49d2-99af-428f2efa7ee9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b721d5a-9ee0-40df-84be-0b9bcff3d14b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71e463be-9357-4338-8600-79c3c2775963"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42221d2e-0baa-4d38-ac1c-352319d4271c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dfcef20c-7ebb-4365-955e-6f168a6d5fb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4f7f256-d88d-4ca2-9b5d-a91a449aea04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5017d48-44ab-4146-ad1b-9d9d4ab4e788"
            }
          }
        ]
      },
      {
        "id": "aaea597c-53f4-4b31-b9f8-54774a416b4d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1b6a7189-83af-40e2-a50c-474265ecff85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6fe6295-a746-4508-a26e-86fb4b120936",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "973742e8-ba80-4a99-b0db-299fdb72be03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8735c6d-98a1-4d60-91fd-9828440122e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc73914e-b922-4ba7-ac34-6b7c260b19fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8e4c33-d703-4669-99ea-c98465f7ddb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c70a46-47f2-4a08-9cc2-8bf2e74f02d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0ba66f-e066-400b-8fb1-d155ce6d45b0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023cb74c-3a16-4e38-89ec-0012e3d8b648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935200df-7564-4d0a-933a-0fddb8ec0ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dbb6e3-0048-4b39-bebe-17b27c22b608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f597394-01de-4127-9e5c-25bed52def0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e47032-c12b-4b32-b7d8-387e4027aeae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63af5a-3fc5-4b3f-a1a7-f266ed825d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c645f601-5d66-4b44-9660-e3b2163e9c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e1c561-ec4a-4dd1-90e8-985b21fdeaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3601ef42-1124-49db-aa48-cf1296628736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b8681f-05f6-4707-ae23-aba43829bf90",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24781373-82ce-4d6e-b40c-b421896e509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaa67ee-5916-4431-bee4-5a12d59b8b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae17b4bf-94f2-46bf-a39b-833c9ec0930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bfd9e2-e42c-4a6e-ace0-086bd81432da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc82b20-bb3c-477b-9ba5-6da60bfff8e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d89a05-07fc-4038-8f03-18393f69452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad0dc20-604c-4a7e-af35-2d391d38bd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbc3639-e4df-4aa4-9879-05fd3d54e327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e83d613-4f09-428d-b3ca-62573a93f9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46234065-1c76-4aba-9c41-69970edcbb82",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95b5f7b-135d-402b-9570-0419898b711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af86d6f9-1c08-4e27-95e2-b37813bec16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e08e74-3027-41d6-95d3-189dc1c37851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e517122-75cc-4243-abbf-a37488b12739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44399b-2c5d-4346-a6e0-8f635e67175b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8158bf4-5f93-4bb2-9129-155954403cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3013d49f-ce84-4bd6-b017-04438163b673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f7474-c86a-454f-aa7e-4a2732293e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3ba725-0de7-4cc8-a56d-566cf60cf819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f3159-4eac-413f-82ee-fddc563ac58c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600272ea-229d-4399-880d-04240bd54571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd348664-d4ce-4bc9-90b5-e2b4d6b6511b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ff30f-eb21-4bf6-ae87-239dc7a70fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d725993-4465-4198-9ff7-87440fa97f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70df59a7-c6b1-4797-b7c8-bf51c6480b9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af12b4e3-102a-4c14-8222-5168169abd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2495c7d5-ef5e-4ef9-a8f9-dc2cb060b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d0e71-613b-47d7-80bc-9cf15be030dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac6d56b-3ae4-47bf-b076-233370594535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d032da1-07b5-4f43-9900-818d03d38f03",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673cbd9f-fcfa-4f86-98cd-c9a37d32e80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a7e7aa-dbab-4b89-a846-7ce7fe757479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb88717-95d0-4042-8c29-29fa66b48573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3169b28-94dc-4d12-8269-c97cddf69a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0047b2b-ea16-4f19-b708-c28358fe3ea2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d5b33-cc7a-4425-b948-c94640e48d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f7510d-1c5a-4f79-998e-a5a147dfe6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81985ac3-36bc-4039-84e5-fab513b3c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4738e0-7c2b-4ec6-8556-834fc52f58da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ee554b-2a5d-43c5-866e-cffc2154b9cd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db2055a-79af-4ff2-8d00-176d541149f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9918db5b-c970-479e-944c-f6f376d3a18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3432a24-de9b-49fc-bdc2-7cae102cbd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c766a1c9-c990-48bd-8b60-a48b2dcb1a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f839a8-eceb-46fe-902c-5d9dc67f89ac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d88e94-0cc8-4082-93ab-f566db15b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5489e2-fa7e-4bfb-8ae3-959172bc2328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a03337-69df-4089-b402-d55a0b985705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df66e22f-2289-494e-bc11-d8d87d31788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb84b9-6925-44df-8216-89365f3c9510",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadfb2c3-149f-4a42-a025-2a2930b37255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88120d47-5136-4b49-9406-4a6bd2d4fefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d818c773-1f4b-42d8-898d-b397a3c22cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ef7792-0700-4a8f-83bf-75db1be6859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2be385-baf5-4f56-917e-2184e429a196",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28215fe5-dcd0-4823-80bf-8ada6394cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3731c1-4544-45f0-9d48-cdb1281a0a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f30a33-c227-4b71-96c4-f6b5bbda7b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c93c343-682c-4218-bb65-7239bcbca5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd473919-b1a8-448d-bd76-b08f8aa79f4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e65c49-a3e5-434a-be0d-17d08aacf1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68346910-f09d-434a-b4e4-7cae6e61346b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c61122c-e31b-4196-b533-641849681f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa730f6-ac10-4fbe-9ee0-aca9ebfcdbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d230764-12f3-4f4c-b943-db0233a39a23",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b47a7ee-2368-4221-81ad-efedb6f9200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d289eb-e1ca-4baf-a616-6eff40c0a7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355adad8-0041-41a6-9d91-2e7899f892a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c8a89e-4316-43e8-8d79-9972cb519b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25ed45-7275-431c-ac8b-0fb2712d2f2b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acdec4b-7e7d-43d4-9361-8844493fbb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd100a8d-5afe-4887-9d1b-aa33fef4a081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbfc32-77e3-4062-9c30-36d71a6a0d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cde8782-865b-404b-8f42-c67e18187d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf77b673-465b-4cfc-899f-fde9073f9a45",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800103c0-ec71-4f86-8153-c193eaad609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751d92a9-701d-403a-8218-d52c114c3aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878c2933-ab3c-491c-8686-dd93b8c68299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d0ef75-d63a-4d23-8dc0-bf7f05543fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17391d3-8091-496c-b0a4-8dd09d883d68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ae65fa-6b6c-42ee-99c9-f484e1dda585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bc7495-8dd8-45ff-a2b2-e9acde0d2282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f43172d-0315-4f82-8e73-43f06684958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93506197-ccfd-4532-8f76-dc784fc7ee27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b914aa-7b71-4da5-821a-bc30e24fb536",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f06459-4540-4115-9d98-386578c6a33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88203201-021f-44c5-9398-6ef1e19c9b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd0d5c-0ec8-4577-acc1-9e07500ee82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320c4cf6-61c1-41a6-8361-d5f85f7e59dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51841c1-3529-40a9-9fc1-f766dfe32a01",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0ece08-dc02-4fcf-9911-685ca8cd9368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316f5bd3-3982-4b84-be84-5f1fcdce3775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b25b8-70cb-4a8f-93f6-4abfcb742973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaf29b6-775c-4fd5-ac13-4593bbab78d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9baefc1-a08f-416e-ac78-c867021c9b5f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a6e00d-82a8-4069-ad81-efda4ada9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1469689-5012-400a-a7ed-88c69315fed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fee537-03e6-4e55-94b8-7350bc71b44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131a6776-c1c6-4885-b4c8-87470cb7d80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9351c01-e179-4351-a37f-32157309a09e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c10d5f-a89f-4db7-a3af-e4a43447d204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91b9b36-4c26-4bd8-ba99-c053ec489677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7159636f-9e51-4bef-a5d6-7a61c3b580fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "289827cc-8c46-4097-8475-68c3c452ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dba001-f97a-4bb0-8c93-55f518939c46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64589480-dfaf-48ee-855d-40fdcc7ea3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae77793f-03dc-4f6e-bfb8-8b137b652a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba04a93-2925-4a8e-be9e-d7c95efcee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a39550de-ebf5-4fce-a6d6-3c98c052de07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c81a0b2-8f4f-4200-81fb-d988fd8bdad2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0474f957-7095-4e0c-ae41-8319b0ae5d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eebc92a-cd35-44aa-9fdb-55155695060a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ae30bf-5217-491f-9e8c-40bba23dfd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9d4ed6-9cde-4cb1-8ecf-083d8ff9d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996fefb4-8076-4e59-9546-e4c62999e158",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18ab172-2b9b-4c97-8ac2-342d03c978f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ac3419-4298-48e0-afdb-5856f8aea894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2453681b-2ef7-4ced-8f06-9beb76956e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508f19f7-ac10-498b-8fbd-c973937db084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd75b43a-81b9-4ccc-ae79-123a43033742",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdc2d07-90b1-48f3-8da8-44f02e169d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40d2559-06f5-490b-9f03-955a0f2d1f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c3538-b7fd-42ae-8754-499209673953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a1ec8b-2914-4010-bfba-798af4eacc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9484f21f-a1b7-419f-8562-97c0f289a68c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b26eb2-d16d-48c4-af0f-cb95f327a35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102b2bb4-e31f-4e6c-9a76-f5468294df4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda70f72-bb00-430a-b0bf-62b673029f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ae2bbb-299a-4e52-a67f-de62bfe3d950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456d3f3a-dc8a-4f5c-8b48-966b9003d755",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347cd52e-9594-49bd-8698-63ea92d85a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a83188-f8eb-47df-9540-03bbd0602697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601a84c-3194-45b5-be0a-cf6707984e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753508fe-238b-440f-8b88-fca868a2fba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d7b39-28d9-4ce4-8369-bdbc99821fea",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bddd5b-fead-4b6d-8ad0-dfe413d2910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa862749-90ee-447f-9182-b9c8be9147b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059fd710-03fb-4d54-873d-39594536996d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37389b71-34d4-4ecd-bc4d-c6c615ab9174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d266982f-3ea1-4dfc-b70f-3ea03ca61d71",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c23fe00-c1bd-43aa-9b48-3a1b248ce11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21edb47a-fdb4-461d-b277-62ff75afad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe752f51-a358-43ca-b5bd-b44ec31fd6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4cf818-a782-43db-9fe2-64a19cb34588"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "163baa56-dde9-4ff7-a6f5-e352e68a9a06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c39b32c6-7378-422b-8581-34f9307d827e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9327ade-3306-4e2e-abe1-5293031f7325",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0163a150-fde9-4a87-bf1d-21ddaf0feee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecddf5ca-4acf-4d3c-bf73-1475a8349118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c1c56c-294e-4fcd-ad44-8e0b75ad725c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3b9fc96-e11c-4b76-8960-b3c4bcbb1593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956fdcf7-5be9-4b42-8e22-6d09037a3923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c04179d-d505-4ee0-b7f0-7edc1e493ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88bc2060-1da5-4d97-9fa6-c30db23cb852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32c89c9d-7f0c-43af-a88e-796ea869ba11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0ef2325-5225-4dee-bc70-53e8571e13a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "666d3b39-3a16-46ea-9dbf-38de6e918d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5888596a-8c42-4982-a9cf-aa9fa3d4c281"
            }
          }
        ]
      },
      {
        "id": "901e1b96-0aa8-4fa3-a59d-6c01e31e365b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "760ba058-4c4f-414c-a185-ad6c331df3a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4017841-7a05-452c-9348-625a2c2b5aad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0da91c4-4d2d-46da-a96f-250666b1914c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b5613d-f54e-4942-bd5f-a456400a92da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56b05d6-e38a-46e4-9211-88ad11604dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a3753a-f707-4a23-8ec9-c737833420d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e84298-57ac-4c44-a0b4-af5b8f05550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5cbf65-af33-4c45-808f-f572cb36846d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5762a7ad-7683-4835-987c-cc9427223b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9d6872-0826-4d77-80cf-02e3ec86bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0c8d0c-08d4-4a5b-928b-092c31b78842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02baf95c-d2dd-4d0c-8881-020986541ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a51bbb-4c42-4289-ba1a-f0889ce2eb2c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f4e9ab-e640-404b-8cff-ad7886bb4aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa646fe-7bb3-4f0b-9992-5d41c75c1db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e32f00-7fbc-4489-ab7a-02b48de97b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c689b356-6c2c-4074-a522-530de6fff2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c77a57-3360-481f-819f-f4c25216838e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cdebd8-7f8c-4ec8-80d3-59c269c353f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce75106d-f6c6-4643-94ce-1b2c1eef8caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9e4d2-9cb7-4962-8dc3-fb7a937008e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1fc8fd-55b5-4fde-81e7-0faee84e3285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b00193-7fbb-47fb-8616-67e32206771a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c848cc60-d913-40a5-a3c1-9425e813c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f89397-1d69-4f72-82fa-cc39fc7345ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc98c902-3357-4b89-a92d-fb6ae99deaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e49868-b215-4fbf-8461-b46ea05c7ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ababf599-d4b3-4fbf-8e80-295aab30259d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb15e253-369d-475d-9ad3-f55a40fb3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07085800-ceb3-4f44-bc19-590c148275d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f01857-2fac-4c9c-92b5-7029cd73b899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f843a40-4ebd-4160-907f-749084dfafab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1261302a-d8be-411a-8c6e-1f362cd380e6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa1e52-e1d3-4a2f-90a7-b27459a60618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6d5636-f5c5-4fe0-9c83-d764a53e01a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046c473e-094d-4fc7-95c0-ef6e98ca26b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a30854e-8884-4c05-a843-416b32688f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba3ed2-110a-42b4-a868-4903c96abeea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d223056-0af5-4615-be80-95c339a906ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12e7b76-61dc-4230-aeed-682b8ce00c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fee28e-c147-4ffe-afc4-27e24017127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4571debc-5ee8-4dc0-80be-08e3cf7945a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07b4e76-cc65-4bc3-81cd-215f703aad88",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9131c9a-0fb6-4e8d-9fa3-f39bb0c57600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fd39a2-e881-410b-92a9-079d8f39d3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26e4278-e5b3-4acd-a71e-2c19e792b7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa69634-8205-4a4b-8522-8d194e9ebf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961d62ff-d5c7-45d7-b352-b3fb041a6072",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e441206-d2af-429c-9bfd-42e078dbb953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be350d5b-cd06-48ea-9f1b-5591d54342c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f5eb17-2b04-41ad-b7d3-40c9802c5923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "714a475a-8484-4c42-8ada-e87edeb5a48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c70874c-87ad-446b-9049-7a513909379c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3a9b36-f2a7-4274-8283-c9ebc7285a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96d2648-07f0-42b7-915a-f684d764a3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540cbfb9-0ad4-4b43-9192-c0e439b5808e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e55f9b-54ba-4d06-b568-63ce3da937d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a692b5b5-88c9-47b7-aaf8-7950f3ae1432",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167f314c-a346-4b2c-8156-5b645b49bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c40fe1d-4c96-4a23-83a6-2a1f9f889258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94dc85d-ac76-47ee-b252-1085345163a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "798df76f-9bd6-4b7b-aa00-8f1bde49727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24851e7f-13ea-47c6-86a2-c6aa2175b516",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dec47a9-2f36-43ea-8e5a-d0aa25c0c88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77daa7f-196f-4ec4-8814-363323c28d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b76b06-6d0f-41d6-95ff-de068648a253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82a5c8f-6241-4d49-99f9-60add1575815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a9a23c-1125-4ca9-ae36-ecea5e9e8a07",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd2c86b-f209-4631-94a2-83df45d0db11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc06f05e-c8cb-47b8-ad6c-61da9eff3b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2463def7-2451-4a7c-bbc3-4f7c0364234d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c92ca591-6c4f-4081-9e7e-09937603fd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f30db-4d66-43e6-b893-06bacfd3cb1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1521f8-399d-458e-85f0-27ab568b7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f979b-27ee-4b93-83ee-f999cacc6d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799a77d7-4bc5-4c35-9545-104eebd2ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "769e9c88-cf7c-4d6e-b96f-a263f1ca9d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a69716-88e6-43a3-99ad-157772dc60f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669fa118-1607-4010-a131-d937839f67fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61aa391-6b17-44d4-a666-12f5566ebd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cd303b-5431-4005-a8fa-79c907a07f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e0e149-dd82-464f-a662-bf44f3794108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a819c7-60a6-474f-a908-89ca5beab38c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c212d04-b244-4835-8b5a-ca66f87117a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebcfd7b-e712-43ac-8109-c6dbf1388c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68210c67-94b7-4363-b9a1-749a08a86a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75c955a-0f4e-4322-8105-3db024072b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22e62a6-bb20-4336-a77a-2a73a24d2ca2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe714e-77b5-40f2-aa53-f673df4df726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacd13b2-9212-4d59-bb44-4268305de678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3288de6-980d-4d0a-9a99-4cd35d5eb668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb68a9b-a4a5-45e4-a941-2551a59dd3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5def7bce-6634-4b77-9531-e5a3fd0d1489",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b7b8c1-8c94-447e-9b98-2057c795ac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6023a00d-fd63-454d-9316-f37e1bb7eb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f2010-7506-480e-b03d-c33deed8acb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2100d404-afcc-4f73-97e6-d71acbf27414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ab566-0e14-49a6-a4a1-f36db31f0510",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac271b4f-c627-42fc-af12-589a2099894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c9a50c-86cc-4908-b6b6-d5e631706c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9ff83c-e680-4869-a6cd-e1bad66f8852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb075758-0096-4fb8-9c4f-ff7b1271cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7477503b-b9aa-4219-ad4d-67b3d9e188a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d0f15a-d6a2-4869-bddf-535cd064d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40db43a5-4ede-4eda-8d7e-728245dcbd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb77143-c769-484b-baa2-0b7734e66bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a680a780-2b84-49f1-9d98-6611dd218d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaf856a-8190-4a06-89e0-27f72dbaaf66",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30c72e4-c9f6-4ad2-bdd3-a0ac47811134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0a828f-df24-4c55-949b-c43d2faea32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba7899-b3c6-4052-b918-a8d5f8904abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afa4b5f-7da8-4cef-ba2b-86f2bbd9bb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358119f9-deec-47f6-93c1-f445c33cd047",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ef6b51-9bd7-4095-b0cf-9f4c4e297db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bee7e56-1a82-4e88-8a16-fb957f37e2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15401baa-e1d6-4413-8ef5-eb7c8a23328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2534c2-3036-490e-b112-d8aded0cd420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23074540-96de-496d-bfcc-895d73e738f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184bce06-889f-4d3a-bab4-66163016424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db22538-7702-4534-8c9f-c0534bf1efd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0d85a-e651-48cd-bb65-d69228e63851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "744e4764-61f6-44e5-8dc2-eee888b35746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb6ff8-7804-4f6d-b042-b43bcfe0e3f2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51bb22b-4d1d-4611-b298-d3c5de136daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f073092e-a1b5-4187-ba5e-363115fb777e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df8f88a-d823-402e-ad51-7496dcb8e8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb13550f-80cb-4ab0-895a-bbaba7c2859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab171eb-3035-43e5-a6f2-5705df4ec693",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46033337-9aee-4c58-baf3-357e414ffa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d75d9-a195-4d62-b999-6b209a25a395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442769fb-ecd5-4d41-935e-8eaed778effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8376a4f5-fccb-4b71-a21a-cf04dc8e92eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb45f78-4237-49ef-a35c-67e31bf13aae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cfdd9d-5e39-436b-bfbb-61d51d324bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8766a3-c1ac-4b0f-a75c-4402baa50e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a871ac86-c411-4ac4-9e52-0a603aec7f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f0477a-27fe-432b-b15e-ff3abfb1e699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52156c7-748d-4e58-aaa4-adf93a4b49e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562ab81e-26a9-47d4-b183-a268218d7cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938c3ce9-21f7-4258-a10b-c332e5769281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635556aa-c761-45c5-994b-402a4a868331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dbadc6-1552-4476-8cc0-8b1bf59dc676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d82cdd-90ba-4802-a332-2761e7210eb2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19572635-03ef-46b8-af9e-00e6486e7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c71001c-3e68-4c88-b8ab-73161dd35b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f554130-a427-4054-9464-36e136c57a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ad1f18-774f-4732-8420-d85ec6d270cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213dba05-f1d1-4d55-997e-90b9a43e403e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377d917-488c-44c1-8649-5f2aa9c20076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4872ca64-564b-4ba7-8ba0-23e3bd2dba95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee80ce90-70e5-43a4-9fc2-de093ce4f150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e2a86f-d8f8-48b3-b578-a9e93ec35d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed557609-fa5e-4c68-a9f4-1a2724e2caf3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20244d64-041c-4668-b299-eefae44d7a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c778e91-5fbb-4fe2-8e9d-0f829826458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8005e1-e9e0-4feb-a4b8-c3dd73a918e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e505826c-f2e8-4cce-ade8-90624d3f351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb1b224-1fbe-492b-bb12-e2f3b068c1bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa697a-910c-45e4-8b1b-d49a26371e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4242b6-3275-4ccc-8de6-c894fca6c0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c297fb6-5f5e-4ef6-a387-2d306590ece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc35efd-58e0-48de-8b23-8cf7e36b5208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7cfe95-15db-4486-8e8c-887dd07866b6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9355177b-d304-486b-a992-7854fd529d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2be805-433f-4bcc-b449-9f37c7149a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e092c1-333f-4069-965c-c5d17e79fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ce36ee-f01a-45b4-abfe-ccd8d9fb72f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8560f49-7bdb-4788-99b3-22104e36f822",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d07347-3786-41b1-a11f-4b27e8c41664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c860f5-64ff-4ddb-b9cd-d79a0fd69085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe8018d-9861-450a-bcd0-218eb6bb883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0e20f0-4d2b-439e-a439-6b53ad541e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc5582-2370-4f45-acb5-2403f3d915c6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ad03a-b8bc-4f8c-8e72-12314ff87f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a51624-2097-40ed-b72d-f34a14d81f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d66ac-406f-4c30-91ea-2f53069a81cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9358a4-d8ed-45ef-b072-37a6cd639b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd987439-3bd5-422c-bf3c-c1485bf49b9c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0490737-9c12-4697-aa86-060465aaf17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c29967-c0e1-4507-9d11-e9c0c07f76e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db0e297-57df-4cc5-88d3-a81a1983ec02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3ce355-2cb5-4050-a25e-04c0b7ddf820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84907e17-e10d-46ca-a524-440ce75e7c40",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e4fa0a-4642-40f9-9fa4-cfc2c6e84ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7846f69-88a0-4eba-a017-75476a261b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeaae4b-be67-4494-87c5-e560d1dcc7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "734b0b6c-2332-4bd7-8f61-fa96eb00cbe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e90859b9-f0bd-441f-88b7-ba9c61e0978c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb4a6c1e-d51d-48ac-89dd-22cd63ef504a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725778b7-b446-4a06-b56c-596b953999ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99adcc91-9769-4335-ba81-fab9c9dea227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2ed180-a329-4b4c-a71e-497398e2e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "702996fd-68fb-472a-a420-413df9916cad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c6601b5-1151-479a-afcc-9a946a7aae68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9642e77d-f077-431b-a408-5cd87e3da285"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3693ad6-c512-4103-bb04-b7eeadd95ed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20299b1d-9293-432b-9365-f445a112505f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5196fe9-f105-4a51-8636-e99d39ee07ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63576627-f397-434f-8c28-eac218065bd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cd4358e-7e8a-4af0-bfdb-6c68b53c28c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b8c43ec-6d80-4a73-b9a7-ecc59653e8f1"
            }
          }
        ]
      },
      {
        "id": "448d7ee2-17c4-4078-b69f-4c4bcbf32b50",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "893594d5-94b8-43e5-8452-2bb456c7b3ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0287f7a2-7528-405d-9fc0-5dfcd5abf853",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e913464d-5d4b-4b9f-8b66-6301a4549478",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97498fb2-2ea8-4a54-a08d-377704c86e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e1994f-21a3-47ea-ba39-73fa32829a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e25b5a-1677-4fb7-bd55-d37d07639441",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed013d89-3657-43bd-befe-003f2ee47e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55739050-a956-4103-910b-aed96003be14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b034d7-adac-4517-824a-058f6a83d017",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f019cb-d0ca-4d6b-b502-fe98ffc0585b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c15f31c-9e80-4b9b-9084-63442ba7c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7f95f0-8da3-4c30-ab74-9ff2ae5cd5b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f1a83-68bc-495b-bc43-e284b2b2f780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64b3122-2fc7-444d-b295-8447fbf6fafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ee7ea2-dbee-46f0-83c9-eba677e055a5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85942a-722f-462c-b543-53d07c67370f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82456367-054c-434e-990b-7379f5bed0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95cc0b8-95a7-4a9a-bc48-cc410d5e2831",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec6911f-082c-469a-a978-146a76946154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82ce25e-daa2-49dc-9ad2-7f83c2d2a267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7207f20-76ff-493b-8671-8d4486a22072",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059f66cd-466f-4a6c-bff0-68d3a29a01cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deda9f6c-9bdf-4bbc-871d-95c11f2d3e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1fd40d-18f8-4e0f-a6a2-9e405340b788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a75bb1-43a5-4992-81a9-71a4523c3b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d1fe59-a152-4c19-b6b0-d2e532a3adcf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f35433a-255c-4bcc-b9c2-bc5de359a333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "264b02ae-f5f2-4ff6-9116-e7259e2f95a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c5cb07-ffb4-444d-86d4-60ad1725f4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3e68ad-8f24-41a8-99b8-91ccd06daab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e25e60-af09-44d5-8b9d-c1fe810b22f2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eecd687-1c8b-42ee-8aa1-653e3098c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2659c8e0-b87b-438b-bfe6-72937428e4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719745b1-4e34-4251-b6e4-3f1a17897e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afa3144-a414-43ae-937c-0017663550a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef027b7-86c0-46bd-bc2b-2c4858b42b4d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9014bc3e-646c-4a61-be5c-e5979cd72f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a20a0a-bfe4-41e7-a6e3-f21e04ef9ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75da6c96-822c-4aaa-8a63-b71cb01e292b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e3e03b-7050-4436-a66c-460474363a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4584d12c-d6e1-4ce5-82f5-4f89c3780e0b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c53b0f6-5dd0-4d03-a14f-a7f547e6cba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c962dbff-8329-458c-b21b-270adab53551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64ac2d4-e138-46c7-bf99-a2d840183133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d789aa4b-0bf8-45dd-8c68-421e1c67bef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1316b8e1-533b-4c37-b334-04a3fa1812e9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f1574-392d-40aa-970b-ea9c253d28b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddda219f-95c9-4f1f-a89e-fddce07e5f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b74ca82-34bb-414e-a0ee-3fc95ec3505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb662f36-12fd-417c-989b-ed49237870d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a6154-352a-4ff4-b1ec-2a379c572f0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25d0680-b2cd-40b6-b28b-73645c5b2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659e5c3b-214e-452a-9636-13947abf713e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c0312-8742-4c4e-98a4-65e5fc72d01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eebd2ed-d858-4f48-b5f4-938a493412d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe1c8d5-e6b1-4b78-b248-a057b8ce0365",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6077ed5b-5509-41a5-8bc9-c4685415f544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4fadfb-f3b0-4948-9ff9-c5e20efda24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbab078-58cc-48f6-b361-b6789591478c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e197c43-2147-44d7-8f72-b15be6e368b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a326481-b661-4aa5-bf17-8ac7db4db3fd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1becab93-4131-4600-823e-f077cbccbe55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e82d16-cf40-4d88-9fca-181c373bfb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31c1c24-3f6e-4127-8591-9515dad79c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19259983-f8e2-4bd5-9a4a-ff9110758ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f213287a-419a-494c-97f2-25131224880b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d5a5f7-1553-4f32-8b9c-82979bf7863b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aea3ebf-97c5-4a9e-9dd3-d3b9ef7a41ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b080d7-7fcd-4eff-a5d0-1871e25b6775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1f0b91-e537-4c31-af40-217396149d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9a9386-7b4a-47cb-b750-ba59c6c0bda6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7bd052-fc5e-4532-b5d0-2ff9e7328165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dd7965-e4ac-40ac-9061-f136a72a2bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aa1d24-776d-4466-be96-f1929338076d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4889489f-ac8a-4a10-bb54-f21673d5bfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb940fd-1cfc-4dd7-8522-3446d0babfe2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72d7185-7553-4799-9c13-1f7f924bfe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766f1af9-23a4-411b-a4cf-63df14ca59b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57fe011-0719-4ab8-a820-533d55def0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1150f6-71e1-4355-8edb-2e333fb95c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c8f797-a250-4dad-a9bb-8ce4a860002b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3069cd2f-23f4-4593-a115-c10614e54cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d205b870-c516-47e1-be5e-adc161d22c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ea9333-a4cb-4547-96e5-10b4070d5120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6769ac6a-9c7a-486f-894e-6e0ed496c8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b12da13-5517-4580-8d77-b312e795bb12",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bfac57-2c84-4008-8c41-becac9aa72c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48efa842-ea4e-42a3-b17d-b40644f42dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59d33bd-2ae9-44e2-b443-57bc269ef108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8596f324-4ff2-4a37-81fa-a9900a9628f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9c463-6eca-4ce8-b61c-c5c34d593caf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b8beca-2ce5-40d4-a320-dfd8881ba46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36afb26d-2e46-4be7-8373-82d9e5487b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d76c0e-f307-4653-a728-fabb3996f88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6914b25c-dd0e-4095-a651-dbd8723b8044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008bc02d-3d25-4155-86aa-200bc94de4e5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b552920f-97e2-4282-8385-3f4d50214baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73dc56c-7de4-4f47-8c91-70dfe1a51d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5b7d7-6bd7-48a3-9025-f8cd1f697bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14829b-13df-43ec-8b80-8a46e0d48fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972ceefa-c8b8-4a03-b0b0-99b3eb606def",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2e4d14-04a5-4f14-b237-30f17e8459c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b927e58-763e-42fe-ae6e-a1085bdfc124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adc7847-a08a-4db7-bb19-c14e47b4d875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f2e13d-6db2-446e-8c72-339a6eef4689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a120034-50f0-496c-9166-635877da8ec7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a430272d-9857-427d-a23a-d073ff5e83d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba5d800-5c4a-441e-8eb6-f9be9969b26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c32bd75-9a42-492b-b04a-bd3d64f37006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38e51a1-7152-4415-9ae6-64e3ac50d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed57b38e-47f6-4701-8f83-ee388af82683",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e858f2-aa97-4d60-9c58-27a58c04ce6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a757a2-136f-4d0f-ba41-dfdf24420fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e6641f-4224-44f0-ab57-75b78b4535e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45800fa1-551f-49f7-b692-64561f037f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5185e7f5-b121-4194-aa8b-6ec4e0edd397",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053aa5ca-a617-4ad5-a968-7d1e1df28409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f760f01e-2029-4aba-9deb-70ae548b7a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851e0540-172f-419f-b063-fa42aabc9192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b452ac-f1e0-4c67-b855-464cb8c6ebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a54da25-2a8c-47e1-beb8-4f8c9d23b944",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c21887-6271-4356-9247-c5e77a8364ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5769cce-630b-4513-b41d-5c62c73a2f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e03d8be-110d-4cd0-99de-b1ba9fb30037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac4f087-28cc-46e2-95b7-5e3bdd47baa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7b814-648e-462c-bb0b-cbc72ed52a84",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de26ff42-f3ac-42ee-a8fa-58ee668d4c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04628a13-10f1-4523-bb6f-a7d6628d1a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75347738-d8e8-46ff-9176-b9929d3ff552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7c8cab-ab55-4eee-9fc1-fd91c947dc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8231bb-b092-4292-9287-04de7d45b0e6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e33f22-54ba-4a70-8a72-8e4e208f519a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec46f61-f3e8-4f4b-8d80-32a1d4cf9328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdcb313-8ba5-4c0b-bb07-c6145eabc27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f1aa4e-d904-421d-8291-7b41e7ecf02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec67e539-2343-400d-ac75-9b9963e3b372",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a3fc0-615d-4460-a732-f77951402139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbe8980-681c-4a51-a0f9-8be5bbfba203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a9352e-5d76-4e46-a1af-9b300460645f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6838c208-f36a-43eb-a981-b382496a4951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f578bfd-3b20-4b37-8260-792cf7248bd7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8a5e38-ca67-403d-8de9-54d4a39e4234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5994b26-1c50-449e-8d10-06e873adc7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf19153-c1b9-495b-b1e5-98d970267a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6825de-ce09-4e3c-b1ca-7e754bd52b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46cb3b0-372c-4832-8b46-7eaa1058a963",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755d02e4-ea9a-4159-a8c8-50861ebdcbfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d057d46c-24e2-42f0-b3e7-70fcc8603953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b1e7d9-9833-41f1-9097-a88a0d74ace5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea00c5c-ad3d-4b42-b802-c017702f7f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a227398-cf92-49e5-8d91-06bc4849884a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577932af-606b-4301-88b3-9f972971eca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd01a843-2b66-49eb-b820-a197c6e2c764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025db548-fd0b-420e-a146-b288386fe6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b27c16-ec85-4a4a-9857-f213c8b0deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd36a66e-fa04-47e1-820e-787350ad112d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937ca625-7456-4dcd-8f5e-afc58e93bbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a3b828-be4e-4336-a9fb-80bee0d71c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e483689b-18a4-4d7e-954f-255cd0524c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df6e8b6-a324-401f-8489-3c13e010589f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7227db-d0e8-4c45-b9e2-46629967be90",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bdf4e0-1af0-4d0a-a52f-6cf1b72bab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bb2e03-7479-4724-8a85-9c278c2ad570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40932b55-fb58-490d-90c7-e4aaafeb0bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa67368-362e-4904-a0d5-6697da99a35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58110bc-1070-4a04-9b40-2643a3160e19",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e470e665-2ecd-4304-8fad-e086a7ead958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b76cc1-d075-44d2-92dc-9acead0593d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfcbb40-38dc-4783-aa8a-3b6ea187834b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e096c5-a9f2-42fb-9dab-cd9525eab2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1249d34c-25a2-4abf-8a2a-cbbafa67faf4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854dd741-8fba-4af2-aced-4b9d9d07b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c116f187-8282-4dd6-9cc8-0510e8cb8605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21902104-7954-4e17-a474-c009062e084f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23899321-bcd7-40ec-a875-ea84ca95e446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ed666-e2e3-4556-bfa7-d5e9dcd5c664",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e2746-65c7-49be-aac5-20d00d1ac7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e548eddf-5186-4364-8e85-8ebfc2b68472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662b78ea-e0db-445e-b009-a67f29ba6c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba384865-a2ab-4a31-8cfe-51c7764292d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3858e27-4515-41e2-9027-475597535970",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f0b99-e7e0-4f62-b015-8d5e19ddbbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228e156e-8a1c-43c6-8e57-331640ee1969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9617e2b8-24ee-4ea4-87c3-7b86158e7f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000acee3-dd55-4dc4-8b90-66a9465ae035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74550a46-798a-4ae6-ba2e-e19328618a98",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23892188-1df5-4d9d-b2e7-da36475bbd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd4d14a-1949-46fe-b835-56a89ff0f87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c6ae51-221c-4a23-88a3-8d7935630ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b49b613-6295-45e0-a979-64643831ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52da43-bcb8-4b92-ac24-64506e2d5d8d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8559ce5-16a9-4753-bf52-13b8dcf5c320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9792acd-b5dd-4713-bb80-7611123aecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3159118d-42ab-431b-8491-d71b2812389e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d87f2b2-d0bd-421b-b1b0-72241df25378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b111ce3-5365-4349-9fa0-0aeb82d57b2c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc10b5-6394-434c-b63b-df0468f65724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4685677f-30bb-499f-94a9-cfd0db10f315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94979f1-611e-4653-9b16-8bfe55d280ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d2ee46-ab37-4ae7-94d3-5c05810939e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c70f50c-6cd9-468f-8117-5e1ae39a0716",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eb0988-1785-4ed4-9346-3f849dca05c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a4bbe-bebc-48ed-8402-b94ec6af9325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c9741-6d88-463c-a387-6b2ec8d9c090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4420a7c3-d239-461a-a1b1-4c255f0ee101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0d441-c297-4cde-a677-816107d9222b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f0bb32-8049-429a-813f-8a9b3a178a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b297061-77da-4d34-968a-af5ae9560cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b253e8f-ff68-4c94-910f-be5d07d2bf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e621a71f-5bdc-4fab-8b70-d8346d12882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957ca320-b51a-4ddb-9596-e666be74d617",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6fce9e-d43d-4f09-8f7d-1073200b1bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818f8c13-8d73-4c80-bd08-7d4767b93031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e4f3de-75b7-4a8c-a9bc-5a4c40ded69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab74e9b-8b6a-4a72-a9fa-6da441b88052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1e9f7-9c48-4722-b234-7242af8bcd98",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cfd60a-1c49-4f1f-89d2-e01166409406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a364b8-cc85-411e-a890-afe39adea56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7cc20c-9a9e-44e9-9468-438cabcbaaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1886813c-00e0-4477-9f72-3925e0d1ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e1c46-d147-41a0-83eb-23844c65b090",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc92e1d3-429a-42cd-85a0-b38eee7d1d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a130cd-dce3-48c1-a4cf-49e1119faf0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e170d46-24d4-43e1-be72-40f5421ea5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e78784-eaa2-426f-bf70-ecb4d3d675d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85849421-2bb1-40a9-860f-a6586405567b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1899b6-3c64-44fb-b5a1-99183939eb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2274bd9-a825-4ecd-b23e-c82f521fdc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524f9093-a970-467e-a9fb-3e971975280d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0210a5d5-ca96-44c7-98b6-1ef6de361c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d318d8-5904-41d0-9889-f8634790aae1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51f211d-e552-4869-bcda-41ba83831c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ed8ef7-203a-44a4-84f5-37180f4e2149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0bdd02-7641-4de3-913b-d869f371af15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1589775-b7d4-4588-8df1-4bf927b80750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6b667-c214-43b7-910c-a5634bfb02fc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48ea0e3-4526-4339-934d-5611cf8722a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef63f7d-03ac-48e0-9b1d-fbbb24e7cb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb4b2f-f252-44b4-983a-f01bb8b6ccd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d617dbc-b6ec-42ac-83e8-9997af5f1555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926c792-6b9c-4980-8371-a7b152368954",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5897b8-3d08-4237-9359-884855c7f094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993dd4ec-6a77-4cfb-ac1c-a1fc1dde3436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c62bd6-4650-4ec4-a9f0-ff452b7a51c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96df111d-e536-43d6-868d-81e8d8038c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ffaa0c-81d0-4a6a-a6d9-080f2378efb4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1d9474-2095-4f83-b87b-5c1a4cb58601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d996e50-2aae-48bd-9e7e-7b676124e046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c1fca-f754-441c-9a0a-cb4da1e4e0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a1427e-e862-4d8d-b803-0668cab21b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db79f2e-89e2-49e1-8e4a-03295742ae8c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978d1497-c091-4d3a-95e4-680a21ed323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60c289e-7747-4ca2-b70b-c8e981fcb8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1934c4f7-228b-4ac3-9f7b-84bdaf201ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f9d7a1-a5d2-43fc-80de-5b645dfa4bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95908042-be90-4be4-b2d0-553f79645f58",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3886783f-6df0-413f-aaed-ad752232e2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c7f4d3-159e-4022-86ab-1a113c207914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc09fec4-0d20-4413-829d-eb5d28b7d9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c70688-1522-4ae5-836d-57c14b5941f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eec97b-6184-43cf-b952-5543fe080edd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8b9f4-3396-4656-a04b-7240fcd2b858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d434372-532c-486c-a4d4-0e661944b125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f64007-8565-4d85-ad51-1309c518e282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e777414f-4bd9-4026-a3e4-8e3acba1043b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc70ead-528f-4d27-a530-f9a196e8d579",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e594cb0d-0c50-4e38-90be-c012b1d1d1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c71c05-14d8-4389-b389-c153879d4b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dc9253-0a79-4f6a-9d0c-01fb411e390a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b0178c-a1e2-404d-a83b-2373393d5043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0c6672-e94b-4293-957d-adc37d725d0c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2252407c-bf95-44cb-b0a4-3b2f7599ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ffea8f-ff6c-4cce-ab93-84a94822d369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959640c3-9d2b-4c9b-94a6-bb4e66d31b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65c21de-904b-4e4c-9823-9af0c2588215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9038bdf-b90f-41f7-a1db-df32698fa36b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe7037-4377-4d85-9210-d0a8e00c2759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed23c0d5-493a-4995-b818-e51614ef9a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d963c0-72ec-4346-8e04-83ab4416c81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e97958-76b5-4773-ab5c-5cf507b4127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4611a49a-b8f2-4580-b8b0-28d12233c911",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e45aa5a-7f42-48bf-8dab-84db104fac6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4b1539-1c01-4f3c-8f12-0baf4d3acea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244ddcf1-403a-427e-ae42-af23979b269d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb66103-7841-4e20-8dc5-d0428fb7bb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633a5dde-9ef2-4a6a-90c9-d627f344d5f9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61e98b9-6bdd-4577-8e55-ee4b33c7fc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd0051e-910f-462b-a6c3-a9dd590e98da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2844565-7ab4-49aa-aa00-1e1d0b51d6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d4f3ff-eb3e-49d1-980d-65f1997d1faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d1ae4f-dd67-4c1f-b1cf-3e61e0beb618",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfd885e-bb41-43f5-b0d1-8eea72622e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33a32b9-ef1a-4e05-a4a2-c6718c270e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa0fe7e-66af-4500-aa27-7db336616c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c0db2e-495f-4647-9f43-2d1e7bf9a09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ec4c2-abdf-4a16-9b27-ea84f593863c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13675bd2-d1d8-4ddb-973c-0ad759ed9f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decd03af-1325-4cf7-82e1-0c668a231222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14178edf-c31d-4794-9ce3-24d68f4af5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cdc498-fcfb-40c6-bd09-28becef2b40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5783e43d-4e87-4ff8-9d70-e50a2a7b1b7d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c9d14-6828-461e-8831-0e3d3ea68e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988e1a26-9883-4318-b41e-cab795161612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a378aeaf-37d1-4fcd-827c-c25a56862aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3ea68b-bddf-40d2-a7d0-db6aae604aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2453de-e77b-4337-8e73-d7bef2ff8e14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3437ed-28fb-4142-bd0a-02f080b5d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6660ac07-52e8-4b1f-8ab8-5bf9af6b01e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088e3736-830f-4323-b354-3dc6ffe55a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c8685-9aed-4c42-8420-155237e26e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f1d804-8862-410d-9f26-a7335a299e95",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbb09b5-7ae5-44ed-99d0-367d9f0be271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0192bb8f-66fd-46cc-94ff-c089843aaa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1abbbfd-adf8-4962-be35-c3cb7b5fafa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9923d777-3765-4e2d-a2e9-c3c026b09b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fc70b9-6d63-4a45-a253-8a459876ef38",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ba21e9-c07c-411a-a61b-9fb7d754811b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe1eabe-aa7d-44a4-8d27-0e59ac0aac60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9621a92-e0d2-455f-8052-85744ca2debe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387bdead-e00b-4e2c-b410-a79b5f11ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101f2679-0baa-4559-9725-a9d1f039782b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b99e101-9bc2-4a19-9b1d-f675ec0dab18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a34340-17c2-4745-8c57-6b28aaa395a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a138cfdf-9f6c-4307-a120-657e5e481132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ec6c4a-76c5-4c79-8abd-b095cdf0162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f107a44-d889-44cb-81e1-22ee912ebcf8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3ec66-6af0-4bf5-a3a0-df1fc46747cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476aadec-0a97-4a66-8298-ef733905fe33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d614dcc3-9f4b-4d53-a1f2-ee10592606c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a76e0a-c484-4b35-b1f1-9d69ce8276a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb4c76d-046d-472f-93f0-f0f0ee9fa034",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a7599-8679-4d28-862e-0fda75115e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55492bfd-7a11-4d24-b3fc-50b6ce5ca20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef6ccb-b15c-41a1-8512-7a5beb4a3d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f64c13d-18dc-46f6-ba49-bbb48185b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151ee0d-c9ac-4d4d-a468-4ca3c4dee091",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88944815-78f4-4fd4-8023-24e7ea366893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea86b3e7-03f9-48f1-b94c-48458f98c8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82852cc7-6566-48e2-a4fa-ef3142e59147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce568465-c688-4d59-8744-a72371d2fc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0dcfc4-fa09-4b1e-bc59-c8050c86dbf5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b986139-a84b-4f82-9857-22c3305b51dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a3f073-c77f-46f4-805c-233c4042d32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d945778-bb89-4cd9-86bb-46112b41d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dab41e8-a2d1-43fe-b921-e531925f61f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d004501-91c9-4518-82fa-bd246f59c2bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e5f260-1ffa-4dee-b564-b692b85f492d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd388ba-41de-4608-bb00-38e68996d82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481401f8-827a-4c16-8a3c-0f3eba97b521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1775b49-d4b1-40fa-a6dd-cbd77fed5c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d67293b-71e6-4a92-8b43-8e0e2655e5a9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c5912-639a-4260-8acc-f9075bfc5c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f50bc6-d926-4fcf-badf-5884812bffd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ba3e8b-dd03-4381-aaf2-7dfac1a430bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad37c82-72f9-4d45-b8fa-1a0246ca49a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc054e5-452c-4e89-bba7-a7ef2b051bfc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e9ddb3-e34b-4a1b-8306-7e1b01dbd217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5eeec17-4aec-4f14-91ef-c437f3bb8a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c917acc5-6b09-43d2-ac5f-2307f4b35cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c907e7-e51d-4697-a571-1a5daeb2263f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12928fa2-bfb2-4288-a5ae-136c4dc42e0f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49bdf8-8512-4e87-9d84-a27219f5d010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d1421f-c614-41ba-a5bc-997162b5c9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1bed36-93a0-4c09-9565-d4858aa6d953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41ce745-f6f6-4b4b-95c4-2d2418d5e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea494509-585c-4646-91ce-5f3e305f1747",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945c17de-3b09-4e76-a921-e6f4c80437e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f16db2-2b34-4c88-aa58-3fdd06b56ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8f31a1-6a28-4080-a82b-ad960e529dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d09466-4204-43a2-8ed5-17114be5de21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41532bf-3291-4a44-93ed-f4222b2ab390",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f98ef2-33a5-4258-b108-efc002250894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296cf1f1-d4e7-439e-a9f6-a43341c4d74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddca57df-3757-4f6d-b812-84491735c9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd827805-2fc8-4b8f-8c37-12e4c388e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b193734-c92e-4155-83b3-593098d444fc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca985510-2ad2-4a43-946b-5bebae4cfc46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144a5c68-4f80-4a40-a1ec-a3801d969eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52c2f99-536f-4155-9df1-f8eab6d923de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25701ca-0eb0-445b-8382-f1336d4704c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6da38a-733a-44cd-93c1-dcaa92f15d98",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e84276-9e7a-454d-8f13-bddf6389df37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911ad4e4-6c89-48dd-a802-a6012c4810d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a9aef-5439-42b5-8a8d-ea9cf0618e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42a5559-c3ad-4fbf-852b-5dd349546990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805988b6-1f87-41b3-991a-5b6a75c15da6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f5bc28-43a0-4020-8d04-6cfbe5b30394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1366e4-c107-4421-9901-e7d81c2c89a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b6905-674a-4674-99a8-28433db803d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33aba02-517a-4023-a3cf-c815c013efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886fab0b-5d65-4515-85b1-0a31cb587640",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315d4fd-b067-4958-ade7-2dbd831b0607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d44803-6297-4188-96f7-50f610344f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd685dac-e1e2-4cab-90c2-e8f11f1370f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0e799e-6d06-41df-b040-f156fa4ed897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c09cc87-3aec-4895-9e46-ae72765a25aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4196ae-8fb7-4c86-9b61-ca2dd9d0b64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb5960a-ab24-4637-9f7d-20d204784eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815b73a2-887b-422f-944a-4db63fbf7f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b92143-9786-4eb3-9c6a-099b59e8a183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c029f-1ee1-4146-86e1-8ac56db5b0a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2b1754-782e-4be3-830a-1fba4e2a3460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4972f2-a7f0-4ec1-bd70-39be585ca0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1330f0-6057-4a80-a1c6-bbe90e9ceb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345608b4-ad8a-4c84-abfc-2044518e1468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb078fdf-46d0-48ba-bb77-4497e51d6a4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5b2d1f-81c3-4bdd-9845-91fc0eb41c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fa513a-1a5f-4c61-b9ff-f49ebee71eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97299de-bbea-4b8e-a6b4-a6e727b37b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86afb1a1-bbb9-405f-8496-5ca4568c612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fe270f-1697-4d17-895d-cdc71145dfcf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c501c4d5-5db8-4702-9d1d-fd39f1e1dbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8134c89-0d3c-4cc9-99b7-9ea08ec3898f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb95abd-ab42-43b8-b546-cc14438bbafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0a3c2d-b946-4737-96a0-24a42c89f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57b5823-d711-45d0-a6ca-fb35ee48fcaa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3516b579-0276-452a-b29f-656452ad1dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3055b61-5e3d-40b6-8a5f-c2e26336ee8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38edad84-5494-48da-8374-1952f009e403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ccac8f-f3ef-4aa0-aca2-918aa29347eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566fadd3-87bd-4539-ab28-cbbe2f42ec58",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2aa8c3-48e0-4d5c-b945-8eb8576d8897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3277f788-fddf-4cea-8ecd-87b506955cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7034a7eb-889a-4449-bc6e-976c0140c530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737e50c2-09a0-452a-83c3-97b026f1d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7702349-280c-462b-86b7-911c6a78e640",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f12c7a3-1392-4125-a41b-eef58751a354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3837f4-7e1e-43a2-8075-460b9ca40838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c754760-7dd5-4b91-b78e-7dcafb0797c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bc4c4f-7719-48df-8f8d-90a6ad3bb600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49e9d87-60de-49f6-ac57-5592c81b22c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab18a7c-920d-4cc4-abd1-aec087cb04fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584c8193-58f2-4e0f-9320-ebe3c549ebe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472a1c7a-b78b-443f-9e77-76b53df4187a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30244fb3-f777-4ca5-820e-b5f0ea8580f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b5351e-21a3-4648-a93b-756ccf0984d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933ea230-4905-42b8-bb4b-c698e1663b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb86e1a5-be8d-471a-b68b-1cf9bca52421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3bdd78-e0ff-4c4f-8953-fed997ae2b2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7675335d-da5d-4b57-b8fb-617632eea2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc684c7-5080-4222-9b3f-998b217dbb02",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea86c73-c745-4712-bc4e-101560639bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948a6fb0-03c0-4208-b4b1-1aa5ae8cbd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f08d08-6cd8-4751-a217-fa6b4e7a3d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630bccb7-ca43-40e9-9e00-171b13c754ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56688e55-fb42-452a-ae13-c6e98905093a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d1acdc-6e62-4363-958c-72fb82988fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccde5ae9-3180-4aaa-93e1-8295d1cf6409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3ef36-34c0-4263-b42c-7e662de30aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b51c02a-3a3b-408b-a1e5-9d70b6f175f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391a9e51-347a-4c6b-9028-b74dd19c883b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0e2ce1-aeda-48f1-9a44-1db6c2d111f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af9f015-80ee-4679-bbbc-84b521f04b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a80ede-9ba2-4c3d-8494-8b15b0381eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd98e187-41be-4f0c-8d39-62b94221074c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58555ca6-d281-4b37-82e2-7111c6b00d15",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe6d97e-4aec-4e5e-8f81-c98ba9575e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78528cca-d5e3-4b02-8d5e-824cd9c34061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b809850-a890-4e00-b0fd-eea99555a716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fc239f-c39a-4835-8d77-311b1aa6f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37791de8-51df-4141-9783-f81db62a8c8b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5200c7-1092-4b0c-9d57-8b8dc1b09cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41aac39f-4f7b-4d96-879d-325aea00c0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4c06a3-29ea-425a-a164-f0dbe3868ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e824022-b80b-4c6b-93f9-dd7f2fdad943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5153e912-3adc-4c66-acc3-3684ca036440",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f311a8-2e46-47bc-90b8-14cf05c11342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05aa72e6-cbf2-4535-9aba-a313f4e5105f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c862f287-4dd5-40dc-9d50-fdad5ab7c1dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac01fb-aa5a-41aa-bce2-ee48b262a583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6be09-9a27-4853-be5b-754752bb5798",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543ea36b-8562-43e1-ae3e-15c34195dbfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89972a91-0e61-46ff-9e66-52eaabd6b85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a9aba5-371c-4618-bb18-057df65db019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcca527-d58c-4e1d-8aef-58d6a45a5df7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3d97e83-25a8-4408-89c3-ac5dc9745888",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82ffd24b-c4fc-4460-8b5b-97685cc45bd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d008e5d-5926-481c-af1e-8d667e80548d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd358eb1-4371-4b2c-b29f-cd5483c1bba6"
                    }
                  }
                ]
              },
              {
                "id": "9e372b9c-78e1-46d1-bade-521dd5a9574a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b799894c-44e4-4c8d-84dc-6f7c4c567f98",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3042a24-e1a8-4e28-8f29-783b81848313",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70a4012b-d6f0-49fc-b3ce-337ce33e3766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08aaa60-7d0d-4e7b-8050-3f4dbb01c03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4309e5ee-d392-4f57-abf5-1715f62f6963"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6e58322-b3a0-4b25-bfac-693c26e717d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff4db09-32d1-4460-af8e-382cbc748875"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "895ab5ce-8d16-462a-9c58-a35345e1df85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea3dd81f-2424-437f-a41c-bbe019232ee4"
                    }
                  }
                ]
              },
              {
                "id": "27995107-beeb-4be8-b19b-500b6067a309",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6218f835-80dc-4571-941c-2b8da6c9cf1e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bef530-b0a4-4737-9b72-a8470f294700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1964b1de-d134-40b7-ad42-d771252ad8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65841c49-2b39-4aef-b2df-ca2d8d71894b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc01330-df8b-4c86-9a34-a01fa5929244"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59f9d856-d190-4f90-b489-0388fb2ac47c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ca03dac-62ca-40bb-8ce6-72bee19ab1b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "035b590c-dfda-43b1-a1e9-d96f3c13a37c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc19024f-e2b6-4c31-94df-a6bf6d99e026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9006586-008b-4308-b2c3-08cc82c07169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a20c45e8-f4eb-4465-bf3b-43b83bce0804"
                    }
                  }
                ]
              },
              {
                "id": "3dc7e0a4-155b-49f7-97d8-f3eb8929e74e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1c2293-f74d-4743-8791-c1913633f9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "72332336-e6fd-4602-8293-d9878e9b5726"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa34ac2a-5327-4b62-8294-c225a8d63730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7a191aa-8bd7-45ee-9c94-cccac9e34465"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d272f7d-1c2e-4ce4-a621-5bad3ab8b1ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "04bc1875-21bd-41a2-8205-0d2da1c46846"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9db8b86b-812c-49a7-94df-7035e5396bf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6868303e-3a14-4e82-ae56-5824a7cf7fdf"
            }
          }
        ]
      },
      {
        "id": "6f0e1e1a-bb08-4a0c-915f-b36d728f8012",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ea2f200c-9501-4499-9f6e-3c6c1b8701f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3184837c-4cd0-49c1-b0ef-751a9026f125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e527a31-4e85-4ad6-8c05-a004870f047b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e90a1ae-6708-4bfb-8bd0-7347ab529e2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b6da2a9f-036b-4918-ab6f-661f4901a0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7882dfe-73a9-4e39-9f7d-d69868819900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8acd5834-5598-4b92-b4d0-c9ee75fe1147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0905037-c3de-41a8-911d-d0f9d5cd0036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d228896c-9a93-413f-b4f9-b68cbb08a89f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67182df9-7dfe-4b1f-8e83-0151cfb0f6e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed887429-4ef6-41cb-b464-f3c28caf6987"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ed0aa3e-6703-4691-b579-4d380d4f4e8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d0d59491-4572-454f-ad38-c8be25c77629"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8805bc6-586d-490a-a245-cc65637030a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0ea4f17-ecb8-4036-8ee5-1a9a02babc23"
            }
          }
        ]
      },
      {
        "id": "b3c6dd3d-0c9f-49f8-9a1f-18347b6faaea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d8a71a3b-ade3-49de-9d76-d3a6b3a9e36f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89c4470b-09cf-4e1d-a52b-5b9bb7e89281",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9b2ea9c-97d7-4478-b864-4f7834e88020",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e35de3-fb30-495f-bf78-50ccca5cbeb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729f3546-3766-4916-8833-82cd66e1241d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51f103b-ee77-43b0-8f19-181492d992df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a50ace81-aed3-4b03-8462-3ba71c234c78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fae149c-5de9-4f43-a7d9-e784bcb961bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b36cfcb-0ddb-498c-87a4-9ff914ec90f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a4d1ee-481d-4529-a86b-7dbd9cf4434c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d41527ce-fd08-479f-b31e-6111d00a2cef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "065a52b6-6f7d-4758-9cb2-35405be859d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9cf3e2f-8441-46cd-b7db-1f41644cb492"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a48121bd-51d4-4595-84be-4f4aeb360062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a2901ae-5153-455f-a605-b854d4f17158"
            }
          }
        ]
      },
      {
        "id": "49e021cf-c63d-40cc-8aed-299abc6274af",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5737ec5c-c4d7-4ad4-8da1-3c63386d5fd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ba6125d-5ac7-4abd-aef3-0cc696123baa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "133c3d85-6dde-464d-abd2-b52988a61d60",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867771b2-90a9-474a-86fa-d87e4e54bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a35958-7308-42db-aff2-b34bb39c6382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c0f572-adfb-44cc-be58-7cc28588f61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82fcfe94-d776-4c9a-83ab-1ead2661ce25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb40b56c-8bd1-45c8-b1ea-bb1e54a980a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb1f3e09-5fde-442e-b594-88f4182c45b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a7b6a72-afc2-4066-9830-1c54e7f8031b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79ad39bc-3e6b-4eb2-a0bf-63ed5fce28e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40bee995-9f19-48cd-b62e-7d7ec1299dc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "129b7208-4c14-49a2-a7d2-164cbda65ce1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28c22191-092b-4faf-a38c-1d21a77ffb72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27ad86ca-271a-45e2-baa5-6ca140e448f9"
            }
          }
        ]
      },
      {
        "id": "8762cff4-3ae2-40cd-b1cf-155f2adea174",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b02421a0-c833-4d40-9852-1d677e619f56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e015dd3a-c2e9-4338-91bc-d575d185dab1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "339d9ab1-198e-4d0c-9f21-0c74c6055d93",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "230cd4c9-dca5-4a19-a836-26babb9d1172",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1284dcfe-394f-4fb7-84fd-5e616918b309",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 238.90492957746488,
      "responseMin": 8,
      "responseMax": 6999,
      "responseSd": 771.3168646868455,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696033947500,
      "completed": 1696034029756
    },
    "executions": [
      {
        "id": "6a61397e-12f5-4e80-8ad5-313bc519ebc5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2162e19-077d-4566-bfc5-557c86bdb651",
          "httpRequestId": "55c14ff1-8a57-495f-9ff8-7b6c653c7da4"
        },
        "item": {
          "id": "6a61397e-12f5-4e80-8ad5-313bc519ebc5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "64f9980e-c25d-43ea-9150-e56f48d0784f",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "6fc600ad-d079-45c0-b9fb-7722b3717e49",
        "cursor": {
          "ref": "93ec9aef-b4d9-4d0a-8955-3eb94aedf635",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2eb862ed-9340-4b13-ab9d-a4fec3c348f7"
        },
        "item": {
          "id": "6fc600ad-d079-45c0-b9fb-7722b3717e49",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d8fa80f-673a-44b3-abef-1a3f835dbe0e",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "bd09bee0-879b-4ff0-aa44-8c24bb2d1251",
        "cursor": {
          "ref": "4724c5fd-072c-4af6-ace4-3f0dc1ae14a5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "535af71c-b7ef-4a36-82a0-6379ab697d30"
        },
        "item": {
          "id": "bd09bee0-879b-4ff0-aa44-8c24bb2d1251",
          "name": "did_json"
        },
        "response": {
          "id": "995c7395-9dff-4e94-b716-1b5dcec7306f",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a0b893-2564-45f1-b204-5a9c2c5aaafb",
        "cursor": {
          "ref": "70dc1cb1-acd2-4f42-baa4-0ccefc646685",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23ffd5cf-1a51-4fb9-9580-e033b063be32"
        },
        "item": {
          "id": "57a0b893-2564-45f1-b204-5a9c2c5aaafb",
          "name": "did:invalid"
        },
        "response": {
          "id": "47cf65a3-4338-4f95-884a-b7111fc7b620",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6485,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a0b893-2564-45f1-b204-5a9c2c5aaafb",
        "cursor": {
          "ref": "70dc1cb1-acd2-4f42-baa4-0ccefc646685",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23ffd5cf-1a51-4fb9-9580-e033b063be32"
        },
        "item": {
          "id": "57a0b893-2564-45f1-b204-5a9c2c5aaafb",
          "name": "did:invalid"
        },
        "response": {
          "id": "47cf65a3-4338-4f95-884a-b7111fc7b620",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6485,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d238c96c-6563-4e7e-85c6-0a8588ec1c45",
        "cursor": {
          "ref": "1a88e831-05f9-4a49-9078-ee3d3b0c1190",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "820d6ad1-c9b9-4cdc-8b65-da7a82484c08"
        },
        "item": {
          "id": "d238c96c-6563-4e7e-85c6-0a8588ec1c45",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b5cebfb-4d09-4974-a397-ac1b5fcdcaa8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 384,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cef726-6935-469e-8dea-3b860b7e563f",
        "cursor": {
          "ref": "573f9fd6-c7b6-4e75-ab62-c5073bffde3b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "727c731d-8cd4-41dd-8070-8a369c3d9dd4"
        },
        "item": {
          "id": "e8cef726-6935-469e-8dea-3b860b7e563f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c8f13100-ee6f-404b-af63-114144d43b71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a888412-7839-4857-ba43-7a5997603ddd",
        "cursor": {
          "ref": "88991aaa-15d4-49c3-9356-799c05ffcd24",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "52488832-ff7a-4691-899a-f6eee994c2f3"
        },
        "item": {
          "id": "2a888412-7839-4857-ba43-7a5997603ddd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "90ae33ae-e62d-480a-bce8-2d9a73ba442d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d156b4-a4da-4e60-95ed-156dd8b69cd6",
        "cursor": {
          "ref": "c997afa7-35ae-45b2-8352-8ee8b38a2899",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b533a72e-32b2-4004-b69b-31b3575fbe61"
        },
        "item": {
          "id": "16d156b4-a4da-4e60-95ed-156dd8b69cd6",
          "name": "identifiers"
        },
        "response": {
          "id": "2e151b40-edaf-47af-98a0-fbb93408828e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c26b93b-fbec-4e74-8164-a2eb8bdcdd7c",
        "cursor": {
          "ref": "958e76ec-0d84-4e8a-8bde-fc389f09c316",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a71dfd79-3eb4-4a64-9bb1-559672124d23"
        },
        "item": {
          "id": "3c26b93b-fbec-4e74-8164-a2eb8bdcdd7c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "63a87a10-b4b5-4d7d-af8a-c83ac55c8d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a431548-c235-434b-a91a-712c37e9d187",
        "cursor": {
          "ref": "d8907cc8-2bfc-4fee-ab10-ca5a09df8977",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d8112ea4-82b0-48a1-9f6b-23c941ed397a"
        },
        "item": {
          "id": "6a431548-c235-434b-a91a-712c37e9d187",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cd3990ec-0b20-4978-99ec-48e6ddb54c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3b9e27-0374-4924-ae61-2017ebe45ba5",
        "cursor": {
          "ref": "5a717de4-dabb-453f-9661-3315e7ff3e14",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb8d244d-fca2-42db-97f3-3414dbe13cc2"
        },
        "item": {
          "id": "5f3b9e27-0374-4924-ae61-2017ebe45ba5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6bddad76-f294-45e3-a1d0-1846a353991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25722f36-ae3d-4ed4-85fb-0cf831446971",
        "cursor": {
          "ref": "3c47cd5d-4fb8-4197-9d5a-d853e17f0488",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb23127f-6d27-4357-8ee0-7df8cd149ebf"
        },
        "item": {
          "id": "25722f36-ae3d-4ed4-85fb-0cf831446971",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4c6811ae-7206-4c6c-9af8-4626796e48f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1a934a-ac89-4027-9113-1547ad49d4a5",
        "cursor": {
          "ref": "4d2b024e-d0dd-40d1-adf7-239e53f26a20",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "56c847ca-2982-4d5e-be70-6e800028c575"
        },
        "item": {
          "id": "9a1a934a-ac89-4027-9113-1547ad49d4a5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "34dde67c-5888-415a-954f-de732313ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436e85b-ed3c-4893-84d5-10ceafc58317",
        "cursor": {
          "ref": "6669650d-5a6f-413a-8bcf-63cd644a1654",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a50912ad-50a4-429f-8fc8-b6ad73ad9620"
        },
        "item": {
          "id": "1436e85b-ed3c-4893-84d5-10ceafc58317",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "164c0826-ba33-4274-a3b3-8fc8941f7c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8186aac4-15be-4ebd-b7fb-4ce19a998226",
        "cursor": {
          "ref": "01e34edc-30ef-45ba-9b4b-03abfc00fda6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9b5ae6e5-fb7c-46ee-bd25-47c966d097e5"
        },
        "item": {
          "id": "8186aac4-15be-4ebd-b7fb-4ce19a998226",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd94972e-c076-49d4-ae16-59c02a40f571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4923c85f-681a-4c30-b5b7-9a98484f0a09",
        "cursor": {
          "ref": "c4a8f909-9e9f-4657-a118-d052b074a759",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7c05961a-eda2-42b6-8a8b-104a4e7e634e"
        },
        "item": {
          "id": "4923c85f-681a-4c30-b5b7-9a98484f0a09",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4e0d924b-76ea-4dc9-8039-fdc2e0a8bf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b3849b-7aef-4832-b210-4876ed82d84d",
        "cursor": {
          "ref": "c5f950d0-1396-4c01-86b1-b9bad5b7b549",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "99e3316f-330e-4acc-bb88-832532b3b29e"
        },
        "item": {
          "id": "45b3849b-7aef-4832-b210-4876ed82d84d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6e094c66-c9f3-4832-aa84-b32a51ac66a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a43d7b-a028-4877-bc17-e29a2f63dfd2",
        "cursor": {
          "ref": "749e2b2c-438a-4dfc-ba0a-b84efecc9bf6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "811b0068-bd72-4445-980e-0b53d7a60401"
        },
        "item": {
          "id": "29a43d7b-a028-4877-bc17-e29a2f63dfd2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b4942ad-bf45-4921-a3b3-aef82807b36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a80245a-14e5-482e-b7e8-10b9799396a0",
        "cursor": {
          "ref": "4338c08d-d556-4114-814c-8211e9d61b38",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "27a9857c-1dd7-42d8-8e5e-189e760cc5dd"
        },
        "item": {
          "id": "0a80245a-14e5-482e-b7e8-10b9799396a0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "20344be2-be62-49e7-9a79-825e3b50decd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2e8636-6c3f-4e28-9605-4e1eab5265a2",
        "cursor": {
          "ref": "d8175770-47c8-421e-9d99-f461fd3e9d93",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6dd8ca0a-27fa-452f-84e7-3de5cee28056"
        },
        "item": {
          "id": "ac2e8636-6c3f-4e28-9605-4e1eab5265a2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0e14266c-da85-482b-b384-21cfa7e369ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557218ad-8f45-489d-9d1f-ec8aeecad018",
        "cursor": {
          "ref": "823716e2-d6b0-44d6-9901-359ec1ca0ee0",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3321f22d-ceae-4d13-a3f5-316e18e7a5b1"
        },
        "item": {
          "id": "557218ad-8f45-489d-9d1f-ec8aeecad018",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "604fbd23-0b92-4f19-9f38-2289a874e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2251a43-e0e6-4c1e-bbc9-6fce7a78745f",
        "cursor": {
          "ref": "dba67bd4-7f9f-4d7f-9613-fbadfb8c2530",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11d96250-85b8-470d-a30f-844076aadcf9"
        },
        "item": {
          "id": "e2251a43-e0e6-4c1e-bbc9-6fce7a78745f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "79d8c6f1-9084-4f42-8fce-dd87af490524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea850e99-7f1b-4a1d-8ccb-035729cb323b",
        "cursor": {
          "ref": "9ad06622-0ce8-4c27-8a96-b1547553f713",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b6804183-1bc5-4290-916f-45e09b57e2c0"
        },
        "item": {
          "id": "ea850e99-7f1b-4a1d-8ccb-035729cb323b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "72c37d5e-3ad4-405b-8c8f-2111028c1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ec93e-1592-44df-9f59-fe4f7efd0e48",
        "cursor": {
          "ref": "be85ade2-b6bc-4cb9-b540-683cd9fd341b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "42a0858b-c1f7-4ec5-8d0b-4326ca0ac99e"
        },
        "item": {
          "id": "f61ec93e-1592-44df-9f59-fe4f7efd0e48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8ca49b61-6ee9-4b71-931e-b92f05eb0a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5ba4c3-6987-4e80-a41c-21ee7f3ac66f",
        "cursor": {
          "ref": "813cc2a4-67d1-4e20-b2ec-adf9aa4d85fc",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cc335486-ca3d-47f1-ab2b-aea6ac058069"
        },
        "item": {
          "id": "fa5ba4c3-6987-4e80-a41c-21ee7f3ac66f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "783cd1b4-0b10-467f-a286-9d99e75f1676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c63b47-c44c-4fd8-bca1-da3d9c2776bd",
        "cursor": {
          "ref": "b7f899fe-4c55-4878-b52c-42d7769e91d4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "43c5de21-cbde-49fd-ad09-9ad5893f0404"
        },
        "item": {
          "id": "65c63b47-c44c-4fd8-bca1-da3d9c2776bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1aeeb8c5-3c60-422a-b331-78e513ffbb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11faee8-47a5-401f-be09-9556e260a7a0",
        "cursor": {
          "ref": "628b919d-e008-4826-bc76-949644748236",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f776d121-51a4-4056-b880-e03ed6bba92b"
        },
        "item": {
          "id": "d11faee8-47a5-401f-be09-9556e260a7a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "37b644ec-857d-47d0-9fda-c659483b517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150600e4-93e4-4591-964e-f4d40b8594ef",
        "cursor": {
          "ref": "3fed986b-af11-47c0-8ede-2706aa187673",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f9b1d1e1-9514-4627-a359-7ba79d8096b3"
        },
        "item": {
          "id": "150600e4-93e4-4591-964e-f4d40b8594ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e92e110f-0d85-4a64-b0be-0b0a3c073bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b63bcbf-bd69-4766-bf50-3454829a71fa",
        "cursor": {
          "ref": "b7acd0cc-6618-45e9-b5f2-26e7f5b42fc4",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c9f5db3-ee22-4327-b45f-ac327190fb62"
        },
        "item": {
          "id": "1b63bcbf-bd69-4766-bf50-3454829a71fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "87507210-3774-4d51-aec8-c47a2e27f903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694c823f-55ee-4de8-a903-dd20f0e8a5e9",
        "cursor": {
          "ref": "a240be7f-c4bb-4ff2-8709-8cdbfd5e1f2e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "17f8415e-db99-4b0f-8645-a187bfec2da2"
        },
        "item": {
          "id": "694c823f-55ee-4de8-a903-dd20f0e8a5e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dd27a7ac-57b5-4748-81ca-7b8498e2c572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f127ab35-eb59-4c6f-8359-c6858fc1324f",
        "cursor": {
          "ref": "c9e87f2a-32f5-413b-b405-ea7ad6c0f1a2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0cade0e-e317-45dd-b781-ea6925315832"
        },
        "item": {
          "id": "f127ab35-eb59-4c6f-8359-c6858fc1324f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b874a798-889b-4dab-8b50-fb6a0e330b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90830832-40d3-4ffc-b840-82651d72e513",
        "cursor": {
          "ref": "ab8b1a24-e3ae-4591-9747-df7371560556",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "30863c36-4b82-4547-aaf4-ac77128ccdd4"
        },
        "item": {
          "id": "90830832-40d3-4ffc-b840-82651d72e513",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c9076d33-7706-4e66-be56-1bd8d23d901d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6d26ac-41d3-4fdd-9580-65928aff16f6",
        "cursor": {
          "ref": "740df576-1ebf-47a8-b15f-27c6dc342733",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c101a5cd-d970-4c6c-b658-1e2ea2675c31"
        },
        "item": {
          "id": "dc6d26ac-41d3-4fdd-9580-65928aff16f6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3ebb1dc-df6e-4c46-ad60-6f7b01faf137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b651f-fdaa-45fd-8532-d9141f1961b1",
        "cursor": {
          "ref": "4beb2e1e-c7f8-438b-9e23-e3a2fe1bd8a9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1171a345-de71-4d2f-809b-d797cd617ae1"
        },
        "item": {
          "id": "700b651f-fdaa-45fd-8532-d9141f1961b1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cfe8a7f0-321d-4074-9543-aef1b9cfe4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238883e0-131c-468f-a651-bd1ce9c5d386",
        "cursor": {
          "ref": "ba9a5fb6-da70-46f7-896b-633b175cfb99",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f49da388-2ad2-4ee6-b23f-87ced5ec73fc"
        },
        "item": {
          "id": "238883e0-131c-468f-a651-bd1ce9c5d386",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a09b9fa2-9134-461c-9ef1-2083847f7868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e6694e-cc83-40a4-9319-e5011b83b30b",
        "cursor": {
          "ref": "f3553084-0d79-4ab5-bad1-115c201ddb84",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "282a7cd0-019c-409e-b3ed-37abae25a636"
        },
        "item": {
          "id": "70e6694e-cc83-40a4-9319-e5011b83b30b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00cf9049-9cb5-4695-a5fa-609eb74c3fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bea3e4-b44f-46ee-a411-a5dc53fde825",
        "cursor": {
          "ref": "d17eb529-b99c-45fc-a8bb-a0bc80a90098",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e7cb4006-c804-4d2a-b97e-ec7cce19e8cf"
        },
        "item": {
          "id": "93bea3e4-b44f-46ee-a411-a5dc53fde825",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "76ab7e74-ecbc-446e-886f-7702c2c2ac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1c4d29-bab4-4064-9ff6-493a49113dff",
        "cursor": {
          "ref": "12109207-0889-4da2-ad8f-b0b7dca0eb08",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "24e59f68-a0c9-42d2-bcf3-780b72f8b4af"
        },
        "item": {
          "id": "ec1c4d29-bab4-4064-9ff6-493a49113dff",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d77385e0-2ae1-4cb3-8cd1-eb7ba663abb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0020fe21-6649-4ede-95b5-1db913140a11",
        "cursor": {
          "ref": "0916c4be-a7c0-4c99-a8dd-e12e928c428f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1b16296-a054-40b7-8198-36fc78794a8e"
        },
        "item": {
          "id": "0020fe21-6649-4ede-95b5-1db913140a11",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "77633ae9-e202-4f07-b45b-49423bd60290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2416d5-1f40-43f7-8f9a-11efb6088554",
        "cursor": {
          "ref": "44ffba6a-0521-4d9f-8dc3-298895f30527",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "656ff0f0-f570-4936-8638-23767bab9d1d"
        },
        "item": {
          "id": "8c2416d5-1f40-43f7-8f9a-11efb6088554",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0c3d1a3-f43e-4709-b284-f5bb41da3885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e2687-4ea9-4bc1-b3e2-f2ef24b0f433",
        "cursor": {
          "ref": "d0739697-c3bf-4537-970c-f5eb52227109",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8ffb3473-b237-4602-9f89-48b9c8c9dc4d"
        },
        "item": {
          "id": "da0e2687-4ea9-4bc1-b3e2-f2ef24b0f433",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3bdf193a-c7b6-4e63-8721-0423d471180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673988ff-a2c4-4c4b-a4ea-b0fab2fd6af7",
        "cursor": {
          "ref": "e146cb51-5ff1-40c4-b55b-8afb839df06e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9574f546-7610-4e65-a2a3-08e55f019f24"
        },
        "item": {
          "id": "673988ff-a2c4-4c4b-a4ea-b0fab2fd6af7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b2b47b75-4ae8-4e05-94fb-ea917640144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f13289b-6c18-4f38-bb92-2290bab1c033",
        "cursor": {
          "ref": "21863dc6-8d0f-4cc2-9b85-0e58c44ad756",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "415e0f03-901d-4b88-b960-93d19e9f0805"
        },
        "item": {
          "id": "7f13289b-6c18-4f38-bb92-2290bab1c033",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad5e59ae-4d13-4ffa-8f4c-bd3b8d520eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0940fb-a9f9-4cdd-8a50-3a8cdd3f371f",
        "cursor": {
          "ref": "bebc1799-ba4e-4444-9708-677ea86ce4d3",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ad2724d0-8619-4762-9670-7bf3eec01092"
        },
        "item": {
          "id": "7c0940fb-a9f9-4cdd-8a50-3a8cdd3f371f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8634d302-861a-44c6-9f28-861730870097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f79338-1e80-4041-8317-cb7ddc48f399",
        "cursor": {
          "ref": "36351559-1b76-4e3c-93cc-4c5fb3be7f68",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "40c9317c-f980-42a6-8a74-a9b6a9793d96"
        },
        "item": {
          "id": "a4f79338-1e80-4041-8317-cb7ddc48f399",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "07311b43-415d-4e10-95aa-77b23888be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e913bf5-9f9b-4d8e-8d34-576d7b780182",
        "cursor": {
          "ref": "6da10eed-7ea9-4af8-970f-bad736009809",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1224799a-4899-4a33-882b-8778934a8e4e"
        },
        "item": {
          "id": "6e913bf5-9f9b-4d8e-8d34-576d7b780182",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5c62151a-0c82-4f57-951f-25cd6e0ffa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ad013-e1ae-48a7-b5fa-181b50728cbb",
        "cursor": {
          "ref": "774af152-8238-44cd-a31b-00259ace818c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a99408bc-a4d3-486f-aa20-4f913aa9eb3f"
        },
        "item": {
          "id": "b32ad013-e1ae-48a7-b5fa-181b50728cbb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b79df22-1c57-46d8-8c60-d3ca10069136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23538b7-0af9-4774-8150-b591645805c5",
        "cursor": {
          "ref": "2d5955bf-c8ed-4a93-b076-83ee6c6fb522",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3c19a45b-77e8-4882-a674-ffe3f3936f7e"
        },
        "item": {
          "id": "a23538b7-0af9-4774-8150-b591645805c5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "71050b8d-e69d-4e21-9ddb-1e09edb62286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76df9575-3973-47af-bb2d-f135c0c54b70",
        "cursor": {
          "ref": "5b7dbf5f-d66b-4dbf-b17c-7ac979cb09e5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dabd2c28-d857-4e9f-8e06-fcdd9318dcf6"
        },
        "item": {
          "id": "76df9575-3973-47af-bb2d-f135c0c54b70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a9ff8ff4-9775-416e-84bc-658ec771e54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1211f42c-543e-400e-9c26-0694568763b7",
        "cursor": {
          "ref": "6915ef64-7251-4a3b-b250-b746580ba635",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01575f5b-ce0b-4164-9507-b8f9b759a0ee"
        },
        "item": {
          "id": "1211f42c-543e-400e-9c26-0694568763b7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a018f3c6-5743-46d3-a160-0473ddfc4525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d9157-042d-43f7-abf8-33be30979327",
        "cursor": {
          "ref": "c513a729-c51f-441e-9de2-cc1974a478c2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a657ac5e-4207-410a-8992-8b41bf0ab7ef"
        },
        "item": {
          "id": "4c5d9157-042d-43f7-abf8-33be30979327",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63963bab-674c-4b5b-bfb5-43a0077df5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765544e2-0f7a-4f0f-8abc-ea9131bc5fea",
        "cursor": {
          "ref": "7ecdd2c6-beb8-4efb-bad5-c1b8c7fafe1c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0b3aaa4-0939-4fd3-bb70-a43677390956"
        },
        "item": {
          "id": "765544e2-0f7a-4f0f-8abc-ea9131bc5fea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cca77f1a-3fa6-4ef0-ab6a-ee8090983bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983198e4-42f9-4ab1-b2cd-dc6ecbf7333a",
        "cursor": {
          "ref": "4bd7bc11-5383-433b-82c6-a077a13c95e5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3b4e3b65-b15a-46bd-a479-b25ffe7e0e55"
        },
        "item": {
          "id": "983198e4-42f9-4ab1-b2cd-dc6ecbf7333a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ceeacdb7-254b-4f98-b8be-d863cb05c201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfb6f6c-978f-4ae4-8a4d-f86b53c2f4f8",
        "cursor": {
          "ref": "2687e929-8b14-4d75-aab1-e6550b4fedb0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dcb4a31f-2b54-46e8-a367-7b5748297703"
        },
        "item": {
          "id": "cbfb6f6c-978f-4ae4-8a4d-f86b53c2f4f8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1e5c2cf6-84d2-43bc-aa19-38470dd9a21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b4b35c-8cb3-44e8-b55e-110777d2cef2",
        "cursor": {
          "ref": "b10efb03-f7c9-4313-a694-a773bb34e5f7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "139ae61f-5b31-4539-8391-474a810cbfe2"
        },
        "item": {
          "id": "32b4b35c-8cb3-44e8-b55e-110777d2cef2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7edcd91b-c852-4ade-8b21-519e8d82e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e668dafc-28dd-4af0-b47a-d1b6412f3030",
        "cursor": {
          "ref": "3928f2f8-26a6-47af-a5fb-ff5d1519eb7f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "202fe794-c18f-4758-a12d-db08b3e2e1e9"
        },
        "item": {
          "id": "e668dafc-28dd-4af0-b47a-d1b6412f3030",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c1e5e60e-e7a6-4822-8708-3454171b7dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f446a14-fa6e-41d8-921c-389fa6c717ff",
        "cursor": {
          "ref": "01f3d6cb-fa0d-40ad-b346-ec13b87b5208",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a2026c50-d2e7-44f0-b62a-936c9736ee8d"
        },
        "item": {
          "id": "8f446a14-fa6e-41d8-921c-389fa6c717ff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f07f1106-e1cb-4c9d-8885-9f9154434830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569cdadc-e852-4290-9f9b-79ee4d3aa1f7",
        "cursor": {
          "ref": "5cfd9ae7-6161-4b2e-9da8-b57e33f6106e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "53e144fb-10f1-4437-bc6f-310a07535d40"
        },
        "item": {
          "id": "569cdadc-e852-4290-9f9b-79ee4d3aa1f7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2ee5e52b-53b2-4ab9-bf98-fc66b490ef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1976a2e9-7ab4-490e-b065-ad9ea3b7b655",
        "cursor": {
          "ref": "7e4ec298-544b-42df-bb1e-7e0ab5135762",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "abdefdd7-0171-43b8-8ccf-0bffed1c01ba"
        },
        "item": {
          "id": "1976a2e9-7ab4-490e-b065-ad9ea3b7b655",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6696537b-254e-475d-96ba-7702b73d1f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4ec5c8-3f78-410a-bcd3-b71f357e574c",
        "cursor": {
          "ref": "08f2b022-eb6b-471f-849b-31863124e19d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0df52960-43e4-42f3-867f-a63f9849969d"
        },
        "item": {
          "id": "3f4ec5c8-3f78-410a-bcd3-b71f357e574c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f11685d8-7b8a-4b24-815a-5df935388bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5ca46d-652b-443d-a56c-fc5350b36ed6",
        "cursor": {
          "ref": "c8b2376c-1eb7-4bf3-b298-e1fa4c26b477",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c0f38ca1-3067-423f-bc72-db387d13a556"
        },
        "item": {
          "id": "5c5ca46d-652b-443d-a56c-fc5350b36ed6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "93c00680-3b68-4471-9341-2991be3e0a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87761a2-5105-450b-b4d4-fd9e0b76b552",
        "cursor": {
          "ref": "eb478cba-2b59-449e-8cb6-4f1906d16adf",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "79bcf9d6-7309-4a3b-9d0c-c046b82a8d4f"
        },
        "item": {
          "id": "f87761a2-5105-450b-b4d4-fd9e0b76b552",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3daddaec-5034-4d5c-a4ad-33371b7ea667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd0857e-3df7-43ae-88b7-b59a55125baa",
        "cursor": {
          "ref": "d3efa18e-3736-4aa2-ab71-63b8718d9da0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3e5bf0d9-fe6d-41e2-96f4-cb863d70d178"
        },
        "item": {
          "id": "afd0857e-3df7-43ae-88b7-b59a55125baa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a07f2374-1084-40f0-b774-2346e1349e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d38b5-fc4b-42b5-a917-a58ee634e854",
        "cursor": {
          "ref": "aedd0ac7-c7ac-4b25-b6bb-631149ef4b82",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "113e4624-90c3-4248-bc74-e17b21c45dea"
        },
        "item": {
          "id": "1d8d38b5-fc4b-42b5-a917-a58ee634e854",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f6db9ff2-4e7c-4f0d-ae72-1974cdc3b8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2af006-839e-48d7-b462-0eb997d07ac9",
        "cursor": {
          "ref": "b48c1cde-67c9-449e-9861-ba436b27c686",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fd287ec6-1340-47e8-90fe-6a0a39aed81e"
        },
        "item": {
          "id": "fb2af006-839e-48d7-b462-0eb997d07ac9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9a910196-6baa-42e7-9dee-317dbfefa00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a10890c-2be8-4fe3-a7ae-e3c6d8052ad0",
        "cursor": {
          "ref": "5c2568d6-2075-4590-abe4-c61cb51baf32",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eff97ee2-a408-4a5d-9e61-ec1d93bd06d0"
        },
        "item": {
          "id": "7a10890c-2be8-4fe3-a7ae-e3c6d8052ad0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5aeab427-e21b-4992-ba04-b4f597bf2cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd89c37b-1415-40cb-945d-82949133d058",
        "cursor": {
          "ref": "a12e1da7-17a4-439e-9d10-b67dd600455c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "294e44e5-6ea4-4bfb-a1ca-e02c928e2ba6"
        },
        "item": {
          "id": "fd89c37b-1415-40cb-945d-82949133d058",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4d5e8e06-8fe0-4b99-82d6-2dd11baba0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f7b13-eea8-417e-a5ee-60383a7d7c47",
        "cursor": {
          "ref": "72bcfb15-45e2-4d49-ba8e-a12e6ad254c3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "54490a5d-5eb4-4962-8155-a8e35aaaeae7"
        },
        "item": {
          "id": "8c6f7b13-eea8-417e-a5ee-60383a7d7c47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee73b23d-53e7-42c5-8f9f-d6d0e502703b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa06251-19f7-4e1e-a9e7-02659c066ec7",
        "cursor": {
          "ref": "9782ed60-ffc5-439b-883d-b0bafe28eb97",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "856c2b74-5b74-46cb-ad2e-2b508c120eb4"
        },
        "item": {
          "id": "1fa06251-19f7-4e1e-a9e7-02659c066ec7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e2451034-e276-48e6-998c-3b8646a6c0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e277cded-8d34-41e7-8abc-7c534170c897",
        "cursor": {
          "ref": "19de643a-e5f2-4380-b0c9-9f3a96b5d737",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7dc40430-9937-47d7-9472-b5619084e08b"
        },
        "item": {
          "id": "e277cded-8d34-41e7-8abc-7c534170c897",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a8ed463a-6c09-4297-89be-8b9a91efb5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555d1c51-ce19-4bbb-97a2-dc4816cb1de7",
        "cursor": {
          "ref": "8ce9f14b-7439-4c6e-8ba0-05eb6bee6bea",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9b2c06fe-63da-47e9-b648-a58883540b43"
        },
        "item": {
          "id": "555d1c51-ce19-4bbb-97a2-dc4816cb1de7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "36502a31-92dc-485e-953a-5e8f6e9296a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd46eac5-5a88-46b5-bd88-b4b039525045",
        "cursor": {
          "ref": "56b9da67-6966-47b8-9b83-5791e9cab734",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8f907490-884b-414f-bd1b-e1331bd83b6c"
        },
        "item": {
          "id": "cd46eac5-5a88-46b5-bd88-b4b039525045",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f4b258f7-3ff5-4d94-9e4f-0bb4fea2b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2deb058-7800-4e7a-87ea-75c6ca18722a",
        "cursor": {
          "ref": "e81cd80c-00ab-401c-9e85-37606b8c0f17",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9e22f048-42b2-434b-9501-3ca0699483ce"
        },
        "item": {
          "id": "d2deb058-7800-4e7a-87ea-75c6ca18722a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "82563506-7ace-4829-aa9a-10696c12dafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7772dcd-302f-44a3-bc14-1a6fabdd0ac1",
        "cursor": {
          "ref": "16bacf01-32fa-4c6b-b069-23535870f44e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93a3249f-52ab-4c5e-b8f4-4046d504fba2"
        },
        "item": {
          "id": "c7772dcd-302f-44a3-bc14-1a6fabdd0ac1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "72a77fc3-ecf9-4b0c-9510-b5b2f0dfe0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be53cbd-6f07-4800-8b00-641361a369ea",
        "cursor": {
          "ref": "0c341e90-4bb3-4e2c-85f2-7660329120ba",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3177fa2f-6921-42b7-b248-6a2b613a6258"
        },
        "item": {
          "id": "9be53cbd-6f07-4800-8b00-641361a369ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a7e2d1ec-aa3c-48a9-9304-2c8f8fd5af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568689a5-e947-44c5-af99-f66dd2e82487",
        "cursor": {
          "ref": "51b003a3-8391-4a6d-aeb7-89855cd3a733",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "69ec1ae1-8c9b-4888-9748-a21de7492e1a"
        },
        "item": {
          "id": "568689a5-e947-44c5-af99-f66dd2e82487",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "77522465-2349-4a4d-a08c-2cc7547cece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881e4587-11ef-45ad-8f81-0664f92d8e7c",
        "cursor": {
          "ref": "ec06eb17-ae8b-421f-9a2d-29a57ddd4268",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "712a5be9-f912-46ed-a7a2-56446b6c3d8c"
        },
        "item": {
          "id": "881e4587-11ef-45ad-8f81-0664f92d8e7c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "536a0193-1245-44f9-b5b1-7ebaf2a1ff11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dc27ca-6aec-455b-b88c-d5a9a2d642f2",
        "cursor": {
          "ref": "a461469c-902e-43e1-9c25-e02db0b6f677",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f0c49518-60fc-40de-b310-4c193de76c06"
        },
        "item": {
          "id": "54dc27ca-6aec-455b-b88c-d5a9a2d642f2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fcb1799c-6cf9-41d0-bb2d-d7d6f5e465fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6986e2ff-785a-456e-b5a2-a35a9af15095",
        "cursor": {
          "ref": "8543dc5a-c250-4496-be1d-bf4a037388d4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "21374eb5-273f-4c29-8ed1-5e612d6ae908"
        },
        "item": {
          "id": "6986e2ff-785a-456e-b5a2-a35a9af15095",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9777552e-1f5d-4ad3-a290-1ef69102ce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a7e9f-2af3-4b87-8642-2bdece18b78b",
        "cursor": {
          "ref": "0c009d2e-6d27-433b-8383-85c1a5c435c2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8ee28be6-94d7-4040-bcbd-ae8c658a8ab3"
        },
        "item": {
          "id": "a95a7e9f-2af3-4b87-8642-2bdece18b78b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0fa2238d-3adf-4490-b337-399cd8efe8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01170bc-d202-49d4-b3c5-cf2c9f918193",
        "cursor": {
          "ref": "c3243c5d-b526-455b-9364-f30b2e5e9329",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c955c6c9-d721-447d-ba5d-e07c82de7dc0"
        },
        "item": {
          "id": "e01170bc-d202-49d4-b3c5-cf2c9f918193",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e21b792e-b518-4dba-8b52-8d6fee4bba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a94877-138a-4a22-821b-1ec59a8fd033",
        "cursor": {
          "ref": "aec80910-e432-4634-b6b0-c9daae3941ee",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04da6a75-9604-4c02-9547-59336f8afc08"
        },
        "item": {
          "id": "66a94877-138a-4a22-821b-1ec59a8fd033",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "66f84ea4-cd41-469d-a9d8-290d19062b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89402ad-0cff-48b9-8ae4-fb21e37bd857",
        "cursor": {
          "ref": "76ea07a0-6cb2-406f-b68e-1631f6ab3915",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e8e1c2f3-ae80-4b31-a216-4bd841ba5022"
        },
        "item": {
          "id": "a89402ad-0cff-48b9-8ae4-fb21e37bd857",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "239fa618-accc-415a-b8fe-28f9b455e17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b61d08-fba1-4393-9ed7-74b64bc1386a",
        "cursor": {
          "ref": "bd98383a-8d7d-48da-9bed-821f1bf3ad87",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf3236a6-8419-4f67-98f9-7d578fd00691"
        },
        "item": {
          "id": "16b61d08-fba1-4393-9ed7-74b64bc1386a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0ce900ba-2882-4b79-ac5b-d05e47cd8e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889433dc-fa89-42d8-85e3-e0a962b84b77",
        "cursor": {
          "ref": "c9b6261b-ae0e-4456-bd98-8d9e1ca3d8f2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8ae3df15-5978-41c3-bb1d-ccc0f6f94cbf"
        },
        "item": {
          "id": "889433dc-fa89-42d8-85e3-e0a962b84b77",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8dbff3e3-0233-4dcf-8e0f-18af3b0dc4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecbc5a0-bd1d-4a10-bbae-f4b9bdce2be7",
        "cursor": {
          "ref": "144235b4-3053-46e2-a1ad-2cc05d30d458",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3f2235b-b6de-4b92-babf-39277b58b894"
        },
        "item": {
          "id": "7ecbc5a0-bd1d-4a10-bbae-f4b9bdce2be7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "be1f7a8e-7340-4c8f-b921-838ae422cf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd641b-ddba-4e2c-b7ae-1d1bd31ad835",
        "cursor": {
          "ref": "cccf695a-494d-4163-9f14-ec03f8672c2b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "764096de-6339-4e84-b735-e29d4c6562c6"
        },
        "item": {
          "id": "50fd641b-ddba-4e2c-b7ae-1d1bd31ad835",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "def7ede7-7a9d-44d8-80c3-bd2a68d9a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1170,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789de6cc-2d0b-4a0e-987e-af3a158629ad",
        "cursor": {
          "ref": "03c27cd7-1f5a-4b96-8926-088fa543b199",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d66b7a01-0969-4558-9e7d-361cc4b35b99"
        },
        "item": {
          "id": "789de6cc-2d0b-4a0e-987e-af3a158629ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "52658190-6c83-4b8c-b8c3-2f1d39518fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b4aca1-75a2-4ca2-bf63-9ff34fabc6b8",
        "cursor": {
          "ref": "71dffb87-5fac-4d9c-bd0a-681e0a128368",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "24e7cfaf-6e59-4662-a652-9ca110d1e366"
        },
        "item": {
          "id": "b1b4aca1-75a2-4ca2-bf63-9ff34fabc6b8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "df7cab80-9fdc-4eba-92c2-200e77e43a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5c6f8e-5c5e-4f44-b265-3a2fa6221d28",
        "cursor": {
          "ref": "dfddad49-6f3d-4a55-97fc-c1eb35fef453",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4639df62-bc6b-47f6-98dc-3f8a0f0b2998"
        },
        "item": {
          "id": "1c5c6f8e-5c5e-4f44-b265-3a2fa6221d28",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d19b35a-17ef-4e77-bdf5-c08f73864421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b4655a-ca32-445b-97dd-c77729b58502",
        "cursor": {
          "ref": "835fa5ac-6864-4145-978b-76c4e1f092b3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b91eefa6-2188-4c67-a6bc-6b01c78d6635"
        },
        "item": {
          "id": "a5b4655a-ca32-445b-97dd-c77729b58502",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41c70dc2-7a78-4501-a281-781fb0a4021f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a6c4f-df95-4018-9b11-933c7f76e0f6",
        "cursor": {
          "ref": "d7273619-af16-4b05-8e2d-7c0f56ba5ec0",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3b5a5595-9162-4b29-89c2-74881a397b01"
        },
        "item": {
          "id": "e56a6c4f-df95-4018-9b11-933c7f76e0f6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71997aff-2c17-4df4-b328-88c61df4822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141b7e11-b1aa-46b9-bedb-bf9098bf47b2",
        "cursor": {
          "ref": "ef32df39-fa08-4615-be06-3edafb692cc0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "89ef1722-708a-46f8-9fda-67f69d42b6eb"
        },
        "item": {
          "id": "141b7e11-b1aa-46b9-bedb-bf9098bf47b2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61868bde-f5d9-4a0c-93cc-dd89e14f1114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a7c09e-0bc2-4153-9e17-e9a8678584e9",
        "cursor": {
          "ref": "6d153df3-2f4b-4250-b21a-a800cfe95bf5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5ef72099-b7e0-4c97-95b5-33f8c3cc90f4"
        },
        "item": {
          "id": "28a7c09e-0bc2-4153-9e17-e9a8678584e9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a7984164-dde5-46ad-a6eb-4e93310a773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf576b6-7acf-4d81-8c62-cad7cc569dfd",
        "cursor": {
          "ref": "1f8e0288-73f5-4c71-ad86-2ef35bf3ae89",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6e7f7812-3f04-42d9-a3d9-c131937e7dcd"
        },
        "item": {
          "id": "bbf576b6-7acf-4d81-8c62-cad7cc569dfd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b479f2a-16cd-4d19-b5fc-8ead6a1e71a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9954e517-42db-451f-b1f7-57aa0d01b13f",
        "cursor": {
          "ref": "08b43dc8-f82d-42ec-abca-738b163e9927",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "17045d14-3632-427b-b948-90c7d96bc6f6"
        },
        "item": {
          "id": "9954e517-42db-451f-b1f7-57aa0d01b13f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f971f1af-4ab6-44fa-9e70-7cba982b2099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd0713-4143-4a1e-89c3-c929efa2f969",
        "cursor": {
          "ref": "3b5be627-c17b-4714-9759-81be2169b53d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d049a61a-51c2-4cc8-ba94-271a6508bd21"
        },
        "item": {
          "id": "1cdd0713-4143-4a1e-89c3-c929efa2f969",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9b1d5b9e-b2bc-4e9c-b524-65780e26c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a86a16-f719-4798-ad2e-92a6dd950bfd",
        "cursor": {
          "ref": "21affd3c-48f5-49f8-bb53-74d7f92faf6b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a313125-fefa-4cd5-a7e7-45c223892d50"
        },
        "item": {
          "id": "74a86a16-f719-4798-ad2e-92a6dd950bfd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "110d1dce-fd11-42c8-bd4f-73887cef6a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869cb5c4-8136-41d4-9fef-4ed540d24dbc",
        "cursor": {
          "ref": "ad634e05-bf13-47d7-8a20-4bf9d51087e5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c8cae348-59bf-4c82-9f38-acc7e9aa8fcc"
        },
        "item": {
          "id": "869cb5c4-8136-41d4-9fef-4ed540d24dbc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f099c888-5e60-471f-9e45-1e480ad939e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbddf33-47af-4b8f-b503-ce461007b07e",
        "cursor": {
          "ref": "b918a002-35e3-49b1-88c5-58f3e5c5133f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ccbae469-b3d1-4721-8315-7caec32b14df"
        },
        "item": {
          "id": "fdbddf33-47af-4b8f-b503-ce461007b07e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "601647fa-c0ab-48cb-8f64-d7f56dac27ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed3ee50-8947-43ef-bec7-2f555b779720",
        "cursor": {
          "ref": "885d2048-f1e2-4fb9-b742-56a7090363c4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78405888-c9a2-4386-92a0-86a2f78717be"
        },
        "item": {
          "id": "1ed3ee50-8947-43ef-bec7-2f555b779720",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "94eb34b0-26a4-4bb5-bdce-c16764877b43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dccf03-ec39-47af-bdec-0b5b7fd7bbe3",
        "cursor": {
          "ref": "3458ec8a-10f6-41e2-9d57-926a4e3c99b4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cbdbff68-95e4-4a21-8cec-42462688aca2"
        },
        "item": {
          "id": "90dccf03-ec39-47af-bdec-0b5b7fd7bbe3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae42a6f3-3cf6-485f-ad9c-043eb2d336a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "7d6daacf-03d9-4caf-bfa4-16ce5ccac19e",
        "cursor": {
          "ref": "96396023-e119-4e7a-8ca2-b7255aca0af3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "be3ffe7b-be80-4dc2-b3ae-be423885a055"
        },
        "item": {
          "id": "7d6daacf-03d9-4caf-bfa4-16ce5ccac19e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "59277939-e4fd-46f2-9c23-7ec873bd48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "54df5ea3-96e6-49ae-9c60-38f9307f24b5",
        "cursor": {
          "ref": "c8f9b858-fb74-4d88-a40d-606177a1c830",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eb24d76f-711d-4fad-aa5f-3e8f225e57df"
        },
        "item": {
          "id": "54df5ea3-96e6-49ae-9c60-38f9307f24b5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "91ab0af8-7d73-45c5-ba8e-dc99461e071a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "54746bca-18d8-4f50-9554-775806f67498",
        "cursor": {
          "ref": "719e9863-4447-4a8e-9794-b7be47c812ca",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ac64e12a-9820-44fc-8ad3-c736c441e39e"
        },
        "item": {
          "id": "54746bca-18d8-4f50-9554-775806f67498",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9f4de18e-ff57-47a6-b907-c66ebe82e611",
          "status": "Created",
          "code": 201,
          "responseTime": 5073,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "943dba57-cc7b-4fd1-bebe-33826726f867",
        "cursor": {
          "ref": "a024d7e5-b168-40a8-a641-d4126e4d1e7c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45027f4b-80e0-4e0b-a68e-269efcb4fff5"
        },
        "item": {
          "id": "943dba57-cc7b-4fd1-bebe-33826726f867",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f2cc68cd-4d98-4ca7-bc54-14a492f50ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1307,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3afa2bb9-fce0-45be-a06b-ca30bcfb5d8c",
        "cursor": {
          "ref": "7424dda8-39b8-44a7-9ffc-cea29e2abb3c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6bf124d0-3bf7-4412-a401-08dcf0e752f3"
        },
        "item": {
          "id": "3afa2bb9-fce0-45be-a06b-ca30bcfb5d8c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "92dd0499-ef83-4d9e-be18-511851c67a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3010,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "973742e8-ba80-4a99-b0db-299fdb72be03",
        "cursor": {
          "ref": "0026c349-786d-4b0f-bcc8-694e00a7c2ca",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "36949236-e234-4d90-9cad-7fd6a3971fc1"
        },
        "item": {
          "id": "973742e8-ba80-4a99-b0db-299fdb72be03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5e5ce197-2bdd-414a-8381-4b6176c17240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0ba66f-e066-400b-8fb1-d155ce6d45b0",
        "cursor": {
          "ref": "a17a3b1f-342a-491d-8ea1-9768cb91ed71",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "379c6eb0-c26d-472b-b5f2-94c3cd31207a"
        },
        "item": {
          "id": "2c0ba66f-e066-400b-8fb1-d155ce6d45b0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "94fb789e-0033-4b9b-a2ab-7d3b141ff043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e47032-c12b-4b32-b7d8-387e4027aeae",
        "cursor": {
          "ref": "3330e522-524d-47d7-bf2f-9e820a0d337c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1814ecb1-e3e7-4274-9459-88f8caebfbe7"
        },
        "item": {
          "id": "33e47032-c12b-4b32-b7d8-387e4027aeae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "771f867c-a941-4ef2-abee-9aaec92516d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b8681f-05f6-4707-ae23-aba43829bf90",
        "cursor": {
          "ref": "e871bd9c-4fe4-4f94-9655-5259b0c99da7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f8cf6b6-eb60-4129-a1a5-fe873d437643"
        },
        "item": {
          "id": "09b8681f-05f6-4707-ae23-aba43829bf90",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cc0109a0-746e-4c90-8675-10843ca76957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc82b20-bb3c-477b-9ba5-6da60bfff8e7",
        "cursor": {
          "ref": "6168c68f-37b6-46f8-89ef-026bfacd5dd4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "14278c72-c418-4e71-bda2-05519c9d8189"
        },
        "item": {
          "id": "6fc82b20-bb3c-477b-9ba5-6da60bfff8e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "accb64ff-00a7-41be-ab94-316aa6ff03e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46234065-1c76-4aba-9c41-69970edcbb82",
        "cursor": {
          "ref": "cc59c9ff-f337-42be-9a05-7c7ee2897242",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "62be2839-01cc-43ff-a960-f3cbf9539506"
        },
        "item": {
          "id": "46234065-1c76-4aba-9c41-69970edcbb82",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c1bafac0-03a0-4a49-9dde-076bb310a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44399b-2c5d-4346-a6e0-8f635e67175b",
        "cursor": {
          "ref": "72c2365e-afb3-4e24-acf0-d759f8aa9504",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e529c1b-bd0d-462a-b6cb-17d8b0c63f39"
        },
        "item": {
          "id": "7d44399b-2c5d-4346-a6e0-8f635e67175b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ad27493-ce4e-4d9d-9f0e-bca1f198b683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f3159-4eac-413f-82ee-fddc563ac58c",
        "cursor": {
          "ref": "ecc20180-e587-43cd-bf86-fcd7de076621",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eaacc1e9-87dc-45ea-b9e6-3ac8188f62e7"
        },
        "item": {
          "id": "8f2f3159-4eac-413f-82ee-fddc563ac58c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3aa54173-b59b-47e6-873c-8a0dd9fb86ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70df59a7-c6b1-4797-b7c8-bf51c6480b9a",
        "cursor": {
          "ref": "c86cd84d-1945-4afa-ba96-1a7503d4c741",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "539324d0-b475-4cba-afdb-8567ea108108"
        },
        "item": {
          "id": "70df59a7-c6b1-4797-b7c8-bf51c6480b9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a6f74d92-69d5-40f9-b956-8ee43a4c1213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d032da1-07b5-4f43-9900-818d03d38f03",
        "cursor": {
          "ref": "2271ba1d-8c00-41f2-8dbc-8353bd04ebcc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3ea7f09b-67a4-40fe-b1bf-761efab108ec"
        },
        "item": {
          "id": "6d032da1-07b5-4f43-9900-818d03d38f03",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d91525a-74bc-461a-9dfe-205d1743177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0047b2b-ea16-4f19-b708-c28358fe3ea2",
        "cursor": {
          "ref": "27bff0da-3fe2-478c-ad93-641d7581e948",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0eab18b6-de55-48f7-a588-04de6591b65c"
        },
        "item": {
          "id": "e0047b2b-ea16-4f19-b708-c28358fe3ea2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8374f2aa-1ebc-4ba1-9c1a-7ee194a04863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ee554b-2a5d-43c5-866e-cffc2154b9cd",
        "cursor": {
          "ref": "bf7c7e6d-f1ce-4f72-a64f-9282b8dc6af3",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f3b8c27d-7531-4c2e-ba14-c49028e39609"
        },
        "item": {
          "id": "d4ee554b-2a5d-43c5-866e-cffc2154b9cd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b82c9a3-c956-4eb1-a473-8dac7043c21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f839a8-eceb-46fe-902c-5d9dc67f89ac",
        "cursor": {
          "ref": "3d25765b-bdd3-49a6-b533-5e411b0efd81",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b2c24235-17ca-4119-84aa-04e1ef86496b"
        },
        "item": {
          "id": "99f839a8-eceb-46fe-902c-5d9dc67f89ac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "97df0721-4171-44ba-9d56-fda57a1a311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb84b9-6925-44df-8216-89365f3c9510",
        "cursor": {
          "ref": "5924e0f0-5cce-42fa-a13c-e74051edaf37",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "981d75c1-2e8e-4d21-9fc8-57e5006c6f1c"
        },
        "item": {
          "id": "6adb84b9-6925-44df-8216-89365f3c9510",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7181e0a0-2e12-4ddc-9c0e-48a2fbbb2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2be385-baf5-4f56-917e-2184e429a196",
        "cursor": {
          "ref": "0c55aeb6-a6ad-4f07-8057-2a7eac88d48a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "34cda634-b696-4842-9d84-b8416e6cb019"
        },
        "item": {
          "id": "6d2be385-baf5-4f56-917e-2184e429a196",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a914071-7f09-42c4-8800-cc4ee3b84ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd473919-b1a8-448d-bd76-b08f8aa79f4a",
        "cursor": {
          "ref": "ccc75604-1363-46c5-994f-4b71557d2368",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81436b6f-8192-4d8a-b6ab-7d8317e71346"
        },
        "item": {
          "id": "cd473919-b1a8-448d-bd76-b08f8aa79f4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1ff7aa02-791f-442a-94d3-639bf32fddc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d230764-12f3-4f4c-b943-db0233a39a23",
        "cursor": {
          "ref": "db51460c-6c7e-4ad3-a0b4-e430b0079395",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d85da92a-3a1b-431e-9ac9-0dc6aff8b635"
        },
        "item": {
          "id": "5d230764-12f3-4f4c-b943-db0233a39a23",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4791eeb3-9ab0-4c29-854a-e8fcd7cb649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25ed45-7275-431c-ac8b-0fb2712d2f2b",
        "cursor": {
          "ref": "331b0266-3c55-4ad0-ad9f-23cb1583b4b2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e2d9327-0b9b-413e-8139-84bc44e55cd8"
        },
        "item": {
          "id": "0e25ed45-7275-431c-ac8b-0fb2712d2f2b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "852a848a-ea25-4b1d-a507-59707caa04b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf77b673-465b-4cfc-899f-fde9073f9a45",
        "cursor": {
          "ref": "03027c41-ce34-4c0b-ba21-4771b8594f71",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5239fdd7-b71c-4940-8516-050a1cd0d55b"
        },
        "item": {
          "id": "bf77b673-465b-4cfc-899f-fde9073f9a45",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89750e38-3e04-4327-b99f-590fc602de57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17391d3-8091-496c-b0a4-8dd09d883d68",
        "cursor": {
          "ref": "6e049faf-8b16-4d12-a148-44422bb7cb66",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b86a2b69-01ec-4388-9063-d8fe3d571dbd"
        },
        "item": {
          "id": "c17391d3-8091-496c-b0a4-8dd09d883d68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa6ccb56-66fd-4634-9088-a2b06542730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b914aa-7b71-4da5-821a-bc30e24fb536",
        "cursor": {
          "ref": "f7de710b-7480-41e7-97ec-0cc4586fba49",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "64ae3c60-306e-4d36-b9d2-a73e84c05485"
        },
        "item": {
          "id": "c0b914aa-7b71-4da5-821a-bc30e24fb536",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "62e2405b-13f6-46e0-b02d-943e20441dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51841c1-3529-40a9-9fc1-f766dfe32a01",
        "cursor": {
          "ref": "b7bdc33e-5faf-4e7c-a777-8860425bf410",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d4676689-4097-4556-bb10-935c45ef7fb8"
        },
        "item": {
          "id": "d51841c1-3529-40a9-9fc1-f766dfe32a01",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abc766d1-558d-4cf4-b9f0-bf79db747c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9baefc1-a08f-416e-ac78-c867021c9b5f",
        "cursor": {
          "ref": "a81873fa-f561-4afc-96ad-178782d3db0d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6b9363c9-b616-4dd0-b660-994f0b9ae241"
        },
        "item": {
          "id": "b9baefc1-a08f-416e-ac78-c867021c9b5f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "51a055ae-d7d3-4d4b-8f5e-49d2b6d1693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9351c01-e179-4351-a37f-32157309a09e",
        "cursor": {
          "ref": "fdf188f0-f82a-40a6-b3cf-8af0d91c8c7e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "031fe196-f855-4840-9ef2-c80738414f68"
        },
        "item": {
          "id": "e9351c01-e179-4351-a37f-32157309a09e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "753ceabf-4ed4-45ba-b5ef-8f6dc620fa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dba001-f97a-4bb0-8c93-55f518939c46",
        "cursor": {
          "ref": "0324c062-1a93-4309-abb0-ecb788b2fc3d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c671155d-2328-487c-84ac-7c4f5f66436f"
        },
        "item": {
          "id": "46dba001-f97a-4bb0-8c93-55f518939c46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "06173d23-de01-40af-a79e-b6349cdd694c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c81a0b2-8f4f-4200-81fb-d988fd8bdad2",
        "cursor": {
          "ref": "fc690e9f-08d3-45ec-a82a-1a700d0146a1",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc28c71e-bb69-4101-9ab3-b040f6962cf4"
        },
        "item": {
          "id": "7c81a0b2-8f4f-4200-81fb-d988fd8bdad2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0dff3e31-6045-4970-9675-92274e799f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996fefb4-8076-4e59-9546-e4c62999e158",
        "cursor": {
          "ref": "b1ef5191-f49c-40e3-ae88-f8bdad9ce6cf",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f598ea61-7323-46df-84eb-f8fc41e5381e"
        },
        "item": {
          "id": "996fefb4-8076-4e59-9546-e4c62999e158",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cbc43f14-7ecb-47b1-98e1-d8cc66118278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd75b43a-81b9-4ccc-ae79-123a43033742",
        "cursor": {
          "ref": "2d9c3468-8ef9-45de-9f31-08ea01de720a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c474fbda-3eb1-45f0-8929-1fc519718c62"
        },
        "item": {
          "id": "bd75b43a-81b9-4ccc-ae79-123a43033742",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b220fb1-e47d-44b7-9a8d-68672e8de680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9484f21f-a1b7-419f-8562-97c0f289a68c",
        "cursor": {
          "ref": "558958fe-9195-4ec0-aa6a-eb57e45c8062",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b62161ab-efef-467d-bc4d-642764b7cbc2"
        },
        "item": {
          "id": "9484f21f-a1b7-419f-8562-97c0f289a68c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8bc08261-824e-450c-9f03-00391c01efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456d3f3a-dc8a-4f5c-8b48-966b9003d755",
        "cursor": {
          "ref": "257d6a23-a85f-4942-bbdb-a21bf9bba9bd",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1f33c2a5-ae1d-43de-8ede-d706de514924"
        },
        "item": {
          "id": "456d3f3a-dc8a-4f5c-8b48-966b9003d755",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b799c74-973e-4256-9481-47c516e0498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d7b39-28d9-4ce4-8369-bdbc99821fea",
        "cursor": {
          "ref": "e4158405-f711-438a-b66b-5b7ddc7cc123",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1bf9d2bc-c4eb-4413-8f0a-2f9c5263af25"
        },
        "item": {
          "id": "3b4d7b39-28d9-4ce4-8369-bdbc99821fea",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "696a757a-6183-4960-9fdf-bee9a15f3f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d266982f-3ea1-4dfc-b70f-3ea03ca61d71",
        "cursor": {
          "ref": "71bbbd8e-73fe-4de9-94e8-0eb74718a739",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bdd01aea-0afa-46b8-85e1-9181526ba022"
        },
        "item": {
          "id": "d266982f-3ea1-4dfc-b70f-3ea03ca61d71",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "60807329-ca84-4e67-a26f-6687d3ac1af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39b32c6-7378-422b-8581-34f9307d827e",
        "cursor": {
          "ref": "27121be1-1d21-475b-afc1-87219e93b007",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "953e7b70-4022-4794-87a2-78377f874b4b"
        },
        "item": {
          "id": "c39b32c6-7378-422b-8581-34f9307d827e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c0e256c-3a20-4da1-bfea-3ad3621c970d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0da91c4-4d2d-46da-a96f-250666b1914c",
        "cursor": {
          "ref": "db740e64-3f47-4a9e-aca1-be2fb9fdd3e0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a7173e3-f170-445f-9547-7057fac4e170"
        },
        "item": {
          "id": "b0da91c4-4d2d-46da-a96f-250666b1914c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aea48f11-9d5e-4840-a0cd-456c6f9bdbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5cbf65-af33-4c45-808f-f572cb36846d",
        "cursor": {
          "ref": "e0e5b31b-7656-48d9-9252-ad336cd00236",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ed677009-847e-41fc-b009-97219b473b54"
        },
        "item": {
          "id": "7f5cbf65-af33-4c45-808f-f572cb36846d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4ab78368-9caa-4a47-87bd-b754cedcc9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a51bbb-4c42-4289-ba1a-f0889ce2eb2c",
        "cursor": {
          "ref": "9bb076ee-978a-4ca6-a9ad-a2f66c9cdb13",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8bfc91a4-7695-4aa5-91fc-aeac35c33be8"
        },
        "item": {
          "id": "74a51bbb-4c42-4289-ba1a-f0889ce2eb2c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "385c7806-553d-4c82-add7-b71525fec7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c77a57-3360-481f-819f-f4c25216838e",
        "cursor": {
          "ref": "c3f7d760-7b88-43cf-ae68-a9b65f57900f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7f90b097-38f8-4dc9-b9b5-07bdb8cddc84"
        },
        "item": {
          "id": "50c77a57-3360-481f-819f-f4c25216838e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "994ae83d-8636-4935-b7db-40f28d0c2714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b00193-7fbb-47fb-8616-67e32206771a",
        "cursor": {
          "ref": "4b3add44-c9ff-4c8a-9bc3-7d024524d41c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8b414068-548c-485c-a31f-47a05db2b733"
        },
        "item": {
          "id": "67b00193-7fbb-47fb-8616-67e32206771a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a0245ca2-f7a3-45b3-91cd-95012a1858dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ababf599-d4b3-4fbf-8e80-295aab30259d",
        "cursor": {
          "ref": "13445c41-6ab6-4929-a736-e2bed758056b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ed7e615-4fba-4233-b502-ef39043245f0"
        },
        "item": {
          "id": "ababf599-d4b3-4fbf-8e80-295aab30259d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "894bd1bd-d49c-4587-be9f-cab6b91cbe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1261302a-d8be-411a-8c6e-1f362cd380e6",
        "cursor": {
          "ref": "73a02674-264a-44ea-99ec-931b5ce28160",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9590f92-c8bf-4180-ae63-b3410266134c"
        },
        "item": {
          "id": "1261302a-d8be-411a-8c6e-1f362cd380e6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cdb6661a-2d22-4a30-bd37-c688697e2943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba3ed2-110a-42b4-a868-4903c96abeea",
        "cursor": {
          "ref": "ccdad7cd-d1b1-4499-a1d2-c47c41cb329e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "184fbcd8-eb95-4cf6-8ea8-692850409332"
        },
        "item": {
          "id": "18ba3ed2-110a-42b4-a868-4903c96abeea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e6728a5a-c951-4c4d-adc9-50d79d22629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07b4e76-cc65-4bc3-81cd-215f703aad88",
        "cursor": {
          "ref": "34bd3588-6653-4981-a5b9-f8413a6d21d0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "67946207-df77-49f2-a613-734f22dad9cc"
        },
        "item": {
          "id": "b07b4e76-cc65-4bc3-81cd-215f703aad88",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b48d1d79-483c-45d3-a85b-f0e4da86a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961d62ff-d5c7-45d7-b352-b3fb041a6072",
        "cursor": {
          "ref": "570dba50-72dc-48cc-ad51-02ca189cc413",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9d9d5a0a-1505-4d6f-8f5c-91dfe15071b4"
        },
        "item": {
          "id": "961d62ff-d5c7-45d7-b352-b3fb041a6072",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eabd09f4-e59a-4d06-bb8a-c11056dd1c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c70874c-87ad-446b-9049-7a513909379c",
        "cursor": {
          "ref": "501f7ad1-f4ee-4cf7-b5ed-a714ddc76097",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d387dd1-b950-4a66-97e5-fb747a045706"
        },
        "item": {
          "id": "6c70874c-87ad-446b-9049-7a513909379c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6363b03a-a01b-4675-a959-a8b990bb686d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a692b5b5-88c9-47b7-aaf8-7950f3ae1432",
        "cursor": {
          "ref": "86f9e438-4853-44d5-9157-b074fd14d15b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f0b44e57-710d-4137-b055-aa0df18a48ed"
        },
        "item": {
          "id": "a692b5b5-88c9-47b7-aaf8-7950f3ae1432",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad707902-b5b9-412a-8fe8-f27d7897503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24851e7f-13ea-47c6-86a2-c6aa2175b516",
        "cursor": {
          "ref": "a68b6c47-70f8-48c2-aae2-c94e36bf5bab",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bf295d9b-3f71-48c9-a92e-cdb46b535a2e"
        },
        "item": {
          "id": "24851e7f-13ea-47c6-86a2-c6aa2175b516",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9efdcb38-b548-45d2-9129-559e9b2c4146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a9a23c-1125-4ca9-ae36-ecea5e9e8a07",
        "cursor": {
          "ref": "ab448b29-3aca-4a7f-9db6-7c4f2a6907ab",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76a3f0b5-85eb-4231-b128-195faabaa8e2"
        },
        "item": {
          "id": "19a9a23c-1125-4ca9-ae36-ecea5e9e8a07",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4e767f8b-0c05-49ee-a8ee-5331699b49b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f30db-4d66-43e6-b893-06bacfd3cb1f",
        "cursor": {
          "ref": "faff7ba6-3669-4fba-8037-f86cddb86b9a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd597dad-10a4-4971-a958-3b7bf0fab620"
        },
        "item": {
          "id": "b42f30db-4d66-43e6-b893-06bacfd3cb1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d04dd8ac-1a3c-40bf-9f09-89e25edf1c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a69716-88e6-43a3-99ad-157772dc60f8",
        "cursor": {
          "ref": "177a7bd5-96c8-4abc-b372-3476335c97ed",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "964f149e-74f7-40d2-8911-6e0ba933a0be"
        },
        "item": {
          "id": "45a69716-88e6-43a3-99ad-157772dc60f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcd175d6-7044-4a0a-8920-77fb4b3f3772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a819c7-60a6-474f-a908-89ca5beab38c",
        "cursor": {
          "ref": "82c2ed55-ef28-4990-9b14-19a5345a9522",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f4f2e76d-519b-4eff-805c-9052156b9f1c"
        },
        "item": {
          "id": "69a819c7-60a6-474f-a908-89ca5beab38c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36013115-9e45-4876-ad42-be8a51eda99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22e62a6-bb20-4336-a77a-2a73a24d2ca2",
        "cursor": {
          "ref": "54e8a17a-27d4-45f5-9b4a-7933477778b0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c64b6464-5f00-402b-870b-7729fdf6481b"
        },
        "item": {
          "id": "c22e62a6-bb20-4336-a77a-2a73a24d2ca2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "add9e1d5-5913-4685-9d24-b1b8746dc48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5def7bce-6634-4b77-9531-e5a3fd0d1489",
        "cursor": {
          "ref": "af7d9e75-95d0-4c6a-93fd-ac29db004e81",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a8cb9517-2f0b-41fe-8374-c3248f11eff2"
        },
        "item": {
          "id": "5def7bce-6634-4b77-9531-e5a3fd0d1489",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0b56f70-6b5c-4c27-bd01-3b36604ff9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ab566-0e14-49a6-a4a1-f36db31f0510",
        "cursor": {
          "ref": "435ef3d1-7cc2-4f48-b1d2-3934b58835bd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4675ee8f-1fd1-4a8d-a7ff-5be2587d1e86"
        },
        "item": {
          "id": "9d8ab566-0e14-49a6-a4a1-f36db31f0510",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12fd8319-5f90-41ef-9f76-c49a556ad649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2765,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7477503b-b9aa-4219-ad4d-67b3d9e188a0",
        "cursor": {
          "ref": "89ea0aa7-688d-432b-810f-bc2f7fdd0688",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cd948c47-7a22-4cce-b86c-0edfdce9a0b9"
        },
        "item": {
          "id": "7477503b-b9aa-4219-ad4d-67b3d9e188a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e150f90a-6441-42fb-bc1e-339663a61a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaf856a-8190-4a06-89e0-27f72dbaaf66",
        "cursor": {
          "ref": "fb522be4-4a21-4994-a8b9-04ea45935e1f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "669b13e1-dec0-427b-b963-033671331e92"
        },
        "item": {
          "id": "eeaf856a-8190-4a06-89e0-27f72dbaaf66",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6dfb7d3a-b52b-49c0-a8ed-b2f6d80ad4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358119f9-deec-47f6-93c1-f445c33cd047",
        "cursor": {
          "ref": "9bd45f74-ea59-43d9-b0a4-cb803573aa66",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9d930c21-4775-4b1a-87e4-09d4f3cf5c85"
        },
        "item": {
          "id": "358119f9-deec-47f6-93c1-f445c33cd047",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26131905-7a9a-41e1-9053-0aedeba79c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23074540-96de-496d-bfcc-895d73e738f5",
        "cursor": {
          "ref": "c42e5188-7db7-46e3-830b-f4c00fc827cd",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e3612c7f-3bb7-4ff3-b8b3-ea38b6c33557"
        },
        "item": {
          "id": "23074540-96de-496d-bfcc-895d73e738f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "33339056-6d94-46b5-8032-117a6606d0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb6ff8-7804-4f6d-b042-b43bcfe0e3f2",
        "cursor": {
          "ref": "1ce475c4-4640-42a2-872e-0ce84c136849",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0ee3d5b6-0a2e-4d21-8dda-0fe4c5485d9f"
        },
        "item": {
          "id": "b4eb6ff8-7804-4f6d-b042-b43bcfe0e3f2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "da0b2cc7-900f-4a93-9cfb-7b9df06a3107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab171eb-3035-43e5-a6f2-5705df4ec693",
        "cursor": {
          "ref": "76302422-4447-42ea-b413-789c6bb29172",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "23254119-1fbb-42bc-b78f-283b6d81bbbf"
        },
        "item": {
          "id": "8ab171eb-3035-43e5-a6f2-5705df4ec693",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c6918d2c-e7db-4382-a632-5864da9c6d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb45f78-4237-49ef-a35c-67e31bf13aae",
        "cursor": {
          "ref": "165a4b41-14b9-4124-9f7c-e4fca435094f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "51b223af-9e47-4766-8206-2015bab8e303"
        },
        "item": {
          "id": "3eb45f78-4237-49ef-a35c-67e31bf13aae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "24c2d3b5-b7d3-487c-801e-251192a74fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52156c7-748d-4e58-aaa4-adf93a4b49e2",
        "cursor": {
          "ref": "628e1f97-a022-4bbd-bf7a-2d6e2aea55ba",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5d5fcaa8-fff6-461a-814c-16e69317c295"
        },
        "item": {
          "id": "c52156c7-748d-4e58-aaa4-adf93a4b49e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "75a508e6-deb6-4af8-94ff-3f0e5e7b67db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d82cdd-90ba-4802-a332-2761e7210eb2",
        "cursor": {
          "ref": "3642804a-f702-4b10-ab74-8627b2b94d64",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0bd94d93-0a89-4f7a-a6bb-244b6413c8bd"
        },
        "item": {
          "id": "96d82cdd-90ba-4802-a332-2761e7210eb2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f8351823-a2d1-45b0-bdb5-70be486e4b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213dba05-f1d1-4d55-997e-90b9a43e403e",
        "cursor": {
          "ref": "9a6697da-b2af-4ce5-b1ee-c823267b7b54",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "185d74b4-4b5e-4597-852b-071531effded"
        },
        "item": {
          "id": "213dba05-f1d1-4d55-997e-90b9a43e403e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ee791d3f-0353-452a-9afc-764035ad5607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed557609-fa5e-4c68-a9f4-1a2724e2caf3",
        "cursor": {
          "ref": "e1e0e051-2b97-4b83-86c1-5887195a0825",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0be74727-e9d0-4648-aadf-48e9af4f28be"
        },
        "item": {
          "id": "ed557609-fa5e-4c68-a9f4-1a2724e2caf3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de1cbd28-2122-4db0-822a-d0fdaf193e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb1b224-1fbe-492b-bb12-e2f3b068c1bc",
        "cursor": {
          "ref": "4e019b9c-872f-4bbe-8d38-142f3dc6c5f4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "15f2af4b-acb9-481c-b3be-ae7841ce40a4"
        },
        "item": {
          "id": "acb1b224-1fbe-492b-bb12-e2f3b068c1bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bab49724-e4cf-4d25-8642-a3ea8da46c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7cfe95-15db-4486-8e8c-887dd07866b6",
        "cursor": {
          "ref": "9a18a89a-07b2-4245-aebb-68f1be90f9d0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3d9923c7-dc3c-44be-a391-c101352ee3ee"
        },
        "item": {
          "id": "bb7cfe95-15db-4486-8e8c-887dd07866b6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ba0fc9fe-6515-434d-a471-bf309c16d6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8560f49-7bdb-4788-99b3-22104e36f822",
        "cursor": {
          "ref": "394d1d22-f4ab-4c69-973f-ad2197fbde0c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d7c8326-af80-4df3-8c5d-bc2d50a74bad"
        },
        "item": {
          "id": "f8560f49-7bdb-4788-99b3-22104e36f822",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04511396-6f6d-4644-8e81-a261113a8e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc5582-2370-4f45-acb5-2403f3d915c6",
        "cursor": {
          "ref": "40dac392-0c27-4eb8-82ef-cf182535335f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1df32675-dfa4-438b-be78-a54644d9d4be"
        },
        "item": {
          "id": "9afc5582-2370-4f45-acb5-2403f3d915c6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d215a080-c230-4349-9383-20f95ace604e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd987439-3bd5-422c-bf3c-c1485bf49b9c",
        "cursor": {
          "ref": "b6448503-38a1-44fe-a5c3-57dbbb2c0f95",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9abbbdcd-df2c-4b08-8c45-2a7bdbce04d9"
        },
        "item": {
          "id": "bd987439-3bd5-422c-bf3c-c1485bf49b9c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "70a2f040-e688-4e9f-b73a-047e5784dd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84907e17-e10d-46ca-a524-440ce75e7c40",
        "cursor": {
          "ref": "51507f4a-14a4-4adf-bf6e-e5fcd4639ae6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06e915f0-fd0d-43d8-ba3b-f036d53e9115"
        },
        "item": {
          "id": "84907e17-e10d-46ca-a524-440ce75e7c40",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "92793b70-62e2-46c4-b9ba-37c5b3713ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4a6c1e-d51d-48ac-89dd-22cd63ef504a",
        "cursor": {
          "ref": "3d262863-8619-4770-b15e-d10c8c30a954",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f88c102d-e3a4-4d6e-8614-75ba38b862f9"
        },
        "item": {
          "id": "cb4a6c1e-d51d-48ac-89dd-22cd63ef504a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf14f9ab-4156-495b-882d-9bf1a24a2720",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e913464d-5d4b-4b9f-8b66-6301a4549478",
        "cursor": {
          "ref": "d855182e-030d-4baf-aeb1-5fd5d448682d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9378790b-c921-419e-b4e8-1375a4ff1e83"
        },
        "item": {
          "id": "e913464d-5d4b-4b9f-8b66-6301a4549478",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "615c8162-e5bc-43cd-bd95-97f621e1d928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e25b5a-1677-4fb7-bd55-d37d07639441",
        "cursor": {
          "ref": "f7324bdd-ae60-4876-8a6b-8a2b1c6a3b28",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f830b457-efdb-44c1-a920-70a89ae9a28b"
        },
        "item": {
          "id": "37e25b5a-1677-4fb7-bd55-d37d07639441",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "93418e52-97d3-410a-9a59-9c217b042923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b034d7-adac-4517-824a-058f6a83d017",
        "cursor": {
          "ref": "c50863a2-1068-4afd-a72d-ac30bd118001",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2b1dcd35-2479-4cc4-8c3c-e70aee6eb203"
        },
        "item": {
          "id": "43b034d7-adac-4517-824a-058f6a83d017",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "47021996-1391-4b8d-a7a1-76a1d50f8436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7f95f0-8da3-4c30-ab74-9ff2ae5cd5b3",
        "cursor": {
          "ref": "ddc1f6b8-ebe5-46f9-b289-9cd23e9dc379",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33f50a06-4921-4c04-92a0-26a530d6c5a2"
        },
        "item": {
          "id": "9f7f95f0-8da3-4c30-ab74-9ff2ae5cd5b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9e76b4fb-4f20-4122-84bb-57144cd21a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ee7ea2-dbee-46f0-83c9-eba677e055a5",
        "cursor": {
          "ref": "64dede70-30cd-4ad2-bf46-d00a337e37f4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c892c48b-264c-4c9a-a770-f95f110d1269"
        },
        "item": {
          "id": "b3ee7ea2-dbee-46f0-83c9-eba677e055a5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7af68245-a3fa-4b85-8a3b-05e1ea984e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95cc0b8-95a7-4a9a-bc48-cc410d5e2831",
        "cursor": {
          "ref": "0808ea23-20f1-49ef-a563-cb90ede11d97",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0cc9be00-87de-42bb-bb73-73eabf6a005c"
        },
        "item": {
          "id": "c95cc0b8-95a7-4a9a-bc48-cc410d5e2831",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5de6690-66ef-4a6d-ad9b-0722a39bc250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7207f20-76ff-493b-8671-8d4486a22072",
        "cursor": {
          "ref": "512cef69-12c8-4305-9998-b230c1d20107",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7c7cc55a-6033-4cb9-8632-2b97e9844140"
        },
        "item": {
          "id": "d7207f20-76ff-493b-8671-8d4486a22072",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "377251d9-da2d-4c6a-9fa9-9ae695753e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d1fe59-a152-4c19-b6b0-d2e532a3adcf",
        "cursor": {
          "ref": "c43fa78d-1a75-42bd-83e4-0375a7ff503e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "be077ca4-7dbd-4228-8726-6f470764eddd"
        },
        "item": {
          "id": "20d1fe59-a152-4c19-b6b0-d2e532a3adcf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e6081df-3a79-4a32-ad65-f43a364246e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e25e60-af09-44d5-8b9d-c1fe810b22f2",
        "cursor": {
          "ref": "28bc3fe9-761d-4463-8f03-34b01ddb9f56",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20d0d6ec-bccf-4535-928a-0676085d2d94"
        },
        "item": {
          "id": "41e25e60-af09-44d5-8b9d-c1fe810b22f2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f8f25523-6bc5-4494-bc82-a38dd122bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef027b7-86c0-46bd-bc2b-2c4858b42b4d",
        "cursor": {
          "ref": "44834583-d334-47ef-90c1-5062c2af3bda",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a195ac06-0e22-433f-8e9f-e02375adede3"
        },
        "item": {
          "id": "bef027b7-86c0-46bd-bc2b-2c4858b42b4d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e6f9c38-8f85-416d-8ab9-8b81fe10ad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4584d12c-d6e1-4ce5-82f5-4f89c3780e0b",
        "cursor": {
          "ref": "31dce05d-310c-43ad-b658-a8d81a277929",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e3b15e15-3d3b-4bd0-a5d4-6a3dc3c4e34b"
        },
        "item": {
          "id": "4584d12c-d6e1-4ce5-82f5-4f89c3780e0b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a67fdfee-d44a-4a83-beb0-90edb3906e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1316b8e1-533b-4c37-b334-04a3fa1812e9",
        "cursor": {
          "ref": "4bea3d94-e6d2-4066-8532-b723d9f5e658",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aa9094b4-579f-4c1c-bb64-5ecb01d2658a"
        },
        "item": {
          "id": "1316b8e1-533b-4c37-b334-04a3fa1812e9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f6699b18-95c3-4bd5-9829-7405cbf5ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a6154-352a-4ff4-b1ec-2a379c572f0c",
        "cursor": {
          "ref": "23482794-1110-49f4-aa35-5f90d43c5590",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "83b060aa-1d2b-4dd6-9645-e3188efabe85"
        },
        "item": {
          "id": "e72a6154-352a-4ff4-b1ec-2a379c572f0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c9d9ccfd-e644-4326-9fd8-385c05d5210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe1c8d5-e6b1-4b78-b248-a057b8ce0365",
        "cursor": {
          "ref": "c9caaa0f-0be2-4483-86d1-871cd3a73436",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "26217fd2-1f3f-4b79-bda1-3966b83618db"
        },
        "item": {
          "id": "2fe1c8d5-e6b1-4b78-b248-a057b8ce0365",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e08f4299-5832-48dc-8db7-862b9f817f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a326481-b661-4aa5-bf17-8ac7db4db3fd",
        "cursor": {
          "ref": "facafa0a-5523-4131-9697-07fc1d199d61",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b07e5d5f-1dbf-4c83-b1d2-f53f7c5d08de"
        },
        "item": {
          "id": "9a326481-b661-4aa5-bf17-8ac7db4db3fd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "71db6204-cb3b-40bd-a0ed-b85f03be3b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f213287a-419a-494c-97f2-25131224880b",
        "cursor": {
          "ref": "758699b9-815a-40ea-b78f-41ade269bae8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e5fe7945-423b-48d1-9983-20f58b02983f"
        },
        "item": {
          "id": "f213287a-419a-494c-97f2-25131224880b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2ee8902a-3e5a-4a1e-b27b-56256dc4c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9a9386-7b4a-47cb-b750-ba59c6c0bda6",
        "cursor": {
          "ref": "ddff3194-cd85-4abe-bf46-807e00dfc170",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4344b6e8-2271-4f41-ac61-d653119474cf"
        },
        "item": {
          "id": "8f9a9386-7b4a-47cb-b750-ba59c6c0bda6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "81a11495-9553-4e85-b4b6-13313b92a249",
          "status": "OK",
          "code": 200,
          "responseTime": 256,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "bcb940fd-1cfc-4dd7-8522-3446d0babfe2",
        "cursor": {
          "ref": "bde162a5-5c71-4d77-aba5-3202698ea7d0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "48518c79-a190-403d-87db-e4a35755f893"
        },
        "item": {
          "id": "bcb940fd-1cfc-4dd7-8522-3446d0babfe2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "05437f0f-2f56-476a-9bd1-7a6456e037c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c8f797-a250-4dad-a9bb-8ce4a860002b",
        "cursor": {
          "ref": "7418fedc-28fe-4553-afd6-b2ce8e256322",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6ade5e2a-5b7f-474a-b129-32fecf305dc3"
        },
        "item": {
          "id": "78c8f797-a250-4dad-a9bb-8ce4a860002b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "35e87588-1a26-4407-8273-88669fad26a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b12da13-5517-4580-8d77-b312e795bb12",
        "cursor": {
          "ref": "7f6c95ca-2524-4793-aa1b-c54bb3a5470a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "de780adc-7c1e-43c1-92c0-d704e4099482"
        },
        "item": {
          "id": "3b12da13-5517-4580-8d77-b312e795bb12",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f58de0c1-7b71-4b8f-a3b5-206de4bd3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9c463-6eca-4ce8-b61c-c5c34d593caf",
        "cursor": {
          "ref": "0698dd68-f5ed-4554-9039-c09343950712",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1f4a9669-ec22-4b3e-ad8a-80dc078dd26f"
        },
        "item": {
          "id": "46f9c463-6eca-4ce8-b61c-c5c34d593caf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f3b95e71-8420-4e3f-9f76-ab3b84768b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008bc02d-3d25-4155-86aa-200bc94de4e5",
        "cursor": {
          "ref": "54c464ad-5dda-4c52-8b69-a4a68b1f85d4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41ced355-0925-47a8-80d6-0f365a213909"
        },
        "item": {
          "id": "008bc02d-3d25-4155-86aa-200bc94de4e5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4669a0c5-5cd9-4494-98a3-08aaf380877f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ceefa-c8b8-4a03-b0b0-99b3eb606def",
        "cursor": {
          "ref": "eaa925ef-fc90-4817-b2ee-a458e6ba4a72",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4721b53e-b046-4557-9e4e-9493f34d3b88"
        },
        "item": {
          "id": "972ceefa-c8b8-4a03-b0b0-99b3eb606def",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09a16c17-66d3-4405-9593-4812fa5f0cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a120034-50f0-496c-9166-635877da8ec7",
        "cursor": {
          "ref": "582fd56e-20c5-4569-bb39-a4678e279fb5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b12205f9-d83d-4a17-aca0-2567b59312b7"
        },
        "item": {
          "id": "7a120034-50f0-496c-9166-635877da8ec7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7d8dd10c-f972-400f-8e4b-257326abc33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed57b38e-47f6-4701-8f83-ee388af82683",
        "cursor": {
          "ref": "fff17b62-ebfa-4900-93d4-2f9e34efd346",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fe51ddaf-4685-451c-ae6e-1c2ef09b526d"
        },
        "item": {
          "id": "ed57b38e-47f6-4701-8f83-ee388af82683",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "00e6eae8-0673-4715-8f54-6462e5bdf89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5185e7f5-b121-4194-aa8b-6ec4e0edd397",
        "cursor": {
          "ref": "d5511532-536d-4103-a853-28f781f8f29a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68712839-237c-481f-a162-5fdd07b82315"
        },
        "item": {
          "id": "5185e7f5-b121-4194-aa8b-6ec4e0edd397",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a8c01fc0-133e-4dc0-842a-c238ecb097d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a54da25-2a8c-47e1-beb8-4f8c9d23b944",
        "cursor": {
          "ref": "2fe6624f-3127-4002-90a7-c2639b29aaf4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "09e04832-c704-486b-9fe0-d43fd0158b0e"
        },
        "item": {
          "id": "3a54da25-2a8c-47e1-beb8-4f8c9d23b944",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bfbb942c-b3c4-46b7-92a1-72c41f3f3e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7b814-648e-462c-bb0b-cbc72ed52a84",
        "cursor": {
          "ref": "529c6351-1048-4ddb-8006-f30231979570",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "da11fc4f-3db9-4a1c-a97e-605dc5bc0cb1"
        },
        "item": {
          "id": "70e7b814-648e-462c-bb0b-cbc72ed52a84",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "64ca2acc-e5b9-4ecd-8162-ae89bee357b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8231bb-b092-4292-9287-04de7d45b0e6",
        "cursor": {
          "ref": "0cf013cf-e507-4dbb-b80d-8357760a2ffc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9bbb39be-49c9-4d0b-868c-782f9997eb82"
        },
        "item": {
          "id": "bb8231bb-b092-4292-9287-04de7d45b0e6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3d9a59ad-f914-43b7-9a62-66d072a533ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec67e539-2343-400d-ac75-9b9963e3b372",
        "cursor": {
          "ref": "3fa31bbe-ab35-4d68-8759-d6ecf57976e1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9c838c00-3ebe-4fe3-b5f2-f8f4e9e82c23"
        },
        "item": {
          "id": "ec67e539-2343-400d-ac75-9b9963e3b372",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "876e4398-65d3-44bc-922e-36b11c254b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f578bfd-3b20-4b37-8260-792cf7248bd7",
        "cursor": {
          "ref": "dbec6760-6252-4543-ae59-281dce2d3443",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3defa9a8-c840-40b2-a6e0-16e51d393a49"
        },
        "item": {
          "id": "7f578bfd-3b20-4b37-8260-792cf7248bd7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "732a5972-460f-445f-915d-384b972b9aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46cb3b0-372c-4832-8b46-7eaa1058a963",
        "cursor": {
          "ref": "01abbefe-fd9e-4d26-9fbb-5382833b4184",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b36ff975-0053-47a7-ab05-6c13bcf1ad13"
        },
        "item": {
          "id": "c46cb3b0-372c-4832-8b46-7eaa1058a963",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d7d96c51-c302-4082-9146-081bc7fbd019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a227398-cf92-49e5-8d91-06bc4849884a",
        "cursor": {
          "ref": "0f8484c0-e613-4c9f-a4e8-9e7e56a7d41e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d91c181b-24c4-479f-b9a1-ee2b6d1ab2ad"
        },
        "item": {
          "id": "6a227398-cf92-49e5-8d91-06bc4849884a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b97c7ccb-42b4-4dca-b435-5c3000c5c978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd36a66e-fa04-47e1-820e-787350ad112d",
        "cursor": {
          "ref": "14a625a2-88a6-4969-beff-6bb8761131da",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "208db90b-7ddc-4bc4-ab5e-3685766a90bb"
        },
        "item": {
          "id": "fd36a66e-fa04-47e1-820e-787350ad112d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4db4ea4e-c075-474c-84ca-60ea99970b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7227db-d0e8-4c45-b9e2-46629967be90",
        "cursor": {
          "ref": "bc829b82-ce87-406b-ad5a-51b6c3190578",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "087f57d3-56e9-4454-aeb4-17de241f1a73"
        },
        "item": {
          "id": "bf7227db-d0e8-4c45-b9e2-46629967be90",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f62c1e4e-6ef1-4f6c-a6a4-ba9339de7214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58110bc-1070-4a04-9b40-2643a3160e19",
        "cursor": {
          "ref": "f075ce54-c6ae-498a-bd2b-552b266bdb2b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6abbea30-d3a0-4379-9b25-a38cfc037170"
        },
        "item": {
          "id": "a58110bc-1070-4a04-9b40-2643a3160e19",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2fc14ba8-4e22-4dd0-a6c8-b9847f886f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1249d34c-25a2-4abf-8a2a-cbbafa67faf4",
        "cursor": {
          "ref": "03fa6a48-403e-4b5c-bfad-420e0deca34e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eae50b63-c4d8-4fab-9def-bcb6dfd52b0b"
        },
        "item": {
          "id": "1249d34c-25a2-4abf-8a2a-cbbafa67faf4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b2bc34af-b06f-4b0a-a286-fa01dd911cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ed666-e2e3-4556-bfa7-d5e9dcd5c664",
        "cursor": {
          "ref": "ee8880e2-088c-476e-9454-fbd5fa2032db",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a644831-db92-44ef-92a3-2f111bd767a0"
        },
        "item": {
          "id": "365ed666-e2e3-4556-bfa7-d5e9dcd5c664",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7327cb9d-328c-4902-a679-c5d11aca6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3858e27-4515-41e2-9027-475597535970",
        "cursor": {
          "ref": "4a0c8c29-8d89-4736-987c-5a6612d9e039",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ca4e5384-d8d0-46a2-85ce-17fa042e9ecb"
        },
        "item": {
          "id": "a3858e27-4515-41e2-9027-475597535970",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d64d70e7-aa31-48fc-9f0a-07dc3b8a4569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74550a46-798a-4ae6-ba2e-e19328618a98",
        "cursor": {
          "ref": "2dc59d86-5217-4221-9d8e-0ddba06d44c1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e791ab0b-b5e9-4b83-8e51-513751011e8c"
        },
        "item": {
          "id": "74550a46-798a-4ae6-ba2e-e19328618a98",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "01da69c0-c944-4fc8-9a64-23fb5fcdc9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52da43-bcb8-4b92-ac24-64506e2d5d8d",
        "cursor": {
          "ref": "975d9d93-0659-4da4-af15-4191ac7d8bbe",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8667c2ce-fca7-487e-9a64-99fea92b9699"
        },
        "item": {
          "id": "eb52da43-bcb8-4b92-ac24-64506e2d5d8d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b3a0188b-4673-4c74-849c-955ca2e2d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b111ce3-5365-4349-9fa0-0aeb82d57b2c",
        "cursor": {
          "ref": "8c7a02d9-14ba-4f5e-8453-ac5651e2c5bd",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0261be3d-34f8-48da-be9d-1974a788e0e5"
        },
        "item": {
          "id": "6b111ce3-5365-4349-9fa0-0aeb82d57b2c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fe29d478-09e2-42fe-9c07-9937f029cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c70f50c-6cd9-468f-8117-5e1ae39a0716",
        "cursor": {
          "ref": "0bb342ff-480e-4748-8331-f606e0620c5b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9eb7b183-8516-43b2-916b-68011ff1e394"
        },
        "item": {
          "id": "6c70f50c-6cd9-468f-8117-5e1ae39a0716",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ac223199-082b-41c1-a487-3d0babc6eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0d441-c297-4cde-a677-816107d9222b",
        "cursor": {
          "ref": "74ec156f-a222-498d-b47b-da5dc9e050b8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "073bc780-e946-499a-b473-2f81eec04ab5"
        },
        "item": {
          "id": "add0d441-c297-4cde-a677-816107d9222b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b89ac916-83d1-4282-a747-795a6637eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ca320-b51a-4ddb-9596-e666be74d617",
        "cursor": {
          "ref": "834a3fa6-0f48-47ad-8f10-825c50e75483",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "085537aa-36f1-4880-9d71-e461e8263dd6"
        },
        "item": {
          "id": "957ca320-b51a-4ddb-9596-e666be74d617",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bc672b9d-8a4f-4a50-a84f-12c67ca0a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1e9f7-9c48-4722-b234-7242af8bcd98",
        "cursor": {
          "ref": "06ac321c-78ea-41b0-b308-f4f51ee0789b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "490c3585-73cc-402f-8ac7-bc753db6c54c"
        },
        "item": {
          "id": "f4a1e9f7-9c48-4722-b234-7242af8bcd98",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "edb74a93-0bbb-43cb-81a8-25b88d4c2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e1c46-d147-41a0-83eb-23844c65b090",
        "cursor": {
          "ref": "ff473b1d-3723-437b-a468-e64f64b376f3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79d2479c-63e3-4662-a41b-77024e181799"
        },
        "item": {
          "id": "a54e1c46-d147-41a0-83eb-23844c65b090",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "afd3c07c-9185-4497-9730-a52c8300dcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85849421-2bb1-40a9-860f-a6586405567b",
        "cursor": {
          "ref": "087a113d-a0f8-4e72-ad74-9c6076045690",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3ad47ca6-9e19-4787-978b-0da72a9b6635"
        },
        "item": {
          "id": "85849421-2bb1-40a9-860f-a6586405567b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c2a2267a-8d03-4fe7-af42-3e054e32a60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d318d8-5904-41d0-9889-f8634790aae1",
        "cursor": {
          "ref": "29d56ec8-0179-446a-94b1-39c24b9f5cce",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a7d67213-cffe-4aec-b0cb-3762f6a5e258"
        },
        "item": {
          "id": "b2d318d8-5904-41d0-9889-f8634790aae1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "190055fb-b92d-4a5d-af40-a453c4894582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6b667-c214-43b7-910c-a5634bfb02fc",
        "cursor": {
          "ref": "faab68f3-581d-403f-ad4e-4c3ec457f38f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c30b298f-2e9c-4e10-b156-7db03555897b"
        },
        "item": {
          "id": "3ff6b667-c214-43b7-910c-a5634bfb02fc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f909940-81ce-4c65-a059-c34233dd830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926c792-6b9c-4980-8371-a7b152368954",
        "cursor": {
          "ref": "5bff3d51-1ead-45d2-8431-d73ba8c38b89",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4bf88b9-d2d7-4403-b9ea-cf63389c9980"
        },
        "item": {
          "id": "a926c792-6b9c-4980-8371-a7b152368954",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf405eb5-6597-4257-9086-69d81bb1b050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ffaa0c-81d0-4a6a-a6d9-080f2378efb4",
        "cursor": {
          "ref": "c1b9369c-884a-4060-8e68-7be146363b97",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8e17bbd2-7910-4d84-a436-b443c19bee4c"
        },
        "item": {
          "id": "c4ffaa0c-81d0-4a6a-a6d9-080f2378efb4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ded62064-ac8f-4f08-bf65-9f1ad6721d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db79f2e-89e2-49e1-8e4a-03295742ae8c",
        "cursor": {
          "ref": "130a7088-a111-49d3-8910-88b494473db6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9f195b57-e459-4d6f-8893-59fb57cb648b"
        },
        "item": {
          "id": "6db79f2e-89e2-49e1-8e4a-03295742ae8c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d2c7aff-d81d-478c-aa71-e781c6ce9568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95908042-be90-4be4-b2d0-553f79645f58",
        "cursor": {
          "ref": "da48dcc2-5c38-4b36-8d22-95331f47bc4c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eead4b55-2c74-45e0-b53e-1c608e507fb9"
        },
        "item": {
          "id": "95908042-be90-4be4-b2d0-553f79645f58",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5104fc28-a871-4ee5-b9a2-e10331a506b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eec97b-6184-43cf-b952-5543fe080edd",
        "cursor": {
          "ref": "9ed25b9f-cfa7-43e9-a68f-adeb283bf843",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5965c8c3-205d-497a-ac64-62e97bee2b1b"
        },
        "item": {
          "id": "07eec97b-6184-43cf-b952-5543fe080edd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "13efbd87-5a57-4deb-a3a0-1e51df2ec49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc70ead-528f-4d27-a530-f9a196e8d579",
        "cursor": {
          "ref": "ff7db5ee-43d3-4918-83cc-ca8b5dd28685",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "06d7d2e2-89b0-4569-8c6f-38e56eb48a39"
        },
        "item": {
          "id": "8dc70ead-528f-4d27-a530-f9a196e8d579",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "27bf96cc-47a4-4700-a7fe-f4ae41c29340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0c6672-e94b-4293-957d-adc37d725d0c",
        "cursor": {
          "ref": "4b94a039-7498-4224-bbe3-83c6d508b29d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9a50a24a-dbcc-4b46-acb5-2911aecb03cd"
        },
        "item": {
          "id": "bc0c6672-e94b-4293-957d-adc37d725d0c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b8746a4b-d5d4-4ee2-b5e4-b581504fb9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9038bdf-b90f-41f7-a1db-df32698fa36b",
        "cursor": {
          "ref": "b3935b98-716d-43a9-a6a1-45ae650bf8b3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5125dadf-71d1-43e0-a7a9-582e3a7d9100"
        },
        "item": {
          "id": "e9038bdf-b90f-41f7-a1db-df32698fa36b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ba74102-8ac9-43e1-aad9-d935179aab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611a49a-b8f2-4580-b8b0-28d12233c911",
        "cursor": {
          "ref": "4e1b6ebc-3667-42a3-b9e6-e7e4ca9a0411",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "17bbd631-77bb-4ba7-8082-a3fa7e3261ca"
        },
        "item": {
          "id": "4611a49a-b8f2-4580-b8b0-28d12233c911",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bb79c6c7-3f14-4460-b4bb-a8e9b39b6a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633a5dde-9ef2-4a6a-90c9-d627f344d5f9",
        "cursor": {
          "ref": "a7890c79-d6c8-4fe8-b7d9-320554512df5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4fa5a775-0b04-41ef-aa71-20b05afd95ac"
        },
        "item": {
          "id": "633a5dde-9ef2-4a6a-90c9-d627f344d5f9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2357a49b-02a7-4123-a8bb-f578d828cd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d1ae4f-dd67-4c1f-b1cf-3e61e0beb618",
        "cursor": {
          "ref": "34f91075-1fbb-4fa0-b7db-fe3ea8e13563",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc89a142-3eb3-4c79-8107-eed508523619"
        },
        "item": {
          "id": "14d1ae4f-dd67-4c1f-b1cf-3e61e0beb618",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "809064e1-5a5e-45c3-8c31-e37667d6c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ec4c2-abdf-4a16-9b27-ea84f593863c",
        "cursor": {
          "ref": "94baa87a-d142-4a4b-ba08-738d2854f0d3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ca0e2586-fb5e-4380-8561-027ab1ecdaff"
        },
        "item": {
          "id": "f36ec4c2-abdf-4a16-9b27-ea84f593863c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4436021a-25ec-4dd9-8ca8-394d3e70eb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5783e43d-4e87-4ff8-9d70-e50a2a7b1b7d",
        "cursor": {
          "ref": "fbbd72d4-da04-4a2a-903f-e5540450a157",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ce5ecea7-3deb-4736-93d7-1096e429fb48"
        },
        "item": {
          "id": "5783e43d-4e87-4ff8-9d70-e50a2a7b1b7d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1980d453-c377-4af0-a8a8-ff52f87ef9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2453de-e77b-4337-8e73-d7bef2ff8e14",
        "cursor": {
          "ref": "d202fbf9-87df-4e45-a7c0-b159bafcdc62",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "51239244-5ec4-437c-981f-1312f3ecec37"
        },
        "item": {
          "id": "da2453de-e77b-4337-8e73-d7bef2ff8e14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "43c6e06f-2cfc-4a0e-b3d4-900dce4246f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f1d804-8862-410d-9f26-a7335a299e95",
        "cursor": {
          "ref": "13c9a9a8-e26c-4cc2-93db-deb29ed2daf7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a81055c6-fc50-49ea-8227-897d866719ed"
        },
        "item": {
          "id": "24f1d804-8862-410d-9f26-a7335a299e95",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4ba8bcf-5577-413a-a0bf-cab329139131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fc70b9-6d63-4a45-a253-8a459876ef38",
        "cursor": {
          "ref": "dc574abf-25f1-4de9-8eca-d710b3fce8c5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d636f3bf-5d1d-4810-8dcd-2d69ca3db768"
        },
        "item": {
          "id": "00fc70b9-6d63-4a45-a253-8a459876ef38",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b4b848da-d801-4fae-b15f-85a0083d0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101f2679-0baa-4559-9725-a9d1f039782b",
        "cursor": {
          "ref": "181fcf90-1939-47e0-8c06-33f15353df02",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f322fa1-09bb-48be-86ed-5af6515ebdb8"
        },
        "item": {
          "id": "101f2679-0baa-4559-9725-a9d1f039782b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b84c98a8-3595-4fa7-b130-38a41486240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f107a44-d889-44cb-81e1-22ee912ebcf8",
        "cursor": {
          "ref": "e905f0ad-4d38-4c13-8ea3-08ad6b50f7d5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6276509c-aa13-4004-9a14-2c10f895a1f3"
        },
        "item": {
          "id": "6f107a44-d889-44cb-81e1-22ee912ebcf8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba9b64f2-6bd8-4c28-a05d-9131ac4af903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb4c76d-046d-472f-93f0-f0f0ee9fa034",
        "cursor": {
          "ref": "599a878f-ec03-4aba-8eae-15bb381a0b4d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1aea400f-0ed2-4c7a-bf31-453654b90eb4"
        },
        "item": {
          "id": "3fb4c76d-046d-472f-93f0-f0f0ee9fa034",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9f396ca-6291-4516-956d-ecde1efbf5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151ee0d-c9ac-4d4d-a468-4ca3c4dee091",
        "cursor": {
          "ref": "26b04d13-94f3-42ee-99d2-d23550bbc71b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f9409a89-d16c-466a-8e71-30d574f4cb92"
        },
        "item": {
          "id": "b151ee0d-c9ac-4d4d-a468-4ca3c4dee091",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6322f36f-3154-497b-8a4f-c5d088988896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0dcfc4-fa09-4b1e-bc59-c8050c86dbf5",
        "cursor": {
          "ref": "1cba59fd-12eb-4e6c-898f-d8da4e0a6f7d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ff7c466b-416b-4c16-8087-81af36f8328e"
        },
        "item": {
          "id": "ca0dcfc4-fa09-4b1e-bc59-c8050c86dbf5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "870139d0-7025-4aa8-948e-64f1c436cc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d004501-91c9-4518-82fa-bd246f59c2bd",
        "cursor": {
          "ref": "5f03824d-4aba-4000-9543-54666679bbc6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67e673c6-743a-4068-95e6-93541f2994e2"
        },
        "item": {
          "id": "5d004501-91c9-4518-82fa-bd246f59c2bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "df796cb0-5183-4870-8430-6d174090a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d67293b-71e6-4a92-8b43-8e0e2655e5a9",
        "cursor": {
          "ref": "149406b6-def6-4675-a07a-3aaad3f56b7d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd0eb5d5-d0ed-4224-9d40-4b052ba59cda"
        },
        "item": {
          "id": "8d67293b-71e6-4a92-8b43-8e0e2655e5a9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fb6a7723-2204-4062-b592-06126c13b7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc054e5-452c-4e89-bba7-a7ef2b051bfc",
        "cursor": {
          "ref": "694c484d-d678-4cd2-b4bc-1ab931df4d2f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8e9626ed-389c-45c9-b600-0135ec02bd6f"
        },
        "item": {
          "id": "bcc054e5-452c-4e89-bba7-a7ef2b051bfc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "69982470-177b-4ca2-83c2-58af5a137a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12928fa2-bfb2-4288-a5ae-136c4dc42e0f",
        "cursor": {
          "ref": "0da543d9-eb9d-4fe7-92de-598e3f9198e6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b3b8e297-4142-4e58-8d93-41802511c66f"
        },
        "item": {
          "id": "12928fa2-bfb2-4288-a5ae-136c4dc42e0f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "061aff20-8a6a-405e-9034-8f0448a974c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea494509-585c-4646-91ce-5f3e305f1747",
        "cursor": {
          "ref": "e021b20d-4d10-488c-8a3e-6a24be69506c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a9acaeb4-27cc-4d22-9832-7c77555644be"
        },
        "item": {
          "id": "ea494509-585c-4646-91ce-5f3e305f1747",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "27b224d7-f3de-4c3c-8f49-d5c2e0dd721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41532bf-3291-4a44-93ed-f4222b2ab390",
        "cursor": {
          "ref": "ef3ebe95-dc2c-4b8d-a3e9-d241deb584dc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b506ee1c-21c1-4f0f-94b3-2692e3bde3bb"
        },
        "item": {
          "id": "f41532bf-3291-4a44-93ed-f4222b2ab390",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1171b950-07c3-43f1-80a7-155042db923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b193734-c92e-4155-83b3-593098d444fc",
        "cursor": {
          "ref": "ad2312a6-2586-42f6-a9b2-dc182de4ddbd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cd47664e-1a8e-4ba2-8f24-1916343eec7e"
        },
        "item": {
          "id": "3b193734-c92e-4155-83b3-593098d444fc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f85a5b6a-17d4-49a7-b5b7-8f1017b26c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6da38a-733a-44cd-93c1-dcaa92f15d98",
        "cursor": {
          "ref": "e4474f47-7937-43ef-98d3-343c878a92d1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9cb459d3-2d76-42af-bf2d-5f392671c220"
        },
        "item": {
          "id": "8f6da38a-733a-44cd-93c1-dcaa92f15d98",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3a468ca-f740-4b11-ae17-c23be8802cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805988b6-1f87-41b3-991a-5b6a75c15da6",
        "cursor": {
          "ref": "b471076c-d886-405b-bed6-97ba0d12def8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ef0a4391-092c-4671-b7f9-f6656d46fffe"
        },
        "item": {
          "id": "805988b6-1f87-41b3-991a-5b6a75c15da6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bf8b378e-dff0-4966-ab5e-a373fc8299ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886fab0b-5d65-4515-85b1-0a31cb587640",
        "cursor": {
          "ref": "42e82a77-c8fa-4807-8f0f-5ae9fb997a01",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ce071830-7a8b-4909-8527-42f211c2948d"
        },
        "item": {
          "id": "886fab0b-5d65-4515-85b1-0a31cb587640",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5c74dda-0cd5-4bb7-857e-d26b7434640b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c09cc87-3aec-4895-9e46-ae72765a25aa",
        "cursor": {
          "ref": "2937c2c3-3479-4fc0-9528-43ba996b6952",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "343f9955-8b56-4f4a-85bd-675ef7632391"
        },
        "item": {
          "id": "2c09cc87-3aec-4895-9e46-ae72765a25aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "15755e32-fc64-460a-b8f5-f12688e431d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c029f-1ee1-4146-86e1-8ac56db5b0a6",
        "cursor": {
          "ref": "ff6ea903-95e9-4fd5-909b-f91aef4804df",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c9e3f447-3cfc-4b91-ae6f-8a47a91bd5b3"
        },
        "item": {
          "id": "949c029f-1ee1-4146-86e1-8ac56db5b0a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "287c20d4-6937-4468-9034-164dbebdbf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb078fdf-46d0-48ba-bb77-4497e51d6a4a",
        "cursor": {
          "ref": "5154d45d-9f77-4a0f-a29a-a2bb013664e9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "aedd5c30-f149-4559-9b5b-0f5fc5781741"
        },
        "item": {
          "id": "eb078fdf-46d0-48ba-bb77-4497e51d6a4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1331bffe-6f1d-4f82-bcc9-3a35397b02a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fe270f-1697-4d17-895d-cdc71145dfcf",
        "cursor": {
          "ref": "8021ae9a-978f-42b8-9d98-16f628f96639",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e693424d-3f63-4a20-9065-492aa7a733e3"
        },
        "item": {
          "id": "93fe270f-1697-4d17-895d-cdc71145dfcf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3f665b3f-9bfd-45b7-a5b4-0b7371fc2c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57b5823-d711-45d0-a6ca-fb35ee48fcaa",
        "cursor": {
          "ref": "4936d4bc-8e21-4886-b5ae-cd367fce45d7",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b7f96eb6-48bc-438f-8a03-1af063f4cbfd"
        },
        "item": {
          "id": "a57b5823-d711-45d0-a6ca-fb35ee48fcaa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6cc490b1-d4eb-44d3-8c0c-a1d19de3815e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566fadd3-87bd-4539-ab28-cbbe2f42ec58",
        "cursor": {
          "ref": "6f9b73c3-d21d-47cc-94d3-68922d6363ec",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "542289ed-124c-4dde-b070-594ff3e3a895"
        },
        "item": {
          "id": "566fadd3-87bd-4539-ab28-cbbe2f42ec58",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c1457751-e84a-4d5f-aa91-203f32a467ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7702349-280c-462b-86b7-911c6a78e640",
        "cursor": {
          "ref": "12fe5979-1790-40a0-827a-e3257177f08f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6a155344-bdde-47a2-ad95-762ff81a5cf7"
        },
        "item": {
          "id": "a7702349-280c-462b-86b7-911c6a78e640",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b055a966-4470-49c7-8812-f7536d1f2780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49e9d87-60de-49f6-ac57-5592c81b22c3",
        "cursor": {
          "ref": "8ef9022f-3c13-4de0-a8d3-0fc84b172663",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fb381012-e767-43dc-811d-e3599010b91e"
        },
        "item": {
          "id": "e49e9d87-60de-49f6-ac57-5592c81b22c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb7e8990-977d-447f-935e-f88d011a2c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b5351e-21a3-4648-a93b-756ccf0984d7",
        "cursor": {
          "ref": "df190862-97f6-4b96-b8bb-c0b9c949c5f9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a344220f-1d8d-4afd-a86d-3d0c13778f7c"
        },
        "item": {
          "id": "01b5351e-21a3-4648-a93b-756ccf0984d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6597b58f-9efd-4fae-85ac-ccb3ac59e2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc684c7-5080-4222-9b3f-998b217dbb02",
        "cursor": {
          "ref": "46131eb1-359c-4268-afcb-126d5bdaaa01",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c1a067dd-318b-4063-ac6f-fba98acd7356"
        },
        "item": {
          "id": "9dc684c7-5080-4222-9b3f-998b217dbb02",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8e030bb7-9c07-457e-9a81-d0be9e1d4e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56688e55-fb42-452a-ae13-c6e98905093a",
        "cursor": {
          "ref": "879cfa9d-1566-4f1a-886e-c06ed51b18a4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4d97900d-de3f-4060-9cf2-85cee103ac9e"
        },
        "item": {
          "id": "56688e55-fb42-452a-ae13-c6e98905093a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1ac59ce8-e8a5-45c6-84ca-a06da27dcfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391a9e51-347a-4c6b-9028-b74dd19c883b",
        "cursor": {
          "ref": "34aa9824-5d46-4823-85df-27a82b148a12",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "47fb7faf-264f-4cc0-91ae-afadb2f56550"
        },
        "item": {
          "id": "391a9e51-347a-4c6b-9028-b74dd19c883b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9b7178e1-3fa6-4b46-8676-ce99dff07c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58555ca6-d281-4b37-82e2-7111c6b00d15",
        "cursor": {
          "ref": "177c580d-df17-48d3-8743-a5cc045ccdfa",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6edbfb6c-1b4a-4ae2-94f2-f84f18a8b8dc"
        },
        "item": {
          "id": "58555ca6-d281-4b37-82e2-7111c6b00d15",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bd324c85-6e0d-450e-91d2-9499ffc4d0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37791de8-51df-4141-9783-f81db62a8c8b",
        "cursor": {
          "ref": "21402233-c824-465e-a12b-fb2dd8d42833",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2bb50dd8-1c82-4979-81d0-61a9602df5b1"
        },
        "item": {
          "id": "37791de8-51df-4141-9783-f81db62a8c8b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fdfdb706-b320-4540-86ce-d91f0717606f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5153e912-3adc-4c66-acc3-3684ca036440",
        "cursor": {
          "ref": "b746377f-076b-4465-bdf3-84ffd8aa9794",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a4e083de-a88d-4d59-aba3-43c9364ec9c4"
        },
        "item": {
          "id": "5153e912-3adc-4c66-acc3-3684ca036440",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "982af3ea-cbfc-499d-8ab8-fa9346dc4488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6be09-9a27-4853-be5b-754752bb5798",
        "cursor": {
          "ref": "5c7d5a5f-ba3e-4a96-b800-0ef1f34db603",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a4de8835-08ec-4142-9c47-8e04dc0d0a5c"
        },
        "item": {
          "id": "15e6be09-9a27-4853-be5b-754752bb5798",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "82b6cae7-23d2-441f-8b5b-b55c0065b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799894c-44e4-4c8d-84dc-6f7c4c567f98",
        "cursor": {
          "ref": "d910daa1-c0a4-4f3c-8d36-80f31be99082",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d216c6e-0e8a-40cd-97fe-13d9e18c997d"
        },
        "item": {
          "id": "b799894c-44e4-4c8d-84dc-6f7c4c567f98",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "952721c2-73ea-4eb6-bb67-c096bf1df3ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6218f835-80dc-4571-941c-2b8da6c9cf1e",
        "cursor": {
          "ref": "bb261282-8f6e-4f41-81c6-b0a2466b1353",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "38451cda-9455-45cc-9200-fd147f68bfa5"
        },
        "item": {
          "id": "6218f835-80dc-4571-941c-2b8da6c9cf1e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "34429caa-286a-4ec4-bdaf-96d07ee13a2c",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca03dac-62ca-40bb-8ce6-72bee19ab1b3",
        "cursor": {
          "ref": "1bb19d3e-6dfd-453a-9927-abba63f31c34",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "871f0bd4-aaea-4dc5-a001-ed5bd30e0f97"
        },
        "item": {
          "id": "6ca03dac-62ca-40bb-8ce6-72bee19ab1b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ae7f6d59-95d6-481f-8946-377d73096227",
          "status": "OK",
          "code": 200,
          "responseTime": 5036,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7e0a4-155b-49f7-97d8-f3eb8929e74e",
        "cursor": {
          "ref": "c2f17cbb-1348-486c-aafd-9a401bb2e0f0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b3330509-0fcc-4fdc-8d33-de219ed5ca03"
        },
        "item": {
          "id": "3dc7e0a4-155b-49f7-97d8-f3eb8929e74e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8066ee67-7575-48f2-8a73-539bc88fe007",
          "status": "OK",
          "code": 200,
          "responseTime": 3252,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e527a31-4e85-4ad6-8c05-a004870f047b",
        "cursor": {
          "ref": "fe5cdb71-709b-413d-ad3d-b6c0cce8af8e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0784d6f9-82f6-4fd6-86ee-ef56d78568ab"
        },
        "item": {
          "id": "4e527a31-4e85-4ad6-8c05-a004870f047b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e01d13a9-0c73-4b66-b5ea-908449499654",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e527a31-4e85-4ad6-8c05-a004870f047b",
        "cursor": {
          "ref": "fe5cdb71-709b-413d-ad3d-b6c0cce8af8e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0784d6f9-82f6-4fd6-86ee-ef56d78568ab"
        },
        "item": {
          "id": "4e527a31-4e85-4ad6-8c05-a004870f047b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e01d13a9-0c73-4b66-b5ea-908449499654",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b2ea9c-97d7-4478-b864-4f7834e88020",
        "cursor": {
          "ref": "e30ef4be-048c-4887-a548-41ee196e06c2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "543d9cf6-d658-4ab4-a5df-2a72a40d752a"
        },
        "item": {
          "id": "f9b2ea9c-97d7-4478-b864-4f7834e88020",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50bc12df-59d9-4e3d-81cb-fbf055c563a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c3d85-6dde-464d-abd2-b52988a61d60",
        "cursor": {
          "ref": "18f9b64f-e804-4110-8cfb-79a0a3f29084",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3d2abb07-815b-4aa1-904f-23ef51cbc545"
        },
        "item": {
          "id": "133c3d85-6dde-464d-abd2-b52988a61d60",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "54521622-6bb5-4ef9-bd57-8df7787fab57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}