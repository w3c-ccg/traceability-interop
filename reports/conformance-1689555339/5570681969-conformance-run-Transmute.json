{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e170066-4f46-42c8-8e67-a802d4a8e7e4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e945d4d4-6423-40b7-833f-3c17efc9267f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d87e19c-8e97-4627-ae43-2f6b9fe364b8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d02a8e15-5fee-4508-bfd0-b4c492b04d9a"
                }
              }
            ]
          },
          {
            "id": "4c437611-f818-40e0-8a04-d34b0d9ebae8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51652269-defa-44d0-884a-708e350b7b43",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "edeb78ac-d881-4027-adfc-7fb13278e5e1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2085a9c5-7af6-457e-95ce-2c56edde9b61",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9bbd6fc-8220-4f14-b427-58be3fe819b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c1eb48a3-dcb8-41f8-a2c4-f522b77178f2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7fea85c-4219-48f4-b063-8b71b1dad70a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4f950a9-a3ca-4462-9c42-7d5031e26c2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b4c3a08-b25c-4d97-9b91-ea78b7ffc729",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c864141-beb8-45c0-8979-765864dd86c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd601cb0-ff9d-497d-9f32-153376f73fff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd06ea90-4f12-428c-b3f4-76e44d1c9678"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "804c47eb-d46a-48f2-aa41-5fb8dea07cca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4acf809a-5d8b-458b-96c5-68537cbef65f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "445c66a4-765a-469d-b0f0-1c6428e2c491",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3db8471-d441-4f42-853f-9904907fecf7"
            }
          }
        ]
      },
      {
        "id": "286040be-4fc9-49e7-9ea7-b2d985ae1312",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d824dfe4-67b5-426f-8c9a-22460816228b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b684df69-745e-4ea2-a395-fadc6a7439a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c5f82a9-a376-46f1-93eb-767f500ffc9f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af72aa8-6246-4d0c-9a1b-31458441c8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cc0e4da-b404-46e5-8448-470b699e8351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4904ffc-b707-4e80-8f77-c76511d3c8a1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747a0505-6efa-43c6-8665-88bd51c05cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a46bd903-5c35-4ba2-bac9-80e737c8375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2167c0d4-9a3b-4b6a-98b2-b7d1eb5becde",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2036c657-4188-4da6-88f0-b9c47c013b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "013bfc26-d927-4f1f-a08f-48d0ac81620a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bc6166d-fd0d-4dd2-a99a-c47701ed818d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdbe82f7-c3fd-4cb9-aeda-ee52b5d91d3c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e712977b-06f1-4d78-b0fa-99d89a739762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52f4d747-7771-4420-855b-06c987d3b5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9bcef-0f80-49bd-9735-daba9c14c324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749469c-ff9c-4954-9ae5-73f746013577"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38575171-fa5d-4aa2-a00a-9172ed3f8532",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3534118e-d67b-416e-bb6d-6f7a53a185a1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10ef12bb-8d49-4bdc-bf29-e39309b17a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0d69458d-e1ed-4219-b766-a2b2ab1973de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dedc229b-ce77-405f-a4fc-3b0261f26b9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "19841212-47ba-43e0-b87a-e97010fac474"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91debda9-809b-4bdb-ad3d-2610bbf4b165",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "551a8c37-7c7d-44ee-a1a8-db7c9fb0dcbf"
            }
          }
        ]
      },
      {
        "id": "04f77cc1-66c7-40c2-b2b0-2f89503bf503",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "43146185-fe69-4f1b-a005-26e6e0dd5b8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38bfef7f-3798-49d9-8cfe-2edf879cad61",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0fa823dc-fe57-4294-af5e-5ef7e13051a9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8241cac4-a6d8-4bdf-9cc6-5dce52a947b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f5f1c4-73d5-422f-95db-1e5d17bd0e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb3c1c5-dddb-4040-a2ae-5ff2adf50ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44585f37-23fa-4a8a-97d3-ad04e5b9568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485ed1a-522a-444a-a41f-2e99ad12d6aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c7fad-2197-4e5c-afce-acdee6511cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c981607b-c705-441f-8a07-0657ca6befd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cd6d57-7f27-41c0-a168-0939c25609a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b89f7b-8879-486e-a031-c8062e3e5561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03580529-6667-437a-a57a-ca78fa5df8fc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726098f-d640-4bd0-b266-fec3c50fc323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eec91e-db3b-4b4e-908f-98f6032683a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd86c439-35df-4acb-ba7d-824920dbf944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e434c4a8-87e5-4b57-8489-80dfd07ad80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19d7920-cef4-41d3-a2fe-1435303c3d77",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16060555-5472-4aa3-a6ce-b835429c08c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0808e4c8-cd21-4292-9fe7-b0acff70f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d807582e-c5d2-4549-be4b-62c543bf11aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79f6c85d-2de8-40dd-bde9-8f544ddcfa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e855c9d-8353-4528-ac76-1c0a7dd30ced",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c93742e-dc10-4aef-8765-8d3016b45401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef60e15b-272e-4f5a-b885-b57c525de2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f878c-5442-477d-b23d-a9201ae1d7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9846fdca-f396-4a1f-a432-6c4dd55e65cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4868ce8e-d14f-4ce7-908c-5399b2fa10ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cfc298-ad9a-4665-9ff0-b84eb9c75c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a26fecd-5a50-4a1d-b81d-13ed62fa1137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72907793-db4a-4344-b773-0cbbf0f9d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f5d531-52e8-402d-aa18-fe1514c7f3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a73589-43dc-48d9-aa73-b07c878fbc6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae04691-31c2-4ecd-bdc3-f29c822d49e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd95a8fd-9587-4cc2-8c32-74844e72c1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd75ea5b-055f-45e8-abed-991529536a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41209811-419e-4390-9c07-d5792fc04288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd392f99-2efc-484f-aabd-fe00dfc64930",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d63c6e-1f86-4f97-82f9-f74ce465b485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ff523a-592d-4628-ba35-9af68023b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84862bcb-9139-45dc-b153-5c4aec710040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564d1bfc-6e71-4af8-8e5a-e798cdac7ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4b1066-8603-4e07-b5db-8a2e74311726",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a6540c-38f0-4f06-bf99-af322bd324b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bc5028-ac08-4891-9805-7db890ad02e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3e8910-6e1f-4495-aa72-7ec853ea04b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "972ba6c0-85ed-4b66-bb51-6d8f094fed16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe23235d-0501-4c8e-9a16-1cfbae860278",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d209f86-e124-429d-b08e-6f2262747ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1994e604-43bf-45a8-bcf2-947081872f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc6138f-a116-4491-a02f-ec748f9eeaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51ad0348-55a7-4b1d-b512-d03177a5dcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc34c93-8652-4512-bb8f-e7d841050cf1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f49acbf-47bf-4ffb-8aad-5e0f05f2ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36458ef1-b0e2-47ef-a2f9-bf13934a8056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2db8f-7b10-44c5-b7d7-af8a52cb992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a596173-9d25-4113-8d77-6a0a1f869030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889127ab-76ff-4070-91f3-21a499e9998b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c823c3-c8a4-424f-87cb-5464e2099c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08df91ca-cd1b-4306-9b6e-f6a0683697a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e571d77-d183-4385-8c22-d9b79dd05cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6738cded-5bc1-4bdb-bb85-6b2c8c9ef434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c5bcb1-67e8-4436-a033-9efdd4cdb586",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a829b013-ba90-4edb-bf76-6c8967b66457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31bf952-0ceb-4fc0-9fdf-e023cb9622ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa46e3e1-36d6-4303-9017-2599dfedad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cd1c1dc-ba2a-49c5-8793-249fd82021dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d426c-2a9f-4b83-a80e-b364fa92abf5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f61aec4-a5cd-4a6e-be8d-da0e4671da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37dbb91-c34f-4079-a1e4-9828307e83a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e7049c-2097-4865-a8b0-7a474e2fbfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c045cb-3600-4637-8816-45712b272ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d41e2-df97-4fa5-9a9d-ce47de42aae7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e44c21b-50f4-43a5-91df-90b333856e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa4aa98-4de6-4d65-9db9-4d4d4c1b4973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db70258e-3162-41e2-ab38-38ab5e8ac392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ba6571-92af-43b2-8f03-32bcb393a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e788f6-3e81-4234-a7d7-00dc71fe63ad",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf101c70-dec9-4fab-a2ab-25f853fbb7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64595a6c-c8c7-4007-ba9a-779da3f4405a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f1bd92-645d-4bba-8fec-34038edaef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103f9ea3-4c1f-436d-a7a1-320be6cc97fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d58d03c-7ab6-4795-90cd-c56fd06c1770",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e07f3d-05d9-4887-84ba-cb325c885d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f7f2a8-97ce-4a52-a7ae-639542102d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1afe01-07ef-4cb9-b559-237fb18a51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45471952-19b9-4295-b867-3f8825f6d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c982c2-e36c-4844-8160-06e0e6987bb7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef05dd-2ba9-4a05-8c1f-6421f70bab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4415ba-9dfe-4a91-a9ac-528b1d5f58b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce25ff9-7e18-4f52-8f7a-775d3bf7b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d130eb-3508-4289-99a3-a6f4d25c2097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89336bac-dde7-4f77-a424-7efad429b7c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a058ce71-6f61-47a5-905e-c30e636d428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e826f2-33d9-4490-b69a-27b640d0ebce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875a86c0-1a88-43f2-81aa-0402e113c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7611c48-03fa-4cb5-ab23-0c1cb63d7883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c895c6e8-3416-47bb-a86c-9929e3426889",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb955d2c-a6ba-4a43-98cf-67775304155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bb1857-53bf-49fe-bfa4-314c39ea266d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52eaea0-ee25-4c6c-aa5c-0bbf65d413ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e93db1-fa93-4fc6-922d-bfb5b4b01cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddb0248-45ac-40e7-a1ef-95be55329b2f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c118e08-690a-4643-82a5-397b55bc3835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868609c4-3f56-47d5-bc8b-3459a8d04c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95434611-f5fe-4644-ad25-1df31f689e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "758b21ee-0fd1-4557-9d43-58241d776d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd879a0-3e43-47e1-83b6-0c3901250259",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddde0fd-e5de-40c2-8fad-586526b949b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc5fd16-037c-42c1-851f-aee42422de88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eecdc1-6514-44da-a5c0-ff2e12070bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15546774-66a2-410b-8739-e558f89e73d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d99db1-9833-4d0d-b928-bf7c84779d4a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01c5748-eb11-45c9-b8e5-496c0bb95dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3786a592-3ae2-4067-98d9-e0aca19e33ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228d570-f5ae-4b35-97fd-3e6ed1b6b223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a001f01-8fd1-4f87-acf5-14a16fe98a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5858cd8c-d71e-42e7-af38-8f58fde43d02",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adb59d0-7294-48db-9371-f4f957987e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589a711a-a951-4dd5-a5d9-02ca9c19a30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badc086c-975a-4a02-9b47-d3836e3f8d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "965da0b3-e931-4cd9-bcd9-0e244e049541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eafc4bd-1b0d-4fbd-af44-a76197ec7106",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6fc07-6291-4f76-b9db-ebe4c2726b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66571770-109d-4a7f-b2b9-72587e90726f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46c11f2-5e60-4a82-9900-8c3901f4b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac37a36-53f4-4c27-9fdf-308a8d2c721c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c9044-7761-41cd-8765-a338b152be3d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e00a54-96d9-413b-9061-880d46b223cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a192c18-4e5a-43f0-a241-868a1eb0f640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6242f0a-e95b-4078-97a4-6b9222bca395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a6c96d-7e6d-4f9c-847e-08a5f2fb1873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e0e339-3bc4-48b1-820e-2e18b9594828",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7063eb39-45f4-4e21-8deb-1042541d0ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a28193-67df-4dad-9607-9456e1fa2cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4a4f26-5c99-4ced-8e04-e98f4ce889cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9b3996-b070-44e8-ad41-74496a32d3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddd7f54-feb0-405a-ade1-8e7fedf0ea35",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6264d68-402d-4340-bfc8-0bd68f3385a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9826f5f7-0408-42ce-bc04-4b117e1a04b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df4800c-7910-4e57-9359-1590e43cb7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16bc612a-36ba-492a-9b91-ba567efd471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83bd80a-37c8-4580-b52c-217337188ddf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9518595d-4344-463a-ab4a-16910959ea74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b7936c-28a5-4aba-a359-df5f67f9f4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c72e96-7f68-4d2f-902c-1ed83b019585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e91ef6-39e7-4e16-9dc2-74d19dc37b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5250ed7b-5d38-4df0-ab41-db1305a5dcf7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35535c2-582b-4795-91ac-ba7afedc56dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cb4c74-eaa1-44b8-82fa-74635f3938bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825f5afc-236d-44b2-a519-6f2056bb75b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e68e1f-47e8-40b1-9097-9d1e9fa0a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a72c733-fb0b-40a5-9e41-f2376c14d371",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c864a4-4454-439c-92a1-f856221f01a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fbad81-ad57-4b7c-a622-192dda8e67d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d529356a-5f02-44c9-a45b-46a0ffbdf9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5441fcd-ce5e-4a63-9994-a51dc074bc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9cca44-662e-46cb-88fa-fe12c200f350",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1fa9f0-4515-4f2c-98e6-f01e4cc983a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d120582e-6be2-47d4-a63c-283ec7a89900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c8dc4f-81c6-4164-9188-875999df33aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5fcd64-1c05-4d09-b08b-9c9133594896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450840aa-d5b2-42f3-b325-827ff182881c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b444f6b-ff97-4762-8f59-69cf9733b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c1e050-3647-4fa3-baea-24300cf8d9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b31efca-28c6-4115-9eb3-29f88cbf6ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7ea366-4a41-4bc4-b21c-20197f8ddb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5123956d-3a53-4e7a-83fe-9fcc838b2cc8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d48b72-8d27-4d4f-897a-ac008030a27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a3a43f-8319-4543-b338-63da5b8da197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa649f2-6a3b-4264-af9a-6bfc5d327792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "380c4dfc-b590-4476-b010-7186a64d4466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f1851-4afe-4cc5-9f74-87d2f843f50e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6abfd4-8dd6-4dce-bac6-9144f2fdbbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1649cfba-e036-4d0a-aec9-f49550d80bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0b21ab-cbc7-4881-b281-8cc8d015a5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "566b3e6d-03e5-430d-b6cf-ec2e3af0c33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bee47b-655a-4c75-8b4f-3927b5ff3e94",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64caa5e-02ee-483e-aecd-cc0cb30c2217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e82622-8ed7-495a-b2ee-18d7b965525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fbc0fd-0a22-4787-8be6-58f17f57a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea012f94-7db4-4fbe-a2c7-30a3edaec030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4090bd2-27d1-4c7b-bf2e-38614ef6abe9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e857a4-38e4-4380-be53-40730ec8be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3fa28e-e448-4c88-b7a0-a82efaaa458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce767317-9166-40ba-b555-eb18f87a0d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25f80aab-fb7b-4724-be01-3030ef8b144e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad620db9-ed99-4f23-892f-0d2a50d9fea2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4171b3b-d44c-4ea9-b695-9923fb235660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc94d9f7-0f29-48dd-b80e-31c3d04f7c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8103abc1-3f24-41c2-b9a0-04807ab5fe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c10cbfc6-586c-4773-9f26-4b244266fc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154f4f1-61bc-412f-a485-1d4276f38edd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeae5d4-fbbf-470a-b65a-38b3fef5ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed29640-a7e7-4522-a156-5e946c74625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d168f9b-8b11-4b7c-adb2-09e21f937382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c79967c-8059-44a8-bf77-422840c70798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948714be-242d-4c0e-a836-405dcf7d03fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b92f57-f991-4c57-8657-18628ae4ff03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba4f01f-1e31-4f68-b9c8-ed2e15e63999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d09fb-ca6a-4a83-a016-0532ff89ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "616481e2-9871-4953-8ef0-b8cb4eaf1827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eef04ce-b2ce-4592-8108-c004b26e590c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865b4d1d-241e-4820-ad0c-5231a12958c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f5e22-3a8d-48a9-ba72-28021ae1c663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf2f7c3-ae76-45dc-b2b9-a8988e3c3efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "927c6ddd-b922-4ae9-b5ce-6149469afba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d97c47e-0522-49f7-be66-143a00430321",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b89482e-3744-4974-9618-0ea1c871ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8679cc2e-ae67-4b0b-8b10-f7b1816903bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df19cc12-19a9-4414-b1dc-f68c5e2e07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaefadb-a2f5-4b54-ba9e-f4033ecdaf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c4680e-242e-4c16-8d4b-1088365826ad",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f8bcdc-470f-4384-9e5c-6630bfe7dfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aab19d7-c8a9-4e79-9f5d-89f2d1550ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5e47b7-3ccf-4cb3-b2cd-3a73900f78c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22350834-d7ba-4c3c-b800-23e403663f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aac874-8360-41cf-9c17-e8071b2c7cfc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab466c4-38d6-40c0-9282-1cd66eacdc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975e8cc6-a6f6-48dc-afdd-51452777c843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237728b9-ed80-4f50-b3c5-ccab11f22a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02ccc3b-2005-4e1e-9899-0428266e6761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7f7679-5850-47a9-b82a-561069605612",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5541ba0c-6bbc-43ff-944e-17aa9c2d67ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7edc992-0a58-434e-b5f6-dfdf012f23a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408a8280-4fd0-4dae-8229-7c6fe71e9ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35816a5-1c8b-42ad-8513-db5cd9138b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a5db09-0951-449a-a2e0-c101390f8040",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3863b7-747c-4a41-9c5c-22709df170fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f35c962-7e59-4f03-aac9-f8e6bb7a2d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd55b341-a72a-4a39-a543-529a0be156c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86690f1-55dd-41c2-b2e2-6cd62a449ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7f0a9d-7d5f-497a-9bf7-e3214c4dd479",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251df22c-4ee8-462f-a04e-4cabaf4634fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5998e2dc-7d63-491f-89bc-93efd34f7eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c6728f-dceb-4c38-91a7-467b4f1fcd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a27dea99-fba7-480b-bbcf-35c258d975ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fefc19-f4b9-4709-8c53-f1a86044d95b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9d1a50-2d0f-4cf2-b4b1-d0a63f6ec9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7069fba8-355e-4c4b-9aa3-ac191b0fd421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2d12d9-1df9-4f6d-8e89-861d45e2fedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71b0024-e9ce-41d3-94df-4ccfb95e6cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4199ae1-20b2-4fa6-8a13-dd29e194be64",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d329720-428a-4882-a499-d8895b7a972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1cb89e-2a1f-493a-89e9-b997472963a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014ea8b8-426c-4cbe-b090-4f36de0c17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08d22a21-cfe6-474b-a667-7844edd44d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968e3534-25c9-48a1-90d9-592848440c14",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f606c535-cc71-481f-81d3-c57a51dce610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143cd305-b7e9-4ebb-af0e-469a6a6572a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419ef496-280f-4ff4-ab7d-a7c91789dbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39717af2-654f-4694-8246-7502e4d0159b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75a01b-6afb-4ca6-a72d-f744a0d51ce5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f7db9-d781-4396-97b8-3bc67ad4c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24611cc3-94d4-4ab1-bac0-33528f40e234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e5504a-3c52-450b-a5f8-b6295d2221ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1ac6f6-46ac-43b7-a2ec-bd64aa7fd881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb95e7-3e04-4617-af82-960bc5e070f6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d8798-8da1-4e25-ad13-f978ca2364ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ac4d9e-7448-4a17-94f9-3f35bd2e35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611d01fe-2cf4-483a-af66-8a3a385e3a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58280205-d93b-4f9d-a15d-3ac5267e160e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f069992-7b61-4511-be4b-735dcc50ac47",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275a12cb-99ab-4921-85ac-8feea362fbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde5b206-d5f0-43ea-9055-7d2e40081e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464032ef-86bd-44d2-94b7-31823839db81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87879f7-3e0b-482d-a350-27b8af2cb538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72be91fe-1780-4019-9d58-db2226c18e9a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc67528e-714c-472a-8d5e-dfaf19ebe4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11de9890-6c54-4725-a4e5-4fbc3d1dda19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27de4daf-d791-4019-9b42-db5c0ac48333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfa9135-3c3a-4368-ba35-4f5c0420eec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff8269f-fca9-4e05-9d61-3ef06e515732",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd166ec-40a8-495f-b4b5-8ab76b5655f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee06e43-683b-41a8-96b9-74fca37f697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2e2ae0-d63c-4721-b3b0-0fd3b446c354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c8c5d5-4574-4f20-a0b4-a98f2454524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612264d7-5f76-4d0b-99e4-90dc3c711fcc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22204f85-0cdb-4771-959f-9ce3bfab313d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3186af07-0796-4a2e-b1f8-a6cbefdeabdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b163ce32-bbb6-4924-9d73-093cfcdb9c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a13345a6-48db-476e-a3c5-c020054df893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4ba439-94b7-4c56-9dac-4ae756770229",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033b9ae9-3e80-4f9c-9746-b93f616da265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaf9bc2-008e-4ba7-990d-b3f06273d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c310f0da-8f2b-4a27-b420-639f78b0066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e97bcc85-4943-4e2f-bd31-992f131f8a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a063195d-fcb4-42c9-95cd-04cce3b1654f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073d61b-5784-413a-afc3-0f9efdb0932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af97c13-1559-4d1d-a8b4-795be240c83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fcb2d-5adf-4062-8c8b-794c6111bcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cac3e1-a05a-4f0e-b67f-a72a9b74da8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247d81d6-e4c5-4dc3-acda-5a8c066b22b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da7443a-e5f2-493b-9036-6059a6604396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68f17fb-d889-445a-9aa9-e0dd0680cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583f8a84-0fa2-442c-a83e-ac900689a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d7d973-ff31-4271-bde5-65fe23896110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0b18b-cc33-4ee2-9d79-120781b7d1b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee052b4-f599-4b66-9853-3e847ad4ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21993c0c-99f7-450d-bf85-e9f71357797b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54386fac-c965-4d37-a1a6-9a3c55f11f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd871f2-316f-409e-93ec-fd829edea3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a81d057-530f-4387-83b1-480c7248bcab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc2d76e-9f52-41c2-9af6-95476824ec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d71cc2c-a540-49c3-a0e0-5b1c7de16815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf380c-004b-4627-becc-3c09335cc0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf86f11-1272-4ca7-9739-0f07e6d4bb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ee3d6c-ffab-4e10-84ba-4109f2bc635c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b306a2-630a-4cfa-98a7-6c8ac3ee54c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4641f37-0c52-4811-b562-ce7dab535aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c697ee1-913f-41f1-b4e4-2fe9789bdaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "69384c48-6cd7-44fe-99d0-161f479bf264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbdbca9-92fe-4ec2-89e6-6eac530ed50f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c029db8-a71b-4e00-a8ce-4f571d3cee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda181fc-fac8-454e-bdb5-4e624be6a08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331183fc-3f57-4751-a61b-c32a6b63e70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5ac54a-3ce1-4be5-beb6-7f925a6c6f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d9b65-47d1-465b-9b4d-149bd0bfb38d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01db53b6-70d0-4ec1-ba59-6db3d4d2e1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdf02f6-802a-4db3-abd2-e828cf32a12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81a0755-9bb9-469d-a9bd-57b2a6876368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e197f3-b975-4657-a226-205b0b4b14c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6335ae6f-51da-406e-8ba4-b9e0de55b722",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fdd517-93c9-43fc-b21c-4aa08e47b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206223d8-1b96-413f-9bb0-0b736aae24d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ebf26-4386-47b5-b63d-21a12a5c8706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56ae259-c28d-4390-b3bc-b213c0a47e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24660237-ae45-4146-934b-3ea5264ed50f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ff5a50-00f4-4c31-a8aa-63d75add09cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97706db-90c8-4492-8eff-9d1c7b9e64bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e91d77-2a27-4b04-a904-7d8d8cf665f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e43859-db75-4f62-a5fc-a8f29fb8ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22872d5b-7521-41c9-9d9f-75e2e9a2cde2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2617ff76-5d94-4bce-a935-93e0ce0f40df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9f9f29-6bbb-4061-95e2-b6263440a892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e08d86d-7408-47f0-9e79-48f4cbfe0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e89f74a2-c2d7-4ae0-819d-159a9815f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d831b19b-be10-416e-ad56-ba4a7050a2c9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849728ad-5ecd-470b-9d3d-4c3184bc2ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cddbf5-39e2-49ca-8dc3-e4ab1912b7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d059e6e-ce4e-4cfc-9abb-51856685b6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "548f94ca-a17b-460f-9ab1-cc9d6c2782f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd81bdc-9bf7-4854-ba41-ad4a5d33caa6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1af8f-db4e-4fc5-b578-3b5e594401e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6fdc0f-ffd7-4529-9d78-b72f20e5e051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9ef65-ce22-4cf4-ae05-1ecf115731c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e95c02-5d45-43d7-93a2-649c12c07936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4701c413-236b-45e1-bcb1-a7f5b176ec4c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f36cfdc-3570-4588-b499-7be27aea34f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a053f44-d1d0-454a-9e32-c167ca7cf67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac77d76f-e981-47ca-a39e-7261f4719e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4811aa31-5684-480a-9c14-36a9d28d5034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af031046-e6b3-4e95-a231-ac3cd3ac9a99",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2536e6-3a77-44f6-9a47-4ba4e3ec9793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e979d3e0-0938-49a3-8eb4-0886709f4f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8567336d-d14d-466d-9180-be781651e253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e26745c-79c0-4b7a-bc7b-a314cdc46e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7e2939-70fd-44f8-b5ad-3890c19a7b79",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02923af-10ce-4cb1-9344-4aaa20114f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d669b35b-b00c-4174-89be-34a36f6e2462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec0d836-5952-4ca1-8811-7a9adfe79300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c46b6e-2a87-46f1-a341-e52f51e53843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fd72d9-cd57-4876-9c4d-5a1a5d5df8e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c804d7-7b87-4ff8-a878-20bc3bb5bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69792ba4-8439-4cd3-b651-c575413147e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2457c1d-59d5-4948-8ddf-2b08c059f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e03e6-869e-47ad-be5c-b30a096eb1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2562854-fd29-48b4-85de-4a881605dcad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b9a11-e057-4d3b-ba45-a316b6d8947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f3fea8-98ca-45ed-aa72-31f8cb5da33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f1a441-16f6-4cba-a78d-bfbbed1ea633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a40415c4-0080-4693-b6e1-6e9597c9f027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e780426-5fe2-417c-ab92-72cb4489e8b1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0bf11e-9720-42f2-b52f-57d8de447f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf7b0bf-8787-41b0-add0-17e1f0558e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d77c3-3cd2-49f3-b4ce-99e4d4da852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d056f915-487b-43e0-8e04-e7f3adb68758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c0758-fa07-4cdf-8586-01368235bbba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffaa4e4-3019-4748-b124-e318fa2ac669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed073440-9a8d-45ac-94da-3c4f9af4967f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e497e267-8114-47f3-85c2-9be788836c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c56f4-9c19-4127-ad9a-02dbef959b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d02026-ee70-4b1a-b021-f1c3a5c147e8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8afbc20-b65c-4759-8782-9bc1c0e8efa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53692eda-ea44-44d4-9076-202a1eea98b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e79c5da-5c9c-4318-ab64-57e5476f1284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ea9825-b7fc-4b08-9375-583cc0b71feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac13896c-729e-45fa-8218-3fdc0c7b1b73",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef05d068-36a9-4e90-842e-be05d51e7f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935622f7-b1b1-4f2a-b05d-96b10a4dd971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd61d4-a4c7-4711-9f55-663e5fd6ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ecfc60-2879-4c90-a7d5-f2cbd833faf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3134e68-3a9d-44f9-84e8-8a13ea864703",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856a73c5-c621-46f0-976e-cd518c9c5daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0422f38d-68fe-4a3d-94cc-04b32fedf5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f0d48e-1461-43f7-9304-eb23f3bd66d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43e9101-496e-4a8c-9381-2a7e4994697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9598ceae-cf53-4e6f-9cbe-71cf16d670a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08453dc-4dd9-4dbb-b91b-4963fcbfaa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146751bc-5b01-47b7-9879-7d7db515c3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8046eed3-e225-4e57-b05e-d96e2dcac2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "503b0ebf-d073-4ecc-bf77-aead1e49f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa60f45-4514-4374-ae47-d7bba8a373bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a3705-ff23-445e-bf0d-fea83f573a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b539401d-3252-417e-a3df-eae272cfb64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dba014-487a-44c8-b0ec-ab90ca482669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f9b6bd-04c5-425f-aa56-40372bdd0d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91236b92-18f4-42f4-82b1-54ec1b17b2b4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20ee779-1b69-4804-8951-92307b855f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35afff9a-6f38-49bf-b3fb-4a44e036196d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e046baa7-0f4c-434a-8594-24a07b90462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee44e39b-6858-41eb-8be5-65ff95e56723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf2173-c636-490d-9de4-8d64c4ba4956",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17902b-fd8a-4def-9ba8-c638eb915d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2bb046-a019-4997-b6dc-f74bbaeb286e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fcc03c-5873-434c-a7c0-88f8b6bcb4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6babf2bc-26af-4ea4-852c-7b90a4190831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fb176d-83d9-4cc6-8fb1-383d3df26509",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65fc753-311a-4b46-8431-be4a5dced344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b77181-04bd-44ae-8d4c-8570dee27fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c74641e-e2c8-494f-b163-05536ce1d026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e979aea-4c3d-46ed-8823-a0fa3d9d0b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e6e5c3-75a8-495a-9eae-2687865fc883",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0486f-a826-4c1f-8104-5f70f80199f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78e4e49-145d-4b82-815b-9b3ce5e9725f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d37f40b-cea5-4637-a9f7-6309dd138e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac06d5e-7d47-41d0-9401-1a16e8e87b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5938bba1-00b0-47af-b2b7-44829c5bbe2d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e3a559-9ad7-4d6b-b5cf-e8b3010f6ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03743a32-0f62-48bb-b9a7-ae216279b6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869d6c3c-7a6d-4f05-8eb4-2ca07e0d898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d98af43-87a5-4489-92ff-e6f63c2c02ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a3d9f8-a8e3-4b3a-a08c-45d00c001b73",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4047a3-af93-4848-82c4-ef2bb488c1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95567e6-1ab7-44f1-a6e5-4e5549ec43f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8c9e34-0ebd-4316-b198-ae44068b195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75f4095-003e-41c0-aa33-b9de203c4fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb33d24-af1f-4d2a-bc15-86c6281e87df",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6089fab-f3fe-4f96-9106-5c91b48b619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de12047-2b7a-470e-a92d-372af8c7851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77cb3c1-a050-49d2-a36d-6875985a8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02a917dd-513b-4353-b7dc-69368ebc07b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0448b-55fd-4c06-8eca-b94beb5c3379",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b628428e-0764-4f88-8fcd-04a89067dca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c227b3-6cf3-4066-aa9a-9f36d50c0075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b79485-e94a-4b37-b5a8-20f1b8a48a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5172dc35-eb6e-4d89-8537-4b48f679582c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0773b4-731e-4d18-8ad8-85b303028afb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42cda07-56ed-4444-8e99-3eb9273b28c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab31de7b-3a40-4048-85da-0e15a384bc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b36c1f-ba68-4159-9543-449e863b44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5699ece7-ce5e-40b8-af8a-520ee6389fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a45b405-89ce-4b55-9a9f-2abed77d8e4e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462eeea7-fe46-47da-8ffc-ba65fca79584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beb15a4-9a20-4902-aecb-d57967a06318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d150f288-97f9-4276-bc29-11fafb90d1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fedf0b4-0ab4-49cb-86cf-54a0824743b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48676c7f-76eb-4dfd-a630-2a8f80ae51af",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8ce05-0c5d-4b64-b7f6-0b5f82c76502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "573fd60f-921e-4554-a6d5-3ab4ce648373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da98aab8-0a4c-41e4-96bc-06ef53204bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9f8a12-6b65-4232-a7bc-951bfdb22ecf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7cfc6daa-25ed-4f34-8b65-116120464688",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6753dc88-754b-48e3-8fdc-b979ac1d67f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bc512c-a77c-496e-a635-d5f2228be23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "795d30d2-dc49-4dde-94a3-a375a8709ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eb1d93-fa32-4089-9627-c580e73da9cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f036ff25-5c24-4ce2-ba78-69a1c1585655"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e1e81e-c31b-4a6d-ad96-3b14375fccc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f9c5ec-38aa-4dda-8bd8-05bc6752cb8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "514efabf-f7a4-4d43-aaa1-ff6145a1fd98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e1e300d-b990-45f7-a975-08744075b628"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95d5c443-e76d-4c77-89fa-348ea2eb5bbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "421eba9e-a54d-4695-a45f-5f1b86ce2fa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cbf9c573-45b6-4265-ba56-b98f558e7db3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f33735c9-ede1-47c5-a14c-cff9e099493c"
                }
              }
            ]
          },
          {
            "id": "bffad7e6-e85b-4950-abfa-37f5e31eeb41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "713cfdc7-bafa-4250-8cfb-a86ee5e22a07",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa1f0d3-1aee-4f05-be17-22f727c7ae5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd3cca3d-f3fb-4da8-839b-1b12f557a024"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "385d7ee6-2bb9-449e-b61f-646802d37312",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cd332d6-fa7b-41d0-a629-902cbb3fde46"
                    }
                  }
                ]
              },
              {
                "id": "006a7875-4455-4cce-8cc5-b48fab71a644",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3117064-1ed5-4ed5-ae17-31d5f35f3221",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8847bef-225f-4a0f-9484-1094a2fa0779"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "356b2f7c-4966-4e95-ad3b-09e256a8015e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee3f2d44-6e59-4a77-a48f-024ab10b056b"
                    }
                  }
                ]
              },
              {
                "id": "07ff4cdc-6ad5-4b05-918b-a623cf6803e2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17f4b99c-2828-4bf7-932d-2d527179846b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46783e45-331b-4e01-a827-af9a7e6a8419"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "806b72b1-8484-461b-9593-1910559c7d8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bafb1787-583f-4b42-bf7b-8d90a028c963"
                    }
                  }
                ]
              },
              {
                "id": "23fac052-39ac-4ffa-adc4-4172abc47162",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0001cb97-6f9b-4720-aa71-3d4754aa63e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "795f4b92-70d4-46bf-b38f-9f8503f304fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e27c79a9-fbc5-4237-93de-cc5b458ca604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7fb0a046-a502-46f6-b030-8ed8218764db"
                    }
                  }
                ]
              },
              {
                "id": "e52ce4f6-73f2-4f13-9719-0d5a5edc1d9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c8a672f-27b8-4677-a776-b822fe58a13d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d258537-a427-4c9d-86b3-81193dce95e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d19aec7-24c6-4735-bfdd-0080f34bf948",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9deb3762-4f39-48ad-9c53-a5766eb3da8c"
                    }
                  }
                ]
              },
              {
                "id": "0513daf7-9525-48a7-ad3d-9f96c44d4340",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb2ed79b-ee3f-4527-8135-57d624d404f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4177e238-cec2-47da-9fa6-acf2654d90cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2fd411b-76ac-40d8-bde3-317399c1580b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12dbbf06-a331-4180-a4d0-584dc9d2dfb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7eef4966-8a0f-452b-a043-06bf653c80c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dda72de4-3b2e-49ef-903e-b18a2f37244f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "589403fb-5151-44d5-ad5f-7322b5c1d584",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5f03362-29a4-496a-b7a6-ba7ae4b91bb3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4d83f68-44b8-469b-880a-4fde9513a2a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "41184a9a-4ae0-475c-b5d5-db626db89c24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19d40a3a-c0b4-4bb9-a878-a0918b1f5b9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f9e1926-4f17-44fe-9d8d-6f77c7ba5f05"
            }
          }
        ]
      },
      {
        "id": "69321ba3-2923-43e7-a180-ce8b7eb184d1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a8650b11-21d4-407f-b30a-d474011e6cba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b70d9155-57e6-4676-bfd5-8afbb487e2a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a998c9b5-e2ac-40f4-a9f9-6095131c2f70",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84feb3b-995f-4c9a-bd91-def2ac75a791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4136a93b-d79a-4bb0-8866-755ce3c2d4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1502f3a-f80a-4766-8a68-fe25f6b6f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b1a6d8-8c04-4b23-8534-71dd6b069f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9227df64-303b-486d-b411-302a3ccb709e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df13f3e4-fd9c-4364-9050-3ddc4653cfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4605983b-e968-43e7-b799-1c5e6a48915f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8a794b-ce11-442a-a803-cc7b21ca21e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eda239f-6792-4bf2-a500-9a21ecd35593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea40032f-970d-4a07-b3ea-d57651d61888",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6e0573-341c-462d-8409-d7ddb2b96f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6b748d-8a1e-4424-8597-7b9d4238894a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d5a6f-78df-4d44-8dd9-4a48c2cb0b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aa1bff-69c8-43db-9026-db6872f056f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d399a10a-893c-4779-bdad-5b1ab4fd4494",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3fdd00-f54c-4e8d-a587-5612d125969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780ac29a-784b-433d-89c9-84cfc87edf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7a4bc0-7c20-40d3-8451-683cee505065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c09c0a-6e74-40b8-99ea-ba6f576582d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c702d797-0ec9-41f3-97a6-b1420d761aae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf0a907-64db-47d1-b8aa-e83e2ba1d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c0dab7-077a-4c3d-99be-3d42c7675e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c759d1-6649-4a3d-ac23-59cf742300e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "374de725-1c66-408b-aab1-694e5e7f2022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a99a727-68d6-473b-abcd-39bac25ff8f6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af042d0f-3f83-4182-b6c4-a5607df06b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e72b759-d83c-4b29-9a00-8c9c7dba08bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f786d-8835-4c16-ab65-23b46c0abf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8480734-d6f5-440a-9276-aec3269b1ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5e5a3e-0693-48d1-99ba-0c2d5f110837",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6058f076-80eb-4b6d-8344-4192727c70bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de5d954-3d47-4d6a-86e7-256a4faf778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8369ce0-c9bd-4d45-99ee-7c6e53de7943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "08fb6320-01f5-4408-9bf2-c895e1a737ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c1874-3c0b-4188-b94e-b876c4acecd6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1a72ea-c56a-4815-aba9-95c28f8ac887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09ee3f6-cf28-45b9-82d5-d28e045b692f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ee829f-54f2-4920-9018-3e43ff28ab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19888ad-c86d-4b76-9876-08512e0b837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81431910-3ad9-4fd2-94ba-d07260443daf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f9b20-7bbc-4815-8eea-64b8a9c4bd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87ace5e-084a-466f-9762-be1873cda226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c52afdf-2de2-45e2-8f37-16a91fb8c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d038b483-49b4-4b81-a1ed-c60742968f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2761453c-a9ab-41f4-939b-35218de9ef2a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84cb21-e9e6-442c-a504-835f12a0269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0487a2-60b4-4c42-aab3-97abc6351f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce347ca8-ec41-4c71-be99-2b6c6318bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8deb9d38-9de5-4f5e-88cb-0848e0e2b5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741e648-6dac-43de-8b6e-3708d2656b40",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96e6661-b855-4fc4-a691-ced3c685cf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa1280-5ea9-4f41-8386-43aafa881f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710c698-8a22-4c18-a558-65990a374552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c4a289-8be1-4595-b0a4-310ecf6ef17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2486e70f-f0b6-4218-97d9-d2d96af7f490",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85bf46-1b19-494f-9e95-a44b59dc8371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ed23ef-3858-4939-9351-ea2e53849333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efeedae-5ac8-4488-bdac-777b2d9b48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c357b0b-cc5e-4637-8046-74cbe38f2fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33fbe14-4e6e-4001-b27e-f9ccf14889e1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b3654f-e32a-42a6-98b3-b1f6020cb5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cc6701-e2be-49ae-826c-f8c1de7499f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b1ff3-9b77-4e22-8e87-6bb814e59eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d7da10-40d0-49ba-8acb-df2f1c27eec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff569b65-7b73-4c48-922c-c58c1dd98640",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f95c41-942a-4fda-ad9a-0d45f9299864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dd7dcd-2512-40cb-b436-2ec47c7f5716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606bd630-48e9-436d-90dc-dc8ac74e5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "baceb12a-56b6-4644-a7cf-2a7f5a0aa202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6afe35-5b77-49b7-ab79-90adcc273317",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e5ac82-1d47-4169-b83b-b7b08bdbe97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b27c368-7ef2-4eb5-a2b5-e179f049e472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd21682-1e22-4ed4-801b-0b01560548b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17a870c-0771-4ae6-a911-cc7a2bc31433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd4c65b-2d64-4e60-8979-1eff7b0d511f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d02980-8cd9-4f50-a9c5-0e03f37ab5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7d814b-82a7-4b2d-8f6d-344e5606aace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4083d587-91d8-40f2-b6d4-27dc99105f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8ea8fd-b099-492e-85f5-4c12d9c89ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abf04c6-29eb-4041-b7dc-278cef19d365",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d5c1f7-3112-4acf-98f1-324e191b0b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92029bfb-4fc1-449f-af67-453102543b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc452833-ed0d-40f8-9615-ff860d73eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5981fcb-6c40-402d-9809-f350bc074c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c812aa1-cf9a-4f99-9b3a-06706af4f66c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71db42c-5028-4b7b-8b41-86b1e90c189e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faef407-b6be-4994-89a7-ac2230137366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af63517-1df9-407d-845d-5bf2d1d2b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab658a63-ec28-4bd2-a790-45196d5b4270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a3578a-2921-4838-8534-55390dbdb429",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98940799-ae21-4711-9571-8a0dd1120728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da765298-44cc-4c0e-8471-e27de13b17dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186407b0-5418-4efa-8788-da7d3f7c76e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e7d89b-cce4-4236-9e41-f6b7d2effc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09bb4ce-dc71-42b7-b11e-5850fa87a2d6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def209ee-9a0c-4078-adcf-25ffb0ed58fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c041917-6d12-4889-806a-ef27ca5d94cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0a7fb3-e6f1-4553-bfa3-70ca1605de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816ee6e8-917b-4c8c-b044-b657fd5ac16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5538ca75-49c3-4382-a95b-deb6909f1628",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbe49bc-c1cb-4800-bc6c-3fd3341737d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9ef2c1-9ff8-42fb-be87-1fa90e61ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0ef00d-0750-4d12-bb1e-1cb6dabbe497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab05e47-3576-4b0f-8c07-5ef391a8cb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08bae0d-ba15-470b-9428-337b1692455c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b7228e-39c0-4a80-898b-a589478cd6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cc2293-b4d1-48a5-a9f3-e2d30e2514f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc86199-e8ee-4313-a17e-f70e36e01ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48874de1-9678-46f3-9cc3-037e951b6d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71515136-84d3-49bd-949c-73d52a182510",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da4046a-06e5-4fa5-9bb6-a9ec58686578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e808b2-a470-42eb-b915-f2381bebd63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b4cb4-031f-4aac-b2b9-12eaaa32351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af6a27b-1987-45f2-9d27-5991594b7dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8048d2-8745-47df-be9f-361707a65295",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ed04f4-b84e-473d-be77-39d88737d78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccc75ca-7ff5-4e51-8555-ea07783ccd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d829271-472d-4403-8b2b-4b1ef075872c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6530131c-a6b9-41aa-ab11-c8343156dfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bada787-8a29-405a-80f3-074e01821334",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79202eaf-e6bc-4edd-8b93-6672e2c2ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401a0419-3293-4f23-b0d2-b8d9e2fa5170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0212c2e2-c331-4316-bc61-b4d63191cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132f5d54-ca65-47d8-a876-1e1634e79348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41014c55-8ca7-46b1-aae8-10536bcba817",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7670737-a49a-4082-8039-29e3fafad781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2dba65-e687-451f-8b84-146d22a4968c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0f7864-d185-4a86-bcbd-1d8d7cd25b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887a8312-27ec-47b4-a65f-efc56443e9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee0eb48-0a54-4450-8c55-98dbe76782cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30184f4-9890-4a4b-a44e-4ab43f083ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0cd0ae-9d4f-4c07-92e7-7b625dffb717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ff5250-aaf0-48e5-8d20-1539d9240dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0529e711-29a2-47b5-a849-4ed029a87075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdc8d1f-7673-46c2-8d96-02a400e2a0c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8c54d-a33c-4bba-9604-6fcbe12be19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e2baee-09b7-4c27-b06f-757e68c0c880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837d032a-fd54-41ad-aae1-12bd5388f453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f0a624-b5d8-407d-8b93-dd3f2757665b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d122d5d0-2d93-47f6-acfc-89d5d97aa988",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5643c6f-7671-4460-b4ad-bd8894385c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed13c39-e8df-4ea9-ac70-a3a3867bc40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb20181c-3162-4c73-b773-60e8ba209dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405fcedc-0a29-4c0f-90ca-bcb758d61daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441dc299-3c55-457a-91f5-122e3dd01667",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef99876c-4dc6-4b16-b92b-95a39bdbef7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13220ced-dfe8-4570-8010-3d0bced77ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c5827c-e347-4d00-84ce-7ab9e542e925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54523cd5-1488-4c20-865a-741eb2c68b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a9196b-b12e-4c16-bb42-27fd3ba9cc25",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc68f395-d0c9-46dd-b1e1-941fb6fe20ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2823656-4cac-4297-a190-5b63180f1c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86480344-7bf5-42db-81d8-48f8feade446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d7c37e-5e88-4a4c-ab58-729ea5440c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3959fa-4cdd-425f-9eb1-440aec6390fe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bd6f99-60f4-4d91-9d37-bf61f48dfc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53124efb-e7c6-4b70-8fee-972b4140f264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d09cdd-1664-438a-aff2-12b836fb51ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb6f329-f573-4663-a098-ecb90c4bc0f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f10b373-4d6d-45e7-b271-db4b27e0a705",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3b11c08-81d9-4c85-9802-840df1b197fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbda93b-b61c-4031-ae26-2ec15a1f8c92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "565c685e-a8eb-43b9-a58e-c02608768b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6c275d-3c15-4449-bebd-f5273eb79256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b49d132a-7cf0-4edb-864c-7f5a110edcdb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0065e881-a8fb-4db5-8b2d-faad1b2b7f37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b71ed58-a945-4e6d-9cf2-5f1a39ddfcaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5aa74cc-dfa6-45db-8d81-c96b22703092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aba9f18-7d07-4410-b969-50c2d4f4f731"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8f9a002-558c-4448-b233-f1617258a0fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10719968-37c1-46c6-ae7e-982452148b3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2991a4fb-8434-438b-ab36-7071f1e1e4e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dce5d8c4-963c-498a-9fbd-869778e682f2"
            }
          }
        ]
      },
      {
        "id": "72edaf4a-f1dc-4fa2-813a-df826961e44c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a35780bb-912d-489b-adff-2df52d465eb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac7e277e-1242-4495-aac0-ed76ce0258fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "608b7270-98c2-4f41-967e-1872a669c26c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34008c3d-d8db-4e8d-a03d-91bf7bb13738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a29726-2d51-4c1c-952e-ec62fc848751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd956e-e189-4aa8-8b64-2e6583b525f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "486dac3a-f256-4c62-8448-547b2b57d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969d6f3d-27e8-49a8-857a-deb9174c8a31",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a81d0-7aec-4fbb-b743-1d4bbb02f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba9d4e7-1bdf-4220-abf9-0df8d5a8e27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9172d54-4531-4037-b429-c6ed4c839798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d3d498-7c12-47ca-9d93-722abc89fc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4b5238-4e39-4510-8e9c-5f7b33a360cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec08919-159c-4451-ae97-2881de2e3fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45360e0-e941-473d-981e-28591d881710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d6ec54-0d96-47d7-aa88-c7290c571978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7572123d-cff7-4ec6-b5fb-df4fcbdfe76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a6081a-45a7-4adc-80e2-c919bfb91851",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c088d532-1571-4efc-861b-3d21315154a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c9dced-104b-4206-9a0a-918778492e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b1ab26-bed8-4ac7-8cf4-2f2e8afb54a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94072e1a-01cb-4181-8a3c-c8d6d9ef90c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8490df18-ad1c-4ac5-bdc1-11c381ab6d35",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7770a5a7-f6d4-4223-8cc5-5908ca81fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586c0291-3e4a-4477-865d-bcbbe5522f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf188be-498c-4b9b-9632-10a90a3f3c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8338bbdc-d6f0-4001-a5fc-a2d81dfd684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c4b099-3dbf-4e84-a6d1-a777f3b60f09",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ca38f8-64ea-442f-8600-a40055521991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c9a606-2f78-441c-87b9-ca84783ffb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addc7f58-43e0-4dad-b3ea-c249463426f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f838c360-89e3-439a-a340-c589c327f695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733c7870-081b-4004-80b7-a3404839a42b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072152b0-2613-429d-b694-2687c684f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5aea006-74eb-49e7-86f9-0057eaf1a3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109ee58c-c084-4eae-926c-c65f5f3c116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ac01e-eb5f-4edc-8d52-5472b1f9761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a69e15-3929-42ee-a9b8-93c73851eba0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af633b56-9de8-4397-9cee-6b1ee0550ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a069e38-e02a-41c9-85f9-15ee11774745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9152a3ca-5ce9-4d39-bbfa-ebd1dd5cc835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e4b222-5a34-4e49-b846-546dd75da3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcb2541-091c-437f-a8d0-7bb1cd532b49",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9e3a23-8a77-4b6e-8f93-269b97ca24f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02ab76f-b28c-40a9-bb3e-5748b315eed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb5bf87-9cb9-495f-ae46-7893e5fc54f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afee3af1-4ea9-40c7-b63d-c86e59276dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10837c92-1362-42aa-b4cb-3f1fa76b92d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a9d119-64e8-45c8-94f1-08c5c4019d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5850b94-7aa6-4696-8d0d-a071479f52b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aef69ac-4441-4ba0-b35f-db051c38f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3eed21-583c-4f14-9436-5298df627352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5d06da-39f0-48eb-9d63-8592fd92a0b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceb6460-2580-4814-a035-b355447ff883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8967d75d-6907-47c5-9dcd-9ee449ba3275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bda14a-cee4-43b5-939a-8ca57b6a8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a9c7ea-3fb8-415e-a46b-ddfd6223301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9564ca3d-81a3-4c00-8fe6-4ec78a75cbd3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224842db-675c-4476-b71c-667c7bde8da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d174bae-732d-4e15-9b95-5c7de809a3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964db191-248b-4690-8465-2e64690198bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82cb7795-8dce-466a-9e44-18298ed49e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33998803-c432-498a-8f4f-2857bc134544",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889cd270-5223-4c11-b6db-b2d8f806fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d619f34-74c2-406a-ad25-7a83b48a091f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efc3e96-74fb-4bce-97bc-ca01bdaf1966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8393fda-0a17-4b04-b0da-e313183beab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bd1c43-0096-4806-ac41-5aa661c1c004",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90fd398-7d51-41dd-b9b9-827fc2e09356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7a7578-8834-4d69-a2e8-f6a00aab3b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304624eb-010c-42ba-985f-0b369ba2049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d811df1a-07db-4c9e-8663-ff2521ebbc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63632f-8595-4de4-bbad-47f4c5676637",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118b6482-ae84-46df-9f55-e00c0a5fb10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c34c5aa-0a0b-488b-9133-73fde274fdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b14644-4225-4527-82b5-faa90dffbed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfe24ee-cf2d-463a-b269-f3e03ee4fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3a3a97-c113-41b2-815e-c45e4115e793",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a45660-1a84-4564-beab-fda7b87dcbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30725889-8138-4580-92ef-10de743db816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed022bd-5dd0-4a5d-a5f8-de3225122404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "19964eed-be09-479b-9962-7dab3f999376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f127c18f-f7bf-4e45-9db1-fda649027687",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c454f6-c45b-4bb7-a547-d7eb99ab6223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909dd7ce-d062-42c0-8a6f-6689f7df7f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bab4b-f488-4ae6-a9f5-21fdb49b0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe72d69-19de-46b1-9014-fea2f9248fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e716de33-9373-41f7-b5be-eaea7d380ff0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ffaf51-505f-4200-870c-60c68fbaa82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09125aac-76a1-4b39-90b3-0f3fed54ce3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135f4c04-8133-472f-8a8d-20aacb68928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd7b547-82dd-435d-b517-fd5d1f7f5331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66455e0e-a5d8-49ec-b68f-195936257415",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354dc14-5347-4b52-be71-d80a0e0d1214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12790cb8-5fb1-4569-9fde-21840f0cb637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0642f-74ff-45bb-b483-03e390189a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "932127e9-6bb1-4326-bf83-30229174c494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2791aa6-134f-48a8-9537-a18fac7d961d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f823db4-9f95-42e3-b8c0-db8cc059a6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c70d9-f909-4487-84cb-9bd409860a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267e26d5-cb18-4869-aaee-a1078d98b6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7588f28a-85f5-49fd-8f48-4b576e67a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf756d0-7bfd-4a0d-8151-705360f61a74",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b093930-d3fe-44db-a6ba-5be36abb6b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ef3291-cb29-438e-bfd9-68231c5cd8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df17a71f-0f46-4eb2-b731-4f2fa13148aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9249f6cc-1b54-4ad1-a32f-4d12a0e4a2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a6a69-f8a9-471a-86cc-bc99950a964e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53673ee-278c-4dee-9bae-bd03e2b59350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17fbcc8-6924-493d-943b-cf54d70ec670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0194c1-c036-4c30-aff5-3d7792ff0437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ad2245-2613-461f-974d-9c6fe1bc1e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f17c03e-e8a1-4c9d-b90a-e07e133e5bbd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949220be-3a09-4171-b5f8-954157ceef77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e19881f-3bcc-4a25-a105-c81a830039c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97ebd7b-7e25-4849-835e-26d5cafb5ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784f809d-6cf5-4a01-8c0f-88db1aebe191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c8184e-2600-4687-af95-0acf3ffbc0e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6171cdc-2165-4f22-bb20-e716fb1539fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db875b8-ec58-4d04-8bb5-f11184bb73c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1b54b8-f736-4f8b-b585-49161a6d478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2084b9d6-21a6-47b7-b5da-de33e3f8fe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b6dd59-0400-4d8d-ad1f-879e235024a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ae9404-e093-467c-8ebe-8550559387b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb8b99d-e439-447e-a64c-a32134e11440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a51815-95d7-49fc-9e96-02b3c6d0a656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f841ef-7220-43a1-acf4-ee2a2eb85d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48327d78-c192-452a-9947-faefe388bcfe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e48370a-f843-4f1a-b0a2-39efcd93f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316f9f89-830e-4d16-aeae-e88c2983fe94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4003a21-5d6c-42fb-b468-c67e9b46e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d585523-c6f0-458c-8f73-ca9f48175bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc712b5-46c2-4285-b779-49a286e26a5e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a3803-a823-48d8-b065-988bcfde59d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cd530e-22f5-44ac-a800-988d481446fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ea52e-8f5f-46e1-9ec7-e6e3d48122b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314a6ece-b706-4dcf-978a-3f850e1feaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e99da6-c796-4138-ade1-1848f5c0bf39",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b67dd5-e7ea-4052-9fe0-e201bc9e48dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be933ff-d4d2-4a92-ac77-2f5d079e684b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11058ea-cbef-494c-b4e0-c4a2eb207a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98b406b-f88e-47a5-ba3c-8bb25af8118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee62e61-94d7-4d5f-930d-0608f5bfde86",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132887d1-1ed5-4e17-8e05-8a9062c77fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114e4bab-ff3b-4727-b6ab-1fb86595cd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1d8ff7-240c-4628-b7d7-1f2319cf9e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e03dc341-06cb-4bbf-8e17-01f350e1c22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be487d-2dec-493a-b340-6d717536c575",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c332c0-2fdd-4a9e-8886-3ce8ea5b65a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8956148-f8e4-47f2-8db1-a967625dcf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e9e5c2-9296-4f66-87bf-258f72acd6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7d1d32-bfe9-4605-a988-bea168244d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51507ad3-3a78-4fcd-93bd-9e8799101239",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72548bca-e011-4dc6-8bce-8a5afd4e8367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a41468e-078e-46f8-923b-a14796f82ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3e6866-3025-4aad-abe6-96d2432036ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbcb9cc-badb-4f27-a01b-a1000fb550a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3981d1a9-c70a-4d53-bb17-d5abf9e24b20",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c55b5c-dd37-4441-af33-80229c6eba6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589ffdcb-1195-4dac-a9b6-654e3bcdb414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a220838-fa2a-4fc6-a97f-9d9d39a59705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8cd511-674b-4de3-a9aa-9b51345fc01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac8441f-eb8b-49a3-bb3b-4ad785e1048f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017060f7-da9b-43f2-ad97-ac6c8bc2fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3053ff-d159-43a3-a0c7-606b3a1ae8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529af84a-cfeb-48ce-958b-009dca7c48fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9655b1cd-0be9-47e9-8a58-2f6295c392ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa12d0b-eb9c-4b0f-8fea-de2b7dde2ad1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc59f0-6a66-45a3-ac00-12de2b55ba87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49359b21-0212-47cf-bc40-19a8b596475e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c1afb-aa87-47ba-9e11-c361d577e72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6daf5b1e-a840-4ad3-9f33-800c034e2124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ea555a-9f3f-426c-a69e-10ee49c51298",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf495e4-2b8f-42ef-a2be-dc3f435fc435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6846afe-2f00-40eb-92b5-56ec27e279c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bc8f5b-4ce5-4bbe-bad1-5bd1fa100e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b855fa-c11b-429a-97e6-04e021cf18b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8464ae5f-bb26-40f2-abbd-73ebde680687",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c936911-edbc-4b0a-96d7-e9dd57418f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5aa02-9ac1-47dc-beca-d4261b26fcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4f7790-9f27-44bd-93cd-75641308bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "298a568a-75cb-49ba-8ae0-bc4abf6ddf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65aefb5-13a5-4888-9f17-319f6d47b5f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022c7574-4dd2-45de-8a5d-5058d7b31ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e92a5f4-3654-4ffe-bf37-5c38e92f0af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d545cc8b-5b26-4855-a1b1-6a772becf6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "293de674-ab84-4c30-af6c-b433d5bca927"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4a8e81c-97f0-4715-8033-5979f1ae59e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16c5578f-c64c-4218-9577-13a4ffcf645d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df03ba7c-42c3-4ab1-b54d-19177eb3860c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "182352a7-9161-4bfd-960e-1e56d5b478c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8c57e0-8dd7-4dbe-94bd-aa583e11bba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3605d172-337a-4c92-b736-f41458b9f95c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd0a4683-b7b1-4fb6-8333-87c5c89c9432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2892470-167d-4fc2-b644-43edf8c7047e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da53a6e8-c2aa-4454-b7d6-867499f38f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f69dc17-1666-4d16-b73e-e817882f5cfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd055bc8-443a-4485-8d0f-ce5db35250bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96fd0009-0ecd-4707-b0c6-00689364909d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51a53b8d-6aa4-4c98-aa53-f7d000f9b4ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5886a48-eedd-4da4-8275-2820c909ed58"
            }
          }
        ]
      },
      {
        "id": "eb136f6d-f82c-434b-b200-966b01c0d5d4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "25378c7a-2dc2-44c0-943d-1c0a3e60c8bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61f461fc-ce63-45dd-9e73-63c395938966",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f08ef79-3b69-4f5d-bee3-178273ee50e4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a089c6e1-a739-4780-9e20-2cb4812d3dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67b66b-66c2-4d5c-abe9-c05c654bd835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d872fb4-88ea-42ba-bd34-c2bcb5dee15f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b598d64-6589-491a-8109-50d392987645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee382d4d-b88d-4721-a11c-6dfbb132e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d611ab-e546-4f43-b5e0-b0c0a6cf1096",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1689dc-7b5e-4a63-8bfe-ac33d5e475bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5766320-d6e2-4e7a-a2e8-1bb373ac9a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70db2b60-2b5c-4856-8c57-81182e787821",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc8714-4060-42c2-bb51-88f19956445a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a67ebeb-d5ba-4e4d-a604-f5e2922b87ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da39fb-c987-4132-8c63-6c65de20d80c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c355ab0-8995-424b-a3bc-29b1e0be9c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3377cc-0012-4012-82e3-92d4a26636d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc3cb3-e4d6-43ad-9903-4c2ff341368d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1005d94d-4ff5-4430-a49e-835edd0eeb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0cc3dc-63fa-471f-a9bd-d806eb41501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6b0786-82d8-479f-a99f-fdb1983fad4d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ff625b-38ca-4203-86fe-465679a9b3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7340033-af50-4cdb-9a76-1b3b97f453a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f919295-10b3-4468-bb8e-8070e29795cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c8b1ef-ba81-4995-8269-414d8c27d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a804b65-592f-4677-99fc-82ac4d9712e3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058c8fb6-9fba-46aa-abbf-903e8454897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9c672cf-653c-4cb9-934a-c45dc59c7d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e22387-d9cb-46cf-bd42-d130f143efe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa20edd1-4899-4fe1-bcbd-abc3a3709693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a005659-c859-4101-a274-c005feb27ad8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4242b0e8-6f86-4fe5-b419-a3c436e0e65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8718b8-574e-4b75-b1af-1e9f6f6ca5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f49c0f1-d73a-47f8-89fa-7e6027fe539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919f1dc5-7f52-46f1-a13d-93a31a3e5560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c9d0f2-5411-4e5f-8b63-519aefa4df1f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2472e41-8f8d-4887-88f6-8dd2b38797c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a1d39a-34b7-4184-be0b-7f8e22cd4d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89113e4-4e01-42df-ad06-1d74b9a83f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d625b8-ec74-4cd6-817e-3a9129b910e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb80952-6c1c-4d62-8f3d-9b5931bb7882",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae8ed92-5c81-4463-89a7-71c861188b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74678b7-57ca-4b24-8b9d-a30f1d2a7b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be325aa7-f975-4cc2-9ba2-55ce9ddab840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a92d20-16e3-489a-9af7-27e833095d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9ddd18-9dcb-41ac-a528-3575fc6d678e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d8674-2062-4b1b-8143-8ea85c5e0d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598ba125-46dd-4ce4-97b9-f6a6845aa516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b143ec58-8a21-444a-b8c8-4418dc7bc894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab94c5e-1ecd-4e14-a58c-4a1521247a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db608a4a-a128-40ce-bc96-cb8589729ff7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82c0cde-7f79-4144-91de-84678fb786d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bea3a98-bf53-4390-9776-51e64ce49983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06dffe3-888d-44eb-96bc-0c6c369eceac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d5994d-8083-47b5-b09c-87cbc0037c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5fb57d-f23d-4cb5-8d4e-d9a9fbf8389e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b2df26-63f3-4103-b7a4-b511c9744f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ccc504-affe-4541-9226-345977b33992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adab2add-fe9e-4625-a5de-eb8b06faf113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a335bd05-4381-4d00-86a3-2d68faf9ac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d7b097-936f-4d1d-a183-b51bac8dacf1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fae6c3-63ad-4e26-be91-9fd4fda551e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7e10d6-267c-4ca8-b74e-6ec34274f08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b5eb1e-6129-4f63-b524-e7d35fdd7087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d06a71-3d8d-4804-a9ce-e1bf12a508cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa6151-f4b4-4b63-9441-5725524f5820",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65e3f5e-72c1-4bfe-9f9e-ad6910ecf7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a579128e-15b8-4c4f-a5d2-7db0c8a27f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff6b640-f8e6-496b-92b3-fa3b9d2fcc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b31c579-5064-45b5-b676-79f00e66a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2ee941-d93c-4e46-98d0-01988006c8be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2675250c-5cb0-40a8-9f65-ada878caa853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4d1336-a8e6-42e4-bf02-0a080465a0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6d2d1-4741-4c1f-89d9-93e1f61ca927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01809317-2a55-4234-9a0a-51b7b4b27d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc3e54f-214c-45ed-9930-70fc1c45ae90",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9599007-4e41-48a3-af0f-e93e460a1ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c626f65-dd5f-43be-b3ec-dfb436f2c775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9323bcb2-ba8a-48bd-adf1-9e5e3a3d1f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fe1d4a-867e-43e9-a4b4-7b7316c322af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fb85d2-23c2-4985-b28a-85678d9f0902",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fa2018-a513-499b-b7ae-162cc6dd986a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe5f748-6249-436d-9e72-30b651785966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb55891-1c3e-4999-8383-d4e402038869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c220835-0f35-47af-8634-ffa0eb167c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5638eb-5b0a-4b29-8809-ca987be733e3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c427c281-7acf-4457-9cef-e7ea99024058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e295e108-60b9-4fc2-9168-d8ec11d5d239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a46edde-c068-4526-ae25-f0371a7c5b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e33dd8-8895-4f38-98bd-1d2172c9b182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177db13b-04ac-4e5d-b566-81f21a48d59a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18d75c9-fbc0-4685-b20a-327ceb8a4f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ba4811-b877-4751-b639-2e38026fd3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cf0cf5-a375-4bbd-9b2d-7400f66b6271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da9109d-1bbc-4bd3-a223-d16d5bd39505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9c0399-26cf-4f5a-ae06-b0dd484934cc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4121d83f-062e-4904-86ce-fb7631cafebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed639aa0-13dc-4f93-82bc-534ec01384f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0334aef-ffb1-4423-97d7-d77f313164e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a856b09-1256-431f-8a63-fc8e7ea91dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7153cf0f-d8c9-497b-bff8-28f565d04d01",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44df9a9a-da32-44e0-9cfa-fb414475e1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff11e592-fdb4-4de3-a64f-9d1ceddb19e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2242b087-e8b2-453d-827e-d68e1caf74f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee039a6-fa9d-43b7-b978-6cb86536345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fa7ee6-856c-448e-b30d-9c97f4b4e60f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37b2f1f-9a38-4661-9b1a-04773c506e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ecb511-2aeb-49d2-be08-da2c9cdbc290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af584d3b-1a0f-4006-8fc8-d29255064513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa20f37f-ac02-46d6-a038-761692121ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a14823-ce45-463b-9a12-c58847d1df45",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2c0ab9-5745-4571-88c0-b91d8e0ff2aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b116b453-221c-4c2f-a2c8-3f13d752a08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939a318b-5be0-4ede-b905-69964b305b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afda393-e5c9-44fa-be80-9b4953de13d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4ee582-ed61-4822-9e9d-60e8b1adc784",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180bbef1-66b7-4913-93d1-bf45ddb57d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105b4df0-3c35-466e-8478-b49e73dc6ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a9e43-2495-4661-9bde-2e5726be73b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eab4eb-6a57-4897-98f9-b53517f61d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334c7d18-3d99-4cae-9ee2-b4c9380ce308",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471d3591-2101-4d26-8703-564757ff2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3820363b-36ce-4f82-8611-3a8f34e61ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e96bd3d-bbc5-4566-8399-c1652467ca61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af319947-c78d-40b9-b50e-7b1bf6b419ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ee381-0772-495e-8981-382daa545f80",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ce79c0-65c2-4eb1-a2c1-f3dcc5dc2f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3dd7ba-589f-4bed-a928-278468eeab46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e00f799-98f0-490c-9b42-4a6b4e2fd624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e31289-102e-4458-8d9b-fda29d23eb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade60f63-a3f5-43c9-8652-1f9c4341963a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb43a9-5751-4401-9143-36543e1d927e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb36979a-c1a5-48e2-a3ea-df15f2eab5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a985cf21-1792-48ea-aec0-4b7721c5324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5fddea-8587-44ca-81b5-b01fe53c5ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5145a7-d652-4349-8fa9-a1737ca8eb7b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95070e6f-ea0a-4ee2-9891-07792960994e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2401d3-c40f-4cc8-b38e-eeb65f7b1d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873a8a77-5c76-4c44-b2f3-c4b5f0b58f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0a57b5-82de-4a48-b22e-d4b089fe97b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f68354-46ca-450e-a276-c67594e08098",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2eb1d-23d6-42fb-952f-dd8c4c81d694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97afacb2-11a0-4bb9-aa20-173b18645c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e3c035-2126-40fa-8cac-672bea2607b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f844419-3865-4d85-9cfa-534af06fef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb52ed1-7221-48dd-b6e3-7452f1ad9424",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88813f10-551c-42b5-8094-c1dad66521d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97b7152-906a-4577-a892-31458be43669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a74d4a8-ef50-46a5-b38d-ce86d8a26718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8bf520-ffea-46fc-9c2c-58cf4861b937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b119b797-09a7-4923-b5b5-072f461d4073",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e54b7-1e47-4306-aef6-08b3359e8038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7badfc68-688a-426b-9917-c4190dfcbbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec0e70-ca12-4602-ad7e-0439b48f8af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e308733e-8f5b-4581-a5a2-d480ae0efbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1655847e-a5ef-4c70-b56a-d43ec8edbf3b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda98f58-6769-431f-b86a-539dd3a36393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d4178a-a190-4223-a159-f9e2ee62c05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5fa68-66c6-40ae-ac6f-fb7a93377c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0436d055-22c8-426d-b138-4ce94c92a245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2333333-e80e-4a1f-9270-06ad6584155e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c10535-fb9d-4c3c-baca-00a922b9ea1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce5768e-57b0-428a-a939-9fba7c00e9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b063ad9-3603-471e-a66b-65f845faa0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e69e606-8bb2-40e3-be64-a24aeea301fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a89f448-01f4-4ef4-91dd-9c24f4256697",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605b54e-c037-480d-ad16-cdd0a1cbaa42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac6844a-0bf7-4f83-8367-1e68ba49cfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83592389-42c2-45d8-9b57-8ae79487e116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489f03a1-99b9-4d84-b715-09e37924f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c3e4b-ec65-46e0-bc9f-09441d9c18a7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63350ece-dda7-438d-bdec-6d7d6771eb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c52c6e7-a433-4aaf-b828-264cb944ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb93cea-2f84-4482-a3b4-a09571167f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f721b2-474d-4a5e-94ce-19e7088972e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57adc26d-beac-4514-b658-a2f0a37130ed",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47aa5ec-4fb6-4d50-9214-a11057b7bace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f833c23e-a67c-4f19-949e-52e460e4e3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe6b8a0-6cbf-4052-9b3a-4a482b6fa17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2709655e-0ab7-4893-9d86-e495d69f7585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef8d827-9c83-4813-b858-a3633c93bb31",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19972776-af16-438c-97ce-05f51e720c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c535ce97-10d1-4db3-b7f5-95f0cea66b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18860034-c981-491e-896c-4dba4eb836ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f82dc6-6001-4717-9752-4b8ce8c96de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7576d513-a22b-40dc-99c4-09b88697668a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de385d-827c-4e58-ab1b-650bbd61dbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ad5d3d-b018-4562-824a-9a83843a6de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db26437-35e7-4f65-9d84-b0635e68858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ae8d19-d400-47ea-8c63-c31fe50d2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b638df-820c-40c4-bf96-0fc3df5bab81",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16b9561-7745-4783-bc5d-050c36d08d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d4b870-87f3-4d13-b0db-a4befc5d91f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36c36e7-4785-4cb5-987b-865fb8ac872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48dceaf3-0de3-4b68-b49b-ca2dbee0fbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0365f25a-ca1d-4cf8-bb36-515ba81434aa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06211f4b-a78f-4655-8f4a-5a4fc790dd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6b009d-b897-4d76-b91e-a019350b7334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861760fe-cde1-4155-910f-cb564d8a7d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dc14c1-60db-40a7-a405-0216bd539024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31338ff-509c-444e-a8fd-24bb405ee87d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae14e690-bd17-4ce5-9bc3-3d50612c5c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8f0b2e-9770-49a4-9e32-3c013de9b669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d96455d-560e-41df-af07-0a11ad2cfba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee73a26a-619d-4d6f-9800-6548b1d2ea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28665a1-2db5-44c9-abac-550d852c3655",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2460c8c3-9ea6-46df-863b-b19c3390359a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa663e27-b135-4285-8943-9e1e48369b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3be8821-a490-4c40-a447-57fb9242b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910f015a-1ccf-458e-b6f4-5e23626dc021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7708fd0c-4574-4d08-a205-34fac9cbf380",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41c0434-4e26-486a-8d83-43d0cbb74d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc90de6-0fe6-4c28-89ea-89e0667cf956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceb7bea-2208-42c4-b870-ee3ec7861dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97def72-6e94-4d87-a442-56afa2fbb5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482cb7e2-6309-4a8c-a848-38d124bc55ee",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97414efa-1881-4a6e-9155-aecf0d3ba202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff35b19-b8e8-42ae-ae6c-2768a6c0c110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9baf64e-df3e-40ce-bd28-8851491f9c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f01199-46dd-4a71-86d0-ad2e8b002c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed783666-6202-40ab-85d9-f97a90d207a7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce15faf9-d436-412e-8042-713ba5203299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291b89fb-c24f-4382-874c-80030da2d5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daec840-28c3-451a-87ac-d91569bc7928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b3aaae-f4d2-4480-82aa-d0df41889648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fba63b-d3c4-4339-9f52-80b2adb69ae9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce57065b-2f2a-4909-8eb6-bfec29858d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5d7ebf-efe4-4bda-8f96-563c94c5141b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c97038-8a7a-46d4-a2f1-cacfad3e73a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ecaf6d-fa55-428a-a9ab-3a4b4a06bad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc3caa9-f637-4dc6-9fed-9dafc15bdde6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8a3fa9-45d5-4a4b-9b8a-0db19b0da8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7248b557-98d8-4311-a8c7-7b18d8376701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc7123-76b8-4b5e-83d5-6afc2df1e7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7f412f-60ce-4571-9b0e-7176802900ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197178ac-fca0-42e6-8453-03b0437bed44",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6748f5e-f82c-4dfd-86d7-09cbfdd3af73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371182cb-488e-48ab-be79-ed3944537fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aebf20f-7c1c-49f5-8c0e-9cef7ea31b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a356057-c9bd-4ad6-a0ff-7771dbd3b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b544190-52e8-4b89-aafa-cfecdd915a8c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e33734e-5bfc-4a79-849b-aa19e251651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3168fb-b18f-430b-80cc-b91883820c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6619437-1545-4bc5-ae52-02c8722e2fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0659714-3168-446d-b97d-d25773fbb286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f7f4c-15cd-48bf-adcf-729ed378b281",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d40863c-a637-43de-b10c-8c2a1edb66ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834499a4-3b4e-4c72-b9ac-2aec61ab1807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1f13b5-f53d-4cd4-b886-13786f0d4fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4430a74c-e4c2-4e79-a212-7cb206e11379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f029e1-c316-4d35-b159-cb3dbb00ef9f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad37bf4-5c11-4781-b410-4def05d1990a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac23847d-e974-40a3-99b3-e75efd98b353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966a3cfe-0710-4dac-bbb1-ac19d4387625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a69552-2115-4e3d-8efc-20f637fcfa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab3dfd9-76b9-4938-b3c4-b38ab343df79",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dce8375-1e5c-492a-ad88-4b7c016cd9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d2b95c-b076-40a0-8738-835039e6f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2dbf27-9020-420d-b7cb-a12c3a11b88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1755227-7bef-4542-baad-a7249b72157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec9e3b-8cbd-41c7-8a8a-e53e93c9bf9b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64ac16a-3eac-4b31-8309-62b10eb315fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5151056b-56df-4734-a9bd-f78b9aed75e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dedf48-1873-47d5-8b55-a36f8a64a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc81064-2512-4c70-830c-a31c09c7352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e70ae49-c881-44ca-aff7-77355fc14dae",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bcef44-45b4-4440-9148-4a1d37807bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018ace39-9e9d-4447-a8a7-3aeca2f366ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c623f963-6891-484f-887c-8fbcfc8348e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210a1955-e850-4ceb-a44b-9539fdabeac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4604f649-6088-4de4-8f5c-543bcdd3f6de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd45528-c78b-4717-a20f-10b72be0980f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed6cd96-841c-4f8f-afff-2ec6db0e3582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def82d89-0b46-47b9-91b6-d5b2e3934e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46339462-dc78-4418-9693-b8cf9975bd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e54c89-0182-482f-907c-84a041c3c295",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f13b26-8a90-4571-8021-226f4fc151da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201a9a75-8d77-4246-9344-2ec9f30ff9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee386962-293c-49a0-bcd7-2d1925a13beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb9910-cf26-4692-bde1-13c164f2ec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f381ed2-16fc-44e3-8e0f-7f07dba6088a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2050bfdc-493e-498e-aede-7ad2726bb53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6a6f05-22a5-4647-bd1e-c67795dfbf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e36d57-a0ce-4024-80c3-b3ef93fc216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ba5c55-5fa7-43be-bfc8-46d558b437a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6baf23-0d4e-4f98-8237-e0d695e8ed1e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864438df-2d7d-4c16-ac12-cbcf789259d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5f6ff5-0606-4be1-9178-6a8d096fe554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d045b8-ca7f-4070-a312-b0caf8626ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcac509-704a-488d-a57f-878626c9dc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d43e6-8141-4ccf-bf11-8e55b9f50487",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55d0097-5929-4785-b4f7-87a193790154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1bd398-455c-41ba-b55b-0ab32640cbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e1666-40c7-4082-b234-fea4e100cb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9269827-4459-4e77-af45-c718961e5146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb457cdb-0a52-4ad0-b5c9-0a0060c1e858",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde81353-d8ba-4146-9d03-755988919562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcd4bc2-f56b-4323-aca0-0f95cf81bf46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da63b98-e4dd-4d73-9e1a-7b9152888086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e736a6-0360-4d7d-bc36-e2f3f92d5b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29455b5-d73a-42ca-b0dd-25d4915555d7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8fd56e-99d8-4f8b-890e-911f23c217bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7d8fe7-6f0b-481f-87fd-c362f7009d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4820c80c-125e-4d23-89a8-99a4adc9254a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ac06c6-025b-4387-9677-bb8598ed1a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77628ed0-fe12-4f12-9cba-eabefd02601d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ff9448-aa3a-4698-ae60-07f5f1438716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910f892c-92c3-4ce2-b4b4-57bd9a0ff41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c788d8-91cb-40c0-a63a-881132cd635b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930511ba-6973-42b4-8f0d-ec57694fd644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48df90a8-e7d5-43c3-be97-2f8fc54d1b72",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f02441-4f19-4303-934a-1afb1e6c2671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fe403d-d604-41bd-b99f-933463e1283c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2101acc7-874c-4463-aa4d-482047ebefd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b5d4cf-226b-48f4-b320-593829333921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a7cb33-e2b3-4422-9a19-498e9cf25746",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be8a3d4-dbce-4322-b526-aa07ab7c9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1be74a-d4d3-4eea-8456-376c3c763451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567edee8-0024-4274-a254-8ade92fa5990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4a60e8-a3bc-4580-8aee-3f258d1257f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bb5c2d-6daf-4cc3-8280-a351a5d8a3be",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4c46f2-f38c-4a04-804b-163d5fc99155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87f1ea2-fa60-4f91-b27f-754682daf6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d5b0da-1117-4ce6-9875-d39ad5ff9f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef3c973-1a14-4ee1-b49b-08bb4b8bf28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d41e08-35a5-46cd-a982-c3b75516ed85",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd057f31-0a24-4900-8201-e7d8eb4cdc74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9304cc19-45cb-425e-92e3-40215eb88366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e64e131-33ec-4efd-bc41-21060ac22553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8609030d-0ef6-4f17-9d70-d84138cc9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed638445-0876-46f0-bfd4-a0a6d6aec8fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d763a8-5293-4579-b765-d36fdf3cfbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba58df3f-f70d-4824-b8e0-de8b7488f0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22468982-a11d-4448-b799-ad7fff8aa7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1df983-ba72-4bb9-96f5-ea484f2e55f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a27a44-23b4-4b89-931f-f2c4d6ad930c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56166b86-bfe2-416f-b104-77d5ea2fa070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996627d4-6209-4df0-a95c-5cc6d2c81cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c64ed38-0761-4d2a-9330-a85808e2bbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd2f7ba-ec95-4924-890e-fca4cf42dbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccae07d-98c0-4885-9559-549b3929832b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56111dc6-80d8-4771-94bd-1aef69abe9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f43933-6cc7-4318-a474-ffb6103aff96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e1ea79-ae96-4397-a18d-103639d3e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49492a54-b198-4b1a-9c18-eacbabaa5566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba58ae-d638-4b07-a56b-d5867a80d833",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a4ba2c-6024-49ff-9bdc-47651abef4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb91e9dc-703f-4ce3-90a6-2c65cfef66f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef108bc8-1991-46f4-9c6f-2e53d5353a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a914352-41f0-42bc-8f44-5c959b70d8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96560a62-6794-4d38-962a-4b65598546a1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d981e649-6487-4b9a-8c93-2003ed7dd377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210d0432-719d-49c3-a190-1958b0b7d853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd9cb5-a238-4284-b958-77e0fbede76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebe66b7-b951-4147-8eb2-a4641587ee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a68890-a0d1-4b0d-8122-82615a269713",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d4f7b-bbbf-409b-94d6-28a9875c3e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92f2644-89c0-4bba-bcfa-14e17d04eb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b98732-70da-45cb-87b2-db6cb4d9480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19222a8f-b919-49fa-b733-62834f646146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76735414-eb90-4a6b-8d0f-c54e83d1e9ea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e2b3f-f2c8-46a3-9696-c375bf6eeb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aef3851-a8a5-4993-935c-8523c6d5fd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85722cd-0ac7-4ff7-b9af-c4bf352bbf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4eae52-db84-4190-a999-fb9dacc4d923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb88d302-1a14-4f51-9697-f0e3cf2178b2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06330b3-c5be-49b1-a99a-ebd0b751f651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163cd096-f117-4362-8293-b25dc1af933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddd892f-ed40-440e-8d11-384699b471d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5dd634-9e4a-4cd3-94d3-e57161423944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb4e7e-07ac-44aa-8ebf-177795ebd8d7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d028eb74-d8d1-45be-8ff2-d766b90a46bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3005448-d25b-483b-a7d1-30b6e002ca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f9450c-9464-4a92-9f08-47e2f3c18856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bb5339-af00-4bf8-a222-b80185f19404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b117f-732e-481b-971b-a520986a058c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8abb534-d547-4361-9bbe-c12e44034a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7686ecfc-fb47-4d0b-8036-e966976cc3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae463b9-9a9e-44cd-b6f6-9cefb2d61afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cab0b8d-1244-4fa8-9735-0961e4f91f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518b7e3f-63f8-407e-a794-7f19838e5721",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88325dbb-d989-4a5d-ba0f-a6bd5c344674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4105788c-bd9d-466c-a476-3a644ae99f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d88c9-b03f-4dd4-8199-b9568ec3d7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65d87a0-1571-4158-94c6-0f32dd6a7a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eef0840-c803-4064-8352-0bd86efc3712",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e82359-aa87-4069-9815-d830e442b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c606a9ba-2133-4c7c-a52f-979f56028421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b9c9d-8c70-449e-8791-065e74992b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81772d6f-bad9-489a-9c8b-0d3b8c802fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f7451-462b-41e4-aa18-a89e1cf673eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e7b423-194b-4a85-a29b-f86b85b385e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3292e67-3249-43d3-9c0c-18e849240307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27edcc7-feae-4788-a9a0-c065ac2100aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588c9583-fd58-43eb-889c-c2fc3f9f2a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d561ca6-d000-4a80-b098-8cfac111b578",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23cd23-3bb6-46d2-b9c6-fbed40704ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f2a339-7bd0-42a7-a61f-6766a7d9759c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888ff365-595c-40eb-8f62-365e6a8e3f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cf9212-4ba4-4e0d-a247-e3b9642a4e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9419656-131d-4b82-8988-58cab664610f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9df423d-7765-4395-bdc0-7730318de83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a470c9bf-3988-43c4-b57a-ec46b4d16b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18505f-cc4a-47ec-aba0-cc4baad940c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e69807c-730e-4251-bb11-cb112982500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d1db83-2944-457e-8f67-d15ef3f4ac04",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e7a4ad-3129-4a16-b2ec-b295849a9bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f26157-add6-4e3b-9a94-48a8e34b06d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d526d2-ed98-45c4-8a90-1b66a14ebef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b46a23a-d125-47f4-8412-d371add3c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c1c723-2641-49fb-a124-ec44379f951c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6942395-bc4e-4fc8-9e1e-df07e59e5b5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9c3ca2-c9ef-4842-ae09-786d62c3863f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e138e1e3-aaec-4071-a385-bb670bcf510e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95866327-add2-4f5d-a894-6828a0e4f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942febb0-6906-4d41-8bf5-64dc15870b20",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d1ed3-9b73-4e31-85e1-4b59a095b603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1941e0-5341-48a5-b281-dad81b08b585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f083d-b5ea-4bbe-99f2-b8d5011d93bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b63da0-e340-4056-bf3d-eec96b412287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb9d728-8d9b-452d-90a6-4c796172274f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e35bd4-b966-4416-9a81-dae265483cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ee27e7-b667-4a48-90db-95694a237c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c032185e-7c69-4450-877d-5248ee7cb3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb31ace-4718-4a5f-8be5-98ba45dbc80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e14717-8dc8-49ed-89d4-e684bacacbe0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c69a0be-3bef-4e4b-b99b-7ac2219437c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd3482d-39cd-47c6-bf57-a4ede7b6e189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebe0db4-6ae0-48ee-8953-38d598278380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15651bb4-a532-43df-8d95-2a709a54e59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a7a29e-984a-44a5-b424-c53d309c3976",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884be579-495d-400b-9369-6d444bd5f9b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54fe36c-042d-4ad9-be4c-308a46eee26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e91cda8-ff53-44a1-a935-cf2d9f9d7b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ed7e63-3938-46a8-8e78-bedb7ecbbfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db59e19-5e9e-4469-8cc3-8e33f9ee9145",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52abe782-5ade-4447-8c22-206faddcfcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "450a1a72-3fe9-4537-8655-b89ef4cad89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049b936b-80af-49ce-a308-a59a18e51335",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b095af0-8578-46f2-8b62-2d2384a274ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fac4b42-a059-4b11-9b0a-3ec3183e6753",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad8e84d-0ed6-46ad-a757-f461cca15225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81988326-280e-401d-a5eb-7c1f74dc4bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2bbf45-eb05-4cdd-9e46-af69a2ea98d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac83131-3158-4884-bb17-0ed4b488f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8167ef5e-7f95-4e0e-b6ed-81e20cdfb080",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0252b1-be82-4cea-b9e0-1f346454f0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06d0fa6-7b05-4511-abdb-e46e5dcb610d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f4f3d1-b998-443a-b940-c6cf8917e351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ca8fd3-dd5d-4d87-8cf5-47e6cb5e04fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1586e9d4-f7d7-4291-a23c-5c221fc49de8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa75fa2-b370-4d83-8dc8-9a3b72ac0845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318ae635-6123-4cc3-8ffe-3940b26fa54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb62535-d8ed-4ecb-a26e-84ef140ed734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e519ab-0391-4278-a0eb-10d71ea43391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a7750d-0c36-4445-923d-9b5d242b0c01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145a755e-fdd4-4b3c-9385-3ea60f7745e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b778824a-4956-4333-87e9-8d9b4a570938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1223bd6-85ae-4c21-9f89-495bc3b4c23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2739c45d-ddd3-4fe6-83e6-4e6a1829131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73351c0-554a-4b02-a877-7d3cfd4a2047",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d04d12-93b5-499b-8ed5-57bdbbf8b21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a09bc0-626c-45ce-8611-f1fc5834502e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3106a9-a9a6-48e1-951b-8d247ab50066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c301ad-c837-4157-87ed-0749f4348751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da365cc-2c1d-4826-a71f-25272e928303",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea7fcba-ce2e-4afd-b065-b29c36b72dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cc8416-a82c-4009-a93d-cc3f960eee11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f5fdf3-68bb-47fa-b5c8-cdcd37bce545",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8acd0a0-57bc-4dec-8c9a-69131c55304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be83e854-f3bd-4863-a2dd-06622d25e45c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d7fed-c9f6-4e12-bcda-7b1b788ff372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f573e4-f8de-45b2-bf56-603837e30761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9ec65-c0d3-4a40-885e-fa8078c06fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5474fd-5b3c-4235-9a24-ddc946db4b10"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a325c94-bace-420c-a098-4e96f549e213",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d866b2a-a457-4ef0-9c75-e90d1c447acb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3af10a43-5fc5-469e-a4c5-c2a9867c0171",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5536aae6-5b9d-4c9b-aae2-f88a7593ff06"
                    }
                  }
                ]
              },
              {
                "id": "70c11602-535d-4d22-a757-a206708a4c28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9faca55-8a24-4a73-9bfd-3bf7789830f0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a075f06b-f4d3-43be-9756-4704c10b6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d992c07d-9cfb-4122-a143-e93b42f88713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b676028f-208a-4a3b-b2cc-81df1fde063c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b9454f1-804d-47d8-ba6d-987c503f99ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7465af67-09c5-4f91-8997-d1f8e61a129d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be2e5109-ed8e-4fe2-bda3-861289fe0c59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f13a1338-66c5-4e38-9415-c5d7d32237cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "708be716-59e3-4f90-b9cf-12506497288a"
                    }
                  }
                ]
              },
              {
                "id": "013046b6-b336-48e8-982c-dc7d88430094",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d465e81-a091-40b5-9c40-74a9a599b882",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2188a2-c48e-4336-96bd-4adb88bdddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a62636a-2f49-4652-8271-c851c44e5cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca999d-8674-4b4e-abd7-3f4584f6e21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c83fdc9-6b51-42cb-864b-833e70a4171f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fea00f53-fdf6-458a-b1c9-38f7d4d01403",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c1c310c-7c12-448f-9256-555951c10be5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76b765dd-72b4-4c23-bd19-517e6843d318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90927d7d-1b30-4770-8a1c-b383e1dec0b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e39e815-2e2e-471d-98de-36c7bb71c758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe8a9471-2616-4561-803d-7ebe2f2abf8c"
                    }
                  }
                ]
              },
              {
                "id": "654d3905-a366-42b6-b8a7-a96eb6c227b2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1111310d-0938-485c-8f6c-e4effd2b95c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "24365ea8-fee7-4692-b659-f7e0665cfbd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ed414a-ac8a-435a-8e6f-53694c898b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01140ee3-0329-4ed5-8cd1-3bc11ed99f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6226fca9-de49-478a-9121-99ad1d9baed2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6794184b-9ac9-46bd-89c5-dfdf32519fd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a1cb82-0e90-4a97-9439-7791dcb8e2ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89f71c6c-09a2-4878-8ff8-2b6b5a8c01ba"
            }
          }
        ]
      },
      {
        "id": "4e78cfaf-ffbc-4344-83e0-0ba599f77e15",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d1104a8e-b465-44da-acbc-639bec0531eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee439002-3526-4e1b-9dfc-bb8b78f4a813",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e878194a-acc5-42b1-98cd-2c0d4f76b47f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8907dde-4d4e-4d49-954d-e37647656a5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a98230db-ad92-463d-ba82-4bed823f16fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231c9330-ef71-4265-b838-e54d04c607a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e92ed84b-54e5-48e7-ad67-37f6612f8fe3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8eda909-508d-438f-a7af-bc0675cf4887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "961ec58a-aee2-483c-b146-da7b774e3b2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adce4354-5c35-4cf1-9251-a7a4ff5a1115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04b56eb9-f002-4f1b-bdba-b68032fa689b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83ecfe54-917f-4fbe-9a9d-df0f01fae876",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f764a328-2cd1-4c8d-b993-e7360da01d32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a2fd95e-2ae2-4fe4-9160-34c8e3b50210",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b60bec1-522a-4506-956f-df26c50f08e5"
            }
          }
        ]
      },
      {
        "id": "03c529e8-1de8-4d47-bfa8-7f452d0d0213",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "77d9bd41-73e4-425b-a037-79d8bbb36f16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9540a0aa-d3a2-415e-b0c5-b96116bcec2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5644ccc6-d1f3-47bf-b0b1-953a4ac0bcb5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1573b31f-90ea-442f-9717-cfc04741ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdb9bf21-8b4d-434b-a8e2-30c452101991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792a46eb-97cf-4588-8d72-32f2214f0fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "883f28cd-8317-4d02-962f-7d06d3464682"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf6a2a4d-3811-46e6-ad5a-860f5b6b610c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7accad9a-ebdb-4262-b945-27670b11fd5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91496bbd-6c59-4560-a5f4-37aeb6bd519b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5433cf62-6ecd-4892-a609-1b81bf993e7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d9362b0-d14a-4170-83be-6b71609b474c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d4e01b8-a4a4-4e19-b634-db3a8d4f8be6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72b798d9-5c1b-46c3-ac0e-5fa974bb0bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2a1f839-f521-431b-a75f-29677d7d8105"
            }
          }
        ]
      },
      {
        "id": "22b306ba-1770-4c52-ab51-c983676c6b9b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c343a3d4-5235-4463-93bd-007b3237d191",
            "name": "Negative Testing",
            "item": [
              {
                "id": "188ffefe-deef-4b79-a07d-cb791ebc3404",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "770b789e-0314-40d6-9311-d3fb81018c40",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ca04e-2892-476a-9325-fbe384cb3aa0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff85f2b-5e50-428b-a72e-90f42f2bfe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8323e2b2-425b-4527-9a8d-da4e3bde2a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81a7e1fc-7691-45b3-9ad9-cf42591b4a67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "200ef5ee-81eb-4e57-b3e2-d80915f3b146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35fbef78-b84b-4592-92ce-4a00d1800dc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c426e744-a038-44bc-9c2f-b2e4f59db585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d53ce47-e094-41d9-9dcc-61dced32a12e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d944e32e-d4f6-407b-aae3-8b036d0e598a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2c26ffa-0582-4413-b5d4-ece39527e7b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb489284-3f59-4944-bd31-56cc53b7d4f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a48af57b-2ab8-40e3-8502-6f0b4de494b5"
            }
          }
        ]
      },
      {
        "id": "60c07e2e-3648-4ecc-9cac-5689597091de",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7603b15c-52ba-41df-b3ab-a5bc33dc35ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "838f00b9-963d-41f2-9a3c-b0d2acc257da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d40890e5-454c-4099-9bf9-ab48b111b505",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b31c750-e7a8-478d-a02a-9cfab1c54a1a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1b28e12-eb8e-41e0-b912-b1bc2991e108",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 216.48943661971816,
      "responseMin": 13,
      "responseMax": 6236,
      "responseSd": 415.18216334719193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689555093412,
      "completed": 1689555166739
    },
    "executions": [
      {
        "id": "e945d4d4-6423-40b7-833f-3c17efc9267f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d4b37aef-f0ba-4770-88fd-6e5d55e759ef",
          "httpRequestId": "e9d02401-6a6f-4fc4-8e16-2a11e990a83c"
        },
        "item": {
          "id": "e945d4d4-6423-40b7-833f-3c17efc9267f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d9a64d33-5130-4ecf-9d69-a349ca922b19",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 0
        }
      },
      {
        "id": "4c437611-f818-40e0-8a04-d34b0d9ebae8",
        "cursor": {
          "ref": "636888a9-e483-4408-be26-a64320c862e5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2dbdb0f7-a4e9-4a99-889f-bbd279608865"
        },
        "item": {
          "id": "4c437611-f818-40e0-8a04-d34b0d9ebae8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6848c698-8123-4637-ae63-f025f924950c",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "c1eb48a3-dcb8-41f8-a2c4-f522b77178f2",
        "cursor": {
          "ref": "637344ce-3796-4a66-b53c-117e5c704944",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "17b1a0aa-6b79-4606-a22b-80239aabb282"
        },
        "item": {
          "id": "c1eb48a3-dcb8-41f8-a2c4-f522b77178f2",
          "name": "did_json"
        },
        "response": {
          "id": "cb0b9a2d-1743-4a96-91f1-9299c6f65d2c",
          "status": "OK",
          "code": 200,
          "responseTime": 1079,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f82a9-a376-46f1-93eb-767f500ffc9f",
        "cursor": {
          "ref": "b078b7af-28d5-4c82-abea-01baba180fbe",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2448984f-6f3e-4226-8b8d-01c7831f38aa"
        },
        "item": {
          "id": "0c5f82a9-a376-46f1-93eb-767f500ffc9f",
          "name": "did:invalid"
        },
        "response": {
          "id": "125323fb-6df8-4a4a-acfc-f6d308f03e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f82a9-a376-46f1-93eb-767f500ffc9f",
        "cursor": {
          "ref": "b078b7af-28d5-4c82-abea-01baba180fbe",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2448984f-6f3e-4226-8b8d-01c7831f38aa"
        },
        "item": {
          "id": "0c5f82a9-a376-46f1-93eb-767f500ffc9f",
          "name": "did:invalid"
        },
        "response": {
          "id": "125323fb-6df8-4a4a-acfc-f6d308f03e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4904ffc-b707-4e80-8f77-c76511d3c8a1",
        "cursor": {
          "ref": "ad903371-e597-4226-b8b9-7fe18fd115bb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0cc9244b-bbe7-405a-be7a-1207fe5caca5"
        },
        "item": {
          "id": "b4904ffc-b707-4e80-8f77-c76511d3c8a1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dff31e6a-83d0-4d30-84d7-a45be48f9f90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2167c0d4-9a3b-4b6a-98b2-b7d1eb5becde",
        "cursor": {
          "ref": "06625b68-a49d-4cd1-bcb2-435a96b8376d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4f7ae04-b21b-4177-aec8-b49e9b1da39b"
        },
        "item": {
          "id": "2167c0d4-9a3b-4b6a-98b2-b7d1eb5becde",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fef0bf62-dd3b-411c-903a-9630e742de1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 260,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbe82f7-c3fd-4cb9-aeda-ee52b5d91d3c",
        "cursor": {
          "ref": "6d8f1250-70ae-48c8-ab7b-6ab4f03038f5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "541ba032-927c-46b7-b3fc-5efb08a80445"
        },
        "item": {
          "id": "fdbe82f7-c3fd-4cb9-aeda-ee52b5d91d3c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "260aaa3a-da96-4bb4-b0db-737adec67c51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534118e-d67b-416e-bb6d-6f7a53a185a1",
        "cursor": {
          "ref": "a09975e4-9778-4bfa-a2bb-ea0874127f06",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02393af2-f4bb-49a2-b55e-84e0f2adb7d2"
        },
        "item": {
          "id": "3534118e-d67b-416e-bb6d-6f7a53a185a1",
          "name": "identifiers"
        },
        "response": {
          "id": "ab5601f0-1730-4f09-abf5-13afeb6d263d",
          "status": "OK",
          "code": 200,
          "responseTime": 1088,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa823dc-fe57-4294-af5e-5ef7e13051a9",
        "cursor": {
          "ref": "5f6a9b30-d3f1-4d46-907b-568967c1db69",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ddfc8f6-52d5-41b4-8190-4bbb7c88019a"
        },
        "item": {
          "id": "0fa823dc-fe57-4294-af5e-5ef7e13051a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b6a0334c-1547-40a5-b489-32551c768ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485ed1a-522a-444a-a41f-2e99ad12d6aa",
        "cursor": {
          "ref": "73c0f2ee-b5f3-403a-8204-20ff1b8dc0ba",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4287dd15-27ac-4fd8-b5e6-1c206fded367"
        },
        "item": {
          "id": "5485ed1a-522a-444a-a41f-2e99ad12d6aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2b29fa85-1c4c-45a6-baaa-82e4dcafeacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03580529-6667-437a-a57a-ca78fa5df8fc",
        "cursor": {
          "ref": "23dea905-76fd-423f-930d-404e645f61f9",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7dbde123-36d2-4ac3-a6d5-67d5502a22a4"
        },
        "item": {
          "id": "03580529-6667-437a-a57a-ca78fa5df8fc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "39e22b6f-a2e6-4204-a290-62c1cbe67ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19d7920-cef4-41d3-a2fe-1435303c3d77",
        "cursor": {
          "ref": "0dd8c606-797d-47ce-bf31-e53c4a33379f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "92c76f7f-9c5e-4a34-b1ca-266272b331c0"
        },
        "item": {
          "id": "d19d7920-cef4-41d3-a2fe-1435303c3d77",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0bb914b2-e46d-4695-b2fc-1d4e419b5283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e855c9d-8353-4528-ac76-1c0a7dd30ced",
        "cursor": {
          "ref": "9c0fb9d7-b641-45f3-84e8-ae7d42e357db",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "243aa163-e186-4693-b9de-61f0cefaf3aa"
        },
        "item": {
          "id": "5e855c9d-8353-4528-ac76-1c0a7dd30ced",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ebd7334-b8c4-46ba-a287-f63cfb803558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4868ce8e-d14f-4ce7-908c-5399b2fa10ae",
        "cursor": {
          "ref": "2219a9ff-0b05-4423-aa4a-99647dac23d1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3469d63c-8737-4cd1-a1bb-80d2e1828736"
        },
        "item": {
          "id": "4868ce8e-d14f-4ce7-908c-5399b2fa10ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9b95abd6-75ae-4436-9fc3-ce1441351879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a73589-43dc-48d9-aa73-b07c878fbc6f",
        "cursor": {
          "ref": "b4366aa2-e51d-4e23-8c65-0f6d414c5930",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a98278ad-01f1-4c80-a69c-a925bdee214c"
        },
        "item": {
          "id": "01a73589-43dc-48d9-aa73-b07c878fbc6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a1f53db-1d16-45e4-a61a-b1f7a33dc5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd392f99-2efc-484f-aabd-fe00dfc64930",
        "cursor": {
          "ref": "8cc97030-831a-4b54-93ed-90be85643b4d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cafd8ab8-8499-4779-b78b-24fb7b2543a0"
        },
        "item": {
          "id": "fd392f99-2efc-484f-aabd-fe00dfc64930",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "339fcd24-7a9b-41db-8b4a-6345679b6620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4b1066-8603-4e07-b5db-8a2e74311726",
        "cursor": {
          "ref": "55d0f840-caf9-48af-bdf3-48a2b63aa341",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f0ec14d3-0bc6-4f88-b6d1-1509739fad1e"
        },
        "item": {
          "id": "7a4b1066-8603-4e07-b5db-8a2e74311726",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7dc6e755-a1a6-4e34-adef-17ff99296aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe23235d-0501-4c8e-9a16-1cfbae860278",
        "cursor": {
          "ref": "7b5b7706-0c31-495c-b01b-1be787a05f4d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bfdd491f-5035-4983-b6bd-53e0a829a5c8"
        },
        "item": {
          "id": "fe23235d-0501-4c8e-9a16-1cfbae860278",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb1753e9-8eef-4de2-a1fa-c9f6934a68fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc34c93-8652-4512-bb8f-e7d841050cf1",
        "cursor": {
          "ref": "b9c779f0-7652-4b77-8d91-06973acf7d8d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "059ec14d-c522-45b6-8b50-d193acd998c7"
        },
        "item": {
          "id": "9cc34c93-8652-4512-bb8f-e7d841050cf1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33356339-a7dc-4081-a9ce-c9e1606fde7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889127ab-76ff-4070-91f3-21a499e9998b",
        "cursor": {
          "ref": "fba3ed90-6812-4866-90af-26cfbe7461e5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "41cc575b-0a53-4d88-8afe-2b68c8c56afc"
        },
        "item": {
          "id": "889127ab-76ff-4070-91f3-21a499e9998b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f6373bb-2726-499e-8166-106cb24b5778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c5bcb1-67e8-4436-a033-9efdd4cdb586",
        "cursor": {
          "ref": "0bffa5ae-d651-46e8-b810-c10af23a6baa",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "49642a8e-6c8f-4ec3-ae2a-4c4446a17357"
        },
        "item": {
          "id": "a9c5bcb1-67e8-4436-a033-9efdd4cdb586",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89ddb7ae-fb50-4d48-9d7d-4f8b2e45bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d426c-2a9f-4b83-a80e-b364fa92abf5",
        "cursor": {
          "ref": "19aef27d-c4d3-439e-aec7-6f56a0d30496",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a878af4-6458-4288-8f1e-e823296b6453"
        },
        "item": {
          "id": "010d426c-2a9f-4b83-a80e-b364fa92abf5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "338dd201-8144-4a7a-9bcb-98619546da20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d41e2-df97-4fa5-9a9d-ce47de42aae7",
        "cursor": {
          "ref": "072d20ae-6f3a-47c0-91d1-41b6399d96f5",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3b833f68-aa79-4dc9-aea0-4dc318f7b9c3"
        },
        "item": {
          "id": "893d41e2-df97-4fa5-9a9d-ce47de42aae7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2e7110a1-41a8-4549-8280-4e8adc77b666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e788f6-3e81-4234-a7d7-00dc71fe63ad",
        "cursor": {
          "ref": "ee9c9ebb-d670-4365-8c91-d7048c3ac68e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "270797ad-4280-40c3-85cc-c2d0ebc14a45"
        },
        "item": {
          "id": "79e788f6-3e81-4234-a7d7-00dc71fe63ad",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "59a38ae7-be02-435e-bbde-4abe371a6448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d58d03c-7ab6-4795-90cd-c56fd06c1770",
        "cursor": {
          "ref": "98b229aa-38db-488b-abd8-7e72e13b9a97",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a519614-083a-4d4f-b0ed-7708cc186fbc"
        },
        "item": {
          "id": "8d58d03c-7ab6-4795-90cd-c56fd06c1770",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "41385e75-0a16-44f6-b6fb-5941bac1d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c982c2-e36c-4844-8160-06e0e6987bb7",
        "cursor": {
          "ref": "b02edad8-1ddf-4d44-acce-2bb58441e979",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "067c893e-78be-4721-9bdc-9f03a7115b79"
        },
        "item": {
          "id": "98c982c2-e36c-4844-8160-06e0e6987bb7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "050f339c-1c85-4c6d-a02d-eb411f2ba361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89336bac-dde7-4f77-a424-7efad429b7c2",
        "cursor": {
          "ref": "bee7f3ad-28c5-47b5-b029-4d6b405ea431",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3bc4568-7276-4908-a2a1-2aab703c2d59"
        },
        "item": {
          "id": "89336bac-dde7-4f77-a424-7efad429b7c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "41834b7f-aad8-4c26-ae28-df7920c953cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c895c6e8-3416-47bb-a86c-9929e3426889",
        "cursor": {
          "ref": "fd8b57d7-3ebc-47d6-9e4d-d8361c768b86",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "67303d2c-aca3-48f0-98e2-5e11d4879483"
        },
        "item": {
          "id": "c895c6e8-3416-47bb-a86c-9929e3426889",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d3ae77a6-d2b9-42a5-8e49-0f2c8c499cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddb0248-45ac-40e7-a1ef-95be55329b2f",
        "cursor": {
          "ref": "d34b325e-5964-4d9b-af0d-81ef34347db6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c9bd30dd-39d6-4b5c-909c-bdf5d7e6113e"
        },
        "item": {
          "id": "1ddb0248-45ac-40e7-a1ef-95be55329b2f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6034954b-5d36-49ac-83f8-ec7aee87bbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd879a0-3e43-47e1-83b6-0c3901250259",
        "cursor": {
          "ref": "5bac52e1-31c0-48ea-b6f9-a870e2a834b0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "519c93de-e7d3-45cf-8426-c8e496625a08"
        },
        "item": {
          "id": "7dd879a0-3e43-47e1-83b6-0c3901250259",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7a8a37cb-019b-4613-b5bc-348267ebef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d99db1-9833-4d0d-b928-bf7c84779d4a",
        "cursor": {
          "ref": "20ec49cd-9300-4ea4-852d-739a93b7647f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a938edd-66ff-4ec7-90be-24ed905dc97f"
        },
        "item": {
          "id": "95d99db1-9833-4d0d-b928-bf7c84779d4a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "badfa0b4-4752-4b18-8e71-16ca077b0bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5858cd8c-d71e-42e7-af38-8f58fde43d02",
        "cursor": {
          "ref": "1479ae5f-fb35-457a-8214-9e759d117462",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e15af55b-35d1-4def-9627-5edefda3964d"
        },
        "item": {
          "id": "5858cd8c-d71e-42e7-af38-8f58fde43d02",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7e64576-2e99-4ee2-9d6c-7aa5b2af5d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eafc4bd-1b0d-4fbd-af44-a76197ec7106",
        "cursor": {
          "ref": "ffa22e0c-5a9b-4331-8521-f39c1b0f9dc4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8496f396-e6bf-4e2b-8852-0ec0bc2fadf8"
        },
        "item": {
          "id": "4eafc4bd-1b0d-4fbd-af44-a76197ec7106",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2c989efb-f708-4f14-99d7-fc844adb7203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c9044-7761-41cd-8765-a338b152be3d",
        "cursor": {
          "ref": "208c226b-5632-4e1b-8dee-0ff30b6bd3b2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "79bdb6a5-098c-4c51-9d42-a9de10654b07"
        },
        "item": {
          "id": "964c9044-7761-41cd-8765-a338b152be3d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6062843b-33c4-4f06-a364-77be44751aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e0e339-3bc4-48b1-820e-2e18b9594828",
        "cursor": {
          "ref": "8a8ea37c-0ae6-4671-ae34-a32015035207",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6e855ad7-cec7-4219-8356-9a27a98ab440"
        },
        "item": {
          "id": "25e0e339-3bc4-48b1-820e-2e18b9594828",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f32675b7-83b2-4dd7-933e-13cbb3992a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddd7f54-feb0-405a-ade1-8e7fedf0ea35",
        "cursor": {
          "ref": "c3c80ded-5787-4212-8b4e-5fa0575269ab",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ba4e6255-2d3d-4a15-ab32-0a0f556cdb2f"
        },
        "item": {
          "id": "bddd7f54-feb0-405a-ade1-8e7fedf0ea35",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c4b01313-c29a-4295-a548-fa26db038920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83bd80a-37c8-4580-b52c-217337188ddf",
        "cursor": {
          "ref": "1336f3ef-2e0d-4ff1-b4ff-2a335a0b9b46",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "615c11f6-de27-43fd-87b8-efa70adcdcad"
        },
        "item": {
          "id": "c83bd80a-37c8-4580-b52c-217337188ddf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3184d989-141b-44a2-8363-34151da2feef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5250ed7b-5d38-4df0-ab41-db1305a5dcf7",
        "cursor": {
          "ref": "7ffa53a5-f5d7-434e-9502-c3834f9d61e6",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8a4559ec-e2ff-4739-acf8-605d8d586cb4"
        },
        "item": {
          "id": "5250ed7b-5d38-4df0-ab41-db1305a5dcf7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f856d4a5-72dc-40ae-b5e2-ac0209032857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a72c733-fb0b-40a5-9e41-f2376c14d371",
        "cursor": {
          "ref": "644433d0-81bc-40e9-84e3-27aad6b3d5c8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3cf12d02-6eec-423d-aab2-b4b1182e08c4"
        },
        "item": {
          "id": "8a72c733-fb0b-40a5-9e41-f2376c14d371",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80b8eab1-a49e-472c-b556-7832faef5205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9cca44-662e-46cb-88fa-fe12c200f350",
        "cursor": {
          "ref": "92ac6050-a257-4e55-a2d3-d998f387bc72",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab8d6365-5f9f-4c2b-bda1-892dbbec1a5e"
        },
        "item": {
          "id": "fd9cca44-662e-46cb-88fa-fe12c200f350",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e88735e7-e3f7-44dd-b0fb-9ca3b1571c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450840aa-d5b2-42f3-b325-827ff182881c",
        "cursor": {
          "ref": "b372d980-fd34-475e-aa08-5c934543e360",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a9d5df95-d46f-4e9d-a95b-dac1cfb26ff9"
        },
        "item": {
          "id": "450840aa-d5b2-42f3-b325-827ff182881c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f9d05629-65c3-40b3-b3c9-4bde96e0a866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5123956d-3a53-4e7a-83fe-9fcc838b2cc8",
        "cursor": {
          "ref": "e8224e12-8773-427e-aa20-f6c6f735cf01",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c088383-6dd6-461b-973b-fe0c50e69a45"
        },
        "item": {
          "id": "5123956d-3a53-4e7a-83fe-9fcc838b2cc8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8054b744-01d5-4213-b5a5-5f3cc213f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f1851-4afe-4cc5-9f74-87d2f843f50e",
        "cursor": {
          "ref": "f6094f04-e750-4d84-8ece-b0f07759a288",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9a2977df-d39d-4e82-8e74-551239828c82"
        },
        "item": {
          "id": "c49f1851-4afe-4cc5-9f74-87d2f843f50e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65b8add3-32b8-47b9-878a-b211c3c68a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bee47b-655a-4c75-8b4f-3927b5ff3e94",
        "cursor": {
          "ref": "bf68d9b3-bde5-4f71-a6d6-5ae79e55c17f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f286e43c-3b8c-411d-9ce4-95500b8af795"
        },
        "item": {
          "id": "26bee47b-655a-4c75-8b4f-3927b5ff3e94",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5dcd9d7f-4c33-4b3b-a59e-47f224db7b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4090bd2-27d1-4c7b-bf2e-38614ef6abe9",
        "cursor": {
          "ref": "4d91872e-875e-40a7-8410-63cbadc5d067",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2f366ec6-6621-4593-9291-114107575eef"
        },
        "item": {
          "id": "c4090bd2-27d1-4c7b-bf2e-38614ef6abe9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8b67e6fa-d8c6-4060-a64c-2584b30f8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad620db9-ed99-4f23-892f-0d2a50d9fea2",
        "cursor": {
          "ref": "c9ea8e16-5bd0-4b4b-9451-acd32f5ced9b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eccec051-cdd8-49b7-a385-679c1d2fecab"
        },
        "item": {
          "id": "ad620db9-ed99-4f23-892f-0d2a50d9fea2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b41426e1-392e-4dd7-9b9f-59e0a7c00126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154f4f1-61bc-412f-a485-1d4276f38edd",
        "cursor": {
          "ref": "b29d3751-4694-4667-8972-aba69c93aa23",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bcbd697b-074c-41c6-a236-a7441f3658ab"
        },
        "item": {
          "id": "d154f4f1-61bc-412f-a485-1d4276f38edd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f32fa15f-8977-45c0-aaae-d6e09998cf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948714be-242d-4c0e-a836-405dcf7d03fd",
        "cursor": {
          "ref": "69a5673a-ddfc-4b6b-a044-8dfe61b0d473",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a439b41-3e01-4148-984e-63e1d2a09214"
        },
        "item": {
          "id": "948714be-242d-4c0e-a836-405dcf7d03fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8fd73c79-efbe-48df-a6d4-160170c7619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eef04ce-b2ce-4592-8108-c004b26e590c",
        "cursor": {
          "ref": "e4a59639-2ff3-44a5-84a4-b1b7d48099cd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3aed567c-9394-4831-8c1b-e379c729c0ed"
        },
        "item": {
          "id": "6eef04ce-b2ce-4592-8108-c004b26e590c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2d01441d-6a53-4df5-8f10-fd005be59eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d97c47e-0522-49f7-be66-143a00430321",
        "cursor": {
          "ref": "7e6de210-58f3-490a-80b6-453aceb66158",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4fdf9ca-b635-418d-b769-b63a763f1227"
        },
        "item": {
          "id": "0d97c47e-0522-49f7-be66-143a00430321",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46180ea4-ff5b-4819-b300-00c27e665a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c4680e-242e-4c16-8d4b-1088365826ad",
        "cursor": {
          "ref": "734ad94d-6b0f-4a8a-aca8-2a5e44954e28",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95c06cbe-fd0e-4f12-b622-fe1e1ac8394c"
        },
        "item": {
          "id": "f5c4680e-242e-4c16-8d4b-1088365826ad",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b7bd885c-7640-4763-90d8-7e68d50f87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aac874-8360-41cf-9c17-e8071b2c7cfc",
        "cursor": {
          "ref": "1b19577e-467b-4c76-a537-fef6758e36d6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6008f9ee-1090-4900-8bf8-6640356b0164"
        },
        "item": {
          "id": "f5aac874-8360-41cf-9c17-e8071b2c7cfc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9a543b4d-de71-43fe-a00e-d90b4dc7c060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7f7679-5850-47a9-b82a-561069605612",
        "cursor": {
          "ref": "9af0c326-a29c-476a-84be-aa4f9973ca2e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "86482eb9-8caa-43c6-a279-ca97877989e6"
        },
        "item": {
          "id": "5c7f7679-5850-47a9-b82a-561069605612",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a11f1f6b-92ca-48f4-b09d-412ecdf35cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a5db09-0951-449a-a2e0-c101390f8040",
        "cursor": {
          "ref": "55830a7e-7072-4301-95ba-2c67b3ebd9ce",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "15ed091d-b54b-4d2d-afe3-c6cd3a614b03"
        },
        "item": {
          "id": "f4a5db09-0951-449a-a2e0-c101390f8040",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3898ef7d-6fb3-486b-8b91-3a417526366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7f0a9d-7d5f-497a-9bf7-e3214c4dd479",
        "cursor": {
          "ref": "0018dcc7-f13c-4ca1-8966-91f0bd1e7bec",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a6864ba8-66d0-44ed-a4de-9ac4c703d958"
        },
        "item": {
          "id": "eb7f0a9d-7d5f-497a-9bf7-e3214c4dd479",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b38d9e92-05cf-44c4-a80a-6cf289b34e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fefc19-f4b9-4709-8c53-f1a86044d95b",
        "cursor": {
          "ref": "80692456-86bc-43ea-aa3b-33888d3c1765",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9caac511-7a05-48cb-aa5e-7504b8b10f35"
        },
        "item": {
          "id": "98fefc19-f4b9-4709-8c53-f1a86044d95b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fd468e64-37e2-434e-9350-e156ac4f0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4199ae1-20b2-4fa6-8a13-dd29e194be64",
        "cursor": {
          "ref": "552bac53-e506-45da-b479-dc4843f6f5ac",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d0e211a3-079f-4b4d-b810-555dfe649b1a"
        },
        "item": {
          "id": "c4199ae1-20b2-4fa6-8a13-dd29e194be64",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6f482c08-1b6b-4708-92a5-74228096fcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968e3534-25c9-48a1-90d9-592848440c14",
        "cursor": {
          "ref": "ed7f16d2-baa2-41b5-bc08-b8b1fe795e36",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3a0a01e4-3ac2-4e0e-98b8-550a7dbac94a"
        },
        "item": {
          "id": "968e3534-25c9-48a1-90d9-592848440c14",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "100d63f7-e1fc-48f2-91c3-5d25688d3a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d75a01b-6afb-4ca6-a72d-f744a0d51ce5",
        "cursor": {
          "ref": "692dd8f9-cb82-4dd3-a337-1e95c90f2469",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "10e40b8c-6191-464d-a05d-bacf11a0af7e"
        },
        "item": {
          "id": "4d75a01b-6afb-4ca6-a72d-f744a0d51ce5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7c2a2ece-eb71-4845-b702-c0a2f16a1b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb95e7-3e04-4617-af82-960bc5e070f6",
        "cursor": {
          "ref": "1adad00b-6854-4d4d-ba8a-89fbd99ba79f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dc68163f-4570-40d5-b492-d16d43e6d6de"
        },
        "item": {
          "id": "eacb95e7-3e04-4617-af82-960bc5e070f6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "48b15600-5b8d-476c-972a-9150a7293e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f069992-7b61-4511-be4b-735dcc50ac47",
        "cursor": {
          "ref": "cff5e91e-fe14-422f-a28d-147c9d44afc6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ced3084f-67d6-4d51-9351-3937f22098a4"
        },
        "item": {
          "id": "6f069992-7b61-4511-be4b-735dcc50ac47",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3d464822-f67d-4973-b62d-80f9486c177f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72be91fe-1780-4019-9d58-db2226c18e9a",
        "cursor": {
          "ref": "a5227d19-cca4-494f-b188-f9f6d6c58b74",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b9151ff9-c4c1-4fd5-b1f3-ed0da290e012"
        },
        "item": {
          "id": "72be91fe-1780-4019-9d58-db2226c18e9a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f98983f-769d-4396-993d-eb5b1e0deb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff8269f-fca9-4e05-9d61-3ef06e515732",
        "cursor": {
          "ref": "7f470818-c90a-44c5-a685-08646ffb3f2a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8b1c9a91-8c5f-4d85-adfb-c402894f861e"
        },
        "item": {
          "id": "9ff8269f-fca9-4e05-9d61-3ef06e515732",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21f1ffbf-e7ae-4aff-8152-c6f96c8c21b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612264d7-5f76-4d0b-99e4-90dc3c711fcc",
        "cursor": {
          "ref": "c4c9ee18-d59b-4439-8fba-d8177635d359",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "24c23ade-3cd8-4bfb-831b-f818aab9ad62"
        },
        "item": {
          "id": "612264d7-5f76-4d0b-99e4-90dc3c711fcc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f37f0d08-6f75-41ba-8962-eec0ae15ef3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4ba439-94b7-4c56-9dac-4ae756770229",
        "cursor": {
          "ref": "a3e853cb-675f-4c0f-98f8-a9d85725469a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "055c175e-6d05-44e8-99a1-d050fa4bc855"
        },
        "item": {
          "id": "ae4ba439-94b7-4c56-9dac-4ae756770229",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "195abf5f-e425-47ac-8d0f-c29b6f5fd174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a063195d-fcb4-42c9-95cd-04cce3b1654f",
        "cursor": {
          "ref": "655c944b-55d9-45ff-a392-d0c501983933",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "60c7e2ae-e6d8-4b6e-b61b-f45f68782201"
        },
        "item": {
          "id": "a063195d-fcb4-42c9-95cd-04cce3b1654f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a15d959c-3fe6-46a3-9089-50b313ce98b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247d81d6-e4c5-4dc3-acda-5a8c066b22b8",
        "cursor": {
          "ref": "e4c5d82f-f853-4354-ace3-ecf0a1e15f89",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35029d1b-71e9-4fb9-88a9-adbd0363f703"
        },
        "item": {
          "id": "247d81d6-e4c5-4dc3-acda-5a8c066b22b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2fcfd65e-50b2-4b3a-a894-8b110118cb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0b18b-cc33-4ee2-9d79-120781b7d1b6",
        "cursor": {
          "ref": "c4f68952-98a7-4313-9e03-191d7af24eb1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c7039f27-ab11-4e22-a552-47b29341fd8c"
        },
        "item": {
          "id": "dde0b18b-cc33-4ee2-9d79-120781b7d1b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "530b4570-a98b-4834-89be-7e22ce3a62b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a81d057-530f-4387-83b1-480c7248bcab",
        "cursor": {
          "ref": "e024ca8b-9c86-4ebe-85fe-86e6d3283870",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43b6d644-99c6-4b7c-9aa7-97b811b8d443"
        },
        "item": {
          "id": "9a81d057-530f-4387-83b1-480c7248bcab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1bfadc16-b96b-49a4-b840-35571b8b81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ee3d6c-ffab-4e10-84ba-4109f2bc635c",
        "cursor": {
          "ref": "540e1116-d828-4366-9ad7-3b19b7695dad",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "20e5db35-37f6-4acf-b6be-00d950419aa3"
        },
        "item": {
          "id": "e1ee3d6c-ffab-4e10-84ba-4109f2bc635c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce2ee91d-55eb-4b5d-868d-9c26d2df6d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbdbca9-92fe-4ec2-89e6-6eac530ed50f",
        "cursor": {
          "ref": "8cba8c3b-71e7-485d-ad84-b653dfa028d6",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "76fbe467-b36c-4fe2-bdc6-f6fe07586470"
        },
        "item": {
          "id": "6dbdbca9-92fe-4ec2-89e6-6eac530ed50f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b7bbd5c2-49a4-4497-b755-82e412fac35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d9b65-47d1-465b-9b4d-149bd0bfb38d",
        "cursor": {
          "ref": "ff593f06-9cde-4f18-a1e6-dde78dba6e39",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cd445f8c-4ecb-4948-babb-85bf7c6f16bf"
        },
        "item": {
          "id": "182d9b65-47d1-465b-9b4d-149bd0bfb38d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a12f616e-bc2f-4149-a91d-6d35e285de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6335ae6f-51da-406e-8ba4-b9e0de55b722",
        "cursor": {
          "ref": "ed3afbd7-db89-4d94-991b-a59a7284cc3e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bc084d50-8af8-44a8-b357-ac02c34bd1df"
        },
        "item": {
          "id": "6335ae6f-51da-406e-8ba4-b9e0de55b722",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "07c58995-87fb-4a35-8615-7ceeb3413c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24660237-ae45-4146-934b-3ea5264ed50f",
        "cursor": {
          "ref": "3bb5080f-bff2-4d70-8237-4a1131bd3081",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5325bef8-f721-4c4a-ad1b-c0389159c0ac"
        },
        "item": {
          "id": "24660237-ae45-4146-934b-3ea5264ed50f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d2a889e-6826-432c-b5ff-a7cd6d87f839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22872d5b-7521-41c9-9d9f-75e2e9a2cde2",
        "cursor": {
          "ref": "46dcb29b-95b8-4260-be31-ac8208a7b6f4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ecbfc76-f2a0-4abe-bab9-8206ac614d4b"
        },
        "item": {
          "id": "22872d5b-7521-41c9-9d9f-75e2e9a2cde2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f2e06822-ad3d-47a7-957c-3446945085fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d831b19b-be10-416e-ad56-ba4a7050a2c9",
        "cursor": {
          "ref": "d1b4aca4-f5cb-4207-a61b-e918d2004133",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da54e8ba-4dd6-474e-bbf6-6df0e9a95028"
        },
        "item": {
          "id": "d831b19b-be10-416e-ad56-ba4a7050a2c9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f29d6278-1d5c-461c-a411-cbb0dcd16552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd81bdc-9bf7-4854-ba41-ad4a5d33caa6",
        "cursor": {
          "ref": "5e6ae607-5d32-447a-8ecd-b968344d0e59",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "46502eaf-b954-4846-941a-f4b17cf12701"
        },
        "item": {
          "id": "3dd81bdc-9bf7-4854-ba41-ad4a5d33caa6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "94e8b4b2-db5a-4308-b08f-3bc96c3858d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4701c413-236b-45e1-bcb1-a7f5b176ec4c",
        "cursor": {
          "ref": "0aa3e90c-6a4e-4c96-8b96-c2314e4ab0a5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26c6eb9e-31ed-4376-9332-0bc27c4909fe"
        },
        "item": {
          "id": "4701c413-236b-45e1-bcb1-a7f5b176ec4c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5c37bc4b-9b50-4efc-90a7-9849b30015aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af031046-e6b3-4e95-a231-ac3cd3ac9a99",
        "cursor": {
          "ref": "fec4699c-4359-49d4-aff7-510b8712ba56",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "736a4f91-c297-42c2-82df-4b3face13e4c"
        },
        "item": {
          "id": "af031046-e6b3-4e95-a231-ac3cd3ac9a99",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f34ce912-e91a-4dad-bbec-3aac44551a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7e2939-70fd-44f8-b5ad-3890c19a7b79",
        "cursor": {
          "ref": "bd87892d-787f-4258-8cf0-e3e0b1bd94aa",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bbf55e56-de06-487c-95d3-6251acf1ec00"
        },
        "item": {
          "id": "bf7e2939-70fd-44f8-b5ad-3890c19a7b79",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a8d4a0a2-8307-41c0-b0a2-e66860b65e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fd72d9-cd57-4876-9c4d-5a1a5d5df8e3",
        "cursor": {
          "ref": "b8a9872e-659f-4a6f-bc84-be57f5b46c9a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdbf2516-e35b-4e00-b74b-618fd8bdce08"
        },
        "item": {
          "id": "a9fd72d9-cd57-4876-9c4d-5a1a5d5df8e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea19ca48-d6e9-40f4-8977-f18bc8d5d905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2562854-fd29-48b4-85de-4a881605dcad",
        "cursor": {
          "ref": "bd5fc5a8-405f-4165-9c92-524ca333729a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a46b7175-4095-49c8-887b-88f6488b6c69"
        },
        "item": {
          "id": "e2562854-fd29-48b4-85de-4a881605dcad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0ce6439e-36b2-4b1d-a4e7-b391820115ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e780426-5fe2-417c-ab92-72cb4489e8b1",
        "cursor": {
          "ref": "8aa42ddb-b51b-4df7-b997-719bec5657dd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a83dc7e-e4e0-463d-a84a-4a270046d155"
        },
        "item": {
          "id": "6e780426-5fe2-417c-ab92-72cb4489e8b1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c38f5d28-0f04-4647-9a77-e80731eede89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c0758-fa07-4cdf-8586-01368235bbba",
        "cursor": {
          "ref": "e8c7135c-738b-4a61-8363-83300f26130f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d5bfa9d1-28f2-4702-b58a-ddb8812e078d"
        },
        "item": {
          "id": "fe5c0758-fa07-4cdf-8586-01368235bbba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e3899215-7c9b-44f0-a736-82b24a0129ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d02026-ee70-4b1a-b021-f1c3a5c147e8",
        "cursor": {
          "ref": "2165320d-2e60-4248-998e-8974ee698ce7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a065efb5-9ce5-42e8-8b14-17ee566c1294"
        },
        "item": {
          "id": "71d02026-ee70-4b1a-b021-f1c3a5c147e8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e809caee-1082-408c-a889-2cc6a524f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac13896c-729e-45fa-8218-3fdc0c7b1b73",
        "cursor": {
          "ref": "87a895bd-0d96-41e0-8ac9-13c5941f8dbd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9efdadc8-6418-49ac-98f9-621fe35282a2"
        },
        "item": {
          "id": "ac13896c-729e-45fa-8218-3fdc0c7b1b73",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "27870f23-18b3-49c9-8731-5f71f677eaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3134e68-3a9d-44f9-84e8-8a13ea864703",
        "cursor": {
          "ref": "7fa1041f-17ea-4ac1-989f-64ac6dc0dca4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0127897e-1d2e-43b0-93a4-3c491b53ad40"
        },
        "item": {
          "id": "f3134e68-3a9d-44f9-84e8-8a13ea864703",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a01dcfc9-58a9-4082-8808-afdb7110aff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9598ceae-cf53-4e6f-9cbe-71cf16d670a2",
        "cursor": {
          "ref": "7193d989-b073-4724-985a-9219dea9b1e0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1c36a28b-ac9f-4d5f-8a1e-2aad75581ca4"
        },
        "item": {
          "id": "9598ceae-cf53-4e6f-9cbe-71cf16d670a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "16fda9ae-8a2c-42cb-b1ff-035c6cd8c34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa60f45-4514-4374-ae47-d7bba8a373bd",
        "cursor": {
          "ref": "76d68a7e-5c51-44c3-900e-d2aeeb57633f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4865b065-a3c6-4625-9649-0c29f845cef5"
        },
        "item": {
          "id": "5aa60f45-4514-4374-ae47-d7bba8a373bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d3cd608a-b6ac-4a47-ba91-d0d4e30a569b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91236b92-18f4-42f4-82b1-54ec1b17b2b4",
        "cursor": {
          "ref": "cf40ff23-af32-427b-8f29-896ddf397ee8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7c257859-e11b-41f9-b1df-81f3fd2ddca6"
        },
        "item": {
          "id": "91236b92-18f4-42f4-82b1-54ec1b17b2b4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "419b0764-507d-4c09-b7aa-f812033b093f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf2173-c636-490d-9de4-8d64c4ba4956",
        "cursor": {
          "ref": "68c972e5-e6e8-4676-97d0-6396ebc312aa",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "24caee39-08c3-438e-992d-ff8d1c6805e9"
        },
        "item": {
          "id": "cccf2173-c636-490d-9de4-8d64c4ba4956",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8ed728ba-086d-424c-b411-80b22fa9d8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fb176d-83d9-4cc6-8fb1-383d3df26509",
        "cursor": {
          "ref": "1cc8d89f-3a0c-4db7-aac5-cb8da8b3ddd1",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2bc7c0a2-b37e-415c-88e5-10007f5b1266"
        },
        "item": {
          "id": "30fb176d-83d9-4cc6-8fb1-383d3df26509",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c5f2140c-42ac-4171-84b4-3d0786b90af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e6e5c3-75a8-495a-9eae-2687865fc883",
        "cursor": {
          "ref": "1295026c-d389-4b7f-85f5-4696e03a6fcb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "22d98827-9c9c-416a-a370-9dc4e30c3c38"
        },
        "item": {
          "id": "e8e6e5c3-75a8-495a-9eae-2687865fc883",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b01e6185-900a-4f20-9429-c47c5206b05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5938bba1-00b0-47af-b2b7-44829c5bbe2d",
        "cursor": {
          "ref": "74827d87-5724-4085-899f-ef74d7fac25b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0f947210-a83e-4b92-8944-10321ca0e9b1"
        },
        "item": {
          "id": "5938bba1-00b0-47af-b2b7-44829c5bbe2d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6e6eb1bd-c3ad-4764-ade6-6c401466a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a3d9f8-a8e3-4b3a-a08c-45d00c001b73",
        "cursor": {
          "ref": "6d169292-2b12-4d44-b321-c7453ed6222c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "27a040dc-dd86-4e9a-aa18-c0b9bcb48329"
        },
        "item": {
          "id": "05a3d9f8-a8e3-4b3a-a08c-45d00c001b73",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d4d6bbb4-2d98-4d91-9e8c-d9597f4e8af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb33d24-af1f-4d2a-bc15-86c6281e87df",
        "cursor": {
          "ref": "73f97eba-745f-4dec-93ed-c12ed90133a2",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "661b14e7-6709-41e7-a58b-1b224dbbb9d3"
        },
        "item": {
          "id": "ccb33d24-af1f-4d2a-bc15-86c6281e87df",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "583fee18-8006-4ece-8c93-138993a63efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0448b-55fd-4c06-8eca-b94beb5c3379",
        "cursor": {
          "ref": "5de74fad-e5ea-4d82-9e85-d92e3fe50d65",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "db23a969-90ef-4363-b1d2-5b3e15a68970"
        },
        "item": {
          "id": "06e0448b-55fd-4c06-8eca-b94beb5c3379",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "618317be-f39d-4b40-bf90-2af05a1cb92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0773b4-731e-4d18-8ad8-85b303028afb",
        "cursor": {
          "ref": "601aab7d-3a86-4363-b774-a6a452b94f28",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "befb1619-30d9-451c-bbde-f4768c653a79"
        },
        "item": {
          "id": "7d0773b4-731e-4d18-8ad8-85b303028afb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0c1697b-30c2-4101-9ade-e4b180994d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a45b405-89ce-4b55-9a9f-2abed77d8e4e",
        "cursor": {
          "ref": "de8d00a6-4ea6-4f06-ab76-f30085e248b9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "000cd8a1-49d8-4913-a156-f51dcc09bcfc"
        },
        "item": {
          "id": "0a45b405-89ce-4b55-9a9f-2abed77d8e4e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c2a71492-b87b-4469-bc06-678f972d019e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48676c7f-76eb-4dfd-a630-2a8f80ae51af",
        "cursor": {
          "ref": "24830e29-133d-4362-ae95-888c0afa0239",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "14260964-927d-4d52-aed7-92630f347ca8"
        },
        "item": {
          "id": "48676c7f-76eb-4dfd-a630-2a8f80ae51af",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b1141010-c46a-4082-967c-58b182141870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753dc88-754b-48e3-8fdc-b979ac1d67f7",
        "cursor": {
          "ref": "76ef5253-bcc7-4b3e-8ba9-25f220985696",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa277cbf-98a7-4ab1-8c01-3ae5ad1f996e"
        },
        "item": {
          "id": "6753dc88-754b-48e3-8fdc-b979ac1d67f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25e1e2ff-7967-4689-8bf7-1fa8e911daff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713cfdc7-bafa-4250-8cfb-a86ee5e22a07",
        "cursor": {
          "ref": "2309eba9-7cfe-440a-9e15-ea75fcc924fb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a657ab55-bc4c-46bb-9c0c-7e0b73b7c86c"
        },
        "item": {
          "id": "713cfdc7-bafa-4250-8cfb-a86ee5e22a07",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f5f4de9-b1ae-4f4c-a13f-67be2c2ce145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "006a7875-4455-4cce-8cc5-b48fab71a644",
        "cursor": {
          "ref": "f4260848-6060-48bb-b980-86792124d73f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83315da7-16a3-448c-91db-0d6f2afca913"
        },
        "item": {
          "id": "006a7875-4455-4cce-8cc5-b48fab71a644",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "28d84efd-1039-4298-a707-4013dab3f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "07ff4cdc-6ad5-4b05-918b-a623cf6803e2",
        "cursor": {
          "ref": "ae5a4e2c-9cd7-4a3b-8c58-fae70cd2f21a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6c730745-573c-408c-a71b-a513396a4fd8"
        },
        "item": {
          "id": "07ff4cdc-6ad5-4b05-918b-a623cf6803e2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d8b885bb-f387-4aa1-bb3b-5cae5ab37a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "23fac052-39ac-4ffa-adc4-4172abc47162",
        "cursor": {
          "ref": "0683b891-95f3-4675-90b8-b9b96cc810db",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccf66e8b-707b-4efc-819f-0ed8ca08eb32"
        },
        "item": {
          "id": "23fac052-39ac-4ffa-adc4-4172abc47162",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b1712b0-2dfc-4a9d-a23f-878ac4251b5f",
          "status": "Created",
          "code": 201,
          "responseTime": 6236,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ce4f6-73f2-4f13-9719-0d5a5edc1d9e",
        "cursor": {
          "ref": "6a4360d6-22bc-42e2-a117-bfd26c3cc7e2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "23aae7e7-28ee-4fd3-977a-7257e24d3a53"
        },
        "item": {
          "id": "e52ce4f6-73f2-4f13-9719-0d5a5edc1d9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a38516c6-be68-4c90-ac1b-6a507d1f9e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0513daf7-9525-48a7-ad3d-9f96c44d4340",
        "cursor": {
          "ref": "cfbd71bb-0275-4f6f-8cc4-f74c4c2ab848",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8017738-29e7-428f-bfe5-8c0b621b2e49"
        },
        "item": {
          "id": "0513daf7-9525-48a7-ad3d-9f96c44d4340",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b9f9598a-c8c7-4b91-a056-28447d581cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a998c9b5-e2ac-40f4-a9f9-6095131c2f70",
        "cursor": {
          "ref": "463870a5-4cd4-4b64-afdc-e74d5be8b1e8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5d509c23-5470-4d5b-b6fa-ce1c77e90919"
        },
        "item": {
          "id": "a998c9b5-e2ac-40f4-a9f9-6095131c2f70",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5638af6b-1ca6-4de8-b2f7-a76bc5a955f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9227df64-303b-486d-b411-302a3ccb709e",
        "cursor": {
          "ref": "812fab8b-9a19-462f-846e-9a473f23218f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "54fdba48-bc73-4450-8a32-50f0eac06b10"
        },
        "item": {
          "id": "9227df64-303b-486d-b411-302a3ccb709e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db078fae-f57d-4e2a-9763-08a66501aa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea40032f-970d-4a07-b3ea-d57651d61888",
        "cursor": {
          "ref": "405de7ad-7028-4232-93e9-66c323d8eb1c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e51cc76b-384f-46cc-a223-e3b069961ee6"
        },
        "item": {
          "id": "ea40032f-970d-4a07-b3ea-d57651d61888",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ec3a6b9-875b-4a40-9aaa-c4a361b91397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d399a10a-893c-4779-bdad-5b1ab4fd4494",
        "cursor": {
          "ref": "8eb7562e-2101-449a-a9dd-5e4a0a0f0dac",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "25ac7df9-fe58-4c77-bfc4-3664bd13cea9"
        },
        "item": {
          "id": "d399a10a-893c-4779-bdad-5b1ab4fd4494",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e605fae-f7d0-4597-8a89-e0c387279e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c702d797-0ec9-41f3-97a6-b1420d761aae",
        "cursor": {
          "ref": "8077c1b2-2b9a-4c30-8ddd-6f091dcdd948",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b44a52a-8991-484b-94bc-f6f2e15611c6"
        },
        "item": {
          "id": "c702d797-0ec9-41f3-97a6-b1420d761aae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "452c3757-e4d6-40c3-9b77-1792d278c283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a99a727-68d6-473b-abcd-39bac25ff8f6",
        "cursor": {
          "ref": "997c9b8e-9409-4c86-a91c-c2afe4f98093",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d38ab92b-65fa-418e-9a50-f0157667e775"
        },
        "item": {
          "id": "5a99a727-68d6-473b-abcd-39bac25ff8f6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69b87431-8bfc-44e1-bb04-9882cb672e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5e5a3e-0693-48d1-99ba-0c2d5f110837",
        "cursor": {
          "ref": "2b3478e6-baa2-4220-b2cd-a66cb32626e0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c82c7292-e438-49fe-add2-4237858fa0a3"
        },
        "item": {
          "id": "5b5e5a3e-0693-48d1-99ba-0c2d5f110837",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "63257f59-79ed-40ab-859b-a75d9acd718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c1874-3c0b-4188-b94e-b876c4acecd6",
        "cursor": {
          "ref": "24d4e5a0-ff7f-4b74-bc0b-930d5beb17af",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "709cc5b9-c322-4f92-9efd-d5aefd3b52c4"
        },
        "item": {
          "id": "712c1874-3c0b-4188-b94e-b876c4acecd6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5be2e585-c6f0-4c7f-ac85-f608bef78970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81431910-3ad9-4fd2-94ba-d07260443daf",
        "cursor": {
          "ref": "a93fde57-edc7-4e13-929e-86f5de290d71",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7f1244c1-6cd4-4e9c-9e68-dd03faa922d0"
        },
        "item": {
          "id": "81431910-3ad9-4fd2-94ba-d07260443daf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "854aaa68-d3e6-4440-a00d-5e078ddf06b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2761453c-a9ab-41f4-939b-35218de9ef2a",
        "cursor": {
          "ref": "d1c991f2-25fc-4f2a-afa0-0bcfdfe112b3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5063a5b7-f288-468e-baa0-a8ddb17fde56"
        },
        "item": {
          "id": "2761453c-a9ab-41f4-939b-35218de9ef2a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "586eb752-696c-4fc8-8caa-aa76a7ce09aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3741e648-6dac-43de-8b6e-3708d2656b40",
        "cursor": {
          "ref": "fc295530-91f5-4923-b8b1-985764919b6a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a226f25-4301-4155-a2c1-d8e69f76e837"
        },
        "item": {
          "id": "3741e648-6dac-43de-8b6e-3708d2656b40",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f31266db-5e1c-4d20-b319-e47417de8e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2486e70f-f0b6-4218-97d9-d2d96af7f490",
        "cursor": {
          "ref": "1ef6785b-d39e-4851-8dec-5e9cdd504f4f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c3ff5e2f-0257-41b6-825c-eaf09b77fe10"
        },
        "item": {
          "id": "2486e70f-f0b6-4218-97d9-d2d96af7f490",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d31a39d4-a947-4b34-860f-0a22eaa0fc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33fbe14-4e6e-4001-b27e-f9ccf14889e1",
        "cursor": {
          "ref": "ca7e5619-10f3-40ba-9cdb-cd327a34e474",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "995e4d6b-1e7a-4756-9736-61e241d56080"
        },
        "item": {
          "id": "b33fbe14-4e6e-4001-b27e-f9ccf14889e1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b60a4cfe-2ac5-4a5f-a8b6-5264c5ba6fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff569b65-7b73-4c48-922c-c58c1dd98640",
        "cursor": {
          "ref": "bc2b0d40-a1ba-4da1-bfca-df1b623926a9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "25bab21b-364d-4b8b-9e12-cd4d4a53bf67"
        },
        "item": {
          "id": "ff569b65-7b73-4c48-922c-c58c1dd98640",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b3391180-5298-48a4-9266-359fa2157529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6afe35-5b77-49b7-ab79-90adcc273317",
        "cursor": {
          "ref": "721fd4ad-3265-4869-8994-c957b817f6af",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b1c8324d-c170-4cfe-8e74-f4ba86158035"
        },
        "item": {
          "id": "5d6afe35-5b77-49b7-ab79-90adcc273317",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "16968d26-3d38-4ada-b8d3-4798ecbd8af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd4c65b-2d64-4e60-8979-1eff7b0d511f",
        "cursor": {
          "ref": "cd2409c2-8ca7-4f8a-b5cd-bce058ab3b4b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "635de099-da9a-4ace-baaa-99234f880224"
        },
        "item": {
          "id": "8dd4c65b-2d64-4e60-8979-1eff7b0d511f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28b61ab2-dc68-4f86-b360-96b449e261cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abf04c6-29eb-4041-b7dc-278cef19d365",
        "cursor": {
          "ref": "e96920b7-1bf2-495e-ad20-31123a4b01ee",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2ff1ef1d-b0ae-45a1-9999-04cc63ff6024"
        },
        "item": {
          "id": "1abf04c6-29eb-4041-b7dc-278cef19d365",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "866e6cf7-fc15-4a07-bab7-71787e171294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c812aa1-cf9a-4f99-9b3a-06706af4f66c",
        "cursor": {
          "ref": "24895031-6c07-4f01-a6c0-ec139350ca05",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2ff5c4e6-9b39-46e6-8175-f0fc761f3110"
        },
        "item": {
          "id": "4c812aa1-cf9a-4f99-9b3a-06706af4f66c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6eadf23-c3b1-48bb-a231-895a69aba7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a3578a-2921-4838-8534-55390dbdb429",
        "cursor": {
          "ref": "0f02a052-1163-446a-b985-8018d19b620c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c751dd81-a782-44fa-b632-51bd4108f1e3"
        },
        "item": {
          "id": "40a3578a-2921-4838-8534-55390dbdb429",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb2e1b0e-69ba-4206-b98f-db0cbfccbd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09bb4ce-dc71-42b7-b11e-5850fa87a2d6",
        "cursor": {
          "ref": "db64fab3-d371-46fa-a09c-687055d4b677",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e7fac93c-5d07-4c91-9b38-9281b02b0c59"
        },
        "item": {
          "id": "d09bb4ce-dc71-42b7-b11e-5850fa87a2d6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5bc256f7-071a-432e-bed3-a1c62de4d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5538ca75-49c3-4382-a95b-deb6909f1628",
        "cursor": {
          "ref": "79cd72c0-391a-4f1f-9fa1-a2a5f9beda1f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a17a683b-9398-447b-921a-937fb3e32f25"
        },
        "item": {
          "id": "5538ca75-49c3-4382-a95b-deb6909f1628",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "16c7121d-fab8-41ff-8268-92a319fb242e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08bae0d-ba15-470b-9428-337b1692455c",
        "cursor": {
          "ref": "019a0b1e-311d-4a86-abec-cab239d9a14e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "905d7444-89de-4a51-a62b-271e1260ff98"
        },
        "item": {
          "id": "d08bae0d-ba15-470b-9428-337b1692455c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b34751d8-63e1-4bea-98b9-3f365fe65461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71515136-84d3-49bd-949c-73d52a182510",
        "cursor": {
          "ref": "5a2c6b60-024d-4628-81b6-92fcc61e8652",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0c8a0895-8e1c-4a5a-bb56-bac091d07573"
        },
        "item": {
          "id": "71515136-84d3-49bd-949c-73d52a182510",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "536f87d5-578a-49d6-9482-8fed5d32a77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8048d2-8745-47df-be9f-361707a65295",
        "cursor": {
          "ref": "dfae8d90-b35d-4f93-994f-84a73508b1e7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "be0ad9ff-1967-4b2c-8eea-e44de36b7a21"
        },
        "item": {
          "id": "fd8048d2-8745-47df-be9f-361707a65295",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ca0335f1-ee96-4d6e-8ade-bff7eeb43225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bada787-8a29-405a-80f3-074e01821334",
        "cursor": {
          "ref": "5742f573-6e2c-45f4-819f-994d2e7499ce",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74fb9585-3119-4a5f-baca-4f50222fadf4"
        },
        "item": {
          "id": "6bada787-8a29-405a-80f3-074e01821334",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49d2379c-49a9-4f20-ad09-99c881250ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41014c55-8ca7-46b1-aae8-10536bcba817",
        "cursor": {
          "ref": "96bec1fa-7261-4b81-9f0b-0bcb20e0a773",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7d8a58b2-fb41-4657-a523-55a1f6032b6f"
        },
        "item": {
          "id": "41014c55-8ca7-46b1-aae8-10536bcba817",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d3e74b81-62fb-4d4c-8417-482871c62015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee0eb48-0a54-4450-8c55-98dbe76782cd",
        "cursor": {
          "ref": "91c4f022-fbbc-4831-9411-376e8a60675c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e726dbb5-ddd9-4e75-afeb-c5d20a7b0b0c"
        },
        "item": {
          "id": "8ee0eb48-0a54-4450-8c55-98dbe76782cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "887fa99b-0f03-42bf-903b-3d0efb5f9bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdc8d1f-7673-46c2-8d96-02a400e2a0c5",
        "cursor": {
          "ref": "04ecf7e0-0dcc-4118-9041-5faf8b8b0ca2",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e246395-fed5-428f-8988-dfaf9df9a257"
        },
        "item": {
          "id": "4fdc8d1f-7673-46c2-8d96-02a400e2a0c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d67549a5-c1e8-46bc-a2c7-7873758b1f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d122d5d0-2d93-47f6-acfc-89d5d97aa988",
        "cursor": {
          "ref": "09186907-26b3-4670-854f-78be49bb4dea",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "da770cba-d85f-4038-b147-ee2f2af1d4d5"
        },
        "item": {
          "id": "d122d5d0-2d93-47f6-acfc-89d5d97aa988",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1c6996ad-ec0a-41e0-8c43-b76eecd88451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441dc299-3c55-457a-91f5-122e3dd01667",
        "cursor": {
          "ref": "e33da9df-0eec-49b5-a31d-39cd9ba59f07",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "476d0e99-ad7a-46d9-9042-a7e895a5489c"
        },
        "item": {
          "id": "441dc299-3c55-457a-91f5-122e3dd01667",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e76302e8-c478-44c4-9cd6-ebea45e2ac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a9196b-b12e-4c16-bb42-27fd3ba9cc25",
        "cursor": {
          "ref": "a1ff286a-eb6c-4b5b-b3bd-73e0fae46d2b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2baf0986-e418-4ca6-9433-2c94dad144bc"
        },
        "item": {
          "id": "86a9196b-b12e-4c16-bb42-27fd3ba9cc25",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "539c7d6b-37bc-4c3d-9ee9-bb1d0806d2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3959fa-4cdd-425f-9eb1-440aec6390fe",
        "cursor": {
          "ref": "8a4511b0-240b-49f0-a17a-d622379df3d8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1375e43d-1330-4253-9990-01f8305232ef"
        },
        "item": {
          "id": "ec3959fa-4cdd-425f-9eb1-440aec6390fe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f079c50a-acf8-479a-b270-dc5ae025a16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b11c08-81d9-4c85-9802-840df1b197fb",
        "cursor": {
          "ref": "0e075806-a001-4286-92a5-c86c4627cb84",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "249d5061-ae02-4cc2-b22c-f304f3166efe"
        },
        "item": {
          "id": "e3b11c08-81d9-4c85-9802-840df1b197fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1e4e75b9-53fa-463d-980f-d25166cfa0d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608b7270-98c2-4f41-967e-1872a669c26c",
        "cursor": {
          "ref": "d0823661-792d-48da-870f-e4152d15c5e9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fec9c529-9df8-4ac6-9020-03227f8b6568"
        },
        "item": {
          "id": "608b7270-98c2-4f41-967e-1872a669c26c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e37735af-f380-42a3-9ebc-2085b0cb81bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969d6f3d-27e8-49a8-857a-deb9174c8a31",
        "cursor": {
          "ref": "fbdd2597-086d-4e75-ad71-438a8ae9d18a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2c9c879f-5460-4ab0-90e8-09f9f9e71ad3"
        },
        "item": {
          "id": "969d6f3d-27e8-49a8-857a-deb9174c8a31",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "28f35244-7ad4-40ad-806f-e4fd551b5e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4b5238-4e39-4510-8e9c-5f7b33a360cf",
        "cursor": {
          "ref": "13920bf6-94dd-40c7-974e-83bc184bbe00",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aa80e37e-ae20-456c-a6a7-cea8e8a84660"
        },
        "item": {
          "id": "fb4b5238-4e39-4510-8e9c-5f7b33a360cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "84c2930e-101e-4c99-8d05-92a4c1f22b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a6081a-45a7-4adc-80e2-c919bfb91851",
        "cursor": {
          "ref": "437fbfcc-8aae-474a-9f19-3ccfe9546199",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "20e3d0fb-97d7-4af3-bd1f-45e0badedb7c"
        },
        "item": {
          "id": "a9a6081a-45a7-4adc-80e2-c919bfb91851",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "86b6e501-4805-432b-a916-9b9607b35f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8490df18-ad1c-4ac5-bdc1-11c381ab6d35",
        "cursor": {
          "ref": "3f9427a4-7fd9-4ed9-8be3-2aaef4158d66",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0347f09c-93a4-4054-8df7-e1d864f3b93c"
        },
        "item": {
          "id": "8490df18-ad1c-4ac5-bdc1-11c381ab6d35",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c158ccac-53ca-4358-a5eb-65c43c960e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c4b099-3dbf-4e84-a6d1-a777f3b60f09",
        "cursor": {
          "ref": "fd7ad98b-7b65-4891-acfb-e3b5b2b53425",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7302c941-e0c4-4888-b690-e70ac3e83b99"
        },
        "item": {
          "id": "62c4b099-3dbf-4e84-a6d1-a777f3b60f09",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2eed2a88-a41f-47d1-9199-e9759ee3f374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733c7870-081b-4004-80b7-a3404839a42b",
        "cursor": {
          "ref": "4f169167-e779-4f24-be9c-c5d4c0c17bd7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "602fd543-5e0d-4965-b7ea-6badc7f33ac2"
        },
        "item": {
          "id": "733c7870-081b-4004-80b7-a3404839a42b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bc210b51-d6ad-4377-913a-2e67c7dfb7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a69e15-3929-42ee-a9b8-93c73851eba0",
        "cursor": {
          "ref": "a84205e0-8cc0-404f-87b0-07537e0b9c3c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "55afbf0f-f613-4d1a-9c4c-b7018d7a6b3f"
        },
        "item": {
          "id": "73a69e15-3929-42ee-a9b8-93c73851eba0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "38ff83d6-efed-4277-8291-debcfcb1713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcb2541-091c-437f-a8d0-7bb1cd532b49",
        "cursor": {
          "ref": "165c06cb-a3c8-4631-b040-2b4b3b2a2455",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "75187a29-ce5d-4896-9ecd-ffede5f31c55"
        },
        "item": {
          "id": "adcb2541-091c-437f-a8d0-7bb1cd532b49",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b523d909-a80f-4f7d-909c-fb79f2759db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10837c92-1362-42aa-b4cb-3f1fa76b92d0",
        "cursor": {
          "ref": "c6af9a3e-2bc1-476b-807a-d95a419d488a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "82f375ee-45bb-4cfa-bee4-883015dbaf1a"
        },
        "item": {
          "id": "10837c92-1362-42aa-b4cb-3f1fa76b92d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3cca8288-4b78-4d80-aa47-241f4e7215ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5d06da-39f0-48eb-9d63-8592fd92a0b9",
        "cursor": {
          "ref": "fac4c6e9-5874-4845-9acf-5ee91e494dae",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "52ebc525-3a8b-4142-bc6d-72e9349c7a2b"
        },
        "item": {
          "id": "3a5d06da-39f0-48eb-9d63-8592fd92a0b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f9b0425-bd5f-4505-a558-2d237300b962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9564ca3d-81a3-4c00-8fe6-4ec78a75cbd3",
        "cursor": {
          "ref": "c08bf93c-940d-4983-a70e-571493f53680",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "75ae4309-803d-4f46-a905-1b7665a676f8"
        },
        "item": {
          "id": "9564ca3d-81a3-4c00-8fe6-4ec78a75cbd3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77504d5f-db95-4e72-8555-95758884907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33998803-c432-498a-8f4f-2857bc134544",
        "cursor": {
          "ref": "064a06dd-8657-40a4-bf3f-280a5fa012db",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bc53d781-e719-46a9-a795-93f218c27f8a"
        },
        "item": {
          "id": "33998803-c432-498a-8f4f-2857bc134544",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "08cad0f8-0bf9-46fe-95f9-e102b0063ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bd1c43-0096-4806-ac41-5aa661c1c004",
        "cursor": {
          "ref": "ae377bce-7b2a-404b-9565-176d6eb56859",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7c0378dd-afac-4031-9d0f-bee6f8be529f"
        },
        "item": {
          "id": "01bd1c43-0096-4806-ac41-5aa661c1c004",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0387f112-a3f3-496f-aee4-c2fbc6ac1311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d63632f-8595-4de4-bbad-47f4c5676637",
        "cursor": {
          "ref": "71dfab5d-a96d-478d-b7a9-4a864c08164d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "92445a6e-581c-4eb1-9ce8-318cd50146bc"
        },
        "item": {
          "id": "4d63632f-8595-4de4-bbad-47f4c5676637",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc4a4871-fb06-4f31-901b-2163a168dcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3a3a97-c113-41b2-815e-c45e4115e793",
        "cursor": {
          "ref": "1637d009-399c-40a6-b004-e7943f094652",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "55978503-600a-4008-b049-e8ea0e5251dd"
        },
        "item": {
          "id": "3f3a3a97-c113-41b2-815e-c45e4115e793",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0777b3e6-419b-4d60-8d45-07ae56ca0842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f127c18f-f7bf-4e45-9db1-fda649027687",
        "cursor": {
          "ref": "ae8e7dd1-1b43-412f-9e1e-73c126b7d353",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "97fd1ac9-74ee-4306-b589-96797f7ca15b"
        },
        "item": {
          "id": "f127c18f-f7bf-4e45-9db1-fda649027687",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "433535ef-37d2-43b6-88a4-eb3751121e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716de33-9373-41f7-b5be-eaea7d380ff0",
        "cursor": {
          "ref": "515ee554-1649-4c94-b303-5d01a7bf07ed",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "55528be6-c132-4eb1-812f-252c968ad23d"
        },
        "item": {
          "id": "e716de33-9373-41f7-b5be-eaea7d380ff0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "272b52f6-73e3-4518-8306-9b381d4671ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66455e0e-a5d8-49ec-b68f-195936257415",
        "cursor": {
          "ref": "2229da55-a4f6-401f-9e97-4872a402803d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4f1af09a-de13-4c39-84bd-65e1c18b37dd"
        },
        "item": {
          "id": "66455e0e-a5d8-49ec-b68f-195936257415",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "942c611c-33ff-4682-aee0-ee65b3de1eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2791aa6-134f-48a8-9537-a18fac7d961d",
        "cursor": {
          "ref": "35451d4f-c1a8-4a70-8c2d-2bd361bf9d22",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d3b91090-21a6-41d6-88cd-220658553b85"
        },
        "item": {
          "id": "f2791aa6-134f-48a8-9537-a18fac7d961d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "50acdb7b-a740-46bb-9bf2-33d7e00acd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf756d0-7bfd-4a0d-8151-705360f61a74",
        "cursor": {
          "ref": "5362288f-0861-44c7-b6b2-195d7bbe668a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "383f34fa-cedc-4d46-9ec5-ab98627b1ea2"
        },
        "item": {
          "id": "3cf756d0-7bfd-4a0d-8151-705360f61a74",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5920bdef-6e6b-458c-886c-1bfb85e31243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a6a69-f8a9-471a-86cc-bc99950a964e",
        "cursor": {
          "ref": "0bb5f14d-ee02-4aaa-a433-8d888c1ec6b2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c4688653-9505-418a-bd72-0055affad2bc"
        },
        "item": {
          "id": "3b0a6a69-f8a9-471a-86cc-bc99950a964e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "39054e45-280e-41a6-951b-e840b5b4a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f17c03e-e8a1-4c9d-b90a-e07e133e5bbd",
        "cursor": {
          "ref": "61956fa8-e20c-44a9-81f6-54205d77e983",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5cb93085-1ce2-4fbc-8086-bdb0b4ac9a90"
        },
        "item": {
          "id": "1f17c03e-e8a1-4c9d-b90a-e07e133e5bbd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5db1f949-f575-4a86-bfc0-91c5ff63c125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c8184e-2600-4687-af95-0acf3ffbc0e9",
        "cursor": {
          "ref": "3002a009-cbb5-44c9-9a0a-1f177895f7ad",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0c1aa8f9-d8d3-45ea-911c-17cd23584d3a"
        },
        "item": {
          "id": "b2c8184e-2600-4687-af95-0acf3ffbc0e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "961fc3cc-8bc8-43fe-a2cc-b3d7cc8b4356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b6dd59-0400-4d8d-ad1f-879e235024a7",
        "cursor": {
          "ref": "52fb46c2-aa35-4b0b-9de8-f9e6bb856bb3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dbdbdc01-d1ca-4dd7-97e6-ac9f49a725b1"
        },
        "item": {
          "id": "87b6dd59-0400-4d8d-ad1f-879e235024a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1145a2eb-5b57-44aa-94a1-10a4269c9a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48327d78-c192-452a-9947-faefe388bcfe",
        "cursor": {
          "ref": "67321099-2717-4795-9e99-0f2563d7d717",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6f26a94f-2b1c-4759-9b27-c8b59a57b95b"
        },
        "item": {
          "id": "48327d78-c192-452a-9947-faefe388bcfe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "576b7855-75bd-47dc-b0f9-5182990ffbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc712b5-46c2-4285-b779-49a286e26a5e",
        "cursor": {
          "ref": "e3eacaaf-352b-4a9a-81ef-5db4e384ade9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "862b1116-e9a2-4200-b0cd-a3d78ca9d194"
        },
        "item": {
          "id": "6cc712b5-46c2-4285-b779-49a286e26a5e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba1e5098-24b3-4114-92dc-bb137c61a3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e99da6-c796-4138-ade1-1848f5c0bf39",
        "cursor": {
          "ref": "98fb78f2-628c-4fad-b00d-80d35b565ee1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "921c3311-f798-4222-a26a-49e5e50f2348"
        },
        "item": {
          "id": "15e99da6-c796-4138-ade1-1848f5c0bf39",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2cb5257-4dbf-496f-a272-f94637d6a627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee62e61-94d7-4d5f-930d-0608f5bfde86",
        "cursor": {
          "ref": "098901dd-eb5e-440d-85c6-d86845c574ed",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "351a438d-21d7-4813-af46-6ca9e57b86f3"
        },
        "item": {
          "id": "aee62e61-94d7-4d5f-930d-0608f5bfde86",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "88c84d6c-d65d-4d7d-a89a-9834eae8486a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be487d-2dec-493a-b340-6d717536c575",
        "cursor": {
          "ref": "facb2b42-ab37-41c7-bf19-b0496e215b63",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0749615e-c2c7-4d61-a044-3c4e095192a6"
        },
        "item": {
          "id": "81be487d-2dec-493a-b340-6d717536c575",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "126afedd-583d-4950-8a23-0ed7c5b4b6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51507ad3-3a78-4fcd-93bd-9e8799101239",
        "cursor": {
          "ref": "f9a42547-fc94-486c-adf6-3cd312fad640",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "49a350ad-0b24-4106-8e6a-43c75bd35a74"
        },
        "item": {
          "id": "51507ad3-3a78-4fcd-93bd-9e8799101239",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd4af41c-2165-4625-bd76-2717a1bf7c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3981d1a9-c70a-4d53-bb17-d5abf9e24b20",
        "cursor": {
          "ref": "01885cc5-884d-4f38-bf45-4622e458c7a3",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d8e85563-866d-494a-a8fa-29d36446a43a"
        },
        "item": {
          "id": "3981d1a9-c70a-4d53-bb17-d5abf9e24b20",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2c95a891-9d67-4612-bc37-e21cc9d152d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac8441f-eb8b-49a3-bb3b-4ad785e1048f",
        "cursor": {
          "ref": "779e0361-5bbf-4d8d-8535-152b3c71f2b8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4aba4655-b2c0-4977-bfc0-4a57ba88b730"
        },
        "item": {
          "id": "5ac8441f-eb8b-49a3-bb3b-4ad785e1048f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2ba9eba4-ca8c-4500-8c36-6da80c6df2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa12d0b-eb9c-4b0f-8fea-de2b7dde2ad1",
        "cursor": {
          "ref": "8cf7e422-4e41-4b2f-95cc-7cbc2e42b6b5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a2aaca7-b9d5-4788-9362-6760d089942b"
        },
        "item": {
          "id": "6fa12d0b-eb9c-4b0f-8fea-de2b7dde2ad1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "efb0138a-ba25-4db0-86b0-7d8014907140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ea555a-9f3f-426c-a69e-10ee49c51298",
        "cursor": {
          "ref": "3457c0b9-640d-4693-8278-44e485379184",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "127b64e7-dedf-45df-9352-66999f5e4618"
        },
        "item": {
          "id": "44ea555a-9f3f-426c-a69e-10ee49c51298",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e76ea3e0-869d-4307-b653-01ac197ab56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8464ae5f-bb26-40f2-abbd-73ebde680687",
        "cursor": {
          "ref": "13903800-9ca4-45ef-b4c1-bc848de24047",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6fa83559-2744-439b-9c42-c9e516a2a30a"
        },
        "item": {
          "id": "8464ae5f-bb26-40f2-abbd-73ebde680687",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e379e726-baa5-45d2-ab81-3b8bca5e49a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65aefb5-13a5-4888-9f17-319f6d47b5f8",
        "cursor": {
          "ref": "a53d8cea-753b-458f-9d86-b8a00cd3bdad",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "68b9c9f0-8b87-4ab7-9bc1-895963e7dcb0"
        },
        "item": {
          "id": "c65aefb5-13a5-4888-9f17-319f6d47b5f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d6ed3209-fe35-49d4-8e16-b40274e7a7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5578f-c64c-4218-9577-13a4ffcf645d",
        "cursor": {
          "ref": "ca6031e1-b30e-4332-a3e3-ebc9084e919f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f332a1e5-e419-4b4c-b09b-0388421668cb"
        },
        "item": {
          "id": "16c5578f-c64c-4218-9577-13a4ffcf645d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2caf4cd-b448-4b4b-a57d-0607726b1dd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f08ef79-3b69-4f5d-bee3-178273ee50e4",
        "cursor": {
          "ref": "af301c60-be94-450d-9259-b5a6b6656beb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7bb4f6ff-4ade-486e-9616-5a3e98c02408"
        },
        "item": {
          "id": "7f08ef79-3b69-4f5d-bee3-178273ee50e4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ca556fcd-e7ab-4545-87e7-c05dbe3fc9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d872fb4-88ea-42ba-bd34-c2bcb5dee15f",
        "cursor": {
          "ref": "a3d93e3e-ea6a-4fcd-880f-4c3c009a52b5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3e148bd9-8de9-47f2-8a40-400dd83a4cf4"
        },
        "item": {
          "id": "2d872fb4-88ea-42ba-bd34-c2bcb5dee15f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cc6b035c-9311-4928-9f15-56e485661b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d611ab-e546-4f43-b5e0-b0c0a6cf1096",
        "cursor": {
          "ref": "6d4ff189-6282-4ee6-b6e7-e47a328f5b5b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "307f1f58-3d2d-4750-8a9c-003e1c9b8faf"
        },
        "item": {
          "id": "44d611ab-e546-4f43-b5e0-b0c0a6cf1096",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b07f14c4-58c6-4aa8-9240-cc9e1330d7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70db2b60-2b5c-4856-8c57-81182e787821",
        "cursor": {
          "ref": "f1e57762-86ba-4891-9a9c-3e92aba13400",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a8a5dbd6-efac-421e-be0c-a500d245780a"
        },
        "item": {
          "id": "70db2b60-2b5c-4856-8c57-81182e787821",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85592a3d-a808-4b74-91fa-9ccd5af8934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da39fb-c987-4132-8c63-6c65de20d80c",
        "cursor": {
          "ref": "8d03580b-4d5c-4e2f-8a17-942f842ffa29",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7bf90029-0b66-42b8-9df6-74f056d10b60"
        },
        "item": {
          "id": "75da39fb-c987-4132-8c63-6c65de20d80c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d02b849-1636-4b59-9ea2-f2f1ac5239a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc3cb3-e4d6-43ad-9903-4c2ff341368d",
        "cursor": {
          "ref": "e20f9afd-c190-4704-bff5-34bf72cde701",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3495d40f-8bd3-453a-a603-2bb50d3a5296"
        },
        "item": {
          "id": "4edc3cb3-e4d6-43ad-9903-4c2ff341368d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6dd9692-ea15-4aab-99a6-5d080a427f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6b0786-82d8-479f-a99f-fdb1983fad4d",
        "cursor": {
          "ref": "23ee8a39-87de-42da-9654-2b4937dfb229",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f9e69011-8925-4c04-ac33-87f89df15266"
        },
        "item": {
          "id": "eb6b0786-82d8-479f-a99f-fdb1983fad4d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce6c2089-042a-46a6-a05e-e580f601cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a804b65-592f-4677-99fc-82ac4d9712e3",
        "cursor": {
          "ref": "b6d8e4e5-8d5e-4970-8b22-0de094adb774",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "39b1afb1-4162-46a9-a229-4ff4d3ccd91e"
        },
        "item": {
          "id": "6a804b65-592f-4677-99fc-82ac4d9712e3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b4875599-be2f-4eea-8bcc-ed610f168555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a005659-c859-4101-a274-c005feb27ad8",
        "cursor": {
          "ref": "de023b55-d3d1-4fc0-ba25-0bdef0d8d354",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35d31b9f-c3c3-40cc-8c86-ffd4510cf5a5"
        },
        "item": {
          "id": "0a005659-c859-4101-a274-c005feb27ad8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c80f1ced-9091-4810-8eb3-f447e0986794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9d0f2-5411-4e5f-8b63-519aefa4df1f",
        "cursor": {
          "ref": "db307b75-dde2-41a6-a991-dfd7becf8aee",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1d72d131-d5cb-4ac3-b94b-ffa4b44f81c6"
        },
        "item": {
          "id": "a2c9d0f2-5411-4e5f-8b63-519aefa4df1f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0e4c9b62-dd14-4dcf-bc0f-2912c9f218eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb80952-6c1c-4d62-8f3d-9b5931bb7882",
        "cursor": {
          "ref": "230c08f0-6243-4f81-bcd3-a027f78d188f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cef5f312-b328-4210-b97c-d6b499890a65"
        },
        "item": {
          "id": "ddb80952-6c1c-4d62-8f3d-9b5931bb7882",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "40a5f976-4644-4033-9395-f71c5dd4a2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9ddd18-9dcb-41ac-a528-3575fc6d678e",
        "cursor": {
          "ref": "8f9a7f6c-b3d8-4720-ac0c-a233315b1448",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dea0b59f-08c8-4d88-a2cb-0f8ba4d87503"
        },
        "item": {
          "id": "6a9ddd18-9dcb-41ac-a528-3575fc6d678e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "640339a2-86b6-4e1c-a66e-f4619451b695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db608a4a-a128-40ce-bc96-cb8589729ff7",
        "cursor": {
          "ref": "a7d51054-66e2-4bb9-a861-7501646c5173",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3f2d1bec-bdde-4824-a070-993f5cc9b5e9"
        },
        "item": {
          "id": "db608a4a-a128-40ce-bc96-cb8589729ff7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b00e129-8f85-4232-958e-568fd59673fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5fb57d-f23d-4cb5-8d4e-d9a9fbf8389e",
        "cursor": {
          "ref": "f2515440-dfa0-41e4-bc15-ff68d933d43c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "588b93b1-42ee-4e46-8314-020084e3d2a0"
        },
        "item": {
          "id": "ec5fb57d-f23d-4cb5-8d4e-d9a9fbf8389e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3c8bb8f8-e9ac-4bdc-834e-46f106ea16a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d7b097-936f-4d1d-a183-b51bac8dacf1",
        "cursor": {
          "ref": "d4845ed8-6a2a-4ad2-91b9-2e21ec1600e6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3ce8d36-35d8-4811-9922-a62def9724c0"
        },
        "item": {
          "id": "78d7b097-936f-4d1d-a183-b51bac8dacf1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14b745b2-863e-4c52-8a15-68c7075ba10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa6151-f4b4-4b63-9441-5725524f5820",
        "cursor": {
          "ref": "df514451-1d95-4cca-b176-b9e3bfeff2f8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8d770813-450a-452f-a425-1d4477c3ccd3"
        },
        "item": {
          "id": "d5aa6151-f4b4-4b63-9441-5725524f5820",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7c541d41-3d0a-4c2a-9401-c6707a1a84d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2ee941-d93c-4e46-98d0-01988006c8be",
        "cursor": {
          "ref": "bd49e1c9-08de-4bb7-b563-2a599c7af746",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "955a28d4-d4d5-466c-bad3-7cac474c81c8"
        },
        "item": {
          "id": "8d2ee941-d93c-4e46-98d0-01988006c8be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "076a81f3-f4c3-48cb-b541-f9376e9c5bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc3e54f-214c-45ed-9930-70fc1c45ae90",
        "cursor": {
          "ref": "80cf39d2-684d-43b6-9e28-013022a42e5f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b811222-de25-46ad-8d44-c5792e3b541f"
        },
        "item": {
          "id": "dcc3e54f-214c-45ed-9930-70fc1c45ae90",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "075b68a9-8428-42f2-971f-562e4cd0dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fb85d2-23c2-4985-b28a-85678d9f0902",
        "cursor": {
          "ref": "44775506-6af8-4895-bbe6-9eb05154e6b2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "22bcb3fb-bbd9-4a4a-bf17-e4ac5f50006e"
        },
        "item": {
          "id": "31fb85d2-23c2-4985-b28a-85678d9f0902",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "563cc8ec-3eef-4aef-9cf3-3a3c3c88d413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5638eb-5b0a-4b29-8809-ca987be733e3",
        "cursor": {
          "ref": "da73d483-a669-4c41-a116-7675d118b70d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c063eb3-120b-47e4-867d-3871513066f8"
        },
        "item": {
          "id": "ff5638eb-5b0a-4b29-8809-ca987be733e3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e6ca8e64-4ef6-4ac4-829a-8531488bd078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177db13b-04ac-4e5d-b566-81f21a48d59a",
        "cursor": {
          "ref": "319f8b5e-52f6-479e-ac67-66e1f7013450",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0efa85d6-2c4a-4bfa-a115-42dda79f9ac0"
        },
        "item": {
          "id": "177db13b-04ac-4e5d-b566-81f21a48d59a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03ad51d3-229c-46d5-8ebb-1784b4f97c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9c0399-26cf-4f5a-ae06-b0dd484934cc",
        "cursor": {
          "ref": "53012e9c-46ae-4dc4-ad44-c93b263e7908",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "371324ac-4600-4bdb-bdf8-63957e894d13"
        },
        "item": {
          "id": "ac9c0399-26cf-4f5a-ae06-b0dd484934cc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac95a977-589b-40f7-ac8d-0a638387ce86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7153cf0f-d8c9-497b-bff8-28f565d04d01",
        "cursor": {
          "ref": "9533c801-fade-454f-96e2-ae5aee34c19d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1c67f646-7da5-40d2-a514-910457b10a5d"
        },
        "item": {
          "id": "7153cf0f-d8c9-497b-bff8-28f565d04d01",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "08ea60d6-2475-4a7c-a7c8-bf0bb21a8f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fa7ee6-856c-448e-b30d-9c97f4b4e60f",
        "cursor": {
          "ref": "b5e85fc5-5e3c-492c-bf74-64c92574136f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "defe6cf1-82c0-4025-a175-55e601edc860"
        },
        "item": {
          "id": "f4fa7ee6-856c-448e-b30d-9c97f4b4e60f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15f91196-3cab-4d85-9b1d-4cbf26faacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a14823-ce45-463b-9a12-c58847d1df45",
        "cursor": {
          "ref": "8c03d4c1-2b37-4ad0-a2d8-037fed86ead0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1284e17c-17c8-4b15-b8ce-9778fd12f43b"
        },
        "item": {
          "id": "21a14823-ce45-463b-9a12-c58847d1df45",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62562070-480a-462b-aa3a-6391baea43dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4ee582-ed61-4822-9e9d-60e8b1adc784",
        "cursor": {
          "ref": "abead5b5-40e0-4c74-8435-99834f9d286d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "64771b36-1035-44a0-bb80-147628ef1c9a"
        },
        "item": {
          "id": "6d4ee582-ed61-4822-9e9d-60e8b1adc784",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "41161ef4-ab50-4b0f-aeec-194a603eb71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334c7d18-3d99-4cae-9ee2-b4c9380ce308",
        "cursor": {
          "ref": "d71123dd-3260-4b7b-9c56-74f3503bf442",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d95d458b-7ac8-4bf2-b555-7ed822df5a7c"
        },
        "item": {
          "id": "334c7d18-3d99-4cae-9ee2-b4c9380ce308",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef8dd55a-c650-44a9-aa7a-7a6f1467566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ee381-0772-495e-8981-382daa545f80",
        "cursor": {
          "ref": "38aac4fc-49f4-486a-b354-d7a13a285926",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b10e8876-fa37-4f2a-80ea-6d8e000fcb02"
        },
        "item": {
          "id": "d59ee381-0772-495e-8981-382daa545f80",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "13de2c3f-4bf2-4724-b45f-e849151c3dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade60f63-a3f5-43c9-8652-1f9c4341963a",
        "cursor": {
          "ref": "4f2bdb1f-9c06-4469-9882-92c50a5ef8d0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6cbadc9a-e69d-446a-8c70-ac1bc4cd84ed"
        },
        "item": {
          "id": "ade60f63-a3f5-43c9-8652-1f9c4341963a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cb9b9029-3189-4cdc-b1eb-711cf4334713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5145a7-d652-4349-8fa9-a1737ca8eb7b",
        "cursor": {
          "ref": "a437f9e7-7381-4010-8ccd-d6238be72d67",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1ce84d7-941a-4eab-9ed7-98444afe8dda"
        },
        "item": {
          "id": "4d5145a7-d652-4349-8fa9-a1737ca8eb7b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d9084ac2-e6ac-413b-9bfd-28277723c6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f68354-46ca-450e-a276-c67594e08098",
        "cursor": {
          "ref": "762e0657-bee5-43fe-9ffa-e5785296c82d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "38d7896a-a27f-45d7-bdd6-11aec0ab1cb8"
        },
        "item": {
          "id": "52f68354-46ca-450e-a276-c67594e08098",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "006fedb6-ef43-48d8-844d-286388aba3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb52ed1-7221-48dd-b6e3-7452f1ad9424",
        "cursor": {
          "ref": "2374fab3-6e87-491f-96b8-6edbf4104dac",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "91770b69-fa85-4775-9d4f-2b767f2230dd"
        },
        "item": {
          "id": "cbb52ed1-7221-48dd-b6e3-7452f1ad9424",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0cd37994-868c-48a3-92d0-6c5b41e24c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b119b797-09a7-4923-b5b5-072f461d4073",
        "cursor": {
          "ref": "c7f60709-f5b5-4356-af7e-58c47d3d56e6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4fe8450e-79ed-4a39-9771-06a087bc2987"
        },
        "item": {
          "id": "b119b797-09a7-4923-b5b5-072f461d4073",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "65784dc4-53fa-41f6-96f7-8066d44653bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1655847e-a5ef-4c70-b56a-d43ec8edbf3b",
        "cursor": {
          "ref": "cdc43702-aa7a-46d2-bab9-ad0e1e8bdc41",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f2c224fe-9347-471f-b127-832edbe19866"
        },
        "item": {
          "id": "1655847e-a5ef-4c70-b56a-d43ec8edbf3b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f3af6178-409c-4867-b0af-b9f7951d72e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2333333-e80e-4a1f-9270-06ad6584155e",
        "cursor": {
          "ref": "c3f21bfb-53b5-4ddc-bbcc-265a77e8ade9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "991c2bb8-26f4-4748-9d32-1cc852a2c1b3"
        },
        "item": {
          "id": "c2333333-e80e-4a1f-9270-06ad6584155e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "732c5ad3-2094-4eee-ad52-f7f8e61963c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a89f448-01f4-4ef4-91dd-9c24f4256697",
        "cursor": {
          "ref": "1e6d4b23-86a2-4cfa-a3ed-e3061b25c929",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e2ee6018-9811-4cb8-aa03-839898b241de"
        },
        "item": {
          "id": "8a89f448-01f4-4ef4-91dd-9c24f4256697",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "68114a3d-bb11-429e-b440-97360268cf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c3e4b-ec65-46e0-bc9f-09441d9c18a7",
        "cursor": {
          "ref": "8f81c09d-d4a6-41b0-8e45-0debe8b7defc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a51aaac5-434b-485a-a404-c84f2351e035"
        },
        "item": {
          "id": "784c3e4b-ec65-46e0-bc9f-09441d9c18a7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "522b5fcd-719b-4751-9437-44dec599a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57adc26d-beac-4514-b658-a2f0a37130ed",
        "cursor": {
          "ref": "7e6451f4-0a7c-4988-9882-5d9abe9197a9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c89a7699-5397-4cf5-b737-1f9bacef3f95"
        },
        "item": {
          "id": "57adc26d-beac-4514-b658-a2f0a37130ed",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d512d41c-d23e-44ec-b882-adaaa26404d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef8d827-9c83-4813-b858-a3633c93bb31",
        "cursor": {
          "ref": "48c59585-fbd3-40e2-b173-2f22e1658362",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "96d3cb1e-0bb4-4f96-a670-1ada3800ef0c"
        },
        "item": {
          "id": "aef8d827-9c83-4813-b858-a3633c93bb31",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9386e047-51b6-415f-8a2a-94b0f9ede19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7576d513-a22b-40dc-99c4-09b88697668a",
        "cursor": {
          "ref": "b30147da-50a2-43df-be47-7d16b51a48b2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25d99310-6f31-4d11-ab21-84fe9def538b"
        },
        "item": {
          "id": "7576d513-a22b-40dc-99c4-09b88697668a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7d5887d7-81de-4cf2-9193-8dfcf6c6c711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b638df-820c-40c4-bf96-0fc3df5bab81",
        "cursor": {
          "ref": "f8fc26d9-ebe8-4c48-859f-19cfa6a00de9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aa280ad8-39c1-4261-9ab4-30b02ba488ee"
        },
        "item": {
          "id": "f8b638df-820c-40c4-bf96-0fc3df5bab81",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20f491df-ea22-4a9f-a38b-4c6a749ab212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0365f25a-ca1d-4cf8-bb36-515ba81434aa",
        "cursor": {
          "ref": "5caa230a-99d6-4f29-af2b-9a477a55ec70",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9ccec8ca-4029-4e2f-9ecd-603a41ce0224"
        },
        "item": {
          "id": "0365f25a-ca1d-4cf8-bb36-515ba81434aa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6c511abc-3468-46ef-b3f0-ee04745ba1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31338ff-509c-444e-a8fd-24bb405ee87d",
        "cursor": {
          "ref": "8087b88e-8249-4861-a654-e56ff3d0fbda",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4027ad9c-ad43-468f-9352-3d0781e6b1a5"
        },
        "item": {
          "id": "e31338ff-509c-444e-a8fd-24bb405ee87d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1820469d-23ad-4d5a-805d-7b9a5dbe093f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28665a1-2db5-44c9-abac-550d852c3655",
        "cursor": {
          "ref": "443feb35-16f4-414c-b189-86d376e4c2ca",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f75d4119-4f44-4daf-a0c6-927e8bdeea7e"
        },
        "item": {
          "id": "b28665a1-2db5-44c9-abac-550d852c3655",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dc8c0244-593d-4a96-a345-71a143c00d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7708fd0c-4574-4d08-a205-34fac9cbf380",
        "cursor": {
          "ref": "925e0700-41fd-4236-9365-9db0538acc18",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "396d6e65-c226-47ba-8511-a7deb307d00a"
        },
        "item": {
          "id": "7708fd0c-4574-4d08-a205-34fac9cbf380",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77c420e4-e40b-44b2-9426-45114788dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482cb7e2-6309-4a8c-a848-38d124bc55ee",
        "cursor": {
          "ref": "b79b9592-f35c-4735-b070-c7ad59c3e0b2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fc0bb829-9fa0-4bdb-a9e8-2da6ad4c937a"
        },
        "item": {
          "id": "482cb7e2-6309-4a8c-a848-38d124bc55ee",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8e5d666f-1553-4e45-a38b-77312e809dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed783666-6202-40ab-85d9-f97a90d207a7",
        "cursor": {
          "ref": "dd989785-6bbd-4bb6-b0eb-430203feb503",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d14f640d-600f-449d-b190-c9822e2417e7"
        },
        "item": {
          "id": "ed783666-6202-40ab-85d9-f97a90d207a7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dd4004e2-36dd-4e5e-9914-6d311e2ee3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fba63b-d3c4-4339-9f52-80b2adb69ae9",
        "cursor": {
          "ref": "dfa80179-ad2a-47a2-92f1-ef767a2a5f37",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a3952cd9-9a6b-4ec1-9b30-2d9b7fba7686"
        },
        "item": {
          "id": "49fba63b-d3c4-4339-9f52-80b2adb69ae9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ee3bd089-00a7-4d13-a867-7c6fd8675b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc3caa9-f637-4dc6-9fed-9dafc15bdde6",
        "cursor": {
          "ref": "955ba646-0a7e-4507-a79d-a1a61d867c9d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f251895-aca5-4edc-b6ae-0958a256deec"
        },
        "item": {
          "id": "4bc3caa9-f637-4dc6-9fed-9dafc15bdde6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2a365267-85f9-4fb7-b7f0-a21d8cacd61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197178ac-fca0-42e6-8453-03b0437bed44",
        "cursor": {
          "ref": "3e47673c-fe2b-4ff7-89ac-213bdf010e0a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b51f18e4-6fcc-42d2-a0e8-d534a91b8e17"
        },
        "item": {
          "id": "197178ac-fca0-42e6-8453-03b0437bed44",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8c1b2a82-3665-42a1-92b0-4bbefde1bb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b544190-52e8-4b89-aafa-cfecdd915a8c",
        "cursor": {
          "ref": "7e20b4c2-1985-4978-8c2e-eb443404e7e5",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "55d54212-2b09-481e-886e-fc53dc7fb9a8"
        },
        "item": {
          "id": "3b544190-52e8-4b89-aafa-cfecdd915a8c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "76f800f1-02e4-4deb-9c92-3c3060cc3c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f7f4c-15cd-48bf-adcf-729ed378b281",
        "cursor": {
          "ref": "505a1699-71aa-42f2-9ceb-9372ed52dae7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dc43af08-50c1-4af4-a3ad-e2cafdd71e81"
        },
        "item": {
          "id": "809f7f4c-15cd-48bf-adcf-729ed378b281",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "62964e8d-36d2-4946-851c-353ad3b3e79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f029e1-c316-4d35-b159-cb3dbb00ef9f",
        "cursor": {
          "ref": "e6a9d6bc-2ecc-4b4d-a12d-3f70cfe44e82",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b8b53e82-0661-4248-9322-69573310152d"
        },
        "item": {
          "id": "99f029e1-c316-4d35-b159-cb3dbb00ef9f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bcf33e70-a623-476d-bd4c-ec79f94e3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab3dfd9-76b9-4938-b3c4-b38ab343df79",
        "cursor": {
          "ref": "9fab4181-265a-4795-a4ac-84272b5b6049",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5e77279e-d18d-42bd-baec-e59021abd378"
        },
        "item": {
          "id": "aab3dfd9-76b9-4938-b3c4-b38ab343df79",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e00cb25e-6759-4a1a-ba8d-daa171f8a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec9e3b-8cbd-41c7-8a8a-e53e93c9bf9b",
        "cursor": {
          "ref": "5ecb8ef0-c5d3-41d2-a514-3e242f531e39",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "411aec11-d02b-4b0f-9282-128492d354df"
        },
        "item": {
          "id": "02ec9e3b-8cbd-41c7-8a8a-e53e93c9bf9b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ea968836-7a2c-4038-b2db-42abffe44ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e70ae49-c881-44ca-aff7-77355fc14dae",
        "cursor": {
          "ref": "d185c53d-55c2-4172-bdf2-de844b3514b8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d9343358-65c7-452d-8a75-01fee9c633b4"
        },
        "item": {
          "id": "4e70ae49-c881-44ca-aff7-77355fc14dae",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7e21ac16-19f8-43ce-a213-5af59486ede9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4604f649-6088-4de4-8f5c-543bcdd3f6de",
        "cursor": {
          "ref": "be5e3609-bac6-4216-9c9c-84f9450a41cf",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "01d57958-b79a-4d5e-bd31-6d0724f38c56"
        },
        "item": {
          "id": "4604f649-6088-4de4-8f5c-543bcdd3f6de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "71710d85-a07d-4b25-9c0a-56a707da8f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e54c89-0182-482f-907c-84a041c3c295",
        "cursor": {
          "ref": "5b174097-ab84-43db-8d08-cd042cfcb705",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "33902dc2-464d-456c-8408-98adcb6fb320"
        },
        "item": {
          "id": "c0e54c89-0182-482f-907c-84a041c3c295",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dde79131-24dd-47f2-8d11-83a4e940fd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f381ed2-16fc-44e3-8e0f-7f07dba6088a",
        "cursor": {
          "ref": "6d0aad36-0265-421e-8498-aef125b405f1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "89c0677b-64f0-4317-9420-c75e87568c29"
        },
        "item": {
          "id": "4f381ed2-16fc-44e3-8e0f-7f07dba6088a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac00fe91-626d-4d5b-a1eb-da916cfcde93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6baf23-0d4e-4f98-8237-e0d695e8ed1e",
        "cursor": {
          "ref": "362531f0-8390-486b-a347-f81a699a2e72",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e59a39a9-8502-46c0-bf58-593534bf9818"
        },
        "item": {
          "id": "0d6baf23-0d4e-4f98-8237-e0d695e8ed1e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8d102898-24a5-4373-b387-85201fcf40bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d43e6-8141-4ccf-bf11-8e55b9f50487",
        "cursor": {
          "ref": "b9fed474-f815-4fb5-9ea3-fa680f82c6a6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d331795a-1d29-46af-93f6-5dc3ce6105d1"
        },
        "item": {
          "id": "d50d43e6-8141-4ccf-bf11-8e55b9f50487",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "127d9e37-cb91-49d0-93f0-99c8f70906fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb457cdb-0a52-4ad0-b5c9-0a0060c1e858",
        "cursor": {
          "ref": "a2f0a565-d82e-492b-8681-76c739980e6d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "216ce566-20fc-43c9-998d-63f045f9eee4"
        },
        "item": {
          "id": "cb457cdb-0a52-4ad0-b5c9-0a0060c1e858",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31fb2149-7b01-4c5d-a99f-6a7938ed5503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29455b5-d73a-42ca-b0dd-25d4915555d7",
        "cursor": {
          "ref": "722f5391-767b-43dd-85f2-0c5c3ffa6458",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1065079f-c4f8-440a-b26d-d904d2c1c146"
        },
        "item": {
          "id": "b29455b5-d73a-42ca-b0dd-25d4915555d7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4035f5ed-30ab-4e66-8518-b58b4c81e54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77628ed0-fe12-4f12-9cba-eabefd02601d",
        "cursor": {
          "ref": "d930d0cf-bd31-492e-9c15-3bb96b85b1db",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cebbd880-e420-47dc-894a-b889a7f4c6e1"
        },
        "item": {
          "id": "77628ed0-fe12-4f12-9cba-eabefd02601d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d446441d-b7a8-4952-ab69-5916ecd1b38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48df90a8-e7d5-43c3-be97-2f8fc54d1b72",
        "cursor": {
          "ref": "f0472994-2134-411e-8dae-65d895c96735",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "000fce58-6b78-444c-8e37-ee7a562d26db"
        },
        "item": {
          "id": "48df90a8-e7d5-43c3-be97-2f8fc54d1b72",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "61634555-9663-44a3-8cc2-a75dddfbcde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a7cb33-e2b3-4422-9a19-498e9cf25746",
        "cursor": {
          "ref": "125cc65f-0940-470c-b892-6efdf86c76af",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e842162a-79e7-43d6-918e-6fce41f8f747"
        },
        "item": {
          "id": "32a7cb33-e2b3-4422-9a19-498e9cf25746",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ab364e18-1edb-4430-b52c-a191b9b2a256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bb5c2d-6daf-4cc3-8280-a351a5d8a3be",
        "cursor": {
          "ref": "154bab0b-40ef-4945-b753-705b170166c7",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "28e9d107-8653-4dae-adf5-362040bb3dd1"
        },
        "item": {
          "id": "a1bb5c2d-6daf-4cc3-8280-a351a5d8a3be",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "793dd5f7-2230-4eb2-929f-79c2f9598d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d41e08-35a5-46cd-a982-c3b75516ed85",
        "cursor": {
          "ref": "c154ec3c-22f6-4fb3-9bdd-9f1113408072",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7a49dba-e9f1-4693-8198-2b6cffe71aee"
        },
        "item": {
          "id": "a3d41e08-35a5-46cd-a982-c3b75516ed85",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c01fc54-12dd-47fc-80fe-b73009405840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed638445-0876-46f0-bfd4-a0a6d6aec8fb",
        "cursor": {
          "ref": "a1e90dd7-f57f-4b9d-a944-f5c1fb170aee",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dd1bd0d9-c9d1-4d34-b9c1-a7fffc727e82"
        },
        "item": {
          "id": "ed638445-0876-46f0-bfd4-a0a6d6aec8fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "181c72af-6a0f-458c-937f-43a9907244cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a27a44-23b4-4b89-931f-f2c4d6ad930c",
        "cursor": {
          "ref": "fbff6385-22cc-4c21-8ddc-6fc03980ae13",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d16b1572-daf3-4da9-9199-22a764b13e33"
        },
        "item": {
          "id": "d2a27a44-23b4-4b89-931f-f2c4d6ad930c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "917e7d3a-ed05-4a5f-88fa-e409cfb432fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccae07d-98c0-4885-9559-549b3929832b",
        "cursor": {
          "ref": "439fe2c1-4797-4543-9191-9b39ae338e3f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "49fe7e7f-47a3-4e35-8425-b66fc9231bd4"
        },
        "item": {
          "id": "eccae07d-98c0-4885-9559-549b3929832b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a07435b0-b7fc-4fb3-8d37-1188ce325562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba58ae-d638-4b07-a56b-d5867a80d833",
        "cursor": {
          "ref": "97410d36-baa5-4067-a3cf-df745ddd8839",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a6c29166-1027-49ed-84fb-61e01b3e8362"
        },
        "item": {
          "id": "3eba58ae-d638-4b07-a56b-d5867a80d833",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17201a14-b198-4618-9f74-ee220190b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96560a62-6794-4d38-962a-4b65598546a1",
        "cursor": {
          "ref": "7dc6c0e0-10f5-491a-8b26-1bef27e3cfc5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "49f668db-3370-4f74-9e3b-67b965068b09"
        },
        "item": {
          "id": "96560a62-6794-4d38-962a-4b65598546a1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3c70cc28-e0fc-4ff3-bde2-ecf4ebb2cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a68890-a0d1-4b0d-8122-82615a269713",
        "cursor": {
          "ref": "5d3f1a43-1390-46d6-84a9-6c949c1b56c2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "45f58492-efed-4c9b-b026-2713f5aabb90"
        },
        "item": {
          "id": "26a68890-a0d1-4b0d-8122-82615a269713",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b97e6955-2da2-4efd-be19-69788e02373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76735414-eb90-4a6b-8d0f-c54e83d1e9ea",
        "cursor": {
          "ref": "904ae974-26ea-44ce-8bdd-dd8d7786ff75",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "05de25f4-6662-4c82-b721-7c766d826b3d"
        },
        "item": {
          "id": "76735414-eb90-4a6b-8d0f-c54e83d1e9ea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3acd9545-21de-413f-ab6d-09ae12d40977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb88d302-1a14-4f51-9697-f0e3cf2178b2",
        "cursor": {
          "ref": "5908273a-81cb-4fb7-b033-b7060ecb9726",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d5b9a853-51da-4ded-af80-f6604ea550d2"
        },
        "item": {
          "id": "bb88d302-1a14-4f51-9697-f0e3cf2178b2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c123ba47-0d30-4509-bfd6-ff35b2da510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb4e7e-07ac-44aa-8ebf-177795ebd8d7",
        "cursor": {
          "ref": "d1bef341-c5e6-4575-85a9-aff253e99f8f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "51729eae-dd4a-43a7-ba6b-6cbd87b41cd9"
        },
        "item": {
          "id": "72eb4e7e-07ac-44aa-8ebf-177795ebd8d7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c04e048-fd64-416f-aa59-f841828d3cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b117f-732e-481b-971b-a520986a058c",
        "cursor": {
          "ref": "18d5cdbe-35c1-4cb3-bd35-06bc75bc1862",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0bd3a9cc-91bb-437a-ae39-218b810b2075"
        },
        "item": {
          "id": "2c7b117f-732e-481b-971b-a520986a058c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4c447fba-a4de-44f9-8f0e-068ca73e8cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518b7e3f-63f8-407e-a794-7f19838e5721",
        "cursor": {
          "ref": "ad737341-94fd-4d98-8d30-ee8468191e95",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "20bae19a-58f6-450f-b431-39df0e0aa4ab"
        },
        "item": {
          "id": "518b7e3f-63f8-407e-a794-7f19838e5721",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e7e6cd8-f3c9-4007-b02a-e17250bcf60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eef0840-c803-4064-8352-0bd86efc3712",
        "cursor": {
          "ref": "3c429ffd-68c1-4fe3-bd6c-755b277c171d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4360ddf2-e3e4-4582-a176-7ba00d499cf4"
        },
        "item": {
          "id": "9eef0840-c803-4064-8352-0bd86efc3712",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "15b2df40-cbe6-4206-b513-437004d78049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f7451-462b-41e4-aa18-a89e1cf673eb",
        "cursor": {
          "ref": "17a9433d-51d3-42d6-aebc-b2fe4821439f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5d4b299f-8ccd-4a3a-8043-1b390d3be591"
        },
        "item": {
          "id": "1d6f7451-462b-41e4-aa18-a89e1cf673eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "df2c84e0-763f-48e0-afb5-46c4e5ba1dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d561ca6-d000-4a80-b098-8cfac111b578",
        "cursor": {
          "ref": "6f5eba38-e4cb-4cd1-8e2b-7b51750359d1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "48e363db-ab73-44e2-8be4-1c223c7c5f63"
        },
        "item": {
          "id": "2d561ca6-d000-4a80-b098-8cfac111b578",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2982c3d5-209e-43d6-8fb3-bb73b9b1b5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9419656-131d-4b82-8988-58cab664610f",
        "cursor": {
          "ref": "ad3aa524-7e6f-42a8-8076-800fdd27331e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e7284b62-b08c-41ca-b9a7-9118198bd0f1"
        },
        "item": {
          "id": "d9419656-131d-4b82-8988-58cab664610f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "37ee9019-9777-4015-961f-9467ee707698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d1db83-2944-457e-8f67-d15ef3f4ac04",
        "cursor": {
          "ref": "ea120607-023e-422b-9e03-51247424337c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b4e22a1a-ef23-4634-8595-473f4d3fc265"
        },
        "item": {
          "id": "53d1db83-2944-457e-8f67-d15ef3f4ac04",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "99fd0ba8-7f1e-4040-b57e-2c858478b35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c1c723-2641-49fb-a124-ec44379f951c",
        "cursor": {
          "ref": "0cb346c7-4422-4d69-971b-580d4a2127be",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a5d4eb8a-46d8-4abd-a304-dac415ce6ba3"
        },
        "item": {
          "id": "15c1c723-2641-49fb-a124-ec44379f951c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "37293cac-35c1-4654-bc0e-0105010bfd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942febb0-6906-4d41-8bf5-64dc15870b20",
        "cursor": {
          "ref": "ce06206f-8025-4252-bc46-bebd209a7d2c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "894aff22-2b72-428a-90da-982ebfef1043"
        },
        "item": {
          "id": "942febb0-6906-4d41-8bf5-64dc15870b20",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4c36d0df-ed61-4d1c-949e-b6207c0c3eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb9d728-8d9b-452d-90a6-4c796172274f",
        "cursor": {
          "ref": "d39f1c1c-c823-4485-adda-a72e9a80ab58",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1ce24989-94c7-4b4c-97ef-3c7dfa4be99e"
        },
        "item": {
          "id": "2eb9d728-8d9b-452d-90a6-4c796172274f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "215ceda5-b002-45a7-b27b-374c4826c6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e14717-8dc8-49ed-89d4-e684bacacbe0",
        "cursor": {
          "ref": "dd88a9cd-c8cf-4ba7-a500-79128a62a8d6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8058af0e-bb15-4f7a-811f-46503b39e7a8"
        },
        "item": {
          "id": "74e14717-8dc8-49ed-89d4-e684bacacbe0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e8376b24-9add-4be6-a3c8-e56d504c758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a7a29e-984a-44a5-b424-c53d309c3976",
        "cursor": {
          "ref": "86cdbd6e-ad99-4e0a-9e0c-0741eeb31893",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "51f55c89-803c-4775-b554-ae31fe240e12"
        },
        "item": {
          "id": "b1a7a29e-984a-44a5-b424-c53d309c3976",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "23f9fd21-8dd0-4c9c-b5d6-35f7143e63ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db59e19-5e9e-4469-8cc3-8e33f9ee9145",
        "cursor": {
          "ref": "14943984-0268-45a4-8a9b-8dc1c7c594e3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e306836d-9ade-4454-8b51-8efb30f10a6c"
        },
        "item": {
          "id": "8db59e19-5e9e-4469-8cc3-8e33f9ee9145",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d59d9653-8659-46e4-8b82-286ff119feec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fac4b42-a059-4b11-9b0a-3ec3183e6753",
        "cursor": {
          "ref": "f1d8318b-7480-4dbd-b1e7-99ad14855f9b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3b36f6b5-257e-4bcb-bd44-b7217210f434"
        },
        "item": {
          "id": "3fac4b42-a059-4b11-9b0a-3ec3183e6753",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b2a0e0e9-94e3-48ca-9969-97628f7d25e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8167ef5e-7f95-4e0e-b6ed-81e20cdfb080",
        "cursor": {
          "ref": "82d9f8f7-cadd-4d56-b2e9-773895fe0ae7",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f626addc-a178-4b69-b9bf-0c2363c23f1b"
        },
        "item": {
          "id": "8167ef5e-7f95-4e0e-b6ed-81e20cdfb080",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c5da0689-db74-46ab-b9eb-d2e414894459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1586e9d4-f7d7-4291-a23c-5c221fc49de8",
        "cursor": {
          "ref": "e18abaaa-c4c4-42da-909c-44181fb80b5b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a57bc2af-f72a-4c90-b0a8-2e5ba90843bf"
        },
        "item": {
          "id": "1586e9d4-f7d7-4291-a23c-5c221fc49de8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0a732c06-bc9d-4b4a-9c6e-8869cdcea6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a7750d-0c36-4445-923d-9b5d242b0c01",
        "cursor": {
          "ref": "10cf6676-1cad-41cf-b594-f5524017470a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "78b0e2db-5d9d-431b-8093-cc340f231b29"
        },
        "item": {
          "id": "72a7750d-0c36-4445-923d-9b5d242b0c01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "08bfdc1f-a3a6-4419-8e19-f94b3e821c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73351c0-554a-4b02-a877-7d3cfd4a2047",
        "cursor": {
          "ref": "364b9ab1-dc6a-438c-a82d-550f2f91dff4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e92dafed-4d06-44e7-b0b1-600ef79c9156"
        },
        "item": {
          "id": "b73351c0-554a-4b02-a877-7d3cfd4a2047",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "27e582f8-8e93-4c23-999b-586326c73474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da365cc-2c1d-4826-a71f-25272e928303",
        "cursor": {
          "ref": "b9de6d52-e814-4c97-a141-10409b13e127",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "939bddaf-09c5-40fa-b399-31e61c27234d"
        },
        "item": {
          "id": "4da365cc-2c1d-4826-a71f-25272e928303",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f3042038-1661-41a7-8432-6b74a1a663e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be83e854-f3bd-4863-a2dd-06622d25e45c",
        "cursor": {
          "ref": "c6c8935b-845f-42d4-9be6-566b28246ef1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "24976b6f-0514-4edd-86dd-5d6a5352f0b4"
        },
        "item": {
          "id": "be83e854-f3bd-4863-a2dd-06622d25e45c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "681aac17-f289-4b75-98f0-10739abc67fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9faca55-8a24-4a73-9bfd-3bf7789830f0",
        "cursor": {
          "ref": "7356c751-ee3f-4e1c-aded-2619fdc5c487",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fd640733-acdf-46af-9e05-7ea1a2a407f9"
        },
        "item": {
          "id": "e9faca55-8a24-4a73-9bfd-3bf7789830f0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89dbc0a7-a3e3-4885-bdf3-c37466e71b73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d465e81-a091-40b5-9c40-74a9a599b882",
        "cursor": {
          "ref": "62413c95-f6af-4317-a644-0aed1847a31f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0f72a7f6-4808-4e79-a11d-779126bb9cd0"
        },
        "item": {
          "id": "1d465e81-a091-40b5-9c40-74a9a599b882",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "adbe1cca-56e0-44c0-8535-0433de0fcf39",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1c310c-7c12-448f-9256-555951c10be5",
        "cursor": {
          "ref": "7934fc0d-9e35-4a91-8a1e-806028d71837",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3688dc31-b769-43a3-a48e-b42ff0c4d25a"
        },
        "item": {
          "id": "0c1c310c-7c12-448f-9256-555951c10be5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ac0409a-7bf7-4ed7-bb4e-f48a23456c7f",
          "status": "OK",
          "code": 200,
          "responseTime": 1889,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "654d3905-a366-42b6-b8a7-a96eb6c227b2",
        "cursor": {
          "ref": "97b003fd-18a6-43aa-800f-8ef00cda2a43",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "46a3062f-25ad-4aad-9c2a-d39d3d78418b"
        },
        "item": {
          "id": "654d3905-a366-42b6-b8a7-a96eb6c227b2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "302516fc-6a9f-40b7-babd-87067dcbe046",
          "status": "OK",
          "code": 200,
          "responseTime": 2406,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e878194a-acc5-42b1-98cd-2c0d4f76b47f",
        "cursor": {
          "ref": "ef083103-111b-48ae-bb04-4d3830f72945",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "338e5f27-3ba4-4986-afe2-6c8b3e606a9e"
        },
        "item": {
          "id": "e878194a-acc5-42b1-98cd-2c0d4f76b47f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50af6b4e-b29e-4339-8a4f-b02f2c2658b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e878194a-acc5-42b1-98cd-2c0d4f76b47f",
        "cursor": {
          "ref": "ef083103-111b-48ae-bb04-4d3830f72945",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "338e5f27-3ba4-4986-afe2-6c8b3e606a9e"
        },
        "item": {
          "id": "e878194a-acc5-42b1-98cd-2c0d4f76b47f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50af6b4e-b29e-4339-8a4f-b02f2c2658b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5644ccc6-d1f3-47bf-b0b1-953a4ac0bcb5",
        "cursor": {
          "ref": "773251ac-7e31-40ae-b8f3-1a22718a0afc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3bad4b53-efbc-4f55-a1f4-dcffbf5bfdc2"
        },
        "item": {
          "id": "5644ccc6-d1f3-47bf-b0b1-953a4ac0bcb5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0a89b908-8fb3-4892-a85e-829a91a4eddd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770b789e-0314-40d6-9311-d3fb81018c40",
        "cursor": {
          "ref": "069ef070-a6e9-4bea-a419-ce0f70d511e4",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "431ea10f-0ea1-44ff-b201-5f4cf032fbc7"
        },
        "item": {
          "id": "770b789e-0314-40d6-9311-d3fb81018c40",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1cea89c8-2e3f-4017-8b7f-d98fcad470f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}