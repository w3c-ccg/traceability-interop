{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2552a614-b3b3-4d0a-83b4-ed7c389cbbb6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "732df3e7-b1ad-43a0-afb7-d4a217d18da8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33fd0d8b-04b5-45aa-8d5f-43c047f85179",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c77f309-70ff-43a4-bf37-d966691a931b"
                }
              }
            ]
          },
          {
            "id": "a15970e4-61e7-42e4-a7b6-f3a0b320a9a2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0c9bd31-e5ce-4685-9adf-fcc990a796b3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "986214a0-b412-4a48-a9bf-62eed1e5a51a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c52586ac-bb7b-46a9-b428-981cd22d95e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3604383c-0e82-4ca6-9035-c6ac47271e38",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63eb48b8-f0fe-453d-a015-5ac27d8b2f92",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8845da5e-e251-467d-9ec7-141111b10bf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b54a51c-264c-47e6-b3ac-554945a195e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "532799fe-64c6-49e9-b9d0-5628b99e94f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfaafef6-4572-430d-8d61-0b7b835869be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c85d0f8-d78e-405b-a801-0ca6a6974ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf790e72-6ddd-4f2e-88e4-abcbcd27fbda"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c915988-43f5-4d50-a764-26bbc8f2c4cb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46dc8a69-1b91-419f-8b23-f83babd39ed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97b8023f-a2ce-4228-8038-98d73d0bdea0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d2f8ca0-b4ed-48d5-bc7c-131851425e5e"
            }
          }
        ]
      },
      {
        "id": "c7a3794f-5fd8-4569-ad19-23c393dc5bd8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c506d3f2-dd4c-4469-91ff-38e143e27806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e422c2d-6859-4367-87ce-1e719a8b9655",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b788fe91-5bc3-42b4-ad8d-2cbb06bfb1da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b235a53-382f-4782-add6-4fbb8a3fd261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b623f75e-267f-4c87-b49c-8514a703d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdf3952-d1b7-44a1-9241-7908ba9291aa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72728264-ecdb-42fc-bf64-1abd6018897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "014a6c46-5f6d-462c-a414-ea7153b07ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8c26c3-f129-459a-8bbb-bd079abe5c67",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cabc4f-c1b7-4069-bfa4-30333cb6f25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "594655a1-76e2-419d-b7f2-88872ae78c84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b98c26eb-12a5-4ba9-98ab-e3283e0a7786",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3955197-a1b7-42ff-87af-48896175a2f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f6ecfb-d4af-4db1-a798-ebcc82923cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e231604-4df4-4f05-b506-34ec15645596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d92cb-4603-44c8-8708-354bfb04b605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29170d93-fe78-43ba-8d11-a67be048a381"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "625d1c15-067f-4942-b05b-78007be45989",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f92e0781-9c31-41b6-ad6c-7ce7ad82e296",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a431137-b912-4923-8958-5784fe8621c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "09a30d3d-8922-40f4-9dea-b637accea977"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb35da1f-cb76-44a4-89fd-c98209ab0169",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4cef24f5-3feb-4ded-beeb-feb30c6b76a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0dc0b70-aad4-4813-b42f-610b4fc4c6b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97f49f5d-ec23-4267-aaf3-f1fb4224db5c"
            }
          }
        ]
      },
      {
        "id": "fb78be47-1a62-4d85-90e3-a7d6f2ed0254",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "66e82760-08a2-4f15-817b-e6adf43efcaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45580014-4db3-4605-84a3-38798b9b4274",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad502775-6077-4702-b5b4-123c7c08542c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a6c8f6-c569-450f-8424-9fd586a0f57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df427810-9499-49cc-ba29-c7e3f83b0307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacd54c3-52ee-47c5-a2ae-5e808a0ab162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fd7c86b-4a29-4b54-997e-519146db57a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93402e6-89ab-4409-99f8-6f4435585f0b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcce0937-1264-4b61-81a2-2dada4714968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d684350b-8994-4b68-a6b4-345e7747df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f28f3b-f9be-4100-b935-6cf727fcb70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d4ee7a0-bf53-4232-8c2a-f73287dcf829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2045da00-7e2c-46bd-95dc-a535fe4d2941",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17355a-d681-4c8b-b62c-d1215b59d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f613c7ae-f495-4987-b7da-031918a8c742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41687f99-39cc-4ec8-8bcf-1dd45b223a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b9abc5-5434-4270-8363-d0fa949daca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e4541b-e943-4719-ad40-f98537d66483",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee20b88e-1b1d-4658-abb4-6ef41cba5814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0995405e-fcd5-4c7b-a17e-65beecafd6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580d6cae-32ec-468d-a4a2-05dec0c5651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51f15dbf-f7ed-4ea5-9b05-5b807a0c2762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29df476-1980-4f5d-97dc-8e9870ed064f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afc03b5-e8c1-4746-b4cf-04edeb852984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c5312c-a7bf-4f0a-9de0-bbf8aa79dd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd43d9fe-8382-43d3-8c20-8a47ddb75288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3a1dca5-e462-4ab9-ab7d-2a0232f09efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fef92f-cb1e-4642-9feb-5cd72c6e9788",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37b501-7821-4bbe-a055-cd409667cff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c474f24-64aa-4cb4-9452-5232a9258d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d19defd-6ad9-4c8d-9ac7-284d8265a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bf3c0bf-034a-491f-8f91-7798626844ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604b5477-0b52-4158-be0f-7c9589504ca2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6598e5b-7cae-4216-87f8-1e0057a4353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c19fb8-c6e0-41ca-9215-83b1dfb53d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6369863e-7eca-47cf-833c-e00d79d1731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "843d7fc3-46c5-42d3-bdf7-0f1885b362cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c03ca96-6842-44ec-ab2a-0d84eeb90f84",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e03887f-8267-4caa-a186-a3ec12e14f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c51d1d1-b615-4115-a3d4-483e0baff2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c5f8e-9f31-41c6-bf18-79b1071967f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d506ba-b240-4b83-a693-617ec9fec91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2720c5-f077-4520-955e-c8e0cc3f673a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77d6504-fe73-42a2-8ad7-63e3c758d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9f26b6-02fc-41da-bd0f-26ed65c41297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05bbba0-f4c1-4221-8cb8-8bf66608aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d2d100-db84-41db-aa68-a9fa3adce856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31e5224-bd78-41ed-a899-920207718cdc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850aa35d-92e0-4b9c-87e6-9281c2627f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c07b9-f0f9-4b73-b373-039570798371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aa6dea-03b0-4dcf-b33a-c8fa2e3e1bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9f06ee-101c-4e1d-9e3b-669a8802bf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beeb386-5966-4bb7-aa93-b26406228b25",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9bb391-0296-42e4-a1b4-05ef0dbd66db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82e304b-3a34-4277-a1bf-205655dad161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baa78e1-ee71-4a0e-887d-8653d87a2710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60abbefe-3060-4c8d-8f52-62720af7db67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afbcae7-e289-41eb-9bcb-85369e8f8ca4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4988468e-db69-49b2-9a9b-59563e364e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee79f68-a7c4-4643-bada-a069950628b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b794c8-e433-4d0c-a438-d54a1fa52a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c63bea02-9a9f-4c62-9986-8456839464d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb5817a-a453-486a-8799-313a56c363bd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c3cdbd-30dc-499b-807f-00129138f221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41825e5c-9d6f-4759-ae98-1bb7ef21495f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24fb9d1-17ea-499f-8ded-6955d6f18ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a845090f-d17f-47a1-a438-34897a22d9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c98066-b8dc-469b-946b-6571fccfe27b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f26995-28ee-4b9b-8e93-8be8fa5a8fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bef9d5d-66e4-4de1-994c-3d230bcdddc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e80525-ed09-4911-bff6-780083cf807d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf07a665-e60f-4a31-897a-7b60cfcc4164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb48154-11cc-46fb-a962-5cc995e72763",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af1a72-a8ca-42a1-82b1-9ec7dddc8702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9abae-7d30-4d31-8cbe-2b054f203c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa6284a-c31f-40f2-b92e-7c2fb1582a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab210d29-7356-474a-9a94-bf4d5cf33068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7736f49e-c0fe-4751-948d-255f7789930e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f09a9-c106-4c6e-a717-c948bd5d22d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bf902e-b4ca-444e-9ba1-ef27785da22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197f7f8c-6911-4449-b951-452358f3703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b3f4900-61f7-42a1-ba87-ea359fab5fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d277a704-0b23-417d-8022-672eab1d5406",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7842f-3ad2-4247-b9a1-446ad771d32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa40b10-311e-4749-a280-bf032cc926a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dac53b9-0240-46a3-b52a-2b9eb3ddfa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64fce085-3e4a-4232-bd82-4388b440f338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4829feb9-b09d-40e1-ae47-482067c6683f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ce62ba-f2f6-40c5-b3a3-3f0ecf3b0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b860243c-5fd4-4603-8074-b69bf95b648b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81d6b09-5baa-4b4f-a1bf-69409f6cc2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08310b2f-a7ae-4e27-9ff6-b8c153a75f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e11746f-c242-4e30-80d0-33d64ff79258",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f661b3-18cf-442d-bd15-c52f15d91305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb08be3-dced-4c65-a9c9-67d7d3be9f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47a05d-08da-4710-8c77-bd8c6e097946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02672bc7-8bf8-41f5-89c9-daefb36952a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d8f6e3-aaf4-449a-b4ce-4715f3eff9fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aed47d-8397-4a68-b2a2-73549161daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035879a1-c70d-4644-bb09-0123f5bfe311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ab044-e588-4e02-b4e5-fc6da80eb36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0155a0a7-42d3-4c38-b978-18137d165928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf8d36a-1f4f-47eb-87c0-01c5123dc40e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc95d4-1420-4b70-9409-72d918c1163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd761d24-9232-424b-b20a-13fadd0299bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebf80ee-b65e-4cab-8ccc-1b0cc6485df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f02a795-9c63-4582-b150-eb241b23843d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0936218f-38a4-40a7-988c-37e54da341b0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f339bcd-0268-48b3-8ae1-3274c0c82fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a57bf6-f7db-4935-9ad5-26745086722e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92287e83-df6e-4fd6-85c8-07d1a69364b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fae25044-fce8-4fbc-909b-7f050058aa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2f8749-0d16-4586-a596-16f86993fe02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd8d200-d99a-4238-9bf0-4acf0adf6612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d152dd8-266e-424d-ad36-0db2026b64d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ae857b-1562-4a45-8b8c-3867aa9d4a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b157e93e-fe49-4fb9-80fe-9ea5dc462eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754163b1-ac91-4f9a-a76e-20eb5643830d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ef0532-cd41-4b73-bd11-43294e119e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27210598-b9d2-4adb-903d-1ea3e3277594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d45d3-cfc8-417f-9f94-6479d454680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a823b68d-26f6-4689-9cc3-e5d141663b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c675ae-3c1d-4aba-8652-a5b8a1de2971",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c64c49-ce6c-4e36-b950-1b607a37196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7721cfe4-f50e-4d82-bf5b-5cda4bd05fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27af38-62d2-484d-8cde-b5c386e9e829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad444628-2ddf-421d-af9d-dff2dfa17ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72846464-99ac-4ea5-86ee-35753b77bb69",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0d35ef-5a4a-4f52-840e-b9eb14226537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a210197b-9f04-4ad6-a5f1-59e22c4d0b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb250f8-4664-4d1f-a39c-721696452563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e000ddc1-02aa-4020-adec-b5c7ae89eafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e3e81b-a61a-4587-b11f-6bc1670f24b9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32a5e63-c8ee-4300-ad98-eb624a3b7fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3181297b-90a8-4e87-80a1-7c83628099b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d172a80-cc92-4f46-8d77-f0161a222d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f57877ca-969c-4a4c-9f4f-6f36a794976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f7d069-764c-4fb6-9d40-bb2b4c0a382e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4089b824-c590-4dd4-8fc0-30379ced9f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df733dc-4b4d-4006-9c95-2b9d45e25a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac1fb11-6a2f-44c5-8433-73742f9c37a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7761c78-444f-40e9-8515-4b772686a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a858293b-1ea6-4f3d-b8c2-423d1a282200",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e0176c-725d-41b9-9620-918b68bfecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1628f-e537-4656-a3cb-9f30bc0e567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3984e3-4b77-4a7b-8971-14dbd62022fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "802c7f82-0751-418c-a6e4-c61f5ef2f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2706b77a-5004-4add-b77d-bebb2fb843dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5500e9d7-caa3-4507-bd29-daa579e3a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f5a24e-41f3-4ac3-9a8d-1b5880a40bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02323661-2759-4be7-8e6b-b106792a674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f0bae2-dbb2-4478-929b-b58a60490fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327ee4c3-8478-4068-8dfe-c76ce69054ba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd16c013-30bd-4ab8-bf11-d84d4b0f3d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c729df3-7ff2-417e-a52f-7ed24d2f518e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f82d48-4383-441f-8a57-7337ce735613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c09199-2ec9-4df1-af87-d1dde80ed71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6e7c8a-82a8-45f7-806f-e87e9eda0612",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8e108-db4c-48a2-83e4-17391ce74279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426b184a-f859-4a66-a96a-c81205d67d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3501d211-9c04-43f7-9e0c-c95159e77734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05171cd7-6636-4828-ba1a-c80022e8c16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0df66db-620f-4209-abd2-1c36b947fd78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad6ebb-181a-4115-8b1f-56af7d21bf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa5d5b5-ac73-426e-8f37-df442fff7af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fd1560-fd67-4a2a-b627-2907d1ecc56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d78ab00-e95f-4aa3-8d49-0a518048f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699782b-e798-46ff-b712-74727744deac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c255ff-137f-4d7c-8234-b8e2ef096dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc8fa95-65a2-4c68-ba82-5a02f4695244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f51f77f-196d-448e-829c-bed2a84f3519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1094a3-410c-4904-822f-437e5cca26f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30754849-fc5e-48a8-9187-eec2e4743d66",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bde433d-f25e-4e0e-8be6-dc5402e8074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7f79f7-f7b7-4f52-b365-9b27b6399d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21163123-a2c3-4b8f-9698-aa3d9fc7b74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c93c42-746b-4f50-8158-c7da3f229680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ce573e-5187-4050-9ac6-19c84c0afe0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e793fb6-413f-4675-a4c6-59bf2265550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "782e5650-937b-4f8b-b037-d10d9731740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a519f-4be3-46c1-b435-f4d3466789a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d50c32-f13a-4e8a-95cd-9bf4145bf909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca56f21-051d-41f2-8ba0-f471bff02673",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaae9cd-960a-4da8-a89c-f7f7780b859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb6bca4-e3b2-44ac-8689-c894ae06fb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b382a3d-bf09-4c11-9223-d7cec451b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "478a1a26-0b20-40d4-a551-08c7fa3d0a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d15ff6-afe4-4827-8e51-75582cbdbbc0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54d6693-907c-4a46-afdc-e34a9e230d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd381a7-105b-4e35-9f06-6eb0502145e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a581ee3-b0ed-4ffd-bacc-dfbd86ded04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05d86e9-75b6-4b01-8768-803c84d852ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b4b88f-43e8-4a83-8091-64bb49f5dc26",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e6ae0e-6846-44b6-bd13-3c6325e55398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4e39d2-75d9-4740-a2cb-370e7fc0c585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6c087-0191-45de-ae85-fa6c51645c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9945e8-f709-448c-874b-f693e1bc3e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a35a5e6-3959-45d6-b6ba-f6c7306e2b6d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda58f62-fcdd-4d45-91d6-c0e7957ef92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee8744e-4b71-42f2-843d-6cc447e4a9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a044ce-6595-4081-8182-f32c4a2be7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ba24cf-7cff-4993-ac66-8fffff7a871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a4fdc-943a-4394-a478-1a423dd3751a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f7bfc-018e-495f-b9ce-2e92c5e7bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b0e0db-3df8-462c-9028-b666f644b6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b452e3-1b70-46fe-acad-08df4dddcd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9044f122-78da-4fff-bb98-ae22413adfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faba6cf-6f69-427f-b9fb-75bfe909b4bd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e62f55a-cbed-41b3-9d7b-65a3f7a33ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ff4509-bbf2-47c1-9a2c-5b62a36d24a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211f8068-ba72-48a3-86af-1510580794ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f8689-00c1-4e9a-8723-6b598df9a544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea9376c-56e3-45d6-8e41-e57142ba7135",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a52a5-85c6-4931-b741-59e7b6e49493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1341b25a-2f4b-4ee9-9f78-d7a53abcd131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad88e0e-5404-468d-a090-777347f4b42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc895b65-55b3-46cf-9433-70137042e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3b1825-584b-4492-a318-db7cf3c30952",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba1cf22-be55-4b80-af1e-02afc5a2ed33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9883ae-959e-4767-b36e-bd4020691556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4173a974-a66e-4653-a10a-77c9d19f0346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "902c9b6c-ab9d-499f-b5d1-f240ddae47e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114d719c-b0b7-40ed-8807-f34411cdf670",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f46bbb9-afe3-4750-8a38-c58de70594b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a373fd-644c-47e8-bf0b-0114c43c407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ca5bc-a624-4254-9ff7-5f82304420d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb40027-e056-4b64-b63c-22bda5fc33b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8af4af2-d193-4a59-a0bb-bdaa971b993c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc806d-19be-46f3-aa09-6068dfb77ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3eaeee-87b9-42a8-a8db-0b94975004d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1486883-ffb8-428b-9875-036d59ebb218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e85464-3e93-4d00-a6f7-cee805e50420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7d5992-1421-4528-ac18-18f02086a180",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74643482-1e2d-4342-8962-b2563302b742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f145e41-34a6-42d3-a58d-fee9082a3fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c81a9c-32d7-4b74-ad85-73533b02df97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b563e2-bcfb-421d-9312-0f9c1a45cfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a682f70a-e6c4-4773-9c8e-49b57ac819ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed5da0f-121a-4068-b5f4-9413eb56a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5779ec5-4359-4bfb-99a0-6d8a2c89a280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459e7ad6-9f20-4382-9f4e-637a594d3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e282aff6-2404-4a34-a457-46d937826e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2750d-07fe-4639-a777-c98080fb7c4e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31941850-60e5-4d19-84de-41ab34389947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f20ff75-8b6c-4114-95f6-5f6736a6135a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ceaff28-0166-4043-8082-3e331a7338bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "063353be-469a-4c70-821c-addae958adb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12599a4e-1c1d-4e2e-96d3-dfcedaed6127",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c32062-79cd-4fd4-8a05-5580e13782dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3f7a58-0ac3-4f65-832e-d13779a24de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9d702-9e66-49b8-824e-05d4c4acc77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0faf69c5-52e3-4d85-99c0-9a9bd9875530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079d20bd-ca2f-4632-be5c-9f5eb93dc8b1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10490dd-5e5a-4e84-863e-6e7099761a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00705549-76d7-49ad-892d-c8fb8410214a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ed248-606b-46af-8739-5089f7b17388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9e6005-b52b-4a50-aaed-3ff045e15599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad12521b-bc62-4def-86ea-d25e657b1c13",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adefdf5f-d2bb-4a80-9b9d-949601e8feda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4193f56-27fc-48ff-a8e9-fbcb161e7a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01839fd8-5570-4663-8826-0c7de6363ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f50f6ef-1a73-460d-bfa2-41bcdf499189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8933ddaf-0ad7-4426-82cb-54edb5ecd4f1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e89b566-b562-4be4-bbb6-67f77f4b3810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8057fb6a-d457-4ae9-ad8c-b973c8c81650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede5d35b-ec7b-4937-8e41-19826cfdd242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7083dcc-4ce1-4fae-90ae-2d8f45dac5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dab4019-cf12-460a-acd2-56b628f5a277",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519cd0de-209a-473c-9116-10cd0e9095bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73348231-ab45-41c2-968f-9fecc58da89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9e34cd-d9e3-43d7-93f6-997649889ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "269d7d22-a938-48f4-9707-a2748151d81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69064aa-9889-42a1-a245-17b658f95137",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d731b34-206d-4fb9-8f33-5066b4c3a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29756275-8abb-4a06-bb9c-3b06ca41dcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4aec79-2291-4506-a87c-529c3c110f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f604a4-ac76-4782-b18d-5da3d92724c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90a1196-5aa4-4d14-aabd-1ee7d1ae39ad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21d4e32-fbbf-4318-9fb6-fd43a13cb420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a814e7f1-e474-4aa8-9a8a-b033533c9cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a43957-06c9-47fb-ae39-9a28ef06d348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "69689bb8-3cb8-4c1e-8b23-ed8ae252e6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed35ae53-11cb-43ec-b63d-ac4ce31f21e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a255255-6f37-4fb4-baec-b3108cc15e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59f3dfc-9153-4b85-800b-6e78d35f9acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948fa622-7dd0-4ac6-b026-f0cafde9b10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d57491e1-f655-4562-b0b6-738519b988aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153c8ad-b58b-4ebd-a528-5f38a04875ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca89a36-a838-4213-99d6-d00b48a2dc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c530cd90-f62f-49dc-a84d-67713c3a6c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8fe010-b1d0-44c8-9eb6-5d32c6caebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd72829-9a2f-4e68-a024-baa4ce35fade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59025a37-7961-439d-8882-227e39f2fe79",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0415f39-1adc-4acd-b153-218412e2d671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226e0c74-ed1e-4fac-88a6-39aacb32604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0754c270-ea05-46b1-a9da-3d2c68d07517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1f5c34-2bd4-4de4-b178-1385cb4c2985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd44e24-37c5-4966-b01a-748062be0ffe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d26f972-f4d6-4294-90e4-fc4cb1be69e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45b1036-e88d-456e-8e76-c991bc0cfea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927ff9b-2678-45ae-800b-b29707034b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e234a1-f673-42dd-bc59-bf3fe5c5c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91287b87-6a15-47fa-b6f1-7280385bf8f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ec45da-e458-42fe-8a35-a2de3baafe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9767b0ea-969e-4ee4-93c2-647d87edd87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b3d1a-afba-42f3-a36f-fe87a4a9bc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dfa868-4807-4fda-b795-465bfc6e958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912a14ee-9ba7-421a-a875-cc474e04a5ed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0b37c3-1b79-4c68-8036-01ad8d7ffc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f018436a-72bd-4218-8d76-9b9f14d50344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a19b4b9-825a-458b-97e1-42365da83253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2067231f-9005-41ac-8f40-f1281a061149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571d3c21-f89a-4923-825f-79386208e6e1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9405fb-289a-46dd-b3fa-e68b1b985096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ac0fab-70f8-45b3-af3d-73d76159daa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb5226b-46a2-4ac7-ae71-f30bbc5d8f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "309a3812-3caf-4a08-991f-ef288009f4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d731434-07ca-4cd5-8227-8080308831e2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45bba11-9b4d-49f4-8903-6afbdef07ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc43089b-2c92-4273-9766-ccea64e16571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db10ac-92b8-400f-a1fd-3e8537b19844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74bd78a-b8a7-44db-8d69-6928cf41ad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f312270a-9184-43d8-b3b7-9b88e5b4972f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615bd73d-6854-41c1-ab0b-2d71b9b32404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f9226b-cdcc-452c-8ee4-698e09578344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f0c7c-2a0a-4dc7-86f6-e6be71ef93ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a118932-fd71-4fb3-a214-2cae6904745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28d2d5b-508c-4a4f-9ab1-610b10d78063",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74279103-d5fc-4652-a323-c612914d9323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbac4816-c854-4fcd-b99a-6fd468f14ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ef712d-9fdc-4293-b75b-314c6db78ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a11fd79-e8eb-4ac6-9e34-d56e56226e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27a9dec-cbb5-4a00-8207-9c884b0227fd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822a2c64-05c9-4fce-af94-460ddb943364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8d5483-d3e6-40a7-8588-ed0264e01355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f805ad-9d07-4544-abcd-a0a8bfa9e3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c485fdbb-965a-4348-8571-87e49e7a07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a5980-88dc-4fff-ad87-e97f8302ccbe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cd56e7-5522-4b79-8475-2ee0adfb9386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb73e4f2-ae34-4a20-931c-330925208d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d84b6-2ea3-42c1-bdb9-a567d3895227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f719a5f-46e9-455b-b3dc-dcc8680b9a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272b6ce1-20a2-4b45-b3ac-f0706767e15e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a95ee0-203f-4c30-8101-7becadde399e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57b3c24-3420-4c4a-968c-25f8e53c8f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf79494-baee-4ebf-b2b8-b08fb4c794df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fe9c88-c6f5-409a-bd2e-a5499d1534f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1586b631-161d-483f-ba2c-1426a68599cb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab893482-e6c2-4e37-ad2c-8656820e3f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f35549-ef67-4c33-b9b6-242fa8f8503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8d2fd8-9116-411f-888b-0b826f0923c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6053692-3ccf-4cb8-8ede-203d7b828e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f2abbd-d50b-4c69-a84f-0e51113e3bff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857de27-f00c-4c65-ac19-4136a5526766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df236476-0473-4635-bc26-c6bb164882ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6de937b-cfdd-4fdb-81bd-53d1cf04cfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c38d43-d78a-402d-b05f-368d50468c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4651aea-46c5-4f55-b6ef-ed8104bc86b2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2375f8-e991-4853-8f4d-c6ee9870ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3177a6-765d-4a12-b696-0daca7cc2ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595ba45-6df7-4b27-9bba-0b0712ff4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d8bbf6-d8dc-43d8-b640-58c22a531fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc7211f-6899-41d3-a100-fa26b91c1274",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836e2859-8a4d-4df7-b923-3f017c32d0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577ab021-fffe-472a-a9b5-4dc03d14e146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd03c07-82ef-4325-9050-29339ecbb15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "685cc051-d1bf-48f3-a1d6-c6bd53d63f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a11eda-9980-4dff-a96a-70e171142113",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34695c1e-fa1d-4ad0-af16-c4b7d5f0b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd3121a-32a5-4991-96b4-827f3a2a7e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6741d6e1-1eca-4284-846e-3a0b589787cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fa415c-4ae9-455d-8413-5557552cc782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ed6027-9a4c-4a29-800a-ecb204901217",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1b5878-8771-46cb-a5da-20df433db639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbecd97b-d0f9-47a3-9c2d-ef5ada20d2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c772aceb-d987-492b-a149-e2812f298c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2194a366-48f1-4fef-a9a2-532b10886e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4abb262-3086-4fb2-8ef9-7be0b25d699a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6881f8-16dc-407d-8126-8c08dba97aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37453be7-aee5-4da9-b438-751192f791f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af65b55c-23dd-4f43-811e-2dcd4a27c4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3191db-f5ed-4df6-b6ca-8317b14466f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a7c150-90e7-4ae4-bbc0-e4265bfc9e5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e222e6-6eeb-4d81-8d95-825a4c056e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd3d787-5de4-4812-8c55-4bf63d92d00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be3f538-0f47-4a4c-b909-75634299e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c805021-4916-480f-ba41-504e4bd64e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ae2224-aa87-4289-b90e-6a77b39d4df3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f142772d-fd0c-4d94-b992-655ee41794ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d31262-8b06-491a-abae-9261ba3346ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c448a31b-2df2-44e9-8586-df836d53af61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10dd0703-5988-47e2-b126-ffff022ee707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03034ff9-4c31-4065-afa2-54b37c5ae3de",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18474a25-ef47-4c30-8272-28d9bc5e52d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b3a3dd-2533-4825-ac59-a8334a3cab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af20ff33-a6ff-4b01-967f-c48550f18517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7374db2-6677-491f-8f1a-2bc2ce8e5fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fe6be0-e813-43b1-9e6b-f4a82860d5ef",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bb64fd-bf34-4b0b-983e-654c3b2bef19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c3771b-af2a-473c-950a-bfd329b7c663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21c0da7-10e2-41d0-810f-95ca842a1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eee118ad-cc88-45b5-a457-caa9af56d45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848463e3-24e0-49cf-a5fc-e0c934ec68eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432ee81f-c1c0-462f-8bf3-dab43461cf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e783c0-64eb-4bf6-bef9-40d5c5c20ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2c9fb-9eca-4f6b-bb21-5fc6c546b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e409dbf5-0703-491f-a082-65dbbb9e01ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6e34fa-d7d5-423e-a5e2-9dc1f6f26c1d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dce5f61-5e13-4a1e-882c-03186d3d6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84ce32c-7b82-444c-8f1e-f5dde69b8496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63a948-e176-4d00-bf93-8aac0038da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "256b7056-5ea9-40b5-aaeb-64235e8ed96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ae01c7-021b-4948-932d-731dca3e8b04",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98828158-a97d-4c9d-b728-2418b20de218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09877c6e-9f41-4546-8233-1fcee0636451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca29b2-7d0f-402a-8911-3169fe930cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6afd91f-ffc7-4e16-a45b-5466ebdbc9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71956391-a0a6-46e7-b1e7-eb434db37227",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb3ff00-5171-4347-ae3e-10aaea0d84aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40b863e-27e9-44d2-8bdc-c578ffdf0655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94359556-181b-464f-b320-ae7cac487c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6475cc90-4bc1-4692-a9cd-7a4303ea80af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de938a9-818c-4d0e-bead-8e443efbf400",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081ddd4-683d-4ac0-ac36-ed80fe1e4f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9320f372-70bd-466b-9cb5-9589fecf5f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbba5ccc-eb10-44df-9b41-ebc6d38ed930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e54b47d-3b6c-4d82-9b38-b1a7fc22853a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc0512f-d3e0-401c-b965-58ec64897f5e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a960c64-164d-4877-9ee8-f4cda11e61e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6415d74d-f82f-497a-9042-829032dffeeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e83f4b-d9fb-4386-9677-e9ba636cb210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e71ad0-fb73-4edd-9d17-34e8979177a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ab1032-623e-4c40-bcd2-fa8c8ebd9136",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d95dd-ffb8-4052-8b9f-70c9216e1ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b043f68-e1a3-43cf-b35a-16d0c636767f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5be7e7-bc72-47a0-8092-22e58516a06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe368ba-39e8-40f3-890d-cc9cc482a4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b52b756-9613-4494-8400-36b46cc7d9f8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0ceb95-684a-4391-a508-865d168b43e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836306ba-93e5-47e4-96bf-61a07cd484e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae73386-beaf-4d51-852a-e33084fc8ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d8fc3b-75c2-4659-8798-947ecb78d13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6abe0-556b-4e65-9303-c9a5508a4d52",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ee5fa-7b93-44c8-b27f-f3b0d95524de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f31020-7e4d-4f14-bbe7-5a0432561257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e765f974-3341-43cc-acbd-951ad4534280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bc2fc4-7d6d-4453-bd30-6c610a000b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3563bdb4-ca56-4489-8cc6-53a7cfd7080e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ed554d-7692-4ed6-a71a-406556fa3af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f45900b-51a1-420a-b2c9-f4d50b997b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a285e-7bc0-42e1-bdd7-c08520281a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d4e9e0-a727-4c65-8bf3-928c1d436a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8874a1c-c179-4e5f-93c2-e11a75bdc27e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d3e446-a8b8-441c-9169-4fb7ab1dc35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa16757d-dc1b-4245-aa5f-615349209c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3ee93c-bdfd-4abb-90a5-eb43f81a5988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a04661c6-98a9-4249-a345-9e376b52dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fc755b-f105-4ba0-aac9-315316628bc1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6243e2b-4d43-4e41-a93c-99dbe40168d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "becfcccd-6e1f-4de0-9334-47aa51db18c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c576e5a-d240-4ee0-820b-610e6d3812af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc76a47f-ae0a-451c-a267-fc1a9ad14ede"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3659c7c-6f1a-48f9-8ac5-bb8dd621d7b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53d4a745-cc56-4bdc-8e7c-e13e1ec30421",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97d9680-29f1-4c47-b828-232819cac708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c26db097-8cab-497f-ae35-08ca93c50ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22721b4-e82e-454e-8ff5-00ce81f3b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5454290-dd33-4ec5-8bfe-6b8a80485a74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038db7c5-4b5e-4b64-a102-56719c781b81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46bf2f24-7b9f-4fd5-b5b8-c4217788e385"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4db2609-4215-4b35-87cf-8ca9bce810bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22d8c86b-9d84-42db-b92b-a0f55a5b02e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24353b4a-86ef-46c6-994a-691ba74e84d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3de43e1f-d76f-4390-a3f5-388ca2f66630"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79ae567f-616e-4324-bf52-9b3ae8c925cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9fce06d-9f03-4773-a11f-ccfad7c1615a"
                }
              }
            ]
          },
          {
            "id": "fd217f09-36fc-4971-9499-3e9d77dbc3ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee7f9027-484b-409c-bdf6-f82899331fa9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "70779920-c4c1-400f-98d8-a4809d5d9994",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf5ae58-6299-4de1-a33f-5613502cf675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f01ae72-0ff8-470c-bedd-bc86c0d0b0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491fea8c-cc3b-4dea-a3c6-4f60d32ac0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1897a8-35d5-43c0-914c-81198b2d00b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce56bb69-f9e9-4b69-a41a-b0dc52402052",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44cd5910-4176-4ddd-9845-f3b629e1c4b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b35339e-988f-483d-baa2-ec37bb1820d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194a0aee-6c62-49fa-b478-b0640d2eea1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5494e33b-7638-42ca-8842-ac7389f1e25b"
                    }
                  }
                ]
              },
              {
                "id": "4750f221-c545-4068-8b1e-1c1bf73a8a88",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42397861-a62d-4476-8a52-a9bb3306ad12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c0b2219-0c8a-4b54-a4ed-d382ebd10486"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a81f2259-5219-4c15-9eeb-b985f7a62c42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4def6dbb-24b8-4825-9618-3501fb1b7abf"
                    }
                  }
                ]
              },
              {
                "id": "15f03c02-0ef3-4944-a64e-11ce32c66d62",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e277b72-94d8-476d-8e78-b829724b0e73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8009c274-d1f2-4ad1-a02b-7154e7270b32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d36db3a-f3f3-476f-a95e-421b97efab49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b37e2319-a6e8-4217-af4f-a35f8ef8c252"
                    }
                  }
                ]
              },
              {
                "id": "7d94682e-d811-47a1-af9b-cf89b9614138",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fea3a44-9f61-4e66-843f-981257fc8894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33ca8efe-f10d-4f64-a6b0-d1bc8268ff5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ba5cd37-dff2-4d35-b364-5d4011319772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e9e8e9fa-6174-4779-9ed4-f8cdc83500f8"
                    }
                  }
                ]
              },
              {
                "id": "bd5a1982-e9ba-4f99-b206-3b62757c848c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01fa02af-e5e5-406f-8925-7594a98f84cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c191ddb3-190d-4a17-acf6-ded38182a81f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4bbf806-4e9d-4a32-a2a1-e1844a738220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a0adc81-82eb-4690-b3fa-73831da206fb"
                    }
                  }
                ]
              },
              {
                "id": "d454a950-85ca-4c17-88e3-697fa92cf439",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b72fd60-2d9f-4144-a987-fb8f970132a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "895fa148-60db-412d-805b-975444a09bcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7578ee80-ec8f-4e39-b8fe-dc457fe868ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79f73cee-03f3-42b6-8197-ba9818445d40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55645228-952b-4dc3-ad22-53ee0a15a460",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f037014-cbe2-41c4-afa0-6e114ca7c16e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d042e04-f7eb-45f6-b60e-496104b9939f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31181960-f4e7-4fc7-a393-2b7ce1304e20"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a2aeefd-7d0b-48ab-a116-22dfe8572942",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "972c7abb-cb8e-4d29-af7e-f0c023ad3596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b8adf85-43b1-4380-a305-b37fdfae22c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60d96115-8bd6-4c45-9ea2-c2f791da6ac1"
            }
          }
        ]
      },
      {
        "id": "9d206c38-d473-4265-9de4-0caa82e6751a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0babc8ce-2c04-4007-8896-a31e11886ec7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62ff8474-0159-4410-bab6-3feb306c1ddb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1030e243-40db-4603-b44a-7632f2cc72e0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35606570-4270-4c56-976b-452070c47011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e082464-4575-471f-bf89-1f70429a56c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900664c-b79d-40dd-a1f0-8396bc92e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ecb4ab-c442-4fd8-816f-38c1a8b07636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5add45-a92e-4f88-b24c-89ede60eb871",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b942e6-24c4-490c-8dae-71cdf6887c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9e9bf7-1681-4f0e-aa74-ec85d62399e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b2f58-670c-48b3-a9ab-6be1db08a4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ff72a8-cb67-42dd-8cc6-9a4e5e3cf90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8108cb4e-4404-4528-8e81-0bbbc53919a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472c0dc6-4dbe-4ae5-959d-d59b0f701ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd1990a-cd9a-4537-9aac-42d946adc354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53bb78f-48b2-4a76-a681-83583c03cb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "267affbb-bb0c-4609-a417-cf10ce9c548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05188a1a-1931-4116-8a24-fe13e8e96b11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6257ddd6-2a82-4768-9524-4fdfaa1c2e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b734eb-64fe-4778-90d9-bb5b640afd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83595dc-ed14-488b-88c3-3c9dd5fd7ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb9e9a5-a36f-4a7b-b7ea-3be7cefbde81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a137e-36fd-44f2-ba42-216c93721752",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b19ece4-cd65-4185-9f97-882ef27d9952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845d11c0-6152-46ef-a484-7e0f3477bb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e76b733-46a9-43a8-a0d1-11a3171a7b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d835da3-0370-454d-b5e3-1a02f93f9944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459cd006-6a2e-4bd1-8a1e-04ad3b8e9b07",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef17615-7e5a-407a-a968-8276950a0e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0b61f-de94-49cf-b302-4fba148a15ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5a899-3bd5-4194-a2fe-6731ec889ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2709892a-85aa-477f-a145-7f18d1d0e61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7241fe28-e3c1-407b-b2c8-bedbeab0d0c2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec0211-3ee3-43aa-bf84-7fad8598e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a81971f-4ea3-4934-b14a-045e0c8d4eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6b0bea-26d9-4143-a88c-04dc40337813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a0d077-e897-4b8c-bca0-883cd6eea6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc1c3e2-e056-47bd-a5b5-b1379a189d16",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7715eeb6-4ca5-46cd-823d-9ffef195e8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26f6756-c894-4402-b8cf-cd753f2a9674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8711b9-adcb-4103-9c45-a3615037c520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc665265-2152-4405-ac72-32adc657155d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af2ec05-a847-4b93-b903-c9c3172caecc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9c9ae2-5334-4d5f-b574-51340f13f639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642144a-8cf1-4bba-a3b5-cbf2ff568a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbaddad-6cea-4404-955d-952cd8fbcbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab5a44f-ecdf-43de-92f7-ed8c8338b4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0b1e11-42e6-4a25-b446-1131de283595",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b97233c-a7e9-4883-9887-d6566ec284b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e9cd79-e3bd-4ae3-b931-cf96c11df218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33969d23-3e9f-4592-bb48-bf977c9bf74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed874e21-de56-49e8-8782-314be22d5ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1be57f-3ad5-49cb-90bb-e5920cfd21d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df885fe-a1b0-42d2-a1e9-acb334df5909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3eff22-5996-4519-be00-720cb23aeb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef0883a-29c1-4b44-830c-bb6cab8a151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "51d72e08-851f-4e0e-a240-5181014d3043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da52fbe7-cb7a-4cb0-ad06-2cf8bb2e9e69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623c9f30-cb35-48bd-b1e5-2a74d9b08208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4721c848-2ac4-4838-8926-20a79ad21dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb64727-388f-4459-8434-eb7d3539b8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "698fb36f-0df6-4c5c-a564-1ed1d669da69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e460239-c02a-41a2-a11b-c624f1167b8d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f25264-4fbf-4909-8cb9-df4eb21dda36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81a8a68-275d-4592-a326-c0dc44936c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c043572-ef34-48cd-8f0f-40f656509112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b369b6-fd41-490d-9cb7-f71910a5aa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c86826-4ffc-40b8-a02c-27dc20c2a7f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e9724-f99c-43a8-87b3-d82dabc8e2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3175b5-bc39-4900-8a73-6c3dc3e96b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f8f465-9c16-4646-91ee-0d378259939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76ac190-1ea3-4131-9971-f50cb1f52e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560c77e9-22f3-428d-870f-41a635ea2174",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311d5544-7c74-4e62-8137-715b3c453eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e44470-e0d0-4d24-9821-1dd226e21228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d9a919-cfe6-48e8-9bf8-d2c8c86bd295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da37d1e-d661-4884-ac39-1aeb2d0328d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4415facc-272e-4666-8c32-9712e9217d26",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bc5072-2522-4e5b-8e47-6a1df7764365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca29f2e-5272-4287-9e60-36dc5cf9bf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209abeed-8626-4226-984e-e1d40489cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f859c62-d22a-4a7b-82a7-268ef746a17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60165829-6476-4730-bde8-e686213d95b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe0b504-44fb-4fcc-ac24-50c6d821acfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274e32c9-c7dd-4b91-a16d-97c040582a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deb6048-5858-4d94-9b1c-eca797c71c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3611498-ecf3-4176-b6da-eb5d14022348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4c7881-3ada-45c3-86f0-ea864d4cefae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3534f79-14be-4d59-8954-b8dbdb960407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1580afc-b364-436b-95c0-3e48cfae5aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4dc760-5aaf-4b6b-83bc-18dabcbf8606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be7ba95-e9eb-4919-b801-41d982618e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19ef33a-58c4-4fe6-b1ff-1e513b218b96",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207b3c9-7106-44e7-a9ae-298f15f0d6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90447541-3cae-4c12-871b-71de89bf7d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96d056d-73a4-4ce1-9c80-e3767b718462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59526760-f52e-47cb-9188-13a49d5536c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbbe29e-1605-4e0d-88e9-70a9d2771e6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5139eb-912a-4d50-9e15-48fe9f00996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d9365e-c570-46f2-bddd-68416695a242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a38821c-72ac-475c-9357-6f1e58d57eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cf2bc5-f164-4c56-9bd9-2b160538687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e8f238-a1f7-4324-b5ea-0e6cad15fb70",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08206338-05c3-4a82-bc87-745c40ed3547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e245a7-af82-4390-b7c8-c64d6412111b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2181be84-0543-4e87-908f-0e80e7eb6f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318e7c9d-6108-4117-94cc-ded79a887c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3985c4-beac-4c5e-9092-a996ee6c2d37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09476d77-4670-49df-9491-29225a14f0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829024c3-a8e6-43df-a56f-a30f080ac32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06641806-7f46-4a70-8ab3-d53645d2f2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "642a031c-d504-4aba-a9cf-36e9dca641cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ae1f43-11fd-448f-aa01-40eb147c3f6d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beebfbca-580a-4802-b461-3fd05fe9f17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a66e0-5f7b-4595-97ce-cd288c1f2466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f3b4f1-13b6-4736-bb50-eedf29bec3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa93b9c-57c0-4782-a552-023262aa1bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697b7abd-e21b-4d77-839d-d9f6e081582f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bbd003-6ad6-43eb-9ac6-3a43280bd12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddb5600-43f7-401a-93c5-79f21d0f3566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b22631-0235-47c0-b4d0-710554d9e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5ff02c-e831-42d2-8693-645c142d7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e661c94-8971-4f53-b04b-30a84c836814",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48d27b-37d1-45d5-b905-aee45877d755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f20de50-bbca-409a-b405-36ca711df336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c2f07e-9d7b-4434-9b75-d90da6cbef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff78285b-f968-455c-a6f7-c3cf34d3acc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea83286e-bcff-4a2b-a748-fc3c9e85efa1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f6822c-1e28-4c41-8105-c38a6e53cd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bab8f0-8312-44ba-8eaa-581773b39339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63932280-081a-42fe-a813-c0b486624e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf0e3e2-0f4d-4f2f-8a99-99218c97fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d50699b-5be5-4884-a05e-b7fa835545f8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fafb86-0d56-4f37-8ff4-53552600b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4f4558-b389-45d8-b42a-1dd39f46b2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64853f26-255b-475f-adcf-7455f4f03b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4c6a9e-c388-4b58-85fc-413472f17f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c7e1b-16fc-45ba-acbc-d5ee515c13f6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c8f576-9b4a-4964-932e-0c88b6e5015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a0ef91-0df4-49ea-8ace-ad3c777c2427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79bcef-b478-49c4-b103-9193490b70a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad6ee3a-3d1b-4625-9828-b0a5ec679c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231beb34-4c30-442e-99da-e47bb1991ae4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f8070e-bf41-41cc-afcb-d7f622e25f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23861a5-526e-4e00-91ac-5e27ab2b9704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97b7d0b-5e3f-4037-bce4-84b3ffdc49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bca39bd-8a84-4296-9d52-32cdf515dd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3331742-117c-4912-892d-68435cb971e2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de5790-3be8-4213-bb7b-ad9eb7abdb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5577276-a6aa-4ecf-881b-17b04b52779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b8362-9d0c-43dc-b438-2429b544e506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7082b4a8-c208-4d2d-87d1-432138b0c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27816e21-3ffa-4fd1-b229-ca57839fd97f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d813448-ab39-43d6-a9f1-70770a6b2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbcdda3-4b59-4c0f-8119-0179a16a6806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71d0adc-9c07-4a51-94da-aa02e0f44b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef8de7c-a980-4f98-aa5e-82209d8814d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74816d15-1033-459d-9510-3c52e2cccf7d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318c0627-04e6-4501-afbb-dfcfa4634ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3434af49-42e9-4677-bc48-9a7f219a8bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4d9559-fa16-4201-9eff-d91684cccf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf810ed-71aa-4269-8bf1-f053ceca7deb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f27f4d37-4cba-42e6-9590-ef975a7480c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03109b27-98e8-4293-a758-3a83ead850c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe0cb3-9fc9-4c03-bdad-2a96933a372d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58e19aeb-0199-4271-8fab-f4bd03ed55fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0bff95-818e-4bc7-a54f-6b2d97935ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c36d373a-b251-455f-88df-43b48fcbaf5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70fa89b8-40f5-4824-9862-d58c95da4b14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1772482b-7953-471d-852e-cc1b45b95f17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2586ad23-5e95-4fb6-bedf-a6fb1ff94b71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "470b606f-6d22-4ac6-b526-1ac367dcf2d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b68f1dd-f882-41c0-b05e-db9c9d28a9f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d24c402f-e164-4451-aeb3-50d19c54d655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dee19265-459d-47f7-94b4-d355680025ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc56510f-2093-4069-ae7e-fddeae528e0d"
            }
          }
        ]
      },
      {
        "id": "046582cf-7bb8-499d-9e2e-4553c996f86f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8dfac969-e451-408e-8f25-88a0dfc26878",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2faf2932-bb6c-4276-9399-c15edb5d60c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78a94930-c233-4682-bf78-5bcdffe1cdc6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbed149-093e-40c4-be59-4550e6f13234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4cbc08-ec7f-4e79-ad1d-1ad8477902c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e371c592-5107-4ff4-9a35-4927ce779a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c21eec-0033-4493-ae92-aa57f878fd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a44ae-d643-405a-aad3-dc38d17e1ffc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f0734a-bf38-4680-af81-63717096e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ca673f-e8ec-438e-94f2-b617c0e47bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888702a2-6fcd-4913-b5ee-039caacedd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa707e-52f6-412c-b250-9949b09baeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dbf382-8970-4ae4-b3e8-58c5711a83f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67e89b6-d963-4d38-a7b5-0d95731c29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17453463-c9f7-433f-a7e6-45d167347078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5675fd-5389-4826-a8ca-be1a0c222809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89fc3de2-64d4-436d-8cff-125516337c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8720189-f7ae-47d6-80f7-e38d59fef069",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbb47a9-1452-49f2-914d-ea711166b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2d1177-12eb-4c02-8a19-c3b71c004983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1345ca5-602c-4fb7-b4b0-32a1d7be9b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30fe224a-20fc-48a9-ab94-00c767da9375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbb0155-5ec7-4818-942e-fd9489372719",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff452682-3439-487f-9643-4cdb83492fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339d60e4-3895-4495-9a25-967f725a8ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3da22b-30c2-4003-afb9-68d213e444b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6d94d2-7227-4f2d-9684-e9d39d2a203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7365c5f-c217-44ff-9fee-727390204645",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea5a3b6-e54d-421d-8662-3e237bf38e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc63376a-4256-4a9f-997b-1c3b59705964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877e6daf-f6ab-4672-b271-546dbeac983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31940b7-edbb-4162-8708-494fbd02b54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a6fbb-b7d0-458d-ba93-7b6f1e520d9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cffaff-e922-44e6-9386-bb7c37e68e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788e6f8b-dd2c-43ea-a6d3-19ddd244fb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96617bbf-21c2-4c3e-a6c2-27f62628f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd72da7-1ea3-4baa-a4ac-3403f7322491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3b21c3-2e8a-4c27-b2e2-f7ce40f626e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8072ec21-cdcc-4a5a-b557-8e35175d7a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2bb8ab-4623-47a2-a633-79be753f4935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5845de4-4b6a-441c-bd2d-e1009422172c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39324f7a-1998-495a-90d8-ddc9aba672bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceb6797-0d20-4e68-8746-a108c1591ef0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a6ed7-9b9d-4cc7-97b3-5c4dcecd0a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cde2baa-df8b-40ac-97eb-820ae05f1b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec46652-d1dd-4a07-87af-ad7ef44789b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded30a5c-43a0-457a-9867-f6f18bfae452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadf9cba-5734-44f0-aa3c-210f5aa78858",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc4e8e9-e488-41d8-8c6f-af66f9406a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0b8362-cc32-4bab-90f7-45b89a59206d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9076d0-dbb2-4bd9-8b99-6acccb4243c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c80ddf-0cb8-4f41-ad05-3d27a8cd38a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96871543-0c6c-46f0-a549-c96ae3d751aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82a2056-0bc3-4466-ba8c-454ef5d7c786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb18e17-42ac-476a-a29c-985e1f7536ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0f7fe-ef67-4cea-b375-926b6ce01984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7aebcc32-a2bc-4471-b180-0ff777090cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026dff51-ee18-4947-9332-73b8794eb3d7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf371c7-4209-4353-8d63-fb625ab9bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2ea5f4-5a3b-4f3a-8472-44a6acfebbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9abdd7-3d33-4d79-b2ca-eac01f8af93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddf144b-8ee4-401a-899a-966e95d99c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c807a5d-1d7a-4ee2-b514-d76c7dea035f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c14d9f-a2e4-4628-82a4-e96c6ded200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8ad8b3-aea5-4ece-87a3-d531c493f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e254a9-e7d8-429c-92df-09fe6e43e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfb408b-2fcb-4587-87e6-cb86374c165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ca9cf-30ad-4f5e-bc4c-c07b73492482",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e56f5f1-2272-4b8d-8ca2-71b0a01f978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12492bef-6edd-451f-9652-020da8e015ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58253bf3-5c3d-419d-b672-106f3f40e5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdababd0-8f99-4bb1-8c59-57ca1f38990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b98bd93-23cd-4aaa-9665-651dbc231e9c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da713c0-ace9-438c-91bb-f4ffd5ffcb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f58474-7bed-4766-be39-2e604b1d802f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e602fd-a57a-4a26-ad74-06673b85f2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f31590-6a1c-47c5-8a81-86b191683e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c88af0-2c17-4c28-bd55-ab153d9e2c05",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc20ae6b-8842-4fef-b5ab-2da78d89e9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64c92e7-f934-4209-90f4-322afde20f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bb77de-bed9-4ec6-95aa-70fc0cfa161c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "829e754e-efda-409a-8901-013b38bf7c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b659342-4b45-4eb0-b7e7-69dd5b424883",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a614d5-f640-484d-b3b2-669012b90f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10917ba7-6ead-41f5-a8da-05b52401ea8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf90c28-4ca0-4e61-a30f-eec94834b2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f63d54d-d224-4590-8ad7-c30dc64ed7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd580d-4e52-42f3-af59-a721c717ae1e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d506a6cb-f632-483c-a07a-445b81bf15e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2bf073-256c-41e2-b568-64d30e3217fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e6863f-1a6a-4533-b403-5497f9928a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5ffb59-e4ce-4569-b9f4-30523154568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404174b5-b276-47f4-b1fa-8d5f1a0d1b88",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d513523-2297-4045-b0fa-94133e0c94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d96f1b-7b31-4518-bafe-fe338fbde742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a184302d-f5c0-481a-ad01-5bbf8d8fd95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18369de0-f829-4391-ac27-7702689fd16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d6b34-0bdb-42d5-9499-0ed7d2dfa56d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9749f5f-8f00-4c1d-b66b-09c2e69be250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea8c2cd-663a-4686-8d06-2639263a5c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e93ad-d6f6-4bfd-9917-d0ac1f6ea149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5403c31b-7fde-4764-bc09-6f7f1a85a3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a416e43-4fe5-4c56-9a41-2f3f8dd7f32d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6836167-20c5-4e94-a220-5cd7e1c2b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef446e3a-fa86-4b4a-b628-b64f24c9afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e818dec3-c7eb-4004-ae77-3b58bbf2e0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b940a798-7f32-4328-ba01-b573c8ae6a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7209be07-0062-4adf-ae80-1c1da1d5a2cb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7609061-1ab5-4356-b2b4-75cd05bb2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07431807-1b5e-420c-8df3-38cced5ce4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1410b2-6d27-4c13-8f1a-fbd6470f54b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8299f1b6-d403-40c7-a600-3f94bd832bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aaae86-2b8e-4008-bb9d-d276b0db34aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ad3710-ad23-43c1-b3cf-08adf843a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0c48d1-6cf8-405e-926c-197fcddefa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d9fcc7-1570-42de-8c75-6a521ed7745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fef013-a7e6-44f4-a845-d85e794c0bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e49e312-9836-49ef-a76e-6c316e0f9e97",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121e11a7-fdde-4e52-8ed5-38fcc9a379eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0d6a47-356d-4ec4-ba21-2b4bf8074ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b820e60e-d38d-482f-9871-effd88210044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6ba988-d45c-42b7-a8b4-204f49277154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd668a0-3caf-40e5-9308-acf990237991",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedba9e0-4940-4288-9311-fb100eb310ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4593fdc-86e6-4b8f-9bbc-0b22dc9aefbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3b495-65fa-4979-859d-30130eeb9bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b06fb9-a04d-4b2f-9853-1f283422d5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3f50f9-dc16-43be-900d-10586cab716c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bfe071-42c7-4e72-b6ee-5c51ef197346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6f7583-1db8-4a7a-9b65-aae049b8a4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7218e909-64f3-4e29-bfc9-3b009aae92be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e093ec-c0a8-4143-a4ba-03e3f2eb67c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943cce69-a385-4a6e-82a2-2556a349093e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a642d8a-2c24-4215-a47d-882494249de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf7c67b-4464-4d3a-90a3-4aa768ced3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b81603d-e376-4ed9-86e8-31abe5d9155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134d705d-cb1e-4550-9ba3-200ff5d3ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8585947-649c-4e94-9e52-0fe78c40fab3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e102b-0fa9-4f38-9125-882dfacd73d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa65a2b6-af5a-4231-beee-b50ee4784cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aadd89d-a31a-4659-920b-f753ed8c5690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c298c4-af1c-4e3d-b405-f380150a8055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd8971b-06a4-4e12-a733-a8748bd9f9c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba32c5c8-e25e-4a77-95e0-666c27a349e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a62cad-1c6f-4d6a-bea9-d9a8dde4cf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac21e458-6fcd-4e4e-8f19-5fb133afc7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bddfbd-66ba-4337-afea-f912ecc0e9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4982b0d-6e6f-454a-907b-db5e6e405676",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adab023b-4a87-4ecd-bf5f-6d8c2330ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e99aaba-7c22-4bd0-b377-81246a9f762d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98ea7f1-5749-4081-a655-daf308410430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39934632-47a8-4a26-b760-9128a790b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fc44f8-312f-4ca6-96d8-96bda8e8cb5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6da0ac-430b-4be4-890e-5bb7d60e5096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f15405-8a2d-4f65-803b-56a2687ca5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01ff3d8-b110-4240-b13b-63f56de3d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ee3539-d5b7-4b43-a168-b523d6d00e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9d968c-27ae-4820-984f-761c7835f9df",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152d523e-9a89-40ca-976c-50d0a790df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d8d778-7ce3-4784-828d-a0d9b31bab46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f294f2-cd3c-4d7c-b25a-a9b48acc54c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4428cdab-7590-4a36-87db-308746258a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f39772-d6c7-4e26-9e75-cd7307635513",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6a5b13-1bdb-4ac9-b607-3ad65cda7d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8b1ed7-693b-466f-b2af-0e937ab663ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f120ccc4-9a5e-4a3e-944a-250fb774d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e42399-3d53-4ffd-8740-b6a6df264c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed01350e-5f94-4bb5-bfa8-0ba1c37b2797",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12844fed-02d4-4343-9d99-49fda5b924e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af84130-c5bf-4e79-9a5d-a23d9b6aef91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7113ac9b-6795-4b0e-aa9f-9dbd93726d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bf34a3-643e-491b-8c0c-30af6de2dfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fe192a-d0a6-417d-ad76-d5d9089b27e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae9bc8-a9b9-42c4-a0ef-f3e4b059cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa66681-8b75-4675-b547-7d1619b9a10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba2210a-5e10-44f8-a2bc-9dbfb8a45277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d698fab1-614d-4881-b37f-c2b7a944db04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ab39fe-5fbc-4584-b345-1cf6510af6f0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c0a9e-a0fc-40cf-a9d1-576878f6d7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ace9d6-33ae-4908-ab0b-4782df61f098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5945d2-eb39-4695-ba95-3b7be0cd73d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16315f5a-4d73-45a3-8666-5a1572f6e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daf4f5c-1dae-4526-b388-4f0b5d5c694c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434841bf-dd97-4719-93e4-f65eaeb44935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45697ac7-159e-40a1-9738-ca94c298a4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82831e49-48b8-4cea-ab5b-41052937f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bed26f6-f626-4a0d-b808-8a5e9c3ef88e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e442014-0ee9-40fb-b2a8-66ec199f7997",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77271456-37e9-4a5e-9eff-2e58734ea5e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fcd29d-2c79-434d-82dd-5a00d81d397f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba9b62a-73db-41e1-aaaa-47c7c8b34ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b3042-2498-4314-b84f-9b5cc8e0b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf19bb9-0330-4f51-8c05-36a9a63c621a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e318d40-6a32-4e13-8df3-ca26cf58bac2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b6777dd-3064-4edb-a185-406f9d49ab29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af6c8294-7c8c-413f-92b9-c3585b9a5d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8e09132-181c-477c-8241-d6096955821d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3302efec-f41f-4e2b-a5ec-c9797833499d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8f1b2ec-9c18-47b7-ad5f-5b70562679c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c5917fa-9352-49d7-baff-0ff867fb0ad0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b02e3a77-d822-4aa1-9099-d3ba9a729ca8"
            }
          }
        ]
      },
      {
        "id": "c9d4bc85-3021-4307-8de7-08fee5cc5b3b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "74a4076d-7a89-42e4-bde4-3750bb4d10ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd064a3b-8763-41a3-a906-93ee47a9a902",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d14a572-ce74-4c50-af02-9ca71936299b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5d67ca-5f59-4b03-af03-0c7034b9f2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc2d3cb-9030-4996-9de6-c5c652b97a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e13da4-20a7-4484-b3f5-22dfff0b03e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4bf63c-d475-4f75-b510-0182fc601e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634a2c10-1f33-47a5-8a2a-0df17967f541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30a569b-a514-4854-b4ca-e06070a363bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fbca2c-721b-404c-962a-00522bfccbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4274ff-50fe-4b9b-9776-7d373dfd79ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a8641-b994-4d11-ae4f-4de6795c8573",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db3737a-fbb5-4afb-bf6f-ee990e641484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b220ba5-a9d3-40ed-af6b-873d0af8e294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2b3df3-c431-4812-8d68-35fb1a9c06c9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bdab2a-6bbb-45a0-8477-35ab450c9793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1f7d49-d377-4446-9b34-072b6a614da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553381b1-c682-46f7-8a54-4338ece0e9ee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee18652-c524-47c7-bb54-f3684c677a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa77f29f-222e-48e2-9f1c-eb0443c6ec33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a977fa-8bfe-4b9c-8403-ad75060e987b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a622a09-ca16-4267-8083-ae0b873da416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b398c417-1546-448f-b05f-00b1bee3b396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3585f557-2693-40ba-a684-27e3b3252d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41861b7c-18ef-42e2-93e5-5bbe551978d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa662f9-45fb-4219-b22f-2f77a7e5ac64",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8ad27d-8b00-48c6-8b6e-148eafc0a03d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1092748-996b-4c5a-b0b2-6977c53ac5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc01dc5-a465-4093-a28b-13d1991b307b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e194086-e19d-4fd3-afbd-e07a3bccd209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb04198-b6f8-41f4-8ccf-13fb4a569532",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feeeac6-2365-4dc3-80e7-357dd8f836cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8144a83-3d5e-4024-a9f7-4716566a79fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dcdaca-6327-4546-8e9e-b01c9b2dca11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6699b5a8-86ca-49dd-baaa-3f7db582fe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe15843-c277-466f-a30c-69eb5cb56ffd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cdcb20-002e-4275-85b8-c136103deed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b56326-e67b-4b56-a1cb-39b25c790fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cd6f9a-c0c5-4ced-86d7-7a1e48a233a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0626700-a850-4cc7-b4e0-34ae37c98e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6624aa-24ca-4971-a109-27b60e7bf276",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63d64ca-2be7-450a-b21b-351f61bbb227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90efbf65-80c4-4194-9cf3-395681862e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb59793-4482-4d36-87a9-37b1d998ce03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcf2681-6d71-4c36-960c-cfbe07875c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b8d363-f36f-49d9-be85-deffa765c101",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48808c0-2aea-4938-b259-bdf803d24903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699e9bb0-218b-49b9-8e5a-0e43390159a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96546ba4-2e17-487e-be22-03faf6b01a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7392672-11e9-4671-a068-cce22b1ebeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253e3c3-4787-4d6c-b341-74a57a78f2b6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c66381f-cdcc-4915-b010-109cf9cda3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92be0338-797f-439f-852a-ab4a0f84ffa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33c50ae-99b2-44a8-8c7c-8812bfd6faa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23e25fd-e7d7-4d28-82aa-4d8b326dc24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b1d9f-7882-4511-a1a9-7feb3bdafe03",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a615d78-0824-4c2f-9a9d-e9c3e7fa2453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66848cf2-8f1a-4a68-91b8-0b5ca11f59e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02135618-0211-4478-8ba9-6abc5e8d1dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ec88e7-3e97-4ac1-83bb-3d1385ecca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e8b02f-d046-4167-99c1-a96b4bf500a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d58f0d-b335-4f2a-ab9d-adfff4d3b7df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a9754f-8494-4dad-a812-5d5d5dfe9fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c464df16-3864-4d09-81d8-5138215cbca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f01bcc6-bab2-43a5-b65b-20cffb1f72ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b406177-c2c1-4e8e-b20e-2c9397159091",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc1e48f-3ac7-421c-9e4a-7fe16e2a1bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5b0ef7-1833-4de0-8d6a-a521bab9aa82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9533efa1-1d38-47da-b563-b7d68a46e382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe357df-f230-4d93-892a-5b1b87b4aea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d89db1d-ee35-440a-b01b-32d85dfb35e5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1583fde-c656-4ffb-8778-cc3c03acc7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e304d49c-1cb0-48ba-955a-e6f651655821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5633abe-493e-4cb0-9c94-826a1fa04b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cb64d9-78c1-4598-b962-befe3fe89c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd07f22a-9a95-47fd-94ed-5f504fbb3186",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa75f43e-4dbc-4d6c-85db-309b392663ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a647d62-b304-4e6b-892a-528c7585f082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc2980-4e31-44f6-b3dd-f6795f0b1e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069dc5fa-6759-4531-8433-7a837f66f127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960c77d7-ca02-423b-b59b-f5dc6bd4c4cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f7f069-55c8-40d2-b091-1831036478b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e55105-34fd-4801-882f-bd4e9926689b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1cbdfa-f6c1-4dd6-b30a-7a78b1f887a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c319875c-5979-4442-b6bf-6cdd30243866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51759640-be3d-417a-b4f4-9af1f1e3c442",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570cce91-651b-41a1-9f55-195fc48d999d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90928e74-3247-4745-9b16-3da7ff9eb749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a17285-c450-4f69-8353-7c659ce79f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5462539d-d692-4bf8-967a-04fe8f6c3bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c35a42d-414d-4484-9c17-3cab83039fff",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e629cf69-18b7-420e-abe9-833ec9320ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc267d1-23ac-45fa-b255-56085b1b2566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8699e10b-04f4-4e5a-a585-5192574c2df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92684234-e6bb-4fc3-a95e-aae242d7c144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbd2f98-e0cd-4c85-bc20-f0aba65df112",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4913d1a0-7650-481f-b591-4914133b8caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e56c673-2793-4d91-ad6c-c14c97953dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631670e-0956-4fcb-bb69-272b80f05852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580e342d-b7fd-4e3c-bfea-e5976b779015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb4230-232b-42bb-9102-9c0cf6979ba8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e9ed81-b9a7-4221-bcb5-4efa156ace6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46af65a2-f5bc-4418-a96f-d64866f407cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e05a89-ebd1-4733-8583-d8d455018038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fd4c04-6b8e-4b04-97ea-cc27502551c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfc6748-82a4-4c28-bd32-02a984b38ac8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43ae863-6a54-4684-9d2b-502f4c683a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0778979-3a0d-4c46-96ee-27c8e95d3404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99695578-1c21-4882-a5cb-f2a12c5292ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9611f251-7f24-4525-9cc6-91a14554f45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3644692d-61ba-46b7-9859-2447ea7bf82c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a80f96-d75b-42ce-bd40-1d78d070bfa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b0035a-f2b2-4ed0-b7e6-a9a858d65a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2b72c-b31d-4f3c-92ad-141009edd3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5259a0-cf6b-44a5-b907-e0b97f5cc667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0725e9-325c-43da-9640-599691e2b35e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2479ee-2d80-4940-a464-5e702b1eac59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f227da23-3ca9-42d8-be1f-7e6953224d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f06895-22e5-4388-b24d-6d0a8b2c6c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05e9f20-d508-4f92-8952-35aa23c1f72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d570f24-262f-47c3-9260-102a187fdadb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdf7d61-6f3b-4101-91bb-f016008c85d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e3ceb25-a30c-4b0f-b659-c2667531865c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20ec82f-ecd8-4b36-be34-c0182cedb30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07841ba3-c1d8-4933-bd9b-817d017c0109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87161351-2ece-4abe-b14d-83fc9ee08f45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69adbdd-4284-49d0-8c95-6ab693ed6ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd77a0c-474e-4ddf-bc35-a105db1b407e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bfddab-d4c1-4a96-9864-af1cb5802953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506d1daf-0ec9-4044-8423-a9812a0115b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fe9102-6947-40fe-84da-e51379f3960c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6579625f-7073-4b0f-93dd-5041804de871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edda6b85-20ca-462e-b342-34bfabac93d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522ecf4e-8fe3-4d26-8555-6521fdd71db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e077d6d6-ee28-46f7-b01f-76c91bdf1b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b02199-930a-466f-8ba8-2f8bf23e7ee7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d90721-2a48-40bb-b60a-138ee7c789e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fab96a-c357-431a-821d-e066d2175050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a418ac-f327-40fd-8887-332bab008b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1284c27c-150d-454e-9570-df0b71b7e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc8f292-c837-43f5-81bd-b2866e5d258d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac0ec86-e658-4311-b842-c4dfe305b254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2158befa-7808-4a50-8184-5c7f44fbdd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6502172-8c40-4056-8a56-75531c0c2fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c8f835-94cc-4ec3-a9f0-0fc3dd4bc5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c0a16e-f679-4959-bab3-488bf29b614a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4830ba-c892-49e1-ab20-4b0edac4c7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0bdeb2-dc87-4d4a-a1e1-780c357ea9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d4318-ad7e-42ab-a8e2-368508350305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db587a43-1339-4d2b-a608-107ef67a8dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c6fbb8-b68d-4d5c-ba47-9d5cdc96b0d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7d3b85-0961-405b-8a46-c16ff876206e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b7c474-ca92-4309-b901-e6f950550f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a43498-ebde-44bd-8e94-58e041513443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a2cf8b-c9f7-4bb3-8760-06b069162712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f5effc-8cc5-4e98-aec9-290e578d60d9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ac08d3-6df8-4b63-9516-abb08fb22100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a24657b-a528-4b31-9f59-7f533b39c42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add3d905-695e-42ca-b83f-8e295f9eb8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd7ca96-2068-4bc0-b1dd-420cec7f4e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3d5c37-6778-4fa5-b404-8d96deba5db8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e77f99d-ec88-4427-b307-c6640fb74600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e8a213-a2d3-48e8-8e0b-521e874fcab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0aa507-9758-4f9b-ab9d-740620b38af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aa7345-ab92-4d70-9b56-7f7324825da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98940b32-a341-408a-944c-f10e04e18a07",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ecf24c-fc9f-4e02-892c-18fc8f8c34a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0277bf96-fee3-4b6a-8db1-ef2858f27c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceea4c14-fbbf-4c6b-909c-12af599f85fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb34379d-c11d-4603-9de3-e6cf5031e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe44d72f-004d-4684-9fbe-8f248191ce9f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d3cad7-60e3-4bf3-9a89-61c1b6803fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd5a3ed-c934-472f-a7b4-dad4b9f1a57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a358ca-a41c-4116-bee0-89bc72f4f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5f5641-43c3-4706-85be-f186ef23b42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866b62f5-dc22-4a1b-85c2-d6e98670622c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5cdff-51c9-4cea-bace-45d1eec9a505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72eaf66d-e451-4565-86d2-2a1c7f7e168f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266d02d1-b0f8-47bc-be5a-b031ce33e6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3887ac1a-3475-426b-b71a-6ccec15801f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e9616d-b4b9-4e0f-b472-4f6e15f51300",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e19e16-cb17-4d35-854c-8df5ff8695c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd42578b-9f32-4095-a4be-3d671f364604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693180b7-68c8-4739-833b-de7676182410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767726b0-9761-4dca-a988-f84a92f04a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6485f4d7-5b4a-4fce-9c83-85ee933075c6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e48b9cb-a35d-4e4b-be7e-e478272a4994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31957917-3baf-4073-a9e6-7a279ea6312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa3bc4-2f30-4e2e-9015-113cdf66e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e46c78b-ecaa-4ed4-a7bf-d2c8e008a29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e8232-e54b-44f0-9d1b-97168c24d958",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf338623-d45b-476e-806a-b804c81c8584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd49ec2-615f-4f53-aed2-9268f1e6fd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d0603-0053-4e76-aea3-015185d09e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608b8fb5-edd5-4194-87d8-741009cb9954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fdd9e2-0a2b-4881-a4e6-a083948d3adf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7ea770-9cab-4fcc-a19f-5727e6f5646d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d34ffe-4928-4a6a-8164-f42cf7621231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f35880f-707d-40f6-9f0b-3fd21d617d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d146ed-8a9c-4212-bf1d-5e10be5fe218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c273b-f9f0-4710-abc9-aba7c650606a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0110d1e1-03c3-4b19-a8f8-3dccb2520748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd65c00-99c0-489d-98ab-b754626d4f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c5dda5-5dfa-48c4-b8a1-905a92129098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5394b234-6dd9-4477-9e4e-9ca988ce00e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5560313a-da1b-4567-9b35-02b92d4f77b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cc4395-f0cf-42c8-9845-7e392022f370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4833f21a-2ce1-492e-a830-1d9a89a7f92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca12c12-9165-4705-a395-dea4b076a29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52e3357-d975-432b-bf77-ece417c58e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5a09bd-4c87-409b-a394-70d01d96ef1b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9e8846-43b5-4ef9-9237-8286adf77ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db35f47d-1463-48ad-93eb-9950cb979cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ccd9d1-cdcc-4cbe-9927-9eba44f60195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8ffe88-2aae-427c-87a5-1206e2125283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd44e32-bc9f-41e6-a670-1bf1031a09b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be917f73-2572-4364-a5ac-310af4d72272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54731942-f411-4210-be37-1c4396672f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8d00bc-10f6-495e-ba9b-e5ae2f8c160a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89308250-51b6-4b07-bb3f-d26f8979add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b749151-a93b-4ccf-9b9a-04c73f084644",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851bd706-bd5e-4187-9693-c6b11e9ea17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b6fde1-855e-45ac-a411-646e8fa08c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca7cb4d-3056-4a43-a0c2-287c8b87fe3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9604d4-88f1-46c8-83f6-434d1f0bade4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b12941a-48a0-4ee0-bc32-b6aebfbc908d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe60c51-53d8-4dda-a87a-2227c63ee7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce126cd4-c46a-41e8-8444-629e0cac20f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0e37f3-1925-4c97-8cfa-0313761f9fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8d84d1-96db-4d8a-8254-7cfe72f4327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26841155-47e8-4b40-b293-b4933b1b24e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef39501a-3fde-4874-a660-08b08d1d0f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c62b6f3-a6ea-489d-ab75-9c6e069504ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816d6754-e567-4090-bc99-38ad1a96e4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6aecf2d-29dd-4872-a6e5-944bbe9e4b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dbb742-69df-43a8-a46c-c236c5ca2333",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dfee46-4f30-4b37-9565-582a2786b45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab552544-f894-4ef6-bdd5-aa1e86747509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc6731f-6c27-4fd1-ae72-0813098c2918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5364e686-7dd2-4cbc-9818-a0d04aa9b67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3431c09-8ee4-4b83-80c9-aebdff8dd828",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3b3ac8-becf-4911-ac89-8bc931a292f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d3b9c0-0295-4931-8da9-dbee0db4f98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fa3f7d-e6a2-44b8-95d7-1701c48f068f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ebb736-8b85-4835-ac47-dfd066799640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e923abfd-5070-4dad-ad92-377ca3ef4937",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa861cb3-2228-41a6-a105-ca049ad7703b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2d3a96-b60a-4f95-93b6-9261c27b20f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f72badd-038b-4d54-95fc-68c6564d1d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af1c29e-1461-484c-96a4-5112f3016cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4209c710-8f2b-485f-b7be-146f2c28ba82",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8096d5-5954-4446-8f9f-10dc0fc8b734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7bcd16-1e03-41c4-8a91-9ff88e20a3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9695e883-9c6a-4f3c-8ca8-42876a737e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb3a22-a097-4d1e-9490-de06c42d6cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc22ce3-ceb1-472f-b864-69c2a6841210",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6180e252-bccd-42f0-bc1a-a4d3a2b65c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df78eeb7-fd30-48ae-83ee-66e6ac95cab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd37817-4dc9-4c88-97c8-d9ecd7d736ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214526ed-5503-435d-9af5-f8c14467c34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdd5643-3df9-4ef8-80cc-18abb51654d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0651dbb-d7f4-47c8-9f36-dd8793ffdf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8fc54d-c7d2-4c6f-b9e3-28476e5b918e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c281cca-e855-496c-b677-f1c663a4b79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebdbbe9-3ff3-477e-bf71-9cc3af882ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b11396-c3ef-4636-88d7-e4bed970ccbc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985ce31f-9b69-42a6-ba18-e143514f9f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7a7274-ce72-41ef-bda9-639cbd8633ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bcb4c5-bccd-4bd3-9c8b-684d78c7f78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9619499a-8601-4ce7-aef1-f79da4544c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458598f8-1774-4c97-9f52-33900e2814ba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af440ce9-3c2b-44ee-a534-5dd0ae372a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76d4ab1-472e-4d1e-b600-2ef8ab8b526e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778f180b-8a41-41c9-9eda-93bbb221e360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb05e2e1-9185-47e4-acf1-9c4835327cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7638a6eb-2145-4d3b-b83f-7e68048d01e6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd81cfdc-858a-416a-bec7-cd134eaac61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f933d3-b0a6-4675-8685-6a6cceb9019f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ad7911-a3e8-46b6-98fc-7bda93a6a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73bcf1-ad45-44ae-a5de-930a9e90ed70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed42af6-87dc-4f31-97fe-09f7f5946611",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a73b54e-4be2-4ef6-8838-da80c5293769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc3f39d-06b0-4701-88e6-059db76ee858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13da5ec5-7928-4eef-aac3-9e0d14b2a83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de99f0ab-821e-4625-b15d-bfd996aa9ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb5ab91-a328-442e-b765-7cfac915134d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e044a9-7c89-4479-a109-354755991355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75a6d37-517e-4e02-8e87-5fbe28c4251e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04f2f84-eda9-4531-aeac-03378d2c6ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a616b2f-6840-4b2e-8d34-5b155f3c5783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bcbcad-11bb-4bd0-9b3d-502ee6b524b8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0c95b9-7ab3-4269-9e6b-2a7b85382751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa282d1e-5487-40f1-967e-7815182a4722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32de2f93-e14e-4cbf-909c-f4c24b619770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9ea394-294b-43a3-a993-c080984c83a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62204701-7f70-4d00-baa9-a5b78d9d0edd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbebadf-f183-4b8c-8b74-834e05a7a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f0ee63-51af-47b8-beec-1ebb5563cad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05d02e8-f164-4b0d-9f7e-b85b9a0c8af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a25b435-cf07-4a5d-9dac-82232314b0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f350c0-8e54-4310-a74c-4f3ab43b422a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4535585-c6fc-4b69-938e-98332c113c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75395b5f-fd94-4fdd-8925-2c9d3942901c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635b9fd-90ac-4524-95a0-e90f03fe6313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc62d39-b894-4f63-bddd-cd28ecaeb0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be150b-5588-43a3-b8aa-0a2bca3ea3b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdeffd0-0343-45e3-8402-63c134b91cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c27c34-3820-4f0f-99c2-073ffc7c0c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e808ddc1-3027-4026-99bf-c842aeae76d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c342251-e219-40d4-b1e0-4c93416fd701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6810309e-5273-4182-bf1f-ea9ce65dd0c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136e0295-5ee7-4084-ad8a-7bbe08a379fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac310bb9-99be-41ff-94b8-222ddd65017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedd6e83-c146-42d5-8b77-668c9ce0be6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d025d8c-52b4-44d0-baf5-8db43600fc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf65f2a-2f45-4278-b8d6-3f18c001a71a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62f9e07-3295-46c7-ae51-32639d289910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa783dc5-810f-47e3-9d02-c368b1fcea87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827e3cfc-436a-4f68-86e7-50fbb6f7e9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04293b14-0a53-437d-b29e-3adf4160f552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af0a2c2-1000-429e-86f0-8ceff23789d1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0272e58a-9271-492f-a2da-3ae2fbcca8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f0addc-8021-4ce3-87d7-1a27dc573081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a4e5f1-1262-470e-94d8-05d5b784979f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb0e3bd-d514-4a28-b078-435c8538c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1bc9c6-f87d-4542-8bc1-0a5f2ab88f7b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc51cecb-f78d-4d0a-9fbf-c74b360d9d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a78856-d38c-4f15-873d-a887b86831ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327c835c-fde1-4a87-8117-8c1e0cab2bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526bd79e-e7cd-41e4-9ad0-cf8120713c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd2da4-7464-427f-b016-7a856da68871",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f651c9b9-c371-4822-bc62-52583235065b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff36ead9-d4bf-464b-b621-699606d3e34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4cd160-8940-47a2-abde-1586f1460bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1043bd5d-9e4b-4c4b-8dcd-f4030596995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f66f998-c3f4-492f-9e2d-a3cad08f022d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de0777a-701a-4246-aa90-4be2ee9bd24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15db98b-0bf9-4424-9484-f8b418bef69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff971522-4307-4722-bb3f-ae31c1abd3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98453dd4-b010-462a-99ea-3aeffb100ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e36113-4794-4ad9-96df-81dffad9583b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6112282c-173a-4469-afba-b74e5f2966e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b622225-9df5-47ef-b4cf-8ca23f7c0a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875fa0c8-788b-46f7-907a-f872fd4b0712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ed04c2-688f-4662-baf5-d444424781d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e190a-1286-4c38-931e-d807c1c3358c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb801de4-ac13-4d01-9953-7bd0dc09054f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899c8bf6-0347-4d4a-ac47-dedb4dce14e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f9c60c-d42f-4934-8aab-206d7781e087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5181e8ac-98dc-4329-a037-939aea0fe762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7db64c-01c2-466e-8284-ea26d7eb4680",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c177650-7893-4cbd-92e2-02a5ce719a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ddcfad-a332-4046-badf-c0a8336aa737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b134b63-40af-4064-98d3-f44f23689763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a751e9e1-c32a-450b-be5a-4d4f2c4700fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20ecdd2-3e68-4c5e-9fee-746acbdecbd2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78e49b8-ac01-4c9e-94ac-04e795f03bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2629905-9ad2-47e1-9257-a06eeb597905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1130f98-6a02-4792-b3a5-8b0abed1d461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2f3db4-1a3a-4707-8df3-af671c72bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22701df7-5322-40b0-a587-b0e79c90bd8c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a725e5-a2ea-4e91-829b-32d7d9e65317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f123a48c-ede9-447a-b88c-cf8692d8b04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7784a82-1984-458a-9f48-e81c0b389afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d5b99e-d511-497b-957f-24c5902816ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f12cbbb-ce83-4af0-8701-0bf1736953a7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8a1b8b-973d-45e5-9185-e9bc4e5b7641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bc8d51-aafd-45ba-be51-2f19d8996984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e2f986-b460-4c50-968a-cb15c1bc0d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950400c7-81f3-47e9-b9d9-11fbc871a86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13df45d-35bb-4e1c-8f6f-cec5fe6accd1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49e325e-76f0-4db3-997e-4b5706393b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd82093-c0d0-414f-9e77-b2febabac71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b860d9-3884-4c53-a660-c56cea0b5243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b1a673-79c8-4647-9bc5-f87ca6d4f7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefabee6-770b-4cde-9444-946824d863a2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06e576d-7c5d-44c9-a00f-a01ae80da0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff8f0ba-39ee-42b2-85bd-11a30e42da75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d74865-3f0a-43ff-b103-8039d79b0dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0c68ad-6a91-4634-b5a8-a967086eda03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bf5291-5142-4dbd-8d91-38e35e482412",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa0cc54-aa27-40e1-9927-c1a00208a2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b4b15c-e15c-434e-94d3-9c7bfc7ccd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b86bf-40d0-416a-8985-6f7686c364fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9e1733-2c8f-437b-a7bf-6171908410e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e8f3ea-54c9-4527-a1ee-3887878e76d3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4572adfe-f284-4fd7-8d69-cf678fb85ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1cea11-849e-49bb-a357-b621b2460449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343fa3ea-8127-4e8e-bf2f-477c51da3640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd8179b-061c-4a1a-b2d2-f7634ff91b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7684ec-ab87-4b7f-a209-ca0ba077b968",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff971bc-302e-455c-90d3-e2e77b607d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c23248-249a-4891-ae38-12053c9b32cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0bac7b-1ba4-4f1f-9261-a4b8d9f5128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9d2769-8780-4183-9b6e-bd4c7e6de0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f08041f-3c60-4edf-973b-d80f1650effe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9105c5ad-9928-4668-8375-35e3b0cd9cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1baeee-4316-4d4f-b5da-71ee551567f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14eef0-ecee-44c5-bdb2-ce0985568a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377383d8-7ea6-4742-89eb-6452083a9d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a62b462-b7da-4342-9a21-00c67eda9230",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979c64a5-73bd-4f9a-b7e3-e420ea128ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb08ffae-c814-49d3-bcdb-2f8946a17077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e42863-c580-4049-bee6-6ce8e7470278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6446085e-4141-4dce-bb3f-37cd7ed8a1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd86133f-ce7e-460f-80d9-280d89c2f010",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fbb245-af7c-4c27-8442-a9ea4f2dc966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cf033f-223f-48e0-bbab-5be4774820ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57f59bd-ef86-46c9-a539-b9ed82310bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d425884-9299-4754-bb0d-7edfc5317f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d3be8-bc62-4168-ad61-ea65d50f119b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dc95ff-3e03-4dc3-9ad9-7d8b1207fc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf9142b-a1e9-4e6c-8197-ea5a1b6ab949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f926c99-37b4-4d9d-ad7e-21340c627939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c6ce31-22ad-4796-b552-0b342ce66f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f32f50-181a-4f33-aa2d-6fc7d6a9b916",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3992e2-2631-4dc0-927b-92e5a9093480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdda3c8-4a25-4237-89ad-b2f1f48b8612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a7b5a-e780-4185-8953-fda4a46d95d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8671191-66df-4562-b869-66061a85244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4304b3-547b-4532-ad4e-9dd2f9e30aea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade0e8ea-1ad6-426f-8af0-bf0bfdcaaca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b56b90-405b-44c3-9e55-20b7de37bf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa43e036-fdd1-41e0-8657-877cd38ce5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab719e3-d190-4b06-86bb-f543045b8123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d056a23-31e1-4727-a417-0f854d31cb50",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda8f291-834a-4aab-9536-8bf3ff6ed114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6298c89-d7a5-4356-a85b-94c856c78de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0301551-b80b-4794-9575-48753ceb205c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132b0979-4d2e-45bb-830b-4f2b88d31327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9911a6c-32c7-40dc-9c8d-0c439f22aa98",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152834c2-d9a9-4b24-88bc-64d9b54f5792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a0fb75-ab21-4619-a7b9-f590266226f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae72a96f-2916-49a9-b8ae-a9c386d44674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374f5759-d25e-4fd2-8d92-736636ca4c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dde07b0-c223-4084-8b86-68f8d6a18c2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b0b1b7-f7dc-4de0-9969-4d872cbeea28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8346b1a-841d-42b3-941d-469f3bd8e7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6c5832-9fe2-4d6d-ba42-5cc67a695c61",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea7e6b4-e36b-41ed-8d08-eac9bdde78ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0c955f-5e10-44af-9f93-b912d759897e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6117048-8a77-411c-9c12-91755b96a73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a91886d-27bc-42d8-9a21-04fd19ad9c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570c690-f613-4ba1-a6a3-9987bf717d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217e7a25-d902-4943-ae27-e9816b4f1aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2143552e-9c55-49e5-bc7b-8f9b7bbd34e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b6b5e3-b2a4-4cad-9139-5e7645c0df2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77df6566-2d11-464e-96fd-c9a7e505f4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af689df5-d184-4d72-969b-28f3a3f8e0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5097933a-f383-4dc4-b4bd-b914da4d30e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781314e3-7cc2-4ba2-9ad4-e13c371a3a02",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7516fb4-ec82-4590-afac-cbced28bc8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c38ea6-c949-4ad8-8dd3-08dfcfd7883a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f35a7e-3f23-4426-90bf-05de3e2ca0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7948ccd0-ab2b-48a2-a56f-3e59a428afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d629eff3-f77d-4577-adb3-00bfeaf3de83",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b31681a-6851-4b3c-b90b-554c33852cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517e410f-45ff-4d86-912c-7ad2d07c427c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37979b4-4c6a-432c-aafa-f3fd922ba69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb3ccdb-2838-43d3-84aa-b0d793ffdee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b99ece-a10d-4db0-8cd3-159d9b850cb7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f37c561-3e74-4656-b77c-30e547069731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2746254d-c2ca-4fa2-bfea-d7d9387ef54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e39f87e-39bf-408d-a5f6-8b4410f0f741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb81bc0a-ec92-4f66-ad35-c64198ff4eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a6f6eb-9290-4b46-a527-088ed4e9105e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2a408b-2205-47cb-91b9-5a376ad4f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4961e620-3c31-4faa-8250-915f5e92fb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6689a031-0524-4133-af5c-5c1823563be0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b80651-3d82-4d13-902a-2508ac0c5ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98b4078-223b-4dca-b677-cc5476d442fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf612b4-87f4-406d-a2b7-5d4a0c0272ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2597f1e-f582-4bd3-956b-1225ba0baa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a7e68-5b79-4762-bd17-b65000c43857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254063e6-f5c9-4e2f-a5ad-0c341656ce49"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cd950c8-4429-44aa-aa65-554163e91156",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1a9f0e3-dd1b-496a-8b1c-2c4394b943bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1fdce4f-3ff0-400d-88a6-5479fe727848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17393b54-2088-4564-994d-1d966d959d4b"
                    }
                  }
                ]
              },
              {
                "id": "ab8e3db2-5e96-4175-b32a-5a8773f2d555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6b91a95-9fc1-46d9-9b81-dd9cb83ffe1e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48da0e15-b288-45c5-a2a6-c6891c7a893d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "31088dc2-155b-4848-b129-a176eee810b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b42ae2-ff1c-4153-a57c-92f80c0d97c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91ec636b-21ed-44a6-afe8-2b92e88c0d02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4be93c8c-90c4-4509-a039-de2ea86e212b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9407c0b3-2852-4494-a83b-d2f473055919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "357651d1-4437-4055-83fa-727592f4d31b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01a48776-3ddf-4787-b31d-fb5bd2e73c4e"
                    }
                  }
                ]
              },
              {
                "id": "72647f2d-2a95-4869-9591-f14929189953",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "58ec9ba9-17cb-4255-a200-0c9a0f9d4b7c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafee543-41e6-40a0-91e1-e2a95acaf1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2d259acd-02b4-4275-8a01-0c12ead91e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f7f69a-d174-46b7-91ff-10f59066dd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3d62a6-def3-4e84-a7e5-55fc9d42b5b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b639b46e-75c9-4f4f-a023-4254ed17b51c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42f2e307-0d8b-42e2-bad9-a078bdc1908f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "226687b8-d966-459d-bb50-bf87cb9f31f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4930981d-1d94-4b72-83cc-3b62402c0211"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "127dd9da-0e5d-4a23-8008-d35704975de0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "519e19d8-0c91-4cd1-a480-4ba92dfccc0a"
                    }
                  }
                ]
              },
              {
                "id": "a9bc8d01-cd54-41cb-b276-d72ddb6f08a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f10d6d9-6392-49c1-b83e-76026ab47a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8202c3eb-7cc0-4d52-bbe4-1498f0a34f79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07eac255-e05a-4c8d-9e62-1128f19bd1de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "188a73bf-130a-4c0a-beb5-aa901ba62324"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd662f7d-57c0-4768-9966-38908070aec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "747c668e-a277-4dd1-b9dc-8d39d4e8983d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6721689c-0543-43e2-9228-778fe24006ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5ed8603-4f55-4698-9f16-80feb11d8064"
            }
          }
        ]
      },
      {
        "id": "dd18f01d-d42b-4fa6-8129-b314e1281b73",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a6ce60cd-19d1-42ca-b7b1-8a1c7a0ebf5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fe47947-ea99-4722-9c9d-46fb9873dd27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df37e401-ec7c-4d5e-90d7-d0e0db02fb01",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e21614e-356a-4ca6-9d28-46e4538a7573",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d57742e8-d924-42a8-a205-c9805bcc96df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a503ea2e-e19a-42e5-9fd5-6566d0bf1f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec0143e-5d76-4594-88de-90832689a449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63386d7-177e-492f-bbc8-9b602e275d55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71942076-4408-46b8-94f6-d2bc631a6dfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac8bed5a-b1dc-473d-94a8-e441853f9efb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ff842c6-e1cb-42b9-ba07-a1636fab541f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87a044f8-d459-4b29-8650-dca910079a13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9094481d-038d-4f2e-abae-6dd688ebe7e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30af2264-c781-4a5d-a320-9d1a32321781",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9abdad01-fad1-47c5-a3ef-51be66cd9b59"
            }
          }
        ]
      },
      {
        "id": "f8062a25-861b-410e-bd31-26aba464faa5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a1deb7b0-5ef3-4150-b745-51f705426e0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "679fd623-051d-452e-9a86-7110afabf79e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a970c0f9-4538-4e14-a031-106c68bb3c24",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61959260-cb75-4e24-ac7f-43092fd8a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c64873b-e3be-43d3-972d-5f19bd54e549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daa16db-d779-42f2-87ab-833dd3d180c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddf5755b-837d-4f5a-bf80-6d6d895115fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77130c35-4630-45c7-a45f-232730fa3859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9d673fc-2f9e-467c-8998-5ea3157c2f2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fffd750-0c2a-4ebe-a9bd-4f1a0bcf8b1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16662d68-b30c-400f-ae15-6e6710b49d02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7ff0f72-cb42-4c3a-a814-ae7d23c07a1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06ab5f98-7099-4086-bab2-08bf80050e2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff2cc24-23e4-4a71-93ae-9bc6245e9854",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85635992-8e77-48c2-b663-f38088984b9d"
            }
          }
        ]
      },
      {
        "id": "60b2dbb5-e16b-4f7d-9f1f-1748c807b2a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8adccbbe-5fd4-4d0e-b33e-7265140edd11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2ba13da-4a18-491d-9098-bc6e089fb6c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0792c9c7-a149-4d8c-820c-d72b43016e65",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad75318-ac49-400e-b830-08c4f2a0194a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aaa71a9-cbf7-4d68-a25f-e65a9d93e096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2f370f-8f52-4d49-a971-c9907eb85e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72990357-4d34-47ac-b34d-e061a03f682d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cd9a425-1f56-4c80-bea6-a37fe352c104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf4ff5b-42af-4f9f-84fe-f028c0c1ab71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f69662b-1ba9-466b-9b1a-71028d24ba97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aab7fce-770b-495f-b7c8-6274b1588ee1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "193c1863-a849-40d7-8cbf-06c8faae3f1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b537684-d1ad-40bf-9940-78432f9dbb22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab017eb0-0093-4e2b-9571-70daf6a9cb22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a17c6186-9ed6-43b0-9a48-a0f9173d6053"
            }
          }
        ]
      },
      {
        "id": "f635fa55-97fb-4b53-9fa1-e54ec7ac8bf6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66ddfa99-9d53-4a6f-bf4f-06c16f503821",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "959cd6b5-2e0a-436c-ba1e-fa36411556bd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "22616a67-4475-4a7d-8b66-16bbb90157da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d7183e8-0f6d-4b7a-84e5-a59f36cd8007",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea1fa268-682b-4685-a166-37eebfac569a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.21052631578945,
      "responseMin": 8,
      "responseMax": 9133,
      "responseSd": 576.4689592179516,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705538181309,
      "completed": 1705538217362
    },
    "executions": [
      {
        "id": "732df3e7-b1ad-43a0-afb7-d4a217d18da8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1c4f00fa-a948-4b28-959c-b260a7855d62",
          "httpRequestId": "8dca4bbd-92dd-4d4e-a76f-7976bb7f2ae2"
        },
        "item": {
          "id": "732df3e7-b1ad-43a0-afb7-d4a217d18da8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "171a9c74-7df2-4fbf-a1f9-955a891d1d7a",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "a15970e4-61e7-42e4-a7b6-f3a0b320a9a2",
        "cursor": {
          "ref": "e9045cf2-27b2-4aec-83bc-11d5202eefa4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c38db25-2c71-4b9f-b0a8-9fa23e179a7f"
        },
        "item": {
          "id": "a15970e4-61e7-42e4-a7b6-f3a0b320a9a2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8b64fb6a-4bb6-4dc8-bdab-64a3a5fc391a",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "63eb48b8-f0fe-453d-a015-5ac27d8b2f92",
        "cursor": {
          "ref": "fd9a28ab-e29e-489e-917a-b59a57913f43",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d8666933-1b9b-46f5-a550-1052bfa05ce8"
        },
        "item": {
          "id": "63eb48b8-f0fe-453d-a015-5ac27d8b2f92",
          "name": "did_json"
        },
        "response": {
          "id": "ab61beb1-980b-4caa-97cb-cc6ba484b9c7",
          "status": "OK",
          "code": 200,
          "responseTime": 373,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b788fe91-5bc3-42b4-ad8d-2cbb06bfb1da",
        "cursor": {
          "ref": "c8b6f68c-8ba2-45d7-b4c0-3559f291d410",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d05a9da0-7a50-4da8-9adb-845d8b7d3146"
        },
        "item": {
          "id": "b788fe91-5bc3-42b4-ad8d-2cbb06bfb1da",
          "name": "did:invalid"
        },
        "response": {
          "id": "60c17813-a58c-4dbb-9c01-6082968b62ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 782,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b788fe91-5bc3-42b4-ad8d-2cbb06bfb1da",
        "cursor": {
          "ref": "c8b6f68c-8ba2-45d7-b4c0-3559f291d410",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d05a9da0-7a50-4da8-9adb-845d8b7d3146"
        },
        "item": {
          "id": "b788fe91-5bc3-42b4-ad8d-2cbb06bfb1da",
          "name": "did:invalid"
        },
        "response": {
          "id": "60c17813-a58c-4dbb-9c01-6082968b62ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 782,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdf3952-d1b7-44a1-9241-7908ba9291aa",
        "cursor": {
          "ref": "afedec50-ee4d-4454-94d2-256369139d94",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c6dc5c5-3da8-43e3-a82d-b9d1d5637461"
        },
        "item": {
          "id": "8cdf3952-d1b7-44a1-9241-7908ba9291aa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "73a47021-daa6-4d53-956e-9840fe09e99a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8c26c3-f129-459a-8bbb-bd079abe5c67",
        "cursor": {
          "ref": "2cb40a27-0d4c-4b36-bf2e-f38458245acc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b89a253c-ae02-4887-9ab9-c37884b9f6ad"
        },
        "item": {
          "id": "3f8c26c3-f129-459a-8bbb-bd079abe5c67",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c3f6c7b-3f92-4948-aa93-8d5ab468ff87",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3955197-a1b7-42ff-87af-48896175a2f0",
        "cursor": {
          "ref": "db4e6c15-579a-4bd0-9931-3b21978dd8b2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bebcd6b1-8c80-462c-a394-0cf67eddb161"
        },
        "item": {
          "id": "a3955197-a1b7-42ff-87af-48896175a2f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "206953bf-7e05-4eab-9141-7ce1695c99a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e0781-9c31-41b6-ad6c-7ce7ad82e296",
        "cursor": {
          "ref": "6877070f-1b9e-4654-9ab0-98d4d8553499",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b89c0077-5a41-4a68-ba0a-a9c5e3b767f6"
        },
        "item": {
          "id": "f92e0781-9c31-41b6-ad6c-7ce7ad82e296",
          "name": "identifiers"
        },
        "response": {
          "id": "26e9db08-1ea2-4c98-8d6e-4c9a5b427a46",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad502775-6077-4702-b5b4-123c7c08542c",
        "cursor": {
          "ref": "6d288465-6ed7-471c-9268-85e1da0165e4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e7755524-51c5-4640-b1bd-abfb18277a5b"
        },
        "item": {
          "id": "ad502775-6077-4702-b5b4-123c7c08542c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d86e4620-a5c4-4c72-bf49-843d837fe4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93402e6-89ab-4409-99f8-6f4435585f0b",
        "cursor": {
          "ref": "1cc2b2c0-182c-4906-8d78-4a90bd05d271",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ee52c499-f925-439c-a939-577f8ee25706"
        },
        "item": {
          "id": "e93402e6-89ab-4409-99f8-6f4435585f0b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "311e3419-f546-4eea-b15e-976af3ef1ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2045da00-7e2c-46bd-95dc-a535fe4d2941",
        "cursor": {
          "ref": "f0c45b82-d799-4083-9539-ebc42f3b3b1a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eeaf085b-9e7c-47ce-9c7b-6b7fe5e42d97"
        },
        "item": {
          "id": "2045da00-7e2c-46bd-95dc-a535fe4d2941",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fe866786-c4e1-466d-b691-b7993d9b8b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e4541b-e943-4719-ad40-f98537d66483",
        "cursor": {
          "ref": "2ca8754e-296b-4063-b848-a650dc04c780",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d5d659c0-d041-4323-806f-6db08c8feec2"
        },
        "item": {
          "id": "f9e4541b-e943-4719-ad40-f98537d66483",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e8e14ef0-dd39-45f1-b64a-6c54609489b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29df476-1980-4f5d-97dc-8e9870ed064f",
        "cursor": {
          "ref": "2941d6d8-5eb0-4a00-965c-8627e87558e1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "493dd5b4-d980-45cc-9903-27c8ea59cc65"
        },
        "item": {
          "id": "e29df476-1980-4f5d-97dc-8e9870ed064f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0296cefb-2ebe-4346-aa65-b903675dc9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fef92f-cb1e-4642-9feb-5cd72c6e9788",
        "cursor": {
          "ref": "00756a12-5599-450a-87b0-36f4e9e1c25c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "83e2b18d-9481-411e-939c-f284af4293e2"
        },
        "item": {
          "id": "a0fef92f-cb1e-4642-9feb-5cd72c6e9788",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "718a3b52-76f4-408f-9c64-1038b0cfb8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b5477-0b52-4158-be0f-7c9589504ca2",
        "cursor": {
          "ref": "c09cd20a-5c38-4b51-8c56-44328497ffa7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "89dfe679-3918-41ef-9f39-9714dadcab01"
        },
        "item": {
          "id": "604b5477-0b52-4158-be0f-7c9589504ca2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "66cabb44-fd31-4947-af8e-2fb5aafca112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c03ca96-6842-44ec-ab2a-0d84eeb90f84",
        "cursor": {
          "ref": "5ffd4476-695c-43df-b60e-d746fcca3784",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "af51b616-e419-46e7-bb48-21e550008b2d"
        },
        "item": {
          "id": "7c03ca96-6842-44ec-ab2a-0d84eeb90f84",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a3ca6690-e696-4334-8934-52fc27e7ed6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2720c5-f077-4520-955e-c8e0cc3f673a",
        "cursor": {
          "ref": "b6009370-9a70-415c-85cb-0faabcda06ac",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bfd60ceb-546c-400f-9116-3b8cf90b8c20"
        },
        "item": {
          "id": "0e2720c5-f077-4520-955e-c8e0cc3f673a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bc4d821f-ac89-4232-ad09-a24c980775bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31e5224-bd78-41ed-a899-920207718cdc",
        "cursor": {
          "ref": "441c2236-0d64-4888-b535-1c3681422d4b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "72d77037-f84c-4ba3-9d87-a696932e6bd9"
        },
        "item": {
          "id": "a31e5224-bd78-41ed-a899-920207718cdc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6989f592-9f88-45a1-88d6-3d8df7d9904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beeb386-5966-4bb7-aa93-b26406228b25",
        "cursor": {
          "ref": "53572395-e9dd-4635-8aaa-6914860ff4bd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "342c9c29-84b5-437f-a3ee-700c81b6b2ce"
        },
        "item": {
          "id": "7beeb386-5966-4bb7-aa93-b26406228b25",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "05301529-8833-470f-8409-10a5ac945901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afbcae7-e289-41eb-9bcb-85369e8f8ca4",
        "cursor": {
          "ref": "5b00f9d8-06f0-4e13-8aa9-22978892bb23",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3032e079-5599-4ad7-9992-2d062bfb0246"
        },
        "item": {
          "id": "6afbcae7-e289-41eb-9bcb-85369e8f8ca4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "edfc1e98-c33a-4056-a9fd-acfe3ac92168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb5817a-a453-486a-8799-313a56c363bd",
        "cursor": {
          "ref": "a3cc3fbe-cd3e-4d4b-be7f-45e9a8eaee62",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5da81237-909e-44bf-a246-4171eb4085c4"
        },
        "item": {
          "id": "ceb5817a-a453-486a-8799-313a56c363bd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4db798f5-884a-4e37-b90c-f97f40c8237d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c98066-b8dc-469b-946b-6571fccfe27b",
        "cursor": {
          "ref": "036e0614-6a05-454c-8a36-2d379c941740",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9abe0b40-cc4a-4279-b165-e95e2623d64d"
        },
        "item": {
          "id": "87c98066-b8dc-469b-946b-6571fccfe27b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c665161b-0b17-4f11-b88f-8d4ed6daee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb48154-11cc-46fb-a962-5cc995e72763",
        "cursor": {
          "ref": "061a4047-cc31-42fa-9107-ba1cd1e36d6f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eed7ca4b-b5e2-4041-921c-efc9df5249b7"
        },
        "item": {
          "id": "6fb48154-11cc-46fb-a962-5cc995e72763",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "91b0feb3-986a-4116-8441-49ab42f74889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7736f49e-c0fe-4751-948d-255f7789930e",
        "cursor": {
          "ref": "5a3660ce-355b-49ae-b176-eeea28230502",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "772846b5-a251-40af-8d42-85325dd25ed4"
        },
        "item": {
          "id": "7736f49e-c0fe-4751-948d-255f7789930e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "69e698ee-3406-4dfc-b9f8-8f6f999e2abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277a704-0b23-417d-8022-672eab1d5406",
        "cursor": {
          "ref": "f8cf2564-202f-4c20-846c-1520b85fcdfa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9be76aa6-8d05-4a4c-98c5-bd0a0f1a8e9a"
        },
        "item": {
          "id": "d277a704-0b23-417d-8022-672eab1d5406",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "866f69be-2115-452e-8b7e-86202c920cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4829feb9-b09d-40e1-ae47-482067c6683f",
        "cursor": {
          "ref": "e263d795-dc8d-412b-b244-8094a850df44",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8bf74dde-a0e0-4b1c-a3ed-ce29eca311b0"
        },
        "item": {
          "id": "4829feb9-b09d-40e1-ae47-482067c6683f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4e7f7049-c04e-4327-a072-b25e16f040d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11746f-c242-4e30-80d0-33d64ff79258",
        "cursor": {
          "ref": "902c632d-5d7d-4743-871f-79c6b3c9770a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1e90091f-5732-425b-a594-f450e829cbfe"
        },
        "item": {
          "id": "0e11746f-c242-4e30-80d0-33d64ff79258",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8aedcd05-54ae-4219-a857-51fccad003ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d8f6e3-aaf4-449a-b4ce-4715f3eff9fe",
        "cursor": {
          "ref": "85aa9aa0-5e79-4a69-a70f-cac669a4faa0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1ae75bd1-8435-43e0-b823-84a4e155963b"
        },
        "item": {
          "id": "92d8f6e3-aaf4-449a-b4ce-4715f3eff9fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "85fb210d-9b4f-4dd9-849f-bd77f6044eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf8d36a-1f4f-47eb-87c0-01c5123dc40e",
        "cursor": {
          "ref": "d96a32c1-117a-4022-9edb-62c7b3e00c67",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "75be72fb-11f8-4e99-899e-d2da2b89aaef"
        },
        "item": {
          "id": "dcf8d36a-1f4f-47eb-87c0-01c5123dc40e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef2bf341-3992-4f7d-9cf9-beb8e53b3fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0936218f-38a4-40a7-988c-37e54da341b0",
        "cursor": {
          "ref": "48974f09-6491-4308-8fa6-3b24a3ecb133",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bba5c21a-5bc0-4156-b5dc-0c5135951672"
        },
        "item": {
          "id": "0936218f-38a4-40a7-988c-37e54da341b0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c29bfbc0-ea7b-4655-b1ea-e9cdd8503c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f8749-0d16-4586-a596-16f86993fe02",
        "cursor": {
          "ref": "3c8aa739-c355-415a-b8f6-35dba5b3bd90",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c70363c-4c06-4cf6-a9d5-c400017fd29a"
        },
        "item": {
          "id": "4a2f8749-0d16-4586-a596-16f86993fe02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "64f01e9d-bef6-40ad-9a49-4d315e9f3b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754163b1-ac91-4f9a-a76e-20eb5643830d",
        "cursor": {
          "ref": "dbd3fc6b-c655-45c8-92b0-d9307d3a0862",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "20a8c2ba-092f-47a2-ba29-af5121902d61"
        },
        "item": {
          "id": "754163b1-ac91-4f9a-a76e-20eb5643830d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fd82722d-5718-4b8f-bf69-5ecc09110126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c675ae-3c1d-4aba-8652-a5b8a1de2971",
        "cursor": {
          "ref": "3bb86bbf-a590-4df3-b474-63e913066746",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6590a231-8ccd-4e2b-b0c9-0fb3efd5fe4e"
        },
        "item": {
          "id": "e9c675ae-3c1d-4aba-8652-a5b8a1de2971",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a54f1e1-5e8b-48f6-8e46-61c2147db3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72846464-99ac-4ea5-86ee-35753b77bb69",
        "cursor": {
          "ref": "efd281ba-1ddc-4788-9afc-4040ffc47fff",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "981a6e1d-bf5c-4f7b-9bdb-d4e1d48b80dc"
        },
        "item": {
          "id": "72846464-99ac-4ea5-86ee-35753b77bb69",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8658d09e-3620-431a-ab8d-25a381bb8c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e3e81b-a61a-4587-b11f-6bc1670f24b9",
        "cursor": {
          "ref": "9ff69c21-fd72-4d4d-a909-374a49e42ce2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4e6c0033-5f41-41f0-acf5-0253c4a8c852"
        },
        "item": {
          "id": "99e3e81b-a61a-4587-b11f-6bc1670f24b9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cec01ae6-7af7-4ce1-833f-f9ef4b5c2269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f7d069-764c-4fb6-9d40-bb2b4c0a382e",
        "cursor": {
          "ref": "ab8b6724-a9d2-45b8-a06b-543a18527171",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "acd53816-c143-48d3-8d6d-9c7c72ddc8ef"
        },
        "item": {
          "id": "68f7d069-764c-4fb6-9d40-bb2b4c0a382e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "abfa4840-b8b7-4466-8232-42bb62a6ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a858293b-1ea6-4f3d-b8c2-423d1a282200",
        "cursor": {
          "ref": "5b69172e-9bb7-41d8-89ae-1f2485173ae4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2d72263-b6c9-49a9-8d2c-22b2b57115cc"
        },
        "item": {
          "id": "a858293b-1ea6-4f3d-b8c2-423d1a282200",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5012ad5f-5b8a-459a-99d8-abaf0ee6ecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2706b77a-5004-4add-b77d-bebb2fb843dd",
        "cursor": {
          "ref": "d5350f05-e689-4029-8e75-e0b6b84304ae",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4af2e55c-b0b8-4349-8993-816267ac49b9"
        },
        "item": {
          "id": "2706b77a-5004-4add-b77d-bebb2fb843dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cd115541-2dc0-4c56-8864-47325db2ee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327ee4c3-8478-4068-8dfe-c76ce69054ba",
        "cursor": {
          "ref": "ae6dccad-0784-401c-964d-35f1099b3d53",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4282028c-a03e-448a-86b1-3c64a036e328"
        },
        "item": {
          "id": "327ee4c3-8478-4068-8dfe-c76ce69054ba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96cb44f1-bac9-4029-8ecb-67ec9346f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6e7c8a-82a8-45f7-806f-e87e9eda0612",
        "cursor": {
          "ref": "3dbbc44e-f272-4172-91f5-d5562ce59a27",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d79514d6-1dcb-42b7-9b73-df3090ac763d"
        },
        "item": {
          "id": "ae6e7c8a-82a8-45f7-806f-e87e9eda0612",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "099e1cee-45ad-484d-88b7-6ad8a8b25fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0df66db-620f-4209-abd2-1c36b947fd78",
        "cursor": {
          "ref": "a134f4f8-51f9-461d-8a74-982e67ab4ebd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "18bafd84-ed98-4ce6-a6a9-1cbd858167e2"
        },
        "item": {
          "id": "b0df66db-620f-4209-abd2-1c36b947fd78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c916c861-740f-4915-8f03-812755c01b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699782b-e798-46ff-b712-74727744deac",
        "cursor": {
          "ref": "fe5e140d-96f1-4337-87e0-d7d0dee49206",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d10b2624-20a4-4568-ad34-98c6d20ddb49"
        },
        "item": {
          "id": "d699782b-e798-46ff-b712-74727744deac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0289dce0-45e4-4dab-8ea7-a74e30f5fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30754849-fc5e-48a8-9187-eec2e4743d66",
        "cursor": {
          "ref": "8202fadb-5475-499a-9093-52749c8ba83f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6db2d650-f727-4108-8353-7c658a8555a2"
        },
        "item": {
          "id": "30754849-fc5e-48a8-9187-eec2e4743d66",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d72d94b-8831-4839-a58c-6d39b35ae685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ce573e-5187-4050-9ac6-19c84c0afe0d",
        "cursor": {
          "ref": "c7321f3d-417e-4ceb-bce2-cabed0e3b822",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5cbd8c3c-4657-4058-a2aa-dbf096921141"
        },
        "item": {
          "id": "36ce573e-5187-4050-9ac6-19c84c0afe0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ba8ce0ea-474a-4d24-af74-ea939e4db75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca56f21-051d-41f2-8ba0-f471bff02673",
        "cursor": {
          "ref": "413cba0e-820d-409b-8b2b-e7cc513c6bf7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1eb451a7-c33d-49ef-9d2a-2bbeeeb684c7"
        },
        "item": {
          "id": "8ca56f21-051d-41f2-8ba0-f471bff02673",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b02e5004-b269-456b-972c-a569197e1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d15ff6-afe4-4827-8e51-75582cbdbbc0",
        "cursor": {
          "ref": "cdcf822f-aad9-44c1-9ae2-d4c8d52af8ca",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de77e66e-603b-4260-9654-27d11915b363"
        },
        "item": {
          "id": "92d15ff6-afe4-4827-8e51-75582cbdbbc0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "80e4bfdc-9def-43ca-94cc-a56c2bba4045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b4b88f-43e8-4a83-8091-64bb49f5dc26",
        "cursor": {
          "ref": "c688c358-1b0d-4ab1-82d7-17403f73df99",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ce4eaa7-6815-423f-bea8-eacf3b6a1414"
        },
        "item": {
          "id": "b0b4b88f-43e8-4a83-8091-64bb49f5dc26",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c7b14bf-c2f9-4f03-bdd9-a26df4f7aec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a35a5e6-3959-45d6-b6ba-f6c7306e2b6d",
        "cursor": {
          "ref": "d0d513f2-4f22-43c4-bf82-ac29229929b0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f8a724e8-13b2-483c-ab4f-b7c892ad391d"
        },
        "item": {
          "id": "0a35a5e6-3959-45d6-b6ba-f6c7306e2b6d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "701b6389-4445-4edf-8062-e4eb0eaf2987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a4fdc-943a-4394-a478-1a423dd3751a",
        "cursor": {
          "ref": "e21f7800-c13f-4f59-b866-820ca60913d4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "93e7590a-dd10-4872-8770-73548f8dd920"
        },
        "item": {
          "id": "b98a4fdc-943a-4394-a478-1a423dd3751a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3eaa3f67-dc5a-4354-a981-31f5ac0daa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faba6cf-6f69-427f-b9fb-75bfe909b4bd",
        "cursor": {
          "ref": "3351d7e6-4968-465b-a298-d3dd8a8d3a07",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7c2adc7a-9327-494c-bbb9-05926b205157"
        },
        "item": {
          "id": "1faba6cf-6f69-427f-b9fb-75bfe909b4bd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a03548d6-6d1c-48d4-aa24-115f5c4d0f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9376c-56e3-45d6-8e41-e57142ba7135",
        "cursor": {
          "ref": "2c984762-a02d-4e30-bd10-95d294208377",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3f2f2dab-83a4-442a-b1eb-ae4c49429a86"
        },
        "item": {
          "id": "4ea9376c-56e3-45d6-8e41-e57142ba7135",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e179537-929a-4070-a781-96c8579017ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3b1825-584b-4492-a318-db7cf3c30952",
        "cursor": {
          "ref": "8850994e-1580-408a-b648-6207aa56f82e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e32abeef-0919-4766-939a-5e12fef35573"
        },
        "item": {
          "id": "4c3b1825-584b-4492-a318-db7cf3c30952",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5b69fe44-4585-4a4d-9238-c06572539125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d719c-b0b7-40ed-8807-f34411cdf670",
        "cursor": {
          "ref": "0f566d5c-0b55-484c-96f8-eba45abc4aa7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0361e72c-edf0-4320-a0f8-7413f5a1493b"
        },
        "item": {
          "id": "114d719c-b0b7-40ed-8807-f34411cdf670",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2e83f63f-1cd6-4901-83c5-f89f0273498e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8af4af2-d193-4a59-a0bb-bdaa971b993c",
        "cursor": {
          "ref": "cfb8232a-772f-41b6-a96f-35651d727a5e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "823b715c-dd87-43ae-a866-3fd95bfbafe3"
        },
        "item": {
          "id": "e8af4af2-d193-4a59-a0bb-bdaa971b993c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2dc33847-20f3-4e19-8758-aca25686dfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7d5992-1421-4528-ac18-18f02086a180",
        "cursor": {
          "ref": "27e56e7e-5008-4310-990b-ee52c3cd801e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a194f88c-9fed-4ae3-b22e-a52ad90351ce"
        },
        "item": {
          "id": "1d7d5992-1421-4528-ac18-18f02086a180",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4991594d-61f6-4a86-aa43-b45cd0926545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a682f70a-e6c4-4773-9c8e-49b57ac819ce",
        "cursor": {
          "ref": "ed7d9c59-e5f4-49d6-bfaa-35453e2acbeb",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "39653142-0723-4857-8c10-d46ed1015ed6"
        },
        "item": {
          "id": "a682f70a-e6c4-4773-9c8e-49b57ac819ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dd193a96-96ed-408a-9abb-f137df5a1e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2750d-07fe-4639-a777-c98080fb7c4e",
        "cursor": {
          "ref": "43439a79-6bcf-43e0-b980-e8f8d05b7e5e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7474aa6b-8824-43f4-8ccd-a587dd453065"
        },
        "item": {
          "id": "bea2750d-07fe-4639-a777-c98080fb7c4e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bb7fc96d-e19d-41b5-9eef-33ee93852a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12599a4e-1c1d-4e2e-96d3-dfcedaed6127",
        "cursor": {
          "ref": "07eeae45-4b6d-4ada-b3d9-6c58c28e2c07",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fadcb8b6-ebe2-4b6c-bbbd-82b30a0ebac3"
        },
        "item": {
          "id": "12599a4e-1c1d-4e2e-96d3-dfcedaed6127",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "30af1840-8cb4-4b24-81ef-84f23f31df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d20bd-ca2f-4632-be5c-9f5eb93dc8b1",
        "cursor": {
          "ref": "14f140f8-a330-4d1e-b237-9e0abcb4559c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "369ffb6d-4120-450a-896b-f64236e530a0"
        },
        "item": {
          "id": "079d20bd-ca2f-4632-be5c-9f5eb93dc8b1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aeeeb088-aee2-47c2-9579-4874923c1168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad12521b-bc62-4def-86ea-d25e657b1c13",
        "cursor": {
          "ref": "4b15435b-ef6f-4486-9230-bc6a557f850d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02f5f434-4147-4177-a5f6-8e11cd291899"
        },
        "item": {
          "id": "ad12521b-bc62-4def-86ea-d25e657b1c13",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b3acbfb0-e106-4f1d-b591-43099db5b195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8933ddaf-0ad7-4426-82cb-54edb5ecd4f1",
        "cursor": {
          "ref": "322e2d64-4c9e-4e66-bc77-9601f4f4f63b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "58281d5c-49da-411a-9d23-e1d058ec0755"
        },
        "item": {
          "id": "8933ddaf-0ad7-4426-82cb-54edb5ecd4f1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5bd9fe91-1954-4253-aa80-12a480ce41f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dab4019-cf12-460a-acd2-56b628f5a277",
        "cursor": {
          "ref": "618af532-3960-4f9c-880f-56f3d8b7c56d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f3c8355f-7685-4852-81d5-771ec0aefa83"
        },
        "item": {
          "id": "5dab4019-cf12-460a-acd2-56b628f5a277",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ed729212-68e6-4881-b366-270496c6896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69064aa-9889-42a1-a245-17b658f95137",
        "cursor": {
          "ref": "bf698319-4593-4ae9-9997-be860a6793fc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3cb1a85-ece9-41e0-becb-69f842530d55"
        },
        "item": {
          "id": "b69064aa-9889-42a1-a245-17b658f95137",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4e555c52-cdd9-4267-964d-fc31b06a864f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90a1196-5aa4-4d14-aabd-1ee7d1ae39ad",
        "cursor": {
          "ref": "830532b3-6e79-4c47-8e06-ac6f0e7de654",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4e1fe028-d2fd-4006-ab41-10ed11dce109"
        },
        "item": {
          "id": "d90a1196-5aa4-4d14-aabd-1ee7d1ae39ad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1ec63753-4df1-41dd-9b44-d89414db8a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed35ae53-11cb-43ec-b63d-ac4ce31f21e9",
        "cursor": {
          "ref": "84a87177-1890-4367-b9fb-6eb4e016c8db",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "740a3d75-2d97-459d-b140-d9b86d0c8597"
        },
        "item": {
          "id": "ed35ae53-11cb-43ec-b63d-ac4ce31f21e9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26cf250e-db66-4316-a643-425e1ad15909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153c8ad-b58b-4ebd-a528-5f38a04875ba",
        "cursor": {
          "ref": "43392854-6a88-4583-ae9c-0867d723dfb9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b277bab6-e7ad-428a-8722-a94124518dea"
        },
        "item": {
          "id": "e153c8ad-b58b-4ebd-a528-5f38a04875ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7939c74c-7d47-4f19-9d1e-f54a9c3e8cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59025a37-7961-439d-8882-227e39f2fe79",
        "cursor": {
          "ref": "93239761-1ab9-4c9a-af20-0a10ea884b76",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "db9a46c1-9fba-4475-ad40-9ddb66c2cc7e"
        },
        "item": {
          "id": "59025a37-7961-439d-8882-227e39f2fe79",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24dcc4bc-5d4f-4b9b-a062-22e2f3a6c8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd44e24-37c5-4966-b01a-748062be0ffe",
        "cursor": {
          "ref": "d9b695b8-a6fd-4983-b5ee-34512e4fab65",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "82a07e41-9374-4446-9900-cd8b6e757a61"
        },
        "item": {
          "id": "6dd44e24-37c5-4966-b01a-748062be0ffe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0ef02cde-d9e0-41a1-afbd-812b4afc65d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91287b87-6a15-47fa-b6f1-7280385bf8f3",
        "cursor": {
          "ref": "28dfd9f1-93e2-4e67-b534-5bc9523cfe82",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4d238eb7-79f9-4010-9376-6a8e277f5b9c"
        },
        "item": {
          "id": "91287b87-6a15-47fa-b6f1-7280385bf8f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "349f90a9-6059-44ff-9667-92e3289f5267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a14ee-9ba7-421a-a875-cc474e04a5ed",
        "cursor": {
          "ref": "5fd0f4aa-4ecd-44ef-be59-8f24e6ecb29e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a62b1df6-c01b-465a-914f-7fe1a0d8701c"
        },
        "item": {
          "id": "912a14ee-9ba7-421a-a875-cc474e04a5ed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "81f94551-4d0b-4e59-80a3-55b3b821dce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571d3c21-f89a-4923-825f-79386208e6e1",
        "cursor": {
          "ref": "86cc4429-d652-47e5-949c-a3fc2930c343",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5fb94fc2-b768-446a-9f50-8c73cff2ef31"
        },
        "item": {
          "id": "571d3c21-f89a-4923-825f-79386208e6e1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dfa55b6b-0847-46a1-8877-1f7104a5f91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d731434-07ca-4cd5-8227-8080308831e2",
        "cursor": {
          "ref": "769774b9-2f34-4dee-91d2-46f681605196",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "373d4299-7f29-4955-9a89-642bb2fe626b"
        },
        "item": {
          "id": "5d731434-07ca-4cd5-8227-8080308831e2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a344cf9b-f3a7-4830-9243-9f04868292a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f312270a-9184-43d8-b3b7-9b88e5b4972f",
        "cursor": {
          "ref": "493e1371-3914-4c0c-9833-413603473d96",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cd1f57c7-2869-4cc6-a052-67a74eec5c0d"
        },
        "item": {
          "id": "f312270a-9184-43d8-b3b7-9b88e5b4972f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c6d97063-d490-45c7-9ba5-4daaa7117d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d2d5b-508c-4a4f-9ab1-610b10d78063",
        "cursor": {
          "ref": "943f7c0d-b884-41df-9931-db58b02e360c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1479b964-86a8-4ccd-98e1-6dd3d238a513"
        },
        "item": {
          "id": "b28d2d5b-508c-4a4f-9ab1-610b10d78063",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5716edd1-5cc1-4c8d-9510-aec2f9d47fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27a9dec-cbb5-4a00-8207-9c884b0227fd",
        "cursor": {
          "ref": "848fa287-e597-4ba1-ab24-1fa2664fb42e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b11bc73-159d-4827-aa68-57ddae2550f4"
        },
        "item": {
          "id": "b27a9dec-cbb5-4a00-8207-9c884b0227fd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a1a03331-dba3-4220-a7ad-00d88c388565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a5980-88dc-4fff-ad87-e97f8302ccbe",
        "cursor": {
          "ref": "9dbf46ce-03f5-469e-b96a-b370a7314b9f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "286072d8-7393-4039-aace-41851086a701"
        },
        "item": {
          "id": "3d8a5980-88dc-4fff-ad87-e97f8302ccbe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7f3cf362-0abd-4fc0-80c0-904b49e969f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272b6ce1-20a2-4b45-b3ac-f0706767e15e",
        "cursor": {
          "ref": "9d326a7c-c9fc-42fa-b1a0-68e7ac4d8160",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3b916785-d610-4f12-b14a-da49d1ca820a"
        },
        "item": {
          "id": "272b6ce1-20a2-4b45-b3ac-f0706767e15e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "33da4e45-1327-4905-b7e0-81a94d635dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1586b631-161d-483f-ba2c-1426a68599cb",
        "cursor": {
          "ref": "fee64262-b0ed-439c-a4e9-f56560140cba",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "12406bff-cde0-42e8-a7f1-8a46bc1ed190"
        },
        "item": {
          "id": "1586b631-161d-483f-ba2c-1426a68599cb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e907edae-060b-4a1d-83db-74d7ed69368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f2abbd-d50b-4c69-a84f-0e51113e3bff",
        "cursor": {
          "ref": "78bfe15f-29bb-442e-b0a2-66c2029a1b9b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "61dc6fad-83a1-4b91-b38f-f090aa02a049"
        },
        "item": {
          "id": "41f2abbd-d50b-4c69-a84f-0e51113e3bff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc7f3684-6306-4545-80db-eac88ed104fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4651aea-46c5-4f55-b6ef-ed8104bc86b2",
        "cursor": {
          "ref": "2487d15b-c518-4806-9d6f-93d32f0e4a11",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7165030d-7401-466e-a80f-e05d3839764f"
        },
        "item": {
          "id": "a4651aea-46c5-4f55-b6ef-ed8104bc86b2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dee14424-0254-4eaa-9110-39b6bd082061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7211f-6899-41d3-a100-fa26b91c1274",
        "cursor": {
          "ref": "4960fc5b-d796-4e9c-9609-fdf74b651827",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d63af10b-4736-44d8-b10a-7c7d406487a2"
        },
        "item": {
          "id": "ddc7211f-6899-41d3-a100-fa26b91c1274",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5db02f9c-fdb5-4563-abe2-0e097318866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a11eda-9980-4dff-a96a-70e171142113",
        "cursor": {
          "ref": "011573c9-f4ff-489d-a02c-50a5056213af",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9a40de38-7f1e-4a54-bd6b-813ec8d21e06"
        },
        "item": {
          "id": "09a11eda-9980-4dff-a96a-70e171142113",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9ab0cdb2-4574-4fe0-a9a6-23597dc1bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ed6027-9a4c-4a29-800a-ecb204901217",
        "cursor": {
          "ref": "becd04f0-a989-4efb-abeb-eb36e2711db1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "183a5b56-d309-4de3-8073-82ccea286416"
        },
        "item": {
          "id": "f1ed6027-9a4c-4a29-800a-ecb204901217",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d8f15363-6954-4c4c-8e69-497202c5fae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4abb262-3086-4fb2-8ef9-7be0b25d699a",
        "cursor": {
          "ref": "863ccee5-3385-4517-9a1d-0b5f8642ee6f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ea65299f-ac94-4bb6-9317-f28414a7bb5e"
        },
        "item": {
          "id": "e4abb262-3086-4fb2-8ef9-7be0b25d699a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "63615ba4-fe53-45fe-bc1c-322c6a80a8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a7c150-90e7-4ae4-bbc0-e4265bfc9e5e",
        "cursor": {
          "ref": "8c6099be-9e4e-4ea7-aa36-a566f32acaa9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3eacd400-c481-4b05-8dbe-165da0f8a6b4"
        },
        "item": {
          "id": "33a7c150-90e7-4ae4-bbc0-e4265bfc9e5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bf5f6ed5-5e98-46ff-b3b5-83b9b04cdcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ae2224-aa87-4289-b90e-6a77b39d4df3",
        "cursor": {
          "ref": "95a47a11-5f1d-4048-8803-56bb00c7e781",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "89925b41-763f-460e-80e6-722bb83bac32"
        },
        "item": {
          "id": "10ae2224-aa87-4289-b90e-6a77b39d4df3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "58788679-d17e-43b6-a7b0-b83f912fe57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03034ff9-4c31-4065-afa2-54b37c5ae3de",
        "cursor": {
          "ref": "a494da24-1b03-45d4-9996-83f3d5846f7e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "739fa40a-34ed-45c9-937a-78c55c968538"
        },
        "item": {
          "id": "03034ff9-4c31-4065-afa2-54b37c5ae3de",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b6eba98-de14-4650-93e4-f3bd3ec975ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fe6be0-e813-43b1-9e6b-f4a82860d5ef",
        "cursor": {
          "ref": "f3c0d6e3-fc8b-4a80-af9a-2d3065d1a1cf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "575c70f8-317d-4b55-90cf-eeb3721c1794"
        },
        "item": {
          "id": "14fe6be0-e813-43b1-9e6b-f4a82860d5ef",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bdfb81f1-ef79-42fd-a970-c4111252db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848463e3-24e0-49cf-a5fc-e0c934ec68eb",
        "cursor": {
          "ref": "f0f95cbd-d8ea-4c75-be78-28f0acdd8b09",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "04095f83-38c6-4fc4-a7c0-db8615b9faea"
        },
        "item": {
          "id": "848463e3-24e0-49cf-a5fc-e0c934ec68eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "28068a4f-2451-400a-85b7-6c1f2f38d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6e34fa-d7d5-423e-a5e2-9dc1f6f26c1d",
        "cursor": {
          "ref": "21db6d56-6cf2-41e0-97b8-927a58ca7f4c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3087a851-1954-436b-bff6-fb5df8904218"
        },
        "item": {
          "id": "4b6e34fa-d7d5-423e-a5e2-9dc1f6f26c1d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "23fc62d2-2377-432e-8ad9-b3bc99d40017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ae01c7-021b-4948-932d-731dca3e8b04",
        "cursor": {
          "ref": "990de48f-6f09-4610-b574-12b33073bab2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "41a2f158-7b22-4a63-b69d-3e4e15420bb7"
        },
        "item": {
          "id": "f5ae01c7-021b-4948-932d-731dca3e8b04",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "447588e4-1263-41a6-af9b-e19b5e290473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71956391-a0a6-46e7-b1e7-eb434db37227",
        "cursor": {
          "ref": "09bfd2c2-759e-444b-bc04-4073f5645d77",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a9802106-cee9-4bf4-bf8a-5f6bc6c8acb7"
        },
        "item": {
          "id": "71956391-a0a6-46e7-b1e7-eb434db37227",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b01b7feb-8833-44c4-9328-8c48f91c4af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de938a9-818c-4d0e-bead-8e443efbf400",
        "cursor": {
          "ref": "2061a358-5e70-4097-839d-81526705bde1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "92cd6a84-ccac-44cd-8140-3a1f23b6d9f4"
        },
        "item": {
          "id": "4de938a9-818c-4d0e-bead-8e443efbf400",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "87989fb1-24ef-4d64-9c40-b542fcfe9c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc0512f-d3e0-401c-b965-58ec64897f5e",
        "cursor": {
          "ref": "b218f7d2-67f2-492c-b788-743e7a257ed7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0a717683-6b82-4a44-8f90-232b6a005d39"
        },
        "item": {
          "id": "6fc0512f-d3e0-401c-b965-58ec64897f5e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cce1d8e4-8bc2-405b-9a6c-1122b2f84fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ab1032-623e-4c40-bcd2-fa8c8ebd9136",
        "cursor": {
          "ref": "0f32cb4e-84c6-45b7-a5b0-5504ccf56116",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9fe50798-ef88-47c3-a3ee-9aa52f4e51dc"
        },
        "item": {
          "id": "89ab1032-623e-4c40-bcd2-fa8c8ebd9136",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "85971064-8693-4f06-b99e-425373d925ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b52b756-9613-4494-8400-36b46cc7d9f8",
        "cursor": {
          "ref": "18b1037f-8fcf-44f1-9863-968d35f1d882",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c9eebf58-e904-4c6f-9724-284e2d6f7d12"
        },
        "item": {
          "id": "7b52b756-9613-4494-8400-36b46cc7d9f8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "72fe5783-9527-4495-bda3-725856bd3cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6abe0-556b-4e65-9303-c9a5508a4d52",
        "cursor": {
          "ref": "53e521d5-37b1-481d-9f32-81b68fa715ac",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "585c0fae-904a-46a3-ac0e-c56f92a2d377"
        },
        "item": {
          "id": "bfc6abe0-556b-4e65-9303-c9a5508a4d52",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8585b6c5-f12e-44b3-b528-3c063ee79fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3563bdb4-ca56-4489-8cc6-53a7cfd7080e",
        "cursor": {
          "ref": "eecddd84-dbd8-44af-8999-434a7ced309b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "153cfc58-fb3c-4dfb-a69f-459ed3070b65"
        },
        "item": {
          "id": "3563bdb4-ca56-4489-8cc6-53a7cfd7080e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9d675e45-bfcb-453a-8c74-f0338e3361e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8874a1c-c179-4e5f-93c2-e11a75bdc27e",
        "cursor": {
          "ref": "80aa12ca-d396-4fb1-9669-aacfa32e3464",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9bdcf9d0-9aa1-47fd-a1a5-45e1a16230e8"
        },
        "item": {
          "id": "e8874a1c-c179-4e5f-93c2-e11a75bdc27e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d6de54c0-fc6a-45bd-b7e4-8b84b501437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fc755b-f105-4ba0-aac9-315316628bc1",
        "cursor": {
          "ref": "ba156fbd-70cb-4aab-9643-815e13c6c0c0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb6607c6-e191-4adc-aa5c-5f5a5d2d49d2"
        },
        "item": {
          "id": "b7fc755b-f105-4ba0-aac9-315316628bc1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "791f00de-feda-4566-b7d2-c35c8f55fc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d4a745-cc56-4bdc-8e7c-e13e1ec30421",
        "cursor": {
          "ref": "d06387da-b39d-42e8-8893-87719dd421a8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "18bf3282-f842-4345-957b-cea0fd51ca83"
        },
        "item": {
          "id": "53d4a745-cc56-4bdc-8e7c-e13e1ec30421",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4e3fb988-97ce-405a-a6cb-8752fe38700a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70779920-c4c1-400f-98d8-a4809d5d9994",
        "cursor": {
          "ref": "7b85a21d-ca19-40c2-ab3c-59397c1b057a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "20111e7b-9a58-4b4d-8825-441ae3425880"
        },
        "item": {
          "id": "70779920-c4c1-400f-98d8-a4809d5d9994",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a1174624-5831-4361-a58c-453b801c1f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce56bb69-f9e9-4b69-a41a-b0dc52402052",
        "cursor": {
          "ref": "0a643064-71b2-4a18-a70d-4b31bd603193",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e0e5cdd6-fd71-43a5-9f63-d9f303b0e97e"
        },
        "item": {
          "id": "ce56bb69-f9e9-4b69-a41a-b0dc52402052",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec1ad4c8-6b0f-4dc1-873a-a10cb60d2128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4750f221-c545-4068-8b1e-1c1bf73a8a88",
        "cursor": {
          "ref": "42743267-85d5-4020-848d-427df20b516d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e2ee52db-a035-4cb5-af15-82adaf4b0be5"
        },
        "item": {
          "id": "4750f221-c545-4068-8b1e-1c1bf73a8a88",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e83fc03-b146-46b1-bbd5-b565696887c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "15f03c02-0ef3-4944-a64e-11ce32c66d62",
        "cursor": {
          "ref": "943f8f8b-971c-4afe-831a-842c4dee3c84",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9e906471-6a79-47b8-b00b-d5db8c35c748"
        },
        "item": {
          "id": "15f03c02-0ef3-4944-a64e-11ce32c66d62",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1f37c445-d36b-4078-a421-054656255c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7d94682e-d811-47a1-af9b-cf89b9614138",
        "cursor": {
          "ref": "36e21e0e-ba62-4539-b38d-0504d57c0587",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9da37779-c6d3-44dc-9994-04a9e8ac9f70"
        },
        "item": {
          "id": "7d94682e-d811-47a1-af9b-cf89b9614138",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e9a4dc0c-dc14-4c5b-80cf-f816e42f9b88",
          "status": "Created",
          "code": 201,
          "responseTime": 9133,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5a1982-e9ba-4f99-b206-3b62757c848c",
        "cursor": {
          "ref": "e11942a0-afb7-4f04-9839-7705fa9abe5b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9359477e-9d6f-4a00-be9d-3c2b26bd5bc9"
        },
        "item": {
          "id": "bd5a1982-e9ba-4f99-b206-3b62757c848c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fcceeab5-5a80-4684-adad-1d196a71fd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d454a950-85ca-4c17-88e3-697fa92cf439",
        "cursor": {
          "ref": "e15d7091-902a-452a-834f-c0600430a705",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8488fc62-0e51-4c0f-bc5a-b5a238c48b2f"
        },
        "item": {
          "id": "d454a950-85ca-4c17-88e3-697fa92cf439",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "36c11a6f-ca6c-4727-b6fe-9ef0ff68cbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1030e243-40db-4603-b44a-7632f2cc72e0",
        "cursor": {
          "ref": "4c478885-2029-4bcd-a08e-c83486354787",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c679f2e1-3b94-4a51-951e-0041d7fb3a57"
        },
        "item": {
          "id": "1030e243-40db-4603-b44a-7632f2cc72e0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "408022c0-61ac-435c-a607-6dac1e4129a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5add45-a92e-4f88-b24c-89ede60eb871",
        "cursor": {
          "ref": "0b52d12f-ff82-4c7e-ba83-ceb63d65c948",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "512c4079-e31d-4bce-bf66-cf4478dfa21a"
        },
        "item": {
          "id": "3e5add45-a92e-4f88-b24c-89ede60eb871",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c1c4e517-d5a9-4a9c-ac41-456c50f8c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8108cb4e-4404-4528-8e81-0bbbc53919a9",
        "cursor": {
          "ref": "9d3c40f8-35f8-4962-b920-058c220264cd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6ccef6ae-16af-4e39-83b4-988c3e6137e2"
        },
        "item": {
          "id": "8108cb4e-4404-4528-8e81-0bbbc53919a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "34476a6e-c592-4b1a-b439-b4473695e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05188a1a-1931-4116-8a24-fe13e8e96b11",
        "cursor": {
          "ref": "96cade87-a24f-4e64-a4e0-d87dbfd1ba43",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56c5b889-d766-4c20-9847-aa9a4164d670"
        },
        "item": {
          "id": "05188a1a-1931-4116-8a24-fe13e8e96b11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1228a6b4-e15d-4594-a438-22b36b5517dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a137e-36fd-44f2-ba42-216c93721752",
        "cursor": {
          "ref": "dd0a8cb7-2c53-461d-9ff2-a5dcf60ad940",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ad1e0862-45da-4ea7-a89e-8b29060a7f14"
        },
        "item": {
          "id": "678a137e-36fd-44f2-ba42-216c93721752",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5133a0bf-ebdc-444d-95d4-6538c75bc875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459cd006-6a2e-4bd1-8a1e-04ad3b8e9b07",
        "cursor": {
          "ref": "5b4fa059-3cd2-4328-bdc5-1b6071fe0ef1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f00416a0-d070-4c50-ac17-7ba464573ef4"
        },
        "item": {
          "id": "459cd006-6a2e-4bd1-8a1e-04ad3b8e9b07",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa485a02-87ed-4094-a5b6-90d158f852e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7241fe28-e3c1-407b-b2c8-bedbeab0d0c2",
        "cursor": {
          "ref": "0d427cd9-6b90-4733-b283-6b6da6a75518",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a5bd9b3f-2cd0-4a8b-9f11-717f3b91a317"
        },
        "item": {
          "id": "7241fe28-e3c1-407b-b2c8-bedbeab0d0c2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1248b2f8-dd72-4973-aaf2-8648fc6f8720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc1c3e2-e056-47bd-a5b5-b1379a189d16",
        "cursor": {
          "ref": "43bf8d80-2ca9-4cef-b6e0-64ff9257c465",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "51a10152-4f9d-4f20-a8ce-210f9eb3bf8b"
        },
        "item": {
          "id": "fcc1c3e2-e056-47bd-a5b5-b1379a189d16",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3e4fe6c8-f1e0-403f-adb1-24440e9ca152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af2ec05-a847-4b93-b903-c9c3172caecc",
        "cursor": {
          "ref": "2e9ff5b7-352d-41c7-a18b-1c8d8ce01a10",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f3dd839d-57e4-49b8-8179-6069e7f7d934"
        },
        "item": {
          "id": "3af2ec05-a847-4b93-b903-c9c3172caecc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7ff4bb59-cbcf-41d7-aa34-c450d5dff0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0b1e11-42e6-4a25-b446-1131de283595",
        "cursor": {
          "ref": "e47fe5b6-d73b-4c36-898d-710559cafe03",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cc0b347d-6ead-4450-9be1-6d86e3f7599c"
        },
        "item": {
          "id": "bf0b1e11-42e6-4a25-b446-1131de283595",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c3897c00-075e-4e05-a365-ffb3b854c6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1be57f-3ad5-49cb-90bb-e5920cfd21d1",
        "cursor": {
          "ref": "35b423cf-c03c-42d3-8400-bdacd91b0b13",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "057cca86-7bfe-4e10-abc7-2a51550a0991"
        },
        "item": {
          "id": "ee1be57f-3ad5-49cb-90bb-e5920cfd21d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2af8634b-a7fc-4f66-9aaa-ebdc14cefe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52fbe7-cb7a-4cb0-ad06-2cf8bb2e9e69",
        "cursor": {
          "ref": "71f0489b-cdd8-4eff-a0cf-4b6fcc2a43d7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b81b9924-f5e6-4818-b821-a8f682103d24"
        },
        "item": {
          "id": "da52fbe7-cb7a-4cb0-ad06-2cf8bb2e9e69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "59a790ef-0c1b-44ea-9964-006227d7c93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e460239-c02a-41a2-a11b-c624f1167b8d",
        "cursor": {
          "ref": "3cae563b-d0f1-4a4a-84b7-c30d0815d66d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aeee3106-fe45-4b13-9d8a-6f62065e04cf"
        },
        "item": {
          "id": "1e460239-c02a-41a2-a11b-c624f1167b8d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c27d5ade-6aa9-4c47-a57f-307a2c19d0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c86826-4ffc-40b8-a02c-27dc20c2a7f8",
        "cursor": {
          "ref": "22bbd2d5-3a76-4eaa-9052-cbb47cceee4e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9c89390e-db42-4daf-9683-dd7b009e359e"
        },
        "item": {
          "id": "b5c86826-4ffc-40b8-a02c-27dc20c2a7f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7259754-8cc4-48a5-aad6-128e7d816931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560c77e9-22f3-428d-870f-41a635ea2174",
        "cursor": {
          "ref": "9d8fe212-374f-43e9-a02d-9950bb09562b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0cea512e-ffe6-491c-b53e-d12d1ba49d3b"
        },
        "item": {
          "id": "560c77e9-22f3-428d-870f-41a635ea2174",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ada6101b-b80a-4191-b33d-23a70811bf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4415facc-272e-4666-8c32-9712e9217d26",
        "cursor": {
          "ref": "6e0459a8-5c33-41a7-b455-8d7b8a10d6ee",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a6ea35f6-61a7-4a80-987b-a3197ed16188"
        },
        "item": {
          "id": "4415facc-272e-4666-8c32-9712e9217d26",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08b293a5-6130-409a-a4a0-1befc06701c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60165829-6476-4730-bde8-e686213d95b8",
        "cursor": {
          "ref": "54689547-c03a-4516-a3d8-f4cd0d05a586",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6932423a-63b3-495f-bbbb-f34a8107eb90"
        },
        "item": {
          "id": "60165829-6476-4730-bde8-e686213d95b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bfd5e252-b500-462f-b2fc-bdf8cec507a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "1b4c7881-3ada-45c3-86f0-ea864d4cefae",
        "cursor": {
          "ref": "f38b825c-1e23-43be-ad4a-8d1a8babba0d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fd84dacd-f1db-4d42-a9d9-ac6d5eec24b3"
        },
        "item": {
          "id": "1b4c7881-3ada-45c3-86f0-ea864d4cefae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68a1662b-d17a-4edc-a156-cc84f3a26117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19ef33a-58c4-4fe6-b1ff-1e513b218b96",
        "cursor": {
          "ref": "7368a8d0-9015-4561-b5d1-8d4e22079775",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2aaca9d2-1dbd-4a1f-a15a-8aa9e4018a7d"
        },
        "item": {
          "id": "a19ef33a-58c4-4fe6-b1ff-1e513b218b96",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3475b311-5883-449a-b608-7dd140180596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbbe29e-1605-4e0d-88e9-70a9d2771e6c",
        "cursor": {
          "ref": "ec88e9fc-1dad-40ee-bae5-f727c24717d9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "69ce8849-dfa3-4481-9f77-0c0eddbc8d3e"
        },
        "item": {
          "id": "7bbbe29e-1605-4e0d-88e9-70a9d2771e6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "75716bbe-d492-427b-ab0a-d9f3fd4403e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e8f238-a1f7-4324-b5ea-0e6cad15fb70",
        "cursor": {
          "ref": "7be61c9d-6b4b-471e-ba0a-6ceb7799ced8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "05bbf8a8-e4cd-4835-9afb-a14b7dcadab2"
        },
        "item": {
          "id": "d7e8f238-a1f7-4324-b5ea-0e6cad15fb70",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "acbc9999-e877-44c4-b4e4-cf5fa8fcd3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3985c4-beac-4c5e-9092-a996ee6c2d37",
        "cursor": {
          "ref": "949c049b-9252-4104-ae01-9fc6202eef41",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7eb4ae89-52fb-46f2-b297-785863caaa8a"
        },
        "item": {
          "id": "9a3985c4-beac-4c5e-9092-a996ee6c2d37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "179e2222-aede-4e39-aaa4-f2dfbbc9e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ae1f43-11fd-448f-aa01-40eb147c3f6d",
        "cursor": {
          "ref": "56a8fa12-f92f-415e-aad9-3041c87c53c7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cba388da-f686-461e-b193-c1fdda204b24"
        },
        "item": {
          "id": "12ae1f43-11fd-448f-aa01-40eb147c3f6d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1d1886e-ead2-4893-9a8b-dd2d6edb2067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697b7abd-e21b-4d77-839d-d9f6e081582f",
        "cursor": {
          "ref": "9d157ea2-85ef-4c77-9ecf-c487f006addf",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "49357fa5-e7bc-4cc0-90ca-810d400e027e"
        },
        "item": {
          "id": "697b7abd-e21b-4d77-839d-d9f6e081582f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17c58a40-6c84-40be-8d15-8f18287249d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e661c94-8971-4f53-b04b-30a84c836814",
        "cursor": {
          "ref": "9d7c2714-ee78-4f03-b57a-945a989399f4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5b796c49-ffce-43d1-9004-060424351e7e"
        },
        "item": {
          "id": "5e661c94-8971-4f53-b04b-30a84c836814",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ee1aec5-cc48-4f5d-a19e-ee580e8940b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ea83286e-bcff-4a2b-a748-fc3c9e85efa1",
        "cursor": {
          "ref": "779c2a8a-8745-46fd-a9be-9c67467965a1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bc02a85f-b5d9-4f13-a6a6-d65abc35c82a"
        },
        "item": {
          "id": "ea83286e-bcff-4a2b-a748-fc3c9e85efa1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68ac8ed9-55b4-4c24-bcc7-9d248fb05abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d50699b-5be5-4884-a05e-b7fa835545f8",
        "cursor": {
          "ref": "70b280e7-8ff3-4fc7-aed9-c1d373696337",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9c899434-8cf4-434b-9e75-107121fa7058"
        },
        "item": {
          "id": "9d50699b-5be5-4884-a05e-b7fa835545f8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0caedaa0-2c26-4823-85ba-0e9e2a991817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c7e1b-16fc-45ba-acbc-d5ee515c13f6",
        "cursor": {
          "ref": "dec73304-9c10-4d48-a632-c651132ad3df",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8f763402-80a7-4d33-a065-ba9c27a52864"
        },
        "item": {
          "id": "f61c7e1b-16fc-45ba-acbc-d5ee515c13f6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e324eb81-7896-4f3a-a270-f0a1736a3a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231beb34-4c30-442e-99da-e47bb1991ae4",
        "cursor": {
          "ref": "d362a13d-735e-47fe-91c8-75fbb951e3b2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "194fb6aa-389f-4595-ac77-65bd8d7bb4e5"
        },
        "item": {
          "id": "231beb34-4c30-442e-99da-e47bb1991ae4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1250ad60-3ddb-48c5-a37a-0a984564253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3331742-117c-4912-892d-68435cb971e2",
        "cursor": {
          "ref": "09710937-ad40-46f7-9da7-1117bd1bc862",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "813bdd8d-3e22-4278-9b30-f9a4893c2ba4"
        },
        "item": {
          "id": "a3331742-117c-4912-892d-68435cb971e2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ddf6914-62e8-478c-9863-45e3e61ed4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27816e21-3ffa-4fd1-b229-ca57839fd97f",
        "cursor": {
          "ref": "107df9ae-32b4-4286-8c7a-8eb67db48842",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c6747eed-2d6a-409f-8737-547b1a3f594c"
        },
        "item": {
          "id": "27816e21-3ffa-4fd1-b229-ca57839fd97f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "228bced8-3737-43f1-b7a5-e587cde5697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74816d15-1033-459d-9510-3c52e2cccf7d",
        "cursor": {
          "ref": "effd8344-dd45-43ff-a1cf-0fe038480c3b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8893290c-d29f-465e-b832-6afb4078e335"
        },
        "item": {
          "id": "74816d15-1033-459d-9510-3c52e2cccf7d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5deac90-fd0b-4c61-875a-7e9f1c03f524",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 94,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "03109b27-98e8-4293-a758-3a83ead850c8",
        "cursor": {
          "ref": "01020eaa-756d-4b2d-b6b0-29b23508e7c2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7265c2cf-6dc3-4281-87e2-ca09e8fee094"
        },
        "item": {
          "id": "03109b27-98e8-4293-a758-3a83ead850c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7cd2e9c6-c248-43f5-b6bf-b6e17e71e810",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a94930-c233-4682-bf78-5bcdffe1cdc6",
        "cursor": {
          "ref": "cf825567-177a-405e-89af-171ae8deeaab",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c19bda2b-f5a7-42d1-972e-d15c881ad7d5"
        },
        "item": {
          "id": "78a94930-c233-4682-bf78-5bcdffe1cdc6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1ea9eb42-d757-4cba-a025-fd0436261ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a44ae-d643-405a-aad3-dc38d17e1ffc",
        "cursor": {
          "ref": "37455de6-f602-4fed-97e3-77f96ce6801d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e1bce2d2-c605-48df-b2a8-b50943155f7a"
        },
        "item": {
          "id": "407a44ae-d643-405a-aad3-dc38d17e1ffc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e30e7c23-b6a3-4004-9cf4-910115365bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dbf382-8970-4ae4-b3e8-58c5711a83f2",
        "cursor": {
          "ref": "029343a3-686d-4ccd-aab7-a1b5cef0ffdd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "97f18d83-f661-4bbe-a56a-178bc54a805a"
        },
        "item": {
          "id": "12dbf382-8970-4ae4-b3e8-58c5711a83f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5151d637-dacf-436f-9efe-030342bd2898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8720189-f7ae-47d6-80f7-e38d59fef069",
        "cursor": {
          "ref": "cd455c75-11c8-47b1-a5e9-b7d14bcfdddb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b3b6163c-7331-41c4-9446-3f2e08c7621e"
        },
        "item": {
          "id": "e8720189-f7ae-47d6-80f7-e38d59fef069",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40cdb00f-1ed0-4fa9-9d64-575a4da55965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbb0155-5ec7-4818-942e-fd9489372719",
        "cursor": {
          "ref": "21665ea5-2271-46b4-975d-6245d8be775f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9cd4db75-1a9f-4f67-83a7-1752635a8467"
        },
        "item": {
          "id": "2cbb0155-5ec7-4818-942e-fd9489372719",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a9287a4f-a554-4031-8018-47c8a2f2bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7365c5f-c217-44ff-9fee-727390204645",
        "cursor": {
          "ref": "be4e6533-fd78-4dc1-b16c-4d9ce07ccf7c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e39f5435-57ff-409a-ba6b-941f57f7ed81"
        },
        "item": {
          "id": "f7365c5f-c217-44ff-9fee-727390204645",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f67117b3-e956-4384-af82-91219369fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a6fbb-b7d0-458d-ba93-7b6f1e520d9e",
        "cursor": {
          "ref": "e470c603-b4d8-4647-aedf-a369a99a387a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "724a21c3-5f3b-4bf0-b3a9-a763b0082801"
        },
        "item": {
          "id": "d30a6fbb-b7d0-458d-ba93-7b6f1e520d9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da0d62f6-b58f-4771-a02a-b30f55f1af78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3b21c3-2e8a-4c27-b2e2-f7ce40f626e7",
        "cursor": {
          "ref": "bef1011d-1717-4c38-9ed9-37ee0127a77b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5e8b3050-fb80-4f45-86d5-711d240f0d20"
        },
        "item": {
          "id": "1f3b21c3-2e8a-4c27-b2e2-f7ce40f626e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7688521c-b3fb-4f89-a20e-bd99cb11c493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceb6797-0d20-4e68-8746-a108c1591ef0",
        "cursor": {
          "ref": "33d0022d-3c65-4905-b409-2e8a2967d5db",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06c0c5f8-4fd8-44b6-a8d1-89f1abfe292f"
        },
        "item": {
          "id": "4ceb6797-0d20-4e68-8746-a108c1591ef0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "533a527f-6eac-453a-b5d7-2a32c8863143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadf9cba-5734-44f0-aa3c-210f5aa78858",
        "cursor": {
          "ref": "b6a05e95-06d6-420a-9015-41b0632a476b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2b8aded9-9b5e-4883-b0b4-e3c5765f2b49"
        },
        "item": {
          "id": "aadf9cba-5734-44f0-aa3c-210f5aa78858",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "17bc429e-1b94-4ffa-9467-7d9bcd3b5478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96871543-0c6c-46f0-a549-c96ae3d751aa",
        "cursor": {
          "ref": "98604a53-fc63-40e1-945f-895d1723fee5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fec07e1e-bfdd-488d-bb48-71d3c23d2811"
        },
        "item": {
          "id": "96871543-0c6c-46f0-a549-c96ae3d751aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f4d2cc4-7b22-4c45-acbe-efb69a0dfd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026dff51-ee18-4947-9332-73b8794eb3d7",
        "cursor": {
          "ref": "eb11e87a-2a71-49b1-b5f0-c14a11cd4fdc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ed656002-0a75-4dd6-9292-a21bd4a1be64"
        },
        "item": {
          "id": "026dff51-ee18-4947-9332-73b8794eb3d7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fdcb7a55-eb5d-48bf-9c78-9bc448c67877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c807a5d-1d7a-4ee2-b514-d76c7dea035f",
        "cursor": {
          "ref": "7843c384-afed-45f2-b641-276dc5ff7f2c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "06632816-33bd-4ddc-aa3f-1f6219178304"
        },
        "item": {
          "id": "0c807a5d-1d7a-4ee2-b514-d76c7dea035f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "118f1fe2-3afd-4f89-aa5a-63d8c9b4fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ca9cf-30ad-4f5e-bc4c-c07b73492482",
        "cursor": {
          "ref": "182cc6fe-06de-41c8-8fae-4d3fa0b47750",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7c25b6e9-c837-4ba3-9706-f9b4f6cb34d9"
        },
        "item": {
          "id": "7d8ca9cf-30ad-4f5e-bc4c-c07b73492482",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d95509b6-7625-4cba-b772-ee926a79da42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b98bd93-23cd-4aaa-9665-651dbc231e9c",
        "cursor": {
          "ref": "c6a4393f-279d-40cf-a4a5-59983f6fa85c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6b6a688-83b5-4604-a746-fac13ccd9dd8"
        },
        "item": {
          "id": "8b98bd93-23cd-4aaa-9665-651dbc231e9c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4037295-1b8f-4eb5-87c9-ed5cbdb712e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c88af0-2c17-4c28-bd55-ab153d9e2c05",
        "cursor": {
          "ref": "fa1b8b9b-4291-4ee9-a579-9ea280c57dad",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "58f1fc51-afd3-421f-a53a-a3a91469e119"
        },
        "item": {
          "id": "a9c88af0-2c17-4c28-bd55-ab153d9e2c05",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0f0d0689-0719-4f2d-8a76-d985018972fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b659342-4b45-4eb0-b7e7-69dd5b424883",
        "cursor": {
          "ref": "3801fe61-3955-4551-b469-26756b5e3c52",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8c0e47bf-2e97-4016-9234-dde03e837de1"
        },
        "item": {
          "id": "8b659342-4b45-4eb0-b7e7-69dd5b424883",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "266b587e-737d-4805-9453-02e05c4d3fe3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "46cd580d-4e52-42f3-af59-a721c717ae1e",
        "cursor": {
          "ref": "5fc7e3e8-68bb-4bdc-809c-398be200a5f1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bbe7a18c-e75e-4302-a21f-ce55cb7cd875"
        },
        "item": {
          "id": "46cd580d-4e52-42f3-af59-a721c717ae1e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20b0a7bd-594c-47b5-b99e-e4e83bc1e30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404174b5-b276-47f4-b1fa-8d5f1a0d1b88",
        "cursor": {
          "ref": "2cd76e31-bd12-4939-be7d-b7e5e987e058",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6a1a20a-36a0-4bec-bb5a-8117cca79ba8"
        },
        "item": {
          "id": "404174b5-b276-47f4-b1fa-8d5f1a0d1b88",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4cdad9c1-8950-4baf-a1ad-486cec8f03ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d6b34-0bdb-42d5-9499-0ed7d2dfa56d",
        "cursor": {
          "ref": "2384280d-2bd5-4f20-b2c6-a9163c5ce75c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1f8557ec-ecec-44c6-a68c-91515aeff1f5"
        },
        "item": {
          "id": "c55d6b34-0bdb-42d5-9499-0ed7d2dfa56d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d0c3b1a8-67a9-4a70-9a14-4ced7e84f410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a416e43-4fe5-4c56-9a41-2f3f8dd7f32d",
        "cursor": {
          "ref": "3b080901-739a-494d-b0af-dcef3cad5d04",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7c171a37-5ae6-473b-b28d-286d5127fa5a"
        },
        "item": {
          "id": "8a416e43-4fe5-4c56-9a41-2f3f8dd7f32d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b7e8a07-095f-4539-a402-11a39fc36bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7209be07-0062-4adf-ae80-1c1da1d5a2cb",
        "cursor": {
          "ref": "bc456c80-ffe9-4fe9-952a-10290b3003f8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e8715eb1-2bb3-4bdd-81d2-240602dd1187"
        },
        "item": {
          "id": "7209be07-0062-4adf-ae80-1c1da1d5a2cb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18795e35-009b-4ee7-9dd1-7c691ba0c3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aaae86-2b8e-4008-bb9d-d276b0db34aa",
        "cursor": {
          "ref": "e7945373-d156-4bbc-b59f-c256bba24bc5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6026931b-a2ef-4829-9574-18c4587eae5f"
        },
        "item": {
          "id": "e4aaae86-2b8e-4008-bb9d-d276b0db34aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1a95c3d-029d-4a3f-b8d6-4256ecc12c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e49e312-9836-49ef-a76e-6c316e0f9e97",
        "cursor": {
          "ref": "461b41d5-cc86-420c-9a21-9ff4f404bb72",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4f385510-51aa-43de-afd9-4364498d45a8"
        },
        "item": {
          "id": "0e49e312-9836-49ef-a76e-6c316e0f9e97",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3441bac-c131-40c9-9b6a-269771029f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd668a0-3caf-40e5-9308-acf990237991",
        "cursor": {
          "ref": "47a45c91-48b1-462c-af76-1a69b39b87f0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dfdcf549-faf5-4cad-a17d-39876ceb675c"
        },
        "item": {
          "id": "1fd668a0-3caf-40e5-9308-acf990237991",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37b60a93-4a62-4790-8afe-dbd30b0828cf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "9a3f50f9-dc16-43be-900d-10586cab716c",
        "cursor": {
          "ref": "14bce53b-62c3-465b-9599-dce73fa16df1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9442d8a2-031b-490f-b4d7-a49930bae38c"
        },
        "item": {
          "id": "9a3f50f9-dc16-43be-900d-10586cab716c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "70e539f7-69d0-4f54-b2fe-714a1f28c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943cce69-a385-4a6e-82a2-2556a349093e",
        "cursor": {
          "ref": "7f34d2b4-b68c-4efb-9e80-b88f7139b53f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8838d181-27ed-4a4d-8f43-fcea52903c5c"
        },
        "item": {
          "id": "943cce69-a385-4a6e-82a2-2556a349093e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ebcfeee8-117c-4c64-9680-2b4b15cbff5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8585947-649c-4e94-9e52-0fe78c40fab3",
        "cursor": {
          "ref": "a63d4418-50a8-4ed8-9144-47d0eee409e6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20500191-d062-46f3-bad2-40cc49ed4b32"
        },
        "item": {
          "id": "d8585947-649c-4e94-9e52-0fe78c40fab3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a25711f-3e7b-4dd6-80fd-2d11231afdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd8971b-06a4-4e12-a733-a8748bd9f9c5",
        "cursor": {
          "ref": "47da9ae9-b0c7-4e98-936f-f57bb5854685",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d34bfe78-6b5b-475f-ab60-b647f388ed14"
        },
        "item": {
          "id": "8cd8971b-06a4-4e12-a733-a8748bd9f9c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2e7807cd-6ae5-449f-87f2-0839c02132eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4982b0d-6e6f-454a-907b-db5e6e405676",
        "cursor": {
          "ref": "bed14a1e-f8c7-4756-9698-e149bd86e81f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0b03280-b42d-4efa-99e6-e205c850d94f"
        },
        "item": {
          "id": "b4982b0d-6e6f-454a-907b-db5e6e405676",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15aa3bc8-7fa1-485a-9111-be48d8e229af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fc44f8-312f-4ca6-96d8-96bda8e8cb5e",
        "cursor": {
          "ref": "e427cbf7-fb04-4001-bbc2-e508b2dcc5d1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b932eef5-145d-427b-b555-ea7c212d0979"
        },
        "item": {
          "id": "14fc44f8-312f-4ca6-96d8-96bda8e8cb5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6bc9994-9910-45a9-8297-b46fd37bb3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9d968c-27ae-4820-984f-761c7835f9df",
        "cursor": {
          "ref": "18d6cdcd-d815-42b7-a146-48e139ee2fc0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78b46819-17c7-4fa0-9a98-0cfc7001a71b"
        },
        "item": {
          "id": "fb9d968c-27ae-4820-984f-761c7835f9df",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e03e6879-c4d8-4f82-a376-c5da4713b160",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "11f39772-d6c7-4e26-9e75-cd7307635513",
        "cursor": {
          "ref": "66ec8d75-8ce2-47df-8530-8dade816f0a8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6edfdba4-37a8-4749-98bd-ed94bfa8ba3e"
        },
        "item": {
          "id": "11f39772-d6c7-4e26-9e75-cd7307635513",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2bd7170d-e294-448d-87d1-d4a26341010a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "ed01350e-5f94-4bb5-bfa8-0ba1c37b2797",
        "cursor": {
          "ref": "cfc51eb2-14e0-4dd1-aacf-6029abb26b33",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d6d9b6c0-74cb-4655-bc4a-2f12115b0186"
        },
        "item": {
          "id": "ed01350e-5f94-4bb5-bfa8-0ba1c37b2797",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cf13f22a-c92b-46f4-bf7e-30a340f3cbeb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d9fe192a-d0a6-417d-ad76-d5d9089b27e8",
        "cursor": {
          "ref": "eaca9ec2-9782-4c27-b10a-62f6b64abc7f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98d03a50-a184-4d2e-b528-672d6a8af042"
        },
        "item": {
          "id": "d9fe192a-d0a6-417d-ad76-d5d9089b27e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "42c0d384-0dbc-4b4a-9452-834111c5051f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "52ab39fe-5fbc-4584-b345-1cf6510af6f0",
        "cursor": {
          "ref": "ecc50c00-f0ae-4e7b-8410-84706fcdac88",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7a1e7358-ab0f-4a98-9e22-39db3738471a"
        },
        "item": {
          "id": "52ab39fe-5fbc-4584-b345-1cf6510af6f0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f5cb7178-49a4-498e-9367-c1f6b2bd0a78",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "1daf4f5c-1dae-4526-b388-4f0b5d5c694c",
        "cursor": {
          "ref": "578e33c3-6d04-428e-95ac-28285459acdc",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e5d00c42-01a8-41ab-bc15-59063a353f25"
        },
        "item": {
          "id": "1daf4f5c-1dae-4526-b388-4f0b5d5c694c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "15be0fc7-2c38-4df6-b70c-ef93fecf2397",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "77271456-37e9-4a5e-9eff-2e58734ea5e7",
        "cursor": {
          "ref": "3f6ffce3-2001-4eb1-a52c-c6dcb0aa8d79",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7caec360-b696-4e64-9b55-a8d52852992a"
        },
        "item": {
          "id": "77271456-37e9-4a5e-9eff-2e58734ea5e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c19d239f-d275-4475-94b3-0e788804f62b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d14a572-ce74-4c50-af02-9ca71936299b",
        "cursor": {
          "ref": "9743fc29-5722-4b1b-b6b6-5de351f035c0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "052d2ece-fcaf-4404-9cf9-046bdcf19d39"
        },
        "item": {
          "id": "2d14a572-ce74-4c50-af02-9ca71936299b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f61efa7c-a72b-4edf-ab67-1b0696d1b126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e13da4-20a7-4484-b3f5-22dfff0b03e7",
        "cursor": {
          "ref": "de036d21-f43b-46de-aa3a-67e741773117",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6d78f61c-7af3-41f9-b338-cad1d6b36f6c"
        },
        "item": {
          "id": "70e13da4-20a7-4484-b3f5-22dfff0b03e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "773cfbe2-720f-474f-8f67-65df47bdf572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30a569b-a514-4854-b4ca-e06070a363bd",
        "cursor": {
          "ref": "37a83332-dd19-4e13-9deb-255931acf31e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "76b9c405-2c41-4428-b594-0ad26dd49673"
        },
        "item": {
          "id": "a30a569b-a514-4854-b4ca-e06070a363bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "79791529-da99-4272-a436-9ab23f64a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a8641-b994-4d11-ae4f-4de6795c8573",
        "cursor": {
          "ref": "01c2397a-63e6-4422-91e3-a61035c67060",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "732e0635-c966-4b9f-a5b2-758ede9d802a"
        },
        "item": {
          "id": "8f7a8641-b994-4d11-ae4f-4de6795c8573",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9b931aef-abd0-4b6a-a77e-efce56a44b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2b3df3-c431-4812-8d68-35fb1a9c06c9",
        "cursor": {
          "ref": "3158fe47-a97a-479e-a96d-ae55df0e58fd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e41d7b52-aa6b-4218-9643-936deeab3dbc"
        },
        "item": {
          "id": "0b2b3df3-c431-4812-8d68-35fb1a9c06c9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83e6a6b0-31af-4f4a-82ee-a951f3bc53a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553381b1-c682-46f7-8a54-4338ece0e9ee",
        "cursor": {
          "ref": "19dd5931-0c85-4cf4-affa-e642cc776a9a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a05a2174-70da-44b0-a3d6-bb892552949d"
        },
        "item": {
          "id": "553381b1-c682-46f7-8a54-4338ece0e9ee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d701b043-f80a-45c4-82a1-b92cda0182f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a977fa-8bfe-4b9c-8403-ad75060e987b",
        "cursor": {
          "ref": "ed632126-8e7d-47ba-8e4a-d6fe5accdd46",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4337f87a-6028-4e51-ae09-e5eeed8d9c63"
        },
        "item": {
          "id": "89a977fa-8bfe-4b9c-8403-ad75060e987b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b81f8889-0dce-4599-9171-7773ab37debc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa662f9-45fb-4219-b22f-2f77a7e5ac64",
        "cursor": {
          "ref": "26e981aa-bbdc-493c-abb3-feba615c6a1f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3771cd8a-b8ea-4732-8f9e-12c76132a103"
        },
        "item": {
          "id": "faa662f9-45fb-4219-b22f-2f77a7e5ac64",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d0b64d25-f190-4c61-801f-65a33b364a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb04198-b6f8-41f4-8ccf-13fb4a569532",
        "cursor": {
          "ref": "fb8f573a-377c-4dfb-b42e-f0970fade863",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "85cd3560-7275-49ef-8d69-ef74c075e5e8"
        },
        "item": {
          "id": "aeb04198-b6f8-41f4-8ccf-13fb4a569532",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "30bd5d0e-5f89-44d1-a669-e57fd16b7a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe15843-c277-466f-a30c-69eb5cb56ffd",
        "cursor": {
          "ref": "59038781-1a14-4738-b3b9-6d6869640ef4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b1b2f89-8792-41bb-ba07-3e38ad903691"
        },
        "item": {
          "id": "dfe15843-c277-466f-a30c-69eb5cb56ffd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0dd7d9eb-c4be-48ae-b437-271faf9e968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6624aa-24ca-4971-a109-27b60e7bf276",
        "cursor": {
          "ref": "240f45ab-178a-49ba-ae10-2340d2243190",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f711af19-510c-4c37-bfb5-75484ad7d808"
        },
        "item": {
          "id": "df6624aa-24ca-4971-a109-27b60e7bf276",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cd3d0c85-b596-47e7-979a-2cdaf0bbc35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b8d363-f36f-49d9-be85-deffa765c101",
        "cursor": {
          "ref": "ab3a3b34-f500-450c-a8aa-188a085b9fac",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "042d6f64-a7a3-4db4-9780-7559f370c8c2"
        },
        "item": {
          "id": "51b8d363-f36f-49d9-be85-deffa765c101",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c2722734-de8c-4b37-9046-393ca97b2c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253e3c3-4787-4d6c-b341-74a57a78f2b6",
        "cursor": {
          "ref": "d3edff78-b91d-44a5-a12d-9de1da1ffa02",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ca830d5f-ae4d-445b-9400-bebe4471b31d"
        },
        "item": {
          "id": "8253e3c3-4787-4d6c-b341-74a57a78f2b6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5bc6f3ee-9373-43da-91ae-0784e97c581b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b1d9f-7882-4511-a1a9-7feb3bdafe03",
        "cursor": {
          "ref": "55ce5a08-f661-440e-a616-0880a38c2903",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1977bea2-efc6-451a-9aa5-838fb3b7a921"
        },
        "item": {
          "id": "c17b1d9f-7882-4511-a1a9-7feb3bdafe03",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "de5d651f-460f-4628-a16f-1a81da69a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e8b02f-d046-4167-99c1-a96b4bf500a4",
        "cursor": {
          "ref": "819eea91-7ef6-4187-8023-edf82d57b227",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f4b4dd18-fa27-4041-a19e-266a99c3f934"
        },
        "item": {
          "id": "e0e8b02f-d046-4167-99c1-a96b4bf500a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e5ac755-abdc-4457-b6fb-a8da0da47314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b406177-c2c1-4e8e-b20e-2c9397159091",
        "cursor": {
          "ref": "e40df25c-5864-4b1a-9264-7e9b7acbfc20",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8e2f288c-09d9-4dd3-b499-9e33201cce25"
        },
        "item": {
          "id": "3b406177-c2c1-4e8e-b20e-2c9397159091",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "511cd2b5-cb4f-40fc-9c84-ffaa789c2681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d89db1d-ee35-440a-b01b-32d85dfb35e5",
        "cursor": {
          "ref": "e9a21995-bc6b-449a-8f5c-c7be0920357e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "80687083-99e8-4568-83de-bff3f515a1fe"
        },
        "item": {
          "id": "2d89db1d-ee35-440a-b01b-32d85dfb35e5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b9d26eb0-01e4-4f2a-b804-2573f317056c",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "bd07f22a-9a95-47fd-94ed-5f504fbb3186",
        "cursor": {
          "ref": "0ebbce15-196b-45bb-b459-20f86cddc7b2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "30dce6a8-2209-4fb4-9fe8-3587438b9b24"
        },
        "item": {
          "id": "bd07f22a-9a95-47fd-94ed-5f504fbb3186",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dc4a2c7a-9ddb-459e-b228-09b39d9d50b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960c77d7-ca02-423b-b59b-f5dc6bd4c4cf",
        "cursor": {
          "ref": "48f06bdf-3f00-4d5f-84b9-628a257f3eaf",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "04e90699-d06f-430e-8a03-32b8c95737d8"
        },
        "item": {
          "id": "960c77d7-ca02-423b-b59b-f5dc6bd4c4cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6e7d350d-4c82-4ea8-9671-e3da9fbc0298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51759640-be3d-417a-b4f4-9af1f1e3c442",
        "cursor": {
          "ref": "b9765eed-6854-4bd7-a5cd-72f46601b416",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdf44b71-e023-4749-98c9-0d30518444aa"
        },
        "item": {
          "id": "51759640-be3d-417a-b4f4-9af1f1e3c442",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e13e24c9-d7d2-45da-a76f-f22454d10fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c35a42d-414d-4484-9c17-3cab83039fff",
        "cursor": {
          "ref": "d81b3e97-498a-4ba1-be82-ef5774c2e0e4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3269353b-1a90-4ab7-b2c0-4dd62ea26a90"
        },
        "item": {
          "id": "6c35a42d-414d-4484-9c17-3cab83039fff",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "744905af-15a7-48c5-8ed8-1d396fd19c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbd2f98-e0cd-4c85-bc20-f0aba65df112",
        "cursor": {
          "ref": "77cfa7d3-ba37-437a-8daa-b2374bcf6f01",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "07b0f4a6-aecf-4fcb-a349-201968ce2743"
        },
        "item": {
          "id": "fbbd2f98-e0cd-4c85-bc20-f0aba65df112",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20e5f235-5efd-4223-b41e-1db899493f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb4230-232b-42bb-9102-9c0cf6979ba8",
        "cursor": {
          "ref": "5b4ce566-f1c1-40c0-a3e1-dab97543d560",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "667ac3f3-d166-480c-a026-19c3962f0758"
        },
        "item": {
          "id": "ffdb4230-232b-42bb-9102-9c0cf6979ba8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "48be0ea5-628c-47f5-a97e-a43425ca52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfc6748-82a4-4c28-bd32-02a984b38ac8",
        "cursor": {
          "ref": "3d69921a-42c3-4300-80ec-a7c82ad265b0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f241abd9-c5d7-4705-bae7-110d847545af"
        },
        "item": {
          "id": "bcfc6748-82a4-4c28-bd32-02a984b38ac8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3c5fef4-11c9-4034-b19a-d0ca429cea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3644692d-61ba-46b7-9859-2447ea7bf82c",
        "cursor": {
          "ref": "a6c4150f-d095-4b80-bd90-38d4df406641",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a5c36e8f-c815-4554-bc91-8e2f19fb9f48"
        },
        "item": {
          "id": "3644692d-61ba-46b7-9859-2447ea7bf82c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "41b0492a-5aab-4d14-8213-49c4ad819bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0725e9-325c-43da-9640-599691e2b35e",
        "cursor": {
          "ref": "f233a7d0-7032-494b-949e-82986d01ed95",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "db7379d4-1002-4a3c-b5a1-7e901d64f9d5"
        },
        "item": {
          "id": "9a0725e9-325c-43da-9640-599691e2b35e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5b794ef9-9bb6-414f-8ae0-d1b7a0d961ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d570f24-262f-47c3-9260-102a187fdadb",
        "cursor": {
          "ref": "113922ef-ae1a-41e0-bdd4-1719751cc0f3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d9a9ad94-acb5-4561-9436-b4c7bcd96e21"
        },
        "item": {
          "id": "2d570f24-262f-47c3-9260-102a187fdadb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d97d3ca-f74d-45ff-94ca-73fbb649acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87161351-2ece-4abe-b14d-83fc9ee08f45",
        "cursor": {
          "ref": "7fd8419e-58ca-4ba6-bcfb-7d911094631b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2e893bd9-308a-4e2c-82aa-691bbe11d2ea"
        },
        "item": {
          "id": "87161351-2ece-4abe-b14d-83fc9ee08f45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c39ca80e-6b3a-4d53-be7c-df19126a4874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fe9102-6947-40fe-84da-e51379f3960c",
        "cursor": {
          "ref": "a6c3240e-8069-48a7-aece-63441f9172fc",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9303816c-8b40-41e6-ade9-0b691ef8bb43"
        },
        "item": {
          "id": "f4fe9102-6947-40fe-84da-e51379f3960c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "268edc50-8442-47fd-be12-8a97e672733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b02199-930a-466f-8ba8-2f8bf23e7ee7",
        "cursor": {
          "ref": "a20d89e4-dde8-4435-a2b6-8dee859f8206",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "04f70726-4aa9-45e3-b0e7-2bca04fa7ac0"
        },
        "item": {
          "id": "d9b02199-930a-466f-8ba8-2f8bf23e7ee7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "62106e6a-e589-4947-9b45-9c934175945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc8f292-c837-43f5-81bd-b2866e5d258d",
        "cursor": {
          "ref": "b5323279-059f-4cdb-bd4d-40f872cdd4f5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e3808c21-fdcb-4daa-9829-2b716bc98a8f"
        },
        "item": {
          "id": "dfc8f292-c837-43f5-81bd-b2866e5d258d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "202ad693-c786-454e-b7c3-57e682903657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c0a16e-f679-4959-bab3-488bf29b614a",
        "cursor": {
          "ref": "e645e972-edec-484e-bfa8-1aae80a201e9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1f08b9a-7206-4b18-9cae-db1b703f3974"
        },
        "item": {
          "id": "70c0a16e-f679-4959-bab3-488bf29b614a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "77bf4483-019e-4e49-b35f-0b4727d25808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c6fbb8-b68d-4d5c-ba47-9d5cdc96b0d7",
        "cursor": {
          "ref": "0c97a71f-fd59-4c20-8224-f8febe509beb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57c127dc-ec37-4af4-9c22-32b72ff823c8"
        },
        "item": {
          "id": "b3c6fbb8-b68d-4d5c-ba47-9d5cdc96b0d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9a8625b5-1082-4ce6-95d4-95de215a93f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f5effc-8cc5-4e98-aec9-290e578d60d9",
        "cursor": {
          "ref": "53a7b601-06ad-4b18-a9fa-ddc75fc97a77",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a291e853-d9b7-4672-9d09-ff116256dc62"
        },
        "item": {
          "id": "e9f5effc-8cc5-4e98-aec9-290e578d60d9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c3f4524e-a01a-4abf-a7a4-1ff081a3f654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3d5c37-6778-4fa5-b404-8d96deba5db8",
        "cursor": {
          "ref": "1068b83c-f920-4d2a-b83a-d3b7e44bb7b7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c8942c7e-1e5f-484c-b5fa-fe0d9d3e1e0d"
        },
        "item": {
          "id": "0e3d5c37-6778-4fa5-b404-8d96deba5db8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1cd03f60-8518-48a9-a689-c72873f955c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98940b32-a341-408a-944c-f10e04e18a07",
        "cursor": {
          "ref": "e9a07d01-6a77-4e26-ad19-fcd46ebff199",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d511ec35-a06a-44ee-b4bb-ad5b142a4a89"
        },
        "item": {
          "id": "98940b32-a341-408a-944c-f10e04e18a07",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "76656dac-235a-4bc5-b814-deab90a9e34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe44d72f-004d-4684-9fbe-8f248191ce9f",
        "cursor": {
          "ref": "6045aa14-adc6-4c0c-94f7-d88eb17db8d8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0c3c43b0-ee5e-4ada-a7e1-215a4733b2dc"
        },
        "item": {
          "id": "fe44d72f-004d-4684-9fbe-8f248191ce9f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2edbf1df-5970-45b0-8fb2-24f46bd69f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866b62f5-dc22-4a1b-85c2-d6e98670622c",
        "cursor": {
          "ref": "d337f653-875e-447a-9e41-26e37d274ece",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "accb868d-e709-4876-b819-cd41c60eee03"
        },
        "item": {
          "id": "866b62f5-dc22-4a1b-85c2-d6e98670622c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb432a35-14fc-4f69-b956-ba2b41bba809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e9616d-b4b9-4e0f-b472-4f6e15f51300",
        "cursor": {
          "ref": "0078babd-4078-4d8c-b119-c3a3a3c3bbe4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e33a29f0-f283-4bdc-b4bc-d700204c3500"
        },
        "item": {
          "id": "91e9616d-b4b9-4e0f-b472-4f6e15f51300",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94d645fd-3ba4-42f0-851c-218408ee7b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6485f4d7-5b4a-4fce-9c83-85ee933075c6",
        "cursor": {
          "ref": "0754ebc9-9a2e-4b3d-82cf-02534bc6d01a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9052a309-d628-4d76-9b54-dcf3cf379cf1"
        },
        "item": {
          "id": "6485f4d7-5b4a-4fce-9c83-85ee933075c6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "065b2168-4cb3-4975-ab03-96d304409182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e8232-e54b-44f0-9d1b-97168c24d958",
        "cursor": {
          "ref": "391d7a06-b971-47b9-ab18-52d7464ed8e8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "972f8e23-29dd-4732-ad95-73f54381980e"
        },
        "item": {
          "id": "d42e8232-e54b-44f0-9d1b-97168c24d958",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c287c961-f81e-4862-9b92-fc8fde0da753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fdd9e2-0a2b-4881-a4e6-a083948d3adf",
        "cursor": {
          "ref": "100829ee-dcd5-457b-8574-8a65e781607b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ea995db0-c89e-4520-9c54-57bee7e0384a"
        },
        "item": {
          "id": "a6fdd9e2-0a2b-4881-a4e6-a083948d3adf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a003a664-bf20-4e2c-951b-4e480e3096e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734c273b-f9f0-4710-abc9-aba7c650606a",
        "cursor": {
          "ref": "3e407cf2-d2d7-48eb-bfe6-fd8a60e4e31c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "08408efc-4327-4037-95f0-2ee284691752"
        },
        "item": {
          "id": "734c273b-f9f0-4710-abc9-aba7c650606a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "55150dac-8bbf-4183-8c77-2e416939d67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5560313a-da1b-4567-9b35-02b92d4f77b6",
        "cursor": {
          "ref": "4ab7e16e-372c-4663-a19a-51d57da6a76d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fc1428b6-b9fc-4871-b2ef-8a819f40e4da"
        },
        "item": {
          "id": "5560313a-da1b-4567-9b35-02b92d4f77b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "25efb3f2-4035-45a5-9f46-0950b627e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5a09bd-4c87-409b-a394-70d01d96ef1b",
        "cursor": {
          "ref": "9cf7bd20-a3b5-4b62-88d2-a8d7cff37823",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d0594c3-c568-4b29-b7ed-69c5266dc405"
        },
        "item": {
          "id": "8c5a09bd-4c87-409b-a394-70d01d96ef1b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77e50266-c5e7-44d8-acb0-e56ac30b908a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd44e32-bc9f-41e6-a670-1bf1031a09b8",
        "cursor": {
          "ref": "0eed4c50-bf08-42cb-b001-b0f0e23c147c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "59bd7ec7-ec2b-4ef1-8da7-41aa09a5ff9e"
        },
        "item": {
          "id": "3dd44e32-bc9f-41e6-a670-1bf1031a09b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b0310f04-e483-4298-b51b-6f090014095b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b749151-a93b-4ccf-9b9a-04c73f084644",
        "cursor": {
          "ref": "4687e798-2836-4baf-a322-f43c54dc71c8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d6dcf86e-e28a-40c2-bf5b-d864894b467b"
        },
        "item": {
          "id": "1b749151-a93b-4ccf-9b9a-04c73f084644",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d2d1c193-3502-47db-82ba-bf767484f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b12941a-48a0-4ee0-bc32-b6aebfbc908d",
        "cursor": {
          "ref": "5fcadb17-bfee-45d6-aa40-91fdc51ad1c9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "351d9b00-45e6-4b5b-801e-7a4f7c9fd771"
        },
        "item": {
          "id": "1b12941a-48a0-4ee0-bc32-b6aebfbc908d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ef77dcf7-54eb-42ac-8772-23ef2033d0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26841155-47e8-4b40-b293-b4933b1b24e6",
        "cursor": {
          "ref": "fdfdcbe7-1287-4609-81ab-439bf65f5b38",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "90a5a438-6ff1-4fae-9875-194dda7a4cb7"
        },
        "item": {
          "id": "26841155-47e8-4b40-b293-b4933b1b24e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "63f6d9d4-9114-40c3-9c0c-45cfacb4a5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dbb742-69df-43a8-a46c-c236c5ca2333",
        "cursor": {
          "ref": "b7cfe969-0bec-444d-a280-22bf5eb76030",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0cf7d096-fb3c-4b8c-9395-381fa9f72f3a"
        },
        "item": {
          "id": "64dbb742-69df-43a8-a46c-c236c5ca2333",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "010fd75e-fad0-42a0-ab49-ef0e89dd3ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3431c09-8ee4-4b83-80c9-aebdff8dd828",
        "cursor": {
          "ref": "dbfb964f-aa3f-4ac4-8bc5-05ee14e979cb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8d709c9a-3dbe-48dd-b86b-05a6740916a5"
        },
        "item": {
          "id": "a3431c09-8ee4-4b83-80c9-aebdff8dd828",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4d9ed487-0333-4535-b297-72f67399ad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e923abfd-5070-4dad-ad92-377ca3ef4937",
        "cursor": {
          "ref": "5e5d6059-2df3-47fe-8ef8-c465e02483eb",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c421ccc7-6e3f-450d-8652-94f21c0391c4"
        },
        "item": {
          "id": "e923abfd-5070-4dad-ad92-377ca3ef4937",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "66679037-d6b2-4ead-88d0-672c482d13d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4209c710-8f2b-485f-b7be-146f2c28ba82",
        "cursor": {
          "ref": "1013af46-00b1-4c3a-9213-74a0921b5162",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "905b3792-dbcc-41e1-a89a-c4a18ad5cb17"
        },
        "item": {
          "id": "4209c710-8f2b-485f-b7be-146f2c28ba82",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "58be1d48-d284-48fe-9992-53bdf90cc677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc22ce3-ceb1-472f-b864-69c2a6841210",
        "cursor": {
          "ref": "746bc799-1e16-4c35-a7a8-b0d97b6ddb4d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a03a8479-b92b-4a0e-ab65-80f4c94e2165"
        },
        "item": {
          "id": "0bc22ce3-ceb1-472f-b864-69c2a6841210",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e714a951-a0e0-444b-a17e-42823a53bd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdd5643-3df9-4ef8-80cc-18abb51654d4",
        "cursor": {
          "ref": "e952a1b5-910a-4df3-ac54-165110183b0b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f17de391-66bd-427e-9f17-0ca8b85dae53"
        },
        "item": {
          "id": "2bdd5643-3df9-4ef8-80cc-18abb51654d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fdbad25f-93c8-4acc-a48c-6facacbd5dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b11396-c3ef-4636-88d7-e4bed970ccbc",
        "cursor": {
          "ref": "40892350-a3ab-48c7-b0e2-389a958a80e6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4bb745af-345e-4290-b4d0-eed9094ef287"
        },
        "item": {
          "id": "d4b11396-c3ef-4636-88d7-e4bed970ccbc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08b4bb61-472a-4ccb-834b-3c221c593842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458598f8-1774-4c97-9f52-33900e2814ba",
        "cursor": {
          "ref": "5643ed38-9359-462e-a575-bc7394452c94",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "92b1f0e9-d87f-4550-94e3-bc157d5c36c3"
        },
        "item": {
          "id": "458598f8-1774-4c97-9f52-33900e2814ba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "545d6a8c-5342-467c-b5ca-526ede2eeb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7638a6eb-2145-4d3b-b83f-7e68048d01e6",
        "cursor": {
          "ref": "14282832-ba50-41cc-be6b-51f2b2c5afb4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "576351a2-7194-4510-9095-8f72be410859"
        },
        "item": {
          "id": "7638a6eb-2145-4d3b-b83f-7e68048d01e6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2d0c8f54-17b7-402c-860b-bd343e5fc291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed42af6-87dc-4f31-97fe-09f7f5946611",
        "cursor": {
          "ref": "d6ab8857-73ef-4baf-9bf7-93574d6a9865",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "80bfef10-5c24-4e92-b488-546a3a9692b2"
        },
        "item": {
          "id": "3ed42af6-87dc-4f31-97fe-09f7f5946611",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56921983-e55a-4443-a8e8-c2a27f989faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb5ab91-a328-442e-b765-7cfac915134d",
        "cursor": {
          "ref": "8c04f340-4184-4572-9185-ba1ff596c9a0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "08efcb40-9864-4040-981d-38eeeeaebd98"
        },
        "item": {
          "id": "2fb5ab91-a328-442e-b765-7cfac915134d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6ad0ef67-591b-4a7e-acd3-fe67178aadab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bcbcad-11bb-4bd0-9b3d-502ee6b524b8",
        "cursor": {
          "ref": "52066236-ab43-442f-8bf9-ec1bfe389c40",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d62c7902-349f-4cd9-8435-6d830c409be8"
        },
        "item": {
          "id": "42bcbcad-11bb-4bd0-9b3d-502ee6b524b8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "454ad78a-6e7f-46e4-b953-ae701480afaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62204701-7f70-4d00-baa9-a5b78d9d0edd",
        "cursor": {
          "ref": "eb145b17-838e-4b26-97db-f2117abb76c3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47f2d094-2476-4a8a-80f0-4063a622fd0f"
        },
        "item": {
          "id": "62204701-7f70-4d00-baa9-a5b78d9d0edd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "174c1fa5-3c14-4a4f-b217-49b6d07cb469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f350c0-8e54-4310-a74c-4f3ab43b422a",
        "cursor": {
          "ref": "e26cc922-675d-4a20-90d1-a5ab633c9e50",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1645e24d-01a0-4cbe-83c1-50446f5ab0ce"
        },
        "item": {
          "id": "23f350c0-8e54-4310-a74c-4f3ab43b422a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4a275c9d-ed5e-4c58-8684-ecc7dcb55abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be150b-5588-43a3-b8aa-0a2bca3ea3b3",
        "cursor": {
          "ref": "a5ae732a-70af-4ac8-8350-f6106ff51292",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8a3eb45-878f-4841-9a54-5905d2310516"
        },
        "item": {
          "id": "23be150b-5588-43a3-b8aa-0a2bca3ea3b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60379154-843b-4619-a326-bb617986f4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6810309e-5273-4182-bf1f-ea9ce65dd0c3",
        "cursor": {
          "ref": "74181391-11dd-4011-8d4a-6475d4892651",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d7004e4d-4dd1-4786-8ca2-239651e48d16"
        },
        "item": {
          "id": "6810309e-5273-4182-bf1f-ea9ce65dd0c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c9f6042c-00a0-4fef-a2f6-0d2c793c403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf65f2a-2f45-4278-b8d6-3f18c001a71a",
        "cursor": {
          "ref": "4df57112-8d72-4393-aacb-6ffb079eeab2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4a7c30e-ce21-4f89-a294-f1fffeb37f21"
        },
        "item": {
          "id": "3bf65f2a-2f45-4278-b8d6-3f18c001a71a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fab79c9e-77d6-4540-ae24-49c1a038e216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af0a2c2-1000-429e-86f0-8ceff23789d1",
        "cursor": {
          "ref": "f149336f-f1b5-4b59-ac49-39244d59e8d0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7ca6d88-ebf8-4606-9fc7-6278e5d328ea"
        },
        "item": {
          "id": "1af0a2c2-1000-429e-86f0-8ceff23789d1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7f47d16d-99e4-4b14-986c-a2fff8093756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1bc9c6-f87d-4542-8bc1-0a5f2ab88f7b",
        "cursor": {
          "ref": "c78e57d2-c5f9-4e74-83dd-2e1e3e5c1396",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "722a39a9-b1bf-4cf7-acf0-48d21eef6a61"
        },
        "item": {
          "id": "9e1bc9c6-f87d-4542-8bc1-0a5f2ab88f7b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8f82c8b0-7644-4a5d-b442-06d6b821ce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd2da4-7464-427f-b016-7a856da68871",
        "cursor": {
          "ref": "ade27f23-7e89-4810-8e73-39179fc817c9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75de4fba-d1f1-4902-a84d-2a5c4bbf10cb"
        },
        "item": {
          "id": "50fd2da4-7464-427f-b016-7a856da68871",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6488de9b-29fd-4563-8846-2ee9faf41b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f66f998-c3f4-492f-9e2d-a3cad08f022d",
        "cursor": {
          "ref": "89294044-8c19-44b4-921c-17e2db4b684a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bedac0ad-839e-4daa-9ace-0f26e13e0fef"
        },
        "item": {
          "id": "6f66f998-c3f4-492f-9e2d-a3cad08f022d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cda27c08-4476-471f-b663-63ea77a6c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e36113-4794-4ad9-96df-81dffad9583b",
        "cursor": {
          "ref": "cbb18e91-63be-461b-be49-8522a6867a2e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3093dee5-e5be-4d07-b80e-4bb076bc8ee0"
        },
        "item": {
          "id": "06e36113-4794-4ad9-96df-81dffad9583b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "65ab9f94-4044-4698-b71e-c3dbbedb30c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e190a-1286-4c38-931e-d807c1c3358c",
        "cursor": {
          "ref": "25dc143c-4cee-4067-a28e-435520cc51f4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "81dbc099-cf98-4f7f-b42a-597584d76da6"
        },
        "item": {
          "id": "272e190a-1286-4c38-931e-d807c1c3358c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "650cbcc7-6f7c-4a8b-a0e9-73fe89681b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7db64c-01c2-466e-8284-ea26d7eb4680",
        "cursor": {
          "ref": "6e4fad2c-8bee-42ae-afd3-d53909a1ecfd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "170c0693-8980-4427-b95b-ef96dcbbd5d4"
        },
        "item": {
          "id": "1f7db64c-01c2-466e-8284-ea26d7eb4680",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d7239f86-3618-4cef-81ef-772606c36e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20ecdd2-3e68-4c5e-9fee-746acbdecbd2",
        "cursor": {
          "ref": "e7e8a96c-3969-4914-8768-200d45a3c082",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9294bcf9-e26e-49b4-bd53-2ae2cd3055d7"
        },
        "item": {
          "id": "d20ecdd2-3e68-4c5e-9fee-746acbdecbd2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9258ed26-b940-4d0e-8294-0bc486032fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22701df7-5322-40b0-a587-b0e79c90bd8c",
        "cursor": {
          "ref": "c3338a9b-5442-4023-a1a9-12e35e9910ab",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7404efd0-7915-4dbe-9704-93e9f1cead57"
        },
        "item": {
          "id": "22701df7-5322-40b0-a587-b0e79c90bd8c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8a3be1ae-c76d-4435-8905-9682345a5534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f12cbbb-ce83-4af0-8701-0bf1736953a7",
        "cursor": {
          "ref": "0f1ffe9e-5a4d-4ad9-9c17-bce8744c246e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "20c76853-292c-42c7-ab4f-77bb5ad8c189"
        },
        "item": {
          "id": "0f12cbbb-ce83-4af0-8701-0bf1736953a7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "70c4c5bb-e32d-4968-a673-70cb044c2fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13df45d-35bb-4e1c-8f6f-cec5fe6accd1",
        "cursor": {
          "ref": "8b58eb8c-0e82-45b4-9eee-8ca9a1f0b00b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f5990243-7540-47e4-885d-0fe35e2eb9c6"
        },
        "item": {
          "id": "d13df45d-35bb-4e1c-8f6f-cec5fe6accd1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bf141f40-e1b3-427e-a64c-1d02d6917d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefabee6-770b-4cde-9444-946824d863a2",
        "cursor": {
          "ref": "2966af49-f822-4cf9-bd28-78fb7dd534f8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "785a3885-d7e1-4a31-b392-c05d1282097b"
        },
        "item": {
          "id": "eefabee6-770b-4cde-9444-946824d863a2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7b897b90-5929-49ce-8e61-013d8003d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf5291-5142-4dbd-8d91-38e35e482412",
        "cursor": {
          "ref": "acbedeec-340b-4049-9f08-b2d3f0e646c0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5bbdfbbe-da7f-4b61-9a81-ca3abf93503f"
        },
        "item": {
          "id": "b0bf5291-5142-4dbd-8d91-38e35e482412",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "99a3273c-513a-4759-80dd-d750d56c8846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e8f3ea-54c9-4527-a1ee-3887878e76d3",
        "cursor": {
          "ref": "de1cdcb2-3fbc-48fc-a6ed-d248cc6d1361",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "56353ed8-1208-4ec3-bbe4-fdb8ec4b1052"
        },
        "item": {
          "id": "79e8f3ea-54c9-4527-a1ee-3887878e76d3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8fe9c990-2b2f-40ac-b549-cab6201238d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7684ec-ab87-4b7f-a209-ca0ba077b968",
        "cursor": {
          "ref": "c1b25e8b-516b-49d6-a9d1-36db41d8d42f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b6ce02c2-9822-4e3f-a3b9-4a67c7cf3fe5"
        },
        "item": {
          "id": "ab7684ec-ab87-4b7f-a209-ca0ba077b968",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "706a4c25-22b0-41e7-8635-c1d5af6f5b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f08041f-3c60-4edf-973b-d80f1650effe",
        "cursor": {
          "ref": "4fd7ef3f-23c7-4af7-8138-75979b9a55b8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8da6e49a-f3c9-4b70-ae33-cadba54bd0cb"
        },
        "item": {
          "id": "5f08041f-3c60-4edf-973b-d80f1650effe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cbc823f9-afd6-45dc-9d87-f9e4c2a2daca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a62b462-b7da-4342-9a21-00c67eda9230",
        "cursor": {
          "ref": "b8f455ce-5c13-48ad-8160-3c93c868716f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a5f59ff2-2bfa-4d1f-93d3-46523527e50d"
        },
        "item": {
          "id": "9a62b462-b7da-4342-9a21-00c67eda9230",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc83d115-0cfe-47e8-8790-2ee57c4ab0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd86133f-ce7e-460f-80d9-280d89c2f010",
        "cursor": {
          "ref": "4d84890e-2d76-4883-9752-a1209e3e4996",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5dcb33f2-56f7-4bd8-a19a-3fb3ed47e2f4"
        },
        "item": {
          "id": "cd86133f-ce7e-460f-80d9-280d89c2f010",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b6d38dcd-547d-4dd2-a715-315c4a525698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d3be8-bc62-4168-ad61-ea65d50f119b",
        "cursor": {
          "ref": "9a4d6ee3-24ea-4511-a0ff-368cbd464b40",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7ef6ec58-5ef7-4220-9bde-f41fba7448db"
        },
        "item": {
          "id": "f44d3be8-bc62-4168-ad61-ea65d50f119b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1851a51d-c012-4345-8dd3-86a2910cb017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f32f50-181a-4f33-aa2d-6fc7d6a9b916",
        "cursor": {
          "ref": "8959e0dd-c576-45f3-90ee-810e1b555bc4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "71261ad1-bcb7-4147-a89a-42fea122bb5d"
        },
        "item": {
          "id": "62f32f50-181a-4f33-aa2d-6fc7d6a9b916",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7fb6e609-f09a-4e0d-903e-6ac75e0b2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4304b3-547b-4532-ad4e-9dd2f9e30aea",
        "cursor": {
          "ref": "00bf8987-78ba-4fe4-8f3c-115abf05f028",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ad01e410-a88d-4f3c-a41e-6aab0b673e71"
        },
        "item": {
          "id": "3e4304b3-547b-4532-ad4e-9dd2f9e30aea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "326e5d06-fc56-4d06-88eb-4c1f44c97e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d056a23-31e1-4727-a417-0f854d31cb50",
        "cursor": {
          "ref": "91a87d02-017d-45fe-b954-cd3364e69871",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ba92ee79-90e3-48a8-81a8-bd5ef993294f"
        },
        "item": {
          "id": "7d056a23-31e1-4727-a417-0f854d31cb50",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cb88b898-5d40-4955-a617-6b84ff8f8386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9911a6c-32c7-40dc-9c8d-0c439f22aa98",
        "cursor": {
          "ref": "65dd9a88-d030-47e5-8d17-ce89f288c106",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "943d199e-de4f-4745-a0ac-8b5d072d8040"
        },
        "item": {
          "id": "b9911a6c-32c7-40dc-9c8d-0c439f22aa98",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "158e6244-23bf-4987-b5da-a9eedb60cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dde07b0-c223-4084-8b86-68f8d6a18c2c",
        "cursor": {
          "ref": "3af7de34-7b11-4ad4-b77b-f2d364d442b3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "701490ad-f6a7-4eb9-bf63-2e4b61dfc491"
        },
        "item": {
          "id": "0dde07b0-c223-4084-8b86-68f8d6a18c2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49be510f-3eb7-4d00-b69a-cd403c315d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0c955f-5e10-44af-9f93-b912d759897e",
        "cursor": {
          "ref": "2e669bec-37ed-49a4-a46a-53c8c632e410",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2aa4dacb-ca69-48fe-97e9-990c7aa9372a"
        },
        "item": {
          "id": "ae0c955f-5e10-44af-9f93-b912d759897e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d71d1372-3af3-446b-9379-94fb7d6fa19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2143552e-9c55-49e5-bc7b-8f9b7bbd34e4",
        "cursor": {
          "ref": "069897c5-4de4-4484-ba6b-e38e235de3ce",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bab731fc-c145-4000-b8e7-484149972c71"
        },
        "item": {
          "id": "2143552e-9c55-49e5-bc7b-8f9b7bbd34e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ecabbd03-7cc7-4b4f-b6aa-5b946f862b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781314e3-7cc2-4ba2-9ad4-e13c371a3a02",
        "cursor": {
          "ref": "8e886cf5-c431-4413-9212-c51099ce615c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "602d6220-50ed-4e87-a310-69de21707362"
        },
        "item": {
          "id": "781314e3-7cc2-4ba2-9ad4-e13c371a3a02",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1a366d77-ce80-4464-b130-66e8cf1196a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d629eff3-f77d-4577-adb3-00bfeaf3de83",
        "cursor": {
          "ref": "b2c5362c-92cb-4219-8ccd-c446e0f7a56b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8cb99798-c2f3-46c7-84df-58ad57628b82"
        },
        "item": {
          "id": "d629eff3-f77d-4577-adb3-00bfeaf3de83",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "43f9e56a-772e-4d3a-b053-8646dbc87db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b99ece-a10d-4db0-8cd3-159d9b850cb7",
        "cursor": {
          "ref": "5395f259-0f37-46cc-96e7-059c78e0ebad",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4a5da955-8aa9-4923-9821-d41eb7636508"
        },
        "item": {
          "id": "a7b99ece-a10d-4db0-8cd3-159d9b850cb7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1c52aaa-b771-4e7b-8a30-2c245d44367b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a6f6eb-9290-4b46-a527-088ed4e9105e",
        "cursor": {
          "ref": "cbd0be5e-88da-4682-af99-561828d82d98",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c30c6bca-3bb8-47e5-a305-79d4eefd7d4b"
        },
        "item": {
          "id": "70a6f6eb-9290-4b46-a527-088ed4e9105e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9d8185e-191c-481c-8f31-9ddf4a7be2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98b4078-223b-4dca-b677-cc5476d442fa",
        "cursor": {
          "ref": "923e0e4c-1aed-47ff-8105-b0fe65fd596e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e1d25da1-be49-4ea3-a4b3-a9e33237d773"
        },
        "item": {
          "id": "c98b4078-223b-4dca-b677-cc5476d442fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "637d82aa-a855-47f6-adcc-f2d24b148cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b91a95-9fc1-46d9-9b81-dd9cb83ffe1e",
        "cursor": {
          "ref": "39154bb8-b44e-4311-b67b-2ad2d98c6480",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "872792e7-b43f-41d4-81ea-d8e4017ef417"
        },
        "item": {
          "id": "d6b91a95-9fc1-46d9-9b81-dd9cb83ffe1e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6426847e-62f1-4803-a86e-45b32c71ae40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec9ba9-17cb-4255-a200-0c9a0f9d4b7c",
        "cursor": {
          "ref": "5cff64dc-1574-47e0-80a9-b5beea5989ec",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "882710f9-618a-46ea-941d-68908a3b73e5"
        },
        "item": {
          "id": "58ec9ba9-17cb-4255-a200-0c9a0f9d4b7c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "88265d5b-bc15-4c4c-9f90-b8702ea0bff5",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2e307-0d8b-42e2-bad9-a078bdc1908f",
        "cursor": {
          "ref": "6d70986b-6ff5-4ad7-b675-7dbeebc89139",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e1ca4ef0-6446-451d-a904-af19d6571b4b"
        },
        "item": {
          "id": "42f2e307-0d8b-42e2-bad9-a078bdc1908f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c36fae96-1060-4e9b-9c7b-dbd945f609e5",
          "status": "OK",
          "code": 200,
          "responseTime": 2408,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bc8d01-cd54-41cb-b276-d72ddb6f08a0",
        "cursor": {
          "ref": "32e03e8f-9b5f-4a5b-bdc7-3bed70ae9314",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb2c7687-fa85-4c83-bfc9-c986cfcc85c4"
        },
        "item": {
          "id": "a9bc8d01-cd54-41cb-b276-d72ddb6f08a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2b3d936e-163c-4c34-add8-c808c1f806ed",
          "status": "OK",
          "code": 200,
          "responseTime": 2310,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df37e401-ec7c-4d5e-90d7-d0e0db02fb01",
        "cursor": {
          "ref": "a3937dfb-a6c5-4ce4-97b9-f120f996647b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "378c5aa5-5fdc-46c8-b487-7f2b6e0ceed8"
        },
        "item": {
          "id": "df37e401-ec7c-4d5e-90d7-d0e0db02fb01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be9bfcf0-714b-469f-8938-13e9cd877906",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df37e401-ec7c-4d5e-90d7-d0e0db02fb01",
        "cursor": {
          "ref": "a3937dfb-a6c5-4ce4-97b9-f120f996647b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "378c5aa5-5fdc-46c8-b487-7f2b6e0ceed8"
        },
        "item": {
          "id": "df37e401-ec7c-4d5e-90d7-d0e0db02fb01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be9bfcf0-714b-469f-8938-13e9cd877906",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a970c0f9-4538-4e14-a031-106c68bb3c24",
        "cursor": {
          "ref": "6362141e-10e3-4588-8c37-b3f180dfe66f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f87355d1-35e5-4531-b93a-8407de63a16a"
        },
        "item": {
          "id": "a970c0f9-4538-4e14-a031-106c68bb3c24",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a82c3297-198a-4f89-bba6-9883012bc115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0792c9c7-a149-4d8c-820c-d72b43016e65",
        "cursor": {
          "ref": "430b77b9-5a94-47f0-9994-2e3e2bd725d9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6501fbc6-11b2-4fde-8cc9-d604820741c6"
        },
        "item": {
          "id": "0792c9c7-a149-4d8c-820c-d72b43016e65",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a136737c-d3fb-4f1c-b7bf-0de176d31ea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}