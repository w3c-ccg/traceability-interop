{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c392d559-937b-414d-9f20-fbd08072afba",
        "name": "Clear Cache",
        "item": [
          {
            "id": "296f0f16-6a22-48ad-9acd-37d891b920d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb402641-a8dc-4682-964d-c8ee490ab1c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4dba622b-b2e5-4390-ad36-78ed8417d902"
                }
              }
            ]
          },
          {
            "id": "f82774f9-8324-4703-8c79-5812e4c73dec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9e4b64c-ba14-4afd-b126-f0191a281c31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79132508-31c6-4325-b4a7-00c594edeace"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e923390d-8015-4d79-90f7-7971fbf350d0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a0e2c3a9-edb5-4533-a306-68cb7aa08aca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adf8075d-8c0f-4540-9518-fb5c2a058084",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "628b2208-a66e-43a2-ae16-ec986c3b639d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93ef63cf-eb5b-48e9-afe0-73e8c2f6a6b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c0ffeea-970d-445a-9483-653b0a4f84bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea4b30ac-d06c-4f44-a47a-73d4ca580c45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9a72332-e8e8-4513-b5a6-65b29523e008",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80cf6c95-d9a3-4bb9-8b61-c467171e3417"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "417df255-c2e7-4781-9802-0f5463e16654",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "667f8118-f8aa-439f-a221-529087a1bc39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ae8111e-5720-424c-8530-99eb215d1f6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13d236ee-cdb8-4fee-bbf3-bf3a80acf719"
            }
          }
        ]
      },
      {
        "id": "a14e419c-8d83-4c76-99e0-75cf120830d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dd5893c7-f647-4780-9c37-a9ef90fe4f38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07321269-7c7a-42ff-8770-9744baad8e22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac46117b-8a9e-4a80-b26b-ed17251733fe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398e20b-2d27-461f-8191-2c67dc850f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d116ca03-632f-44bf-8298-ac92ce39fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a815122a-57c6-48ba-b89c-eb8324ea0fb0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c6045-7865-4266-8de9-bae74780cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecdf3f8a-54e7-4c9a-8055-94f07f0a364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd42ce4-03c3-4614-a75a-4cee3d9f76d6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efc506-8bab-431e-931c-81826d0e8664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fabace85-bdfc-4f2e-bee7-62f518de6a38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "491cb669-46f1-4113-827f-e613a48d0b51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ea7e07-92cc-46cc-ae89-da6bb1d076b4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9baac46-011a-4234-a097-63b0c0b3cd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "927bd89e-e43e-4db4-8b89-0db142ecf3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcb82ac-1bb3-478c-a0d3-89af29bd0de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7d01f2-40d4-4a75-9614-8be36fdb01fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5093b079-3652-4666-9be5-8d2c1ccc8f3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f655b013-22fb-4cc4-8aac-a4dcc175c636",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ef1282d-7f43-4cf4-86da-3eb1779b62f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1256d8e0-2fd8-44f5-be04-433f6593ee0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cefc1a4b-4091-494d-b85e-f74b073d2c70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9dec2766-b6f2-41e3-aaa6-8c8cc1e86a13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69f64c69-b6a0-44e4-9bba-b061e761bf34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dca16644-6c2b-4dec-8d2c-677c8ee2f1f2"
            }
          }
        ]
      },
      {
        "id": "7288ef1d-4d19-41c9-bd0d-706511c9759a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a617b9ac-d674-4e60-9b5f-102da24d8cf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ae33982-436f-4bb2-a86c-1865853db734",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ee4bc121-7957-48e6-add5-77999bd00f4d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385d7524-552f-426e-a6d5-3e2b98f11dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a45d83-4d8d-47bc-88f1-b50147b95629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01eb050-4074-4cea-acbe-6f04de257217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f6cefcc-d415-46bf-befc-b0de06608890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd2df4b-9d21-4442-b38b-bdc13442f227",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244e05f-c4c1-4d9d-ad42-e53361c70291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8ca7d1-4451-4d4f-85b0-e0369d1d8bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b95b5eb-8b45-4e26-815a-360a1a8a0080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a34560d1-6f0e-41f8-8e2d-f18a23868c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3fff56-04b2-4984-9782-566525061529",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df475862-1583-4d44-81fc-3e75fccb3aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16670cf-10aa-433c-96a4-65a7d7f2c977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c2fd95-ce65-4d6c-8b47-7277d4037d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a47216a9-ba7e-42ae-b284-af2a98a893bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf5cb7-8158-499a-aabc-5082251eef1b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10704830-81e0-4345-8dc4-abcd94c4ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9986d1-28bf-4b5b-9bfa-60fa79aa0123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6339f9-769e-4ba8-8604-745f859b3d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9409a77a-4146-4aa0-a3e9-cbe29a7e7bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871afb77-f61a-45a0-bf86-89da33ae343c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d544767d-fb49-4552-b80b-673d19e37c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af2b69f-0084-4e89-b9da-6b190b943b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2446c7c-5102-4d73-b9ec-9325f3e9a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b61d11-5697-494e-be9f-3aa9526dc3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b968caaa-55f7-4a11-8a86-a75cdd7e24e6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3578fe-d113-40f0-af70-a94b1a2a94a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744b1a9b-8460-4b12-9267-2a048a2c49bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f25b91a-4ba4-40e0-9c59-87c36c0812ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8814c744-d656-41ed-b278-17a6a33433e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab5cc04-fdfd-4222-b6df-126cf2da2f62",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f2d313-918a-4b93-9b67-9b13b960b9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c990135-8b23-4df1-8796-2cfacf7b30fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6459c3bd-0ca0-4334-bb50-d7422bbc216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff6e689-d166-4971-a28a-c5c9d3b47e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92c1961-fd3b-4afb-84f1-1599bcb231f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6479493f-f1da-4a1d-8d34-4e1b9d5a6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83954a2-93c2-4521-8c89-7f75a4cee339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbbacfa-d873-488f-b561-a11febd40231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26e93772-152d-421b-890c-a6b4cc73f8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5614df-c7cc-4bd6-bf72-1048cd49f919",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d175aa-56cd-4c88-a3c7-39436c70beeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a2455e-7dfc-4eb5-b7b6-7727499b7996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7ca99a-e305-47d9-b6a5-cd2647f55796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050f07a3-8038-44c2-ab29-774f9196cc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f004ea-7e90-4664-b4c4-7c678e653a93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259e23fb-0caa-4007-91bc-9a4a14b00d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e1b5aa-5ec9-479f-a0a2-e80b4a2b6020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24140691-bb27-48ff-aac1-0b1b89efb2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9965d971-98aa-4cda-96d6-f0b279146426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5522db-cca2-40f7-896c-48c4828e43f6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a630e-84b8-4a77-96a0-640d44e15947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d279bc-8a49-4e7a-aba3-7673df508ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12350f7c-ca0d-422a-8d92-18eaafbacb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b82eba23-ed94-4b45-89b6-34f1766011ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8416349e-3bab-4201-a15a-673ca7b13351",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049e6878-e87e-4f61-88bc-91c6a22cc57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0601f1b8-226f-43e1-80ef-f487d4805c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b04f264-1d6d-42f7-8ada-057ebac6f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06f65dc5-0796-478f-98ce-2890c4a3cb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed02aab-6293-4ae9-ac83-06883c5ea319",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94a84f2-8df5-46fb-9418-53623a8c2dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0767bb89-300e-4410-8c4e-259400587152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faedd0f-f3ee-4b71-b98b-28ee8b978619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cb29552-8a65-4697-9308-2ffa8eae7387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c55b565-c2cc-4e67-be9f-dd0dc168c35d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dfd186-815c-47c2-9722-46a664026cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad1626-9e4a-4e9c-9eaa-ffb99a1d2261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edeee49-02d6-4328-ada2-181cc71bff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b8a1a40-6a60-46cb-a304-dd922d8b80a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eb8856-e4b6-4ac9-b452-c0c9a7adf3b8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7c17f7-a39b-456e-9cc6-a5fdb294d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4d3b60-6d4a-4317-b82e-93c9cbb6d04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d91ff9-ac85-4b99-a804-cc23be270d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05d6649-8fa2-4935-ab64-932477b7ad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d1bdbc-556e-4682-a5b1-02c87bdfdcea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d55840d-290a-4a7a-9d94-cd2b2e43b6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f84704-ce7f-40d8-adee-07e0a87d4cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa68b084-c367-453d-bccd-ea12ba124d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7923f1e-2c3d-427d-84b0-3eed7e1e375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2efcf-bc94-4e1d-aaf3-1bba2f66094a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5a2c08-b241-4acf-8daa-e09c4463b235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ff6ad9-8dec-499b-b231-66360ed2656f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a51ee8c-dc1d-4969-a2a9-89895343836c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd93e0e-e3ac-4969-9a51-37628c5c0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2867369d-ab60-48d0-afe3-37ec54c2ee40",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3804b81d-31ef-4e89-ac08-f59b8ed59166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537ccf51-0e6a-4f21-a11c-b7f713dedf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67866e69-ecbe-4e61-9119-95cad39951ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7848562-b001-48f6-8e34-b53f0f8eaed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c29dc-1335-4101-b381-42cfaf7a8f23",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affba301-c819-4c59-a0fa-2b0b3f672d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440f0d67-5c56-40c7-a466-5e5bef66efd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2840411-75bb-4914-ad6c-41c4d0c8f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87ba97e-9e7c-4f7d-84a3-7c35e0acda67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b87cd3f-c325-4d6c-8ab8-ed4931a9121c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2847c4c-e558-4228-aff8-a294fbfe3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864cc54f-1e13-4d3a-8c83-37cd1fa7f571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffd403-b484-4700-8b84-9ce9ec2ff278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca8eb6d-1dae-4c13-b3ee-10e792421a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e55391e-9ad5-45ad-9f4a-8838c05d1596",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b629a56-c328-4996-ba66-f56937dd6b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66515c39-4a08-4a35-af03-d672b7efe9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c7a87-a221-461e-a33e-8b75639713a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed3d738-4e1c-4c18-b6de-65bf319c39fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b2b717-4f08-486d-89cc-ba2bf65cca6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27939153-e963-45c8-a9b7-305ccc60a6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82493ca-8e17-4868-beec-c4522335b786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6f60a2-1d9e-4c6f-86dc-35e440647ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7f0c9c-365b-40fe-a081-0fdb17e23c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47157c65-1b33-42b8-a20e-2d677ab0c581",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c449c2-af00-4dc5-af69-ec6c7c47f340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74dceb2-812c-4d0b-8784-6f4abfc6ed25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc613a5c-c490-4eba-8d5b-e4af08a45994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "295abb68-7899-448e-ad59-4b88c6ea66ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6b9781-5941-4808-823e-1f5666edf1ac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dcae7e-31ee-43c9-83b0-ad9d70457902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7d736e-3d8b-4788-b3c1-374864012e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3f88e6-1648-463a-a96a-6a57b8f20124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fafb3d0-695c-4d24-ba50-8284b823020c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b142599-300d-4516-b649-14c45b9c75a2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4067915-e12b-46a2-b75b-e78df9c8186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2d6b71-f8b2-4dd5-881c-d33b1e0b5d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70504812-6dc7-461e-b8c7-1e7e8a9c9145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e45027-2ec4-473f-b39e-d070bafac01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5891911-b9a7-4d53-9c76-e872fdd09cee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b1fdd4-9143-46bd-8fa7-b957fa8c8a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f9d38-bfed-48c9-9ece-3857c8efd220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d14f8ad-4d3f-491c-9074-2e1f23302546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd5d345-f200-4448-987f-3d3f2ffde8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4ac44a-bb57-43a2-8ba7-3ebabd226dc4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc1f6a4-e861-433f-993c-6b03a2300f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54566ac2-eaae-4bb2-abd4-0aad4ead383e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e8268-41b6-42ce-8422-203f3094b52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1b631e-beed-442d-a99b-1645cc802df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176bdb37-1992-470e-949c-cc0848e35f68",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b5f9bd-1e73-4a7d-8ed0-0ea06eb96445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d50ff13-4885-4c50-886f-cd02b34496b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb6a21-2ed8-4969-8662-65367a6da2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7136b8e-202f-4695-bb4b-c2fd4ecdafc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a4bf7a-e237-4bec-ab40-aa436cf4ccf8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954175ff-7b75-4d9f-919d-5cbba0884452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e343d7-b093-478e-8e0c-2964a65bfda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8532167d-30fb-4a79-bb44-98c5f936d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bc4f68-3524-429d-b9da-2b9370de5009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf6cc01-ea52-4deb-befe-260ec2e0a1b2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf375d4-c642-4dbc-8460-958a591dc161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbe84f2-3215-4558-8b7b-8e40abb954b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae13f5-2884-486b-b2e5-615e656aa9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb21e88-d61f-4761-b525-4adc0c0dd82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5c59e4-a2b1-4b60-b46c-a34cc6252be5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2090758e-94b1-4800-a7a1-dd060bb8e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b31345-5d8e-4869-885c-99af15cf661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67fd5a2-2619-4c73-81c5-f353387ecc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0a9a96-caf9-49a5-8c8e-2084cd6795ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811bb888-f031-4f5f-8c6f-c87703933729",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d5d972-a87e-4325-b11b-df11f6708f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51f25ac-c068-4db0-ac9e-36ef696b52ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaea56e-8054-4f9a-8bc0-f24cc65f4f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf52243-412a-4c4f-86c6-fde4d78b1323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad959020-f319-41f6-99a5-a5cb6064178b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6aa3e4-dc67-4750-8dd9-a3e929022696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1800aaa-f2dc-4b77-80e9-51984180b152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47d7769-541d-4f1e-9527-b2420c9495d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8905ec41-3168-4144-8cfc-4a251bdde357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354d32a-cada-4cbd-81b0-2788a08cf7c5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52ee5ba-3240-4b91-a036-0e14f05cb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc93516-0b8a-4a9a-a97f-71eb5c551afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3ed835-8324-414f-bfd3-aa580c3659be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f06a9e-9a32-4610-abaa-bb83436e0511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a3468e-a85b-43bd-a5e4-bae27adda80a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08110260-a82a-43c3-8629-2b0e4f5aab50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0709aea-ede8-401b-b2c6-619567ac5bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db28432-a256-44ed-95c8-a5b7456f6c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f8b88-13b3-4222-8de8-540e18c2ceec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5844be8c-afbe-4f7a-b38b-2fdcb58b74f4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87155e6-9a92-4cb7-85eb-8176145a210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "106c00c1-fc05-4714-9309-15d195ae5af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a44c40-8620-4753-9c76-c2408ea4af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a45e449e-d75a-4831-aba3-0edee2300467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c03744c-a04d-4265-8680-8ed87d6190b4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940d80c3-0509-41a4-a050-87f3d316a8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9499c591-380b-45b7-9eac-adf22b9c9ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf8f1c7-6780-4ea2-8ccd-72802a69cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "638589f5-a0ba-4cf6-8246-9474210feba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e4aa3a-b0fc-4955-a3a5-6235bad55f22",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7d60a3-94e5-4796-9bd5-c12b3da43f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f64a395-6e25-415e-89b2-3882f6296d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505f5494-5fba-48da-abef-17d4fac23dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a2f3ed-4533-4229-a355-9e25525bd6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a3306f-57b2-4808-855f-09cfd7a85938",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf796eb-d151-4654-b4e9-2bd2621e13a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66978a01-a909-48a0-86dd-056f98f6c2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942bb49d-a946-4914-8ac9-5ee675c58ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffa627f-b8ff-43d0-8c48-4484b1c2669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf9266-d9c8-4337-93a7-ede8392cd484",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4911a9da-c56b-402e-a516-8653230ecfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a30f90f-923d-450a-ac59-1a2ecf20c36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cd1470-a9da-4980-bf7c-45961ec40d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2b28f3-d6f2-4279-adc2-3838f917bcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79eb7cb-37a4-402c-ac7a-4129f90b4e1b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd00cf50-2176-415d-b5a7-e9c31faa9234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88ad8b8-2681-4f4d-b040-a5638314bbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55288a5-8365-4b19-b4ba-172e0b9e8eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a497fdb3-c1ca-4d88-9f74-3bfd49048223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1d7416-66f8-4616-9572-f9c6ed411787",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9d438c-5f1c-4114-8a68-da55373208ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbe352a-2440-4c44-a0fa-62ac6076af63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da08cd-efea-4de2-afe3-6e01e033a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c899d6-c1a1-4d01-80e2-7485a9ab3679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab42f1e-c7ff-4a34-8b89-58c82d02625d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6a535-674f-4a34-9bd0-99be2da00d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621a8e84-38fc-49b7-88d2-b0c6baac09ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854c7ad6-b430-48a1-bb57-b6cf586fc27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d76d33-dc5b-452e-86ab-cb92d688b462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb90ff-2ef6-49b3-bd02-85e83598c38f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff3c8ae-1a51-4ebd-b3b6-b3420fedce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6db6ee4-f22c-4355-ad6c-c5479efbc60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a815aeb-d46f-4edc-b318-6afcf47113cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b842ae30-0766-4b49-8a31-41946b6a989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9b8819-ff1c-4d84-b957-74724b37efcf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99e3726-ede5-4b8c-b189-a9cb4dd05596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dd67a8-0e3d-4843-a8d1-94860fbf6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe38c30-732e-41ff-9a3e-54d5a8dda3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "368c7a75-b2e9-4e54-826d-6d39f7679caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4aa88f-401e-4035-a387-646c1eb24176",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd83f25-d20c-41ab-bda8-7484bb262df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5357d4e4-3c02-44b6-9f3e-5b8deb3a4762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8deaad7-7712-4ae4-838c-c5a9e78f42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4392d88-13b3-46c5-8b41-5e78d518142d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4e8f88-6f8b-4c3e-9d3e-f34b05d18f0b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8eb46c-52d1-475b-9305-55f84af3cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8f1150-13e8-49e8-980a-4c819534ea1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291db219-c37e-43cf-b01b-4b76d389e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0567e9-8692-4dc9-bffb-54707f75a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d1bc7b-2e90-4c00-8283-a1e64ace471d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3650d9-c785-4b59-ad98-18a6cde4cee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bfa5f7-9bf5-41b9-847e-d01dba274e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b07f0fe-3980-41b7-9454-697deed24bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbecaff-7b6f-45e4-8e5b-d318a620c11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164be367-69a7-4857-bf3b-2265444d1575",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf0a3d-924a-4a15-8d75-9be691c2bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5a3897-d3be-456e-a25b-ce6e0483b6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1e9b4e-0ce3-4aea-aae4-a724b77cb620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb44ca99-e647-4a13-9fa3-1ea6c25e38c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270979b-a51b-48e2-8d2f-9db6e02fcf5f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58574efd-bdfe-48af-8837-f58dcf850917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaba2bef-8693-404a-b89c-395c7fb3952f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8036da1-43c8-466e-8dc3-b73e261820be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc8d4f3-b773-4bda-be44-dd2896c43233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9b6374-e48a-4037-86ec-b6416377d18e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e63272c-a7ae-4a33-9e87-6a56ed3130d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ffa50f-2228-4649-a64c-1616c3340702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4575fb-facb-43db-9faf-72bc72e6ebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45c8b0f-35ce-4a76-8110-14210a1b7261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac57b92-18f7-435a-95d6-d27b84209079",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0b721f-799c-4fe5-960c-5527ee58f326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9b2c51-37fa-4d5c-bbdf-a37a2e879f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091e86c-5a68-4cfe-8b04-9ff70629d52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e4fd06-1a2f-4559-8fcd-4a44ac21fa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cb893f-b13f-4230-8153-401aff67defe",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d523a50b-aa1f-4a85-b338-ff7b417f08db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2654f998-b1d3-486a-9d27-d5e860c72618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f333264-2f0d-42f8-a3b9-f2101dee0f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "608bf9fe-9a57-46d7-bffd-a9544991281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a977a-a041-4e7b-a3af-a32b40f6783e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca562d68-62bb-4fce-a73f-960dac4c886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf30658-18d2-449e-bcaa-57cbb3e793a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8a60a6-8672-4cf4-86cd-f05df6c4d4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee80610-b9d8-4852-badc-923c82955c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf17b0d3-e983-4601-a763-bdba67106f40",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2933e2fc-c40b-4564-837f-d489d6ff2e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ace2b26-d567-4574-9844-4426d391cfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616ad403-aed4-4d4f-98eb-15c2c3252ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d56874a-4bb9-44c2-8f0c-2edd4c5a5c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b9c9a0-9c81-4005-be11-0b10b062d2b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6910828c-60ba-4033-ae27-7f5be5370086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2488fc9e-7a3c-4865-9d98-3fd66124f373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c9154f-45d2-44ab-8269-3b9c2a1f3d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe10018-c91e-4c6f-bb7b-b65a692cfc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b99b8e-3ad1-4383-bfc4-e2474be5516c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca8af31-18e4-4432-a95a-27a9cfb0e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b303ad-f5a3-4a25-88a1-3ed8d5ebff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8595d702-c903-4ae4-a564-d7b1ce7f9e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1a042d-4a43-45e0-94e8-23c1e8c8776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639fb705-3511-46e0-a2d1-32a3f4ec8fba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae6cb4-4316-4b32-9fc7-5d7ca0545315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fb31d0-6c06-4e68-a3ec-19b494fc29e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba51811-2b4a-4fa2-a50e-a8b1ce90ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bd2b68-0fec-4d4a-a6c0-269094473c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75cc88d-383d-475c-a0d5-7bd5674a083f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05d6707-47b2-4dd0-8fe1-7c68c0dfa2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039c2ba7-e647-4332-afb4-cf370010ad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20f4b52-41d2-4129-82a7-4e85fabc77b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3285c3-b82e-4503-8831-5bce45d418af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c87e6f5-2e22-406b-8a15-b1e8aab39096",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698d7496-4bf3-4090-8811-a6c175d5acbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc54cff-14df-44a0-b7a9-bb0e7042158f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1e9ed1-74e7-44eb-a4a6-31d69f2ea539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "518ea5d1-4140-40f7-9f51-e99ce7f0496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac605280-060a-406b-98c2-6b0456d60785",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0144380d-0361-4f44-be27-7693ed696bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea859538-1598-42d5-ad62-c06c42768d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2070b63-6df4-414f-b3a8-b5fae8e302b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac29696-1782-4fbd-93ec-b9156f486b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dc2ada-e07e-4463-9a80-03071c72edbd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2c0374-934e-4424-84c2-d12e7d5b66d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaad625-b12e-4292-81cc-bf6f801c6a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec505c6-9a4d-4d60-878e-3273da33fca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f106903-7f90-4999-9148-4bed4a3180fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73d475e-6b45-4ca6-88a7-5ec06affdf9c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba46cc-547a-4a24-b40e-a3bd5b016d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350d7f4b-d04a-4bda-9527-2305ea90d917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356a3023-6ba2-4fb3-812a-c3c7465459ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b8d60e-496e-40c9-a089-d2c39a586a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485ac64b-f21e-49e4-b8b2-980945fcd849",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cb06f5-7261-413a-bf27-326d85afa0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed56653d-570f-4f70-a595-ed5e5f116c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842dac23-6a16-4a96-95a8-e4c25dc9fe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e640375-d3fe-45bc-bdcf-791a199b2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bca7ecd-d7c9-42f1-a896-f636f78e987d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a101f-e6cb-4aaf-9b03-34b4afb5f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbb0614-519c-4d9e-b52a-4d106a8c5910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69548d8-bd10-4967-94ca-1ebfd0a2b455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09759b7e-3cae-499b-a434-9b6bd67be990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d41338-2c2f-46bd-9904-20ee41a92286",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502016cb-429e-4572-89b1-b9fcdf18b158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f793ce-e676-4c6a-9989-9ed627beb6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac2877-62a0-4b4b-baf2-3f968fd4e2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab355310-397f-48c9-826d-5e03fa769ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fbe949-82fb-4b69-b934-dcda4aeee49f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d2c79-1aed-43da-86e7-3813f2a51dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae9f8d2-98a2-4aa1-b563-03f10bc5ca5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5805c5-e3f8-4ef4-812c-466ab53f9453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3863ef4b-28f6-436d-8559-fda078a6accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0c5e4-00e7-477f-b0e0-6eb68a0a92c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd21cc0c-56ab-4d59-88b0-e1a574ad35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd57938-1574-4410-ac76-7eabee80a143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58795f3e-8849-4178-a4cb-4362bb071f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9336966c-3778-4bcb-8744-dad5025bfd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbbeafb-8e7d-4473-a34d-eace25a1637c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b942b36d-199e-4772-b1ac-362c578ee631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b643a60a-1ecf-43f7-a3bf-4184bdf54ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38cdef0-e4fc-454a-a803-ea021e7b2706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b5fbc2-76e7-4a6a-a8fa-88320bd2e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b830d5d3-28d7-49c2-bc43-13c051bb583b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365cca6d-4202-4b75-a6ea-96a0cfa0bba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0849e641-9ca2-4e70-8ba3-80676ed9e528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188e8643-780e-429c-8653-305f3d8f32c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a8814a-b07e-4ddc-ba45-429194a6a34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff66f05-bc22-4124-9143-7098dec8b24c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55339736-13f4-4c55-a9bc-14f358916764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d5863e-5177-4d2d-9d4e-7855ff921623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdc27d0-6d4a-415c-9717-4e6550547a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f42d550-d316-4040-9f6d-24c9ad8a5a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f32eb1-e826-45b6-ab57-d518da414956",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc9d8ac-0093-4292-85f5-5b6a9167f888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c37c0f-9ff9-4836-80b7-acea24d48921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd94c67-eb66-49c1-b2ec-ab7cd8a10086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b53aa71-8172-41d6-a271-6cd96df3bcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a686d55-2d39-4ac1-9f51-90daff2f7317",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0a7bdd-f890-475d-9630-110dc84772ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92d6acc-c5dc-48c8-8319-5f47efc91e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd33ef61-c888-458b-8089-3c78d8d1274a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa70f9d-2f63-4d15-843f-e402cd919e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b7feb8-ec3d-4fc5-a9ab-a52650ef68a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380fb5c6-2fcb-4718-92d0-7d239159e82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96ca408-71af-425b-a583-5b23f8dc035b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a722f055-b51a-46ff-acd3-53e8f4a273bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4178104-f61f-4277-bcfc-d5ae127f522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f641b7be-ace4-4119-8068-40e5adf83302",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c2415b-7b5d-411d-887a-5b5629738b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39610e0a-972f-400f-8223-efca2896fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bcaff0-72a1-4310-aea3-916b7be814cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a15be2-d030-45c4-8aef-59499e7ce90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d0cb76-92fb-4186-8a87-d14a2f502ac5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0244cb-1d2d-4cc7-903f-d5586b58f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ecd014-4543-468f-ae2d-f0780e780a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ee204-4d33-4385-bc7e-d8f4bbe6ff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d0e8d8-4375-4071-949d-8c5bf9e6f59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d23657-1a71-4e46-85f3-70734f834028",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e6546a-c62c-4a9b-b4be-9eee46d9b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a8dc62-b31a-4bd5-96a3-8668aef60407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b7e7a5-6954-422f-91f0-fd2ad63d1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfc7965-27b5-41c8-8395-dc10bcae3ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7f4c6c-9350-46e6-86cf-2f389febf514",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424df744-fc25-4c81-a3f3-9d9ac73b904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6825cfc-8b65-438b-a1fe-6288bc97cb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3382cdd0-026c-42ae-9c01-fb3b6b1bb7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "172c1b1d-ba57-4e19-a3fa-88dc9f2bb294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6080f3-f7ed-4ea3-9b4a-bff9f12a0546",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705d59f3-61de-4d7a-9c69-6289492bad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a455365-7d0d-4643-b237-6683e42a391a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21675419-0a49-4967-970a-05e247c9202d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b544ed95-1fe8-4eea-8519-e140b05f4591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8016da43-0396-4acf-8a6d-9af29850801e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47528449-e75b-4e44-ad91-d29b1ae3c57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d145b86-f724-49e7-b0c9-a3da1107b118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caccbf63-638e-4015-b871-fbaf5e249801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac86a41-80d7-4ef6-8370-611a215c8672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5574a1-1855-4e28-8ab6-3150a9327549",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8fb5ff-8ef1-4db5-b225-8422b61b1a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2adfe6d-76b7-4c3f-b45d-60fb3505cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2673386-a8b4-4b3f-9a29-051ec29d5da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e752f425-eef7-4ddd-b204-e29f7a29f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23a1f87-f429-42f5-a5a2-ea4974094939",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df15a0a1-14d1-4409-8e88-de20ddea9fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18914659-0a58-4d34-a6ce-ea558681e75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b80cfaf-d295-4b02-aedc-9abfc828b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46db94cb-6f73-404a-ae8c-1ea716b8e927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69720289-ec69-463b-9dc6-72104545ebc4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9836e94-3d4b-426c-9665-7501b5108dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4825f7a0-f984-47a9-a421-940880905a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606d09ff-036c-4da1-8fe1-3a2db5a94bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f644e3e8-49d8-4905-ad0d-5fd07baa5bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552b0c45-2bfd-4d48-9b4d-c799c1b8180f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec7932-1af5-4794-8be4-00018b4fac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b11a3a2-8f9b-46a2-9233-51214294c5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bf1303-2d3d-492c-965f-6dac838a9fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cc6e66-b502-4311-8c29-000edc49b919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e16eaa-2882-41ef-9672-228b6b27bf99",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369597ba-56cb-4482-9912-68a92d3800fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81528e0-044a-43eb-b4cc-ad7633b9514e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbab8ac-04b2-4f50-ac62-f079acbafd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22ecfdf7-933c-4ba2-9200-2078011eb6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4971ff-f08f-418d-b2bc-3a93955b94ea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bada409b-ab6b-4aa2-afd1-21cd3c7e4d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae86e5e-2af1-4e0b-bffe-749627a976e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb1c72-bc4d-43bc-9530-11de866c0366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1d74ed-9df2-4737-8a94-6c152cbac8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daa32cc-0c59-4c42-8108-73670018fcef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1208d103-3be8-424b-a5c8-8b9d6700dd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db65b8b-4743-4c6b-90dd-e24b2e584a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75926067-ee3d-4bec-9bcb-8ece6ce3d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72f0be8e-70d9-494c-b250-f456b2e7ebd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ff22be-20e9-4366-b960-f82e9f498f31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8415dc02-2725-4420-8b86-07d88eaa0b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8959b76b-9165-41c2-9f89-22bb4ccd0d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b5099e-bf07-4547-b615-0e006718e544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4747427-1926-4a5c-8453-9106ab8dd221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf18832-f977-4f71-a17f-8288820ec4b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa11d15-5ab5-47c2-83a0-5655843cb061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d0ecef-4a4a-4d01-b0b2-aaa56ce35d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a785b2d1-537d-4266-acbe-ae04f9c971e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96eb19d8-ef48-4048-91db-c0c43777e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb55f5f-9fcb-4cd9-af66-685edca1a581",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ab47e-4ca7-4409-9e88-f583aecdd7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff7d12e-63ed-497d-a95b-ac77b2eacc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee8de1a-fc93-4b20-a358-d2f0d69f9f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f29f6d-1d6d-4608-916b-fcc8cfd24327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae74b3-5580-41e6-b12c-298919e51ff8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f29051-ce2a-41d3-ae0f-abf72ab4d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a7fd83-64ad-44fd-8d26-b7169d155a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50273d0c-0183-46bb-b8c4-2711b2c89bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd9b1b5-1a92-4a21-8543-17de90948b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15fb2c8-6ff8-433b-acea-f90fa1e67cd0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399d4ae5-7a9f-405d-bb00-d7241b066aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cf968716-85a1-411c-8cca-88823d7bada4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a69dbfd-f34d-4abb-bc04-0a34a27b227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18bcf89c-9c82-45ec-b63a-6b83d65b0858"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c69e8a0-7449-4246-9181-fd209c2f37d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2df3da8-1334-4d12-9752-e10d69e8ae81",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd724a3-c472-4e4c-85ff-9ae5b3379dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "402a4750-b494-42aa-a34c-82c2f66f894d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac54944-bb70-4209-a226-242e2d3e1b16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1289d883-2140-43f6-be3a-45a4b9a63c1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f67de87-278b-4675-b905-27f0b77fd147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12346a3e-32ef-4d60-a618-898530b2974a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95e11dbf-8393-4c0b-8c2e-5a820866c29a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfe2fa07-7265-4c73-ba03-a1e6b85628f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9a453a8-d4ec-41ee-b29b-70ebbb65b0df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e29ac6c-6a3c-40b6-bb1f-0d7ed4743865"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71af5535-15a2-4038-a381-217d81a6c284",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d134de72-be9f-47f2-8fab-befff6571cc8"
                }
              }
            ]
          },
          {
            "id": "4c72d0d7-9b5d-44bd-a317-357f3cbe1490",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77c77139-ac22-49e9-ad42-f1212d5e11cb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "720e4d0e-5dac-4907-94b8-bd7d821d13ee",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e176574-09af-4c8c-8779-548094946ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c983e0e-b4f7-498a-8312-3ff4c041f1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19239e40-84e1-4021-a103-ff989ace9ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a67ae8-7a3f-4197-a504-2794627b6400"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4165a38a-b3af-48b1-b984-442a5272a4f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d10c123-4458-4ced-9d04-27b00e7bdf77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60425a7b-5019-47f0-b4bc-024d22b60249"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "948a8d87-0537-471c-a229-91057f695c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d2854955-f5ff-41f7-8a82-ca00c00f79ae"
                    }
                  }
                ]
              },
              {
                "id": "e1c53f33-c403-48e5-afb5-2cca93508bdc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "073e1a0e-9f7a-45c4-85f0-085da8b0a82c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad78f2dd-9c63-4f20-8ff8-825e479391e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "002df905-f3cb-4cc8-8584-c565a2449f89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75de57b6-49e2-4bd6-8f7a-8a393934096e"
                    }
                  }
                ]
              },
              {
                "id": "85653515-41f9-47ff-a4b6-356ebb0b6094",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f94e6d4a-b690-4412-adaa-8cf364f86ac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f73b353a-602e-4a8e-9000-5e9e4574ef57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32a3880a-69ae-43a2-a264-f7575674e407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ccc5f48-6428-496f-8521-171a782df102"
                    }
                  }
                ]
              },
              {
                "id": "61405336-9d5e-48d3-bd52-65f636cbfcf5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be763585-139c-45d6-a5e0-d66d01bedcdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e83f146-92ba-431a-88b7-860a37088ce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a2fe0a4-f84f-4c1d-a153-c29a7c0c3097",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99505a22-1c72-4b5d-b41b-3db7ed9fda3f"
                    }
                  }
                ]
              },
              {
                "id": "45c02ba0-e6d4-41d2-94d7-e0df299f830e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3594b0dc-daec-407a-8fe9-3b08ba1a3a2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28250cd6-b2df-47bd-a9d3-2f82821c8e4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83b43435-8c5a-4143-b770-ea161157b830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e400e3c1-f26b-4bee-b135-d7a08f2c9cf3"
                    }
                  }
                ]
              },
              {
                "id": "db53526f-21f8-4711-981d-dd94a7772e3f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b85211-2e18-4cd3-8201-53940358fbbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8373d8a5-11d0-4286-85c8-75d9a8b06b96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe4c8cae-dbb8-4006-a9f9-5b2b3f8f13fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ea24a7f-8226-4463-b3f8-69812b5de551"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8062989-9f1d-4ae9-8300-a93682ecec04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba3100de-2ebf-4a20-8017-2b9077cea6cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f80d11a-d50e-4470-9eb7-0d2d61a2295f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b446b5a4-19f7-40c8-b4a7-33b76b9374ca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9813d2b-b9ad-490b-a15c-1212b4a9d8ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b84f7870-5407-432b-ad48-308e053c98dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4917072-c716-4857-89ee-8fbe0fdf4dd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52e9f067-4daf-429e-b19e-ca40e558a17c"
            }
          }
        ]
      },
      {
        "id": "9270100f-9796-41fd-ba80-4efc4c4b1512",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a0e98781-0525-4ae5-aaa6-28c7dd77ec65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bca4b37c-357a-4f74-a306-75d35840420c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a07e59c-8e1f-4abb-9bcb-ef13c9a4e67e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7b2df3-55c0-4ddf-b86f-6e8db97d7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0201d11b-988a-4b7e-ac32-543e0f94ec99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2071d2f-92ae-454f-b822-18c67680923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38d21d2-ec55-468e-b70d-f35cce6ab181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f590bad9-ea2c-4be6-b206-8ee18dca60a4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6562df48-11ba-45ad-aea6-51e5a5cd11cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193c193b-c131-452f-908a-f39713c2f3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ffcce-d212-40ba-ac32-a7463dd2659a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06da3e3c-fea9-4e48-a641-1f679cf9ae8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a505f8d-3f4f-4fee-b326-521dc929ce98",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c579933e-1c5b-460b-b83f-2042eb9cf44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecab65f9-c6de-45b4-8b4c-3315aa2ca8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c7c5c4-2ba9-4a86-b28d-a4750d58e535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e020ef-4335-4f26-ad3b-f68bba0346f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eca3ee-1ae2-4260-b224-cdf748dfbe14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bcd69e-6c96-490e-970b-7e55df4baeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae04c314-8228-4872-9ba8-a2789bf764e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cee6fb-db6b-4e14-afca-532fb544b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad779c42-54a3-4a1b-ab0e-3c6758ce3799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4595d1ac-b8bf-461a-9965-72dd8da8fbd4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728671ee-7550-4df3-b5d8-82e7dc16a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df39f6a-5c78-40f4-8349-2bf770c8f035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6070565-ecfb-40be-915e-ca54be6b97b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d301ae-f3fc-4e9e-a4ec-68ee9acac0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1b3bfd-d3d1-42b3-92dd-244dbb2397bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f63e6f-10cd-4604-b4b5-ef461d6163e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a029115-33e3-4cfd-a7dc-dfeee8a17c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15325752-8275-40f7-a7bb-9b1b2f22874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "609648fa-ce70-4678-b240-f6fc711eee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a6c6cd-428f-4773-9870-f3b369e43c61",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5f1294-d874-4ddd-82f0-cd3f4f6e3bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aeb2200-81eb-464a-9be7-02845510c9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefe801-e82d-4052-8755-49c8b91f728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc57ae85-7662-40b8-9b98-b15866ca5d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d3915-76d7-42c1-bd01-6f31f5b402db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62b80a1-eef3-4d34-867b-6d33c06fe297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31899507-db71-4f0d-9232-fcd2165f4521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a416e393-7bb0-48c1-88d3-213ead032b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47fe845-e8c8-4e5d-a8a9-36fe4a986460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdc5e9f-1e7c-4606-943e-71962bffd3e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ec7f7-6f74-4bb9-8eae-04242d5f783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45fc6a7-aa7f-4836-a38e-1949c668c606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d04c4a-4c02-4d3d-88d9-74eaceb2ae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ed6ee2-d346-423a-8b08-f38e637f0278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02b418c-0721-476a-b2ab-3984aa379d52",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d306db2-cdd1-492b-837e-4c260fa30ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd00290e-212b-4cd9-a2b9-db4fe3099823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd7f2e2-968e-4d3f-8100-2ce215904639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84eeefc-718c-45eb-bd71-1b09d1a25081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e51d5f2-3859-40d8-abc1-ff976aaba780",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a1c71c-e7da-4c4e-b2d7-bb49c0e0f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a03e70-d6e3-42e5-9abb-b79113f81fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cabfcd-7e3b-422f-9235-466606d966e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba854dfb-7e3a-4ed6-9329-a3b98bf8008a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1d7479-4384-4e21-be7b-a36cd3ab80ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961aa164-841c-4e2b-9c65-486fcbee61ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7042af66-003e-4b5f-badd-f328e61390d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef8f94d-fc78-44fb-b19f-164ced6c8e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6761c0-b16d-4109-8868-9ff06414f93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1e57b-8fda-479f-951b-35bd404501ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b852e-181c-458e-b37e-b0f6e8cba338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a82909-cfa3-437d-8e73-06f83f4ae7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d92442-127b-4292-ba60-7acfa71e863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "958e6c97-f2bb-4591-803a-79a6a9c553d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aeecc9-aade-403d-893f-090ec1659c51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeb78ef-5bf6-4816-afb9-883b7f85b07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03f8ef4-b089-4ca8-b2e2-eff30fe0dac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f17b5-0367-4bdd-872f-dc489b68b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b12659-5f05-4c49-833d-04f16e290d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73af6e2-b1b5-4012-91e7-f0ad2d810489",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ac8a1c-758e-4bc7-bea7-ece689dd7a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3166ee-489a-4081-ba93-196f2dffdfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b537b752-1858-4aaa-ae79-219565e99aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71a3789-45c4-4222-a70c-a0547c58f55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7380e3f6-dc2c-4c25-9722-8cf714b36875",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e091418f-7971-4c71-8448-39d8ac1a5d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc1529c-a99c-4ef4-ac89-9c11cb0a6f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f681aea-7192-4ec1-8aab-01ffb8045399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1f2970-b705-4ebd-baf7-1fb799f3623f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640ab17-546f-427f-bc3e-b4bdd18bdbb9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486c6bf9-9e4c-4111-a636-51570b2866d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0175ed5-2dad-41e4-bfa9-edc08aa4e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ce7646-3a1d-4ae1-948a-fca4df054d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d350e229-c4bb-4c5b-bcc7-a1d270287d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6455d2-5807-4640-83e9-fe4b3589b7f2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb913c8-664a-4cce-9955-7b5e31481a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7325fc1a-e8e5-4290-9a6b-8d96a1bb3a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd4f972-9150-4af9-b1dc-b52c4345a3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c342a4e-3417-4627-af94-053ef89ea8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087527af-6e3f-474b-be11-0453b9eff669",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7d8ca8-55c3-411e-8254-cea253c64e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76650288-7827-4e0d-8424-f0f183e554f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21930632-8c74-49a5-9f87-2d0b331c04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01fc254-17a9-4bda-969f-b84b2ab97a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f35727a-116c-46eb-aa93-c0aef9885e1b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b51afe-15b7-4104-bccc-27fa83eb34a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42503518-b244-4389-90b7-3a48af1f82f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcf9859-7834-45f1-8501-9cd944f0acf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea01910b-4f6f-4569-8286-2e2031059714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20870231-6499-41cc-899a-5942ca1408e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f19db6-1e7c-4a8a-9f16-07f53ceea3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09d0858-a99c-4a6d-9291-620e0c4f3cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71483ded-70f3-4b3f-98c5-c73472be382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5057f62-dcc6-440c-9417-026d1037c47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c63006b-2e61-46dc-8d1f-86e86691edf7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c89521-3701-4564-a837-24cb2ac322be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac00eed5-0d5a-476b-8c63-222cd755ae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ff9c2d-044d-4c0c-94fe-f873a43bfc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "118a045a-45b7-46e4-9345-38ad6f146205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22c7d8-9193-4a7e-bede-326f9666acb3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0d4185-e437-4696-a04a-c8f67b94afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e8dbb3-7df7-4d92-8729-9047df4daa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924fcd34-726b-4f60-8fc5-d4b89d08e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22bfc386-c158-403c-9265-920d7b467bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad143cd-e629-4b00-9614-1485042d13f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed02661-4ff5-4d0e-80da-496e6060896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748e557c-c891-497e-85b8-3c3649174b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8a93be-4af7-4913-b4e8-9ad545c95831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01419a65-f09a-4590-bd5a-0177c9ad3eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b688880-08db-43c7-a91a-a26415f5af57",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7103a0e-d7d7-4bab-9c2c-af77014a7efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242425ad-ac11-4e76-abe9-e98c5d91ce45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e034ed7c-fb2e-4ac9-a0f6-9c4473a22616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1e6687-5181-4c3c-87f6-7fab72ed3259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037239a-ada9-4adf-a37b-a1b384566615",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31bec10-a3da-4e67-b0e4-fca4196afb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f13119-6d3e-4d1f-af4a-986d3b345cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f6a231-e7e9-45f3-b333-dbea6e09bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9683af8b-7dab-4cca-a0ce-412719ab97d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5496e44-cd48-4b11-9140-f684e6cbd459",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2277fc01-e77f-44bd-94a0-c61416df7282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104b8a95-523a-4e15-99d3-ef5f1a2f2d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc55e360-3846-41b7-8177-d8482d3b5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eee7e95-630a-433c-b058-4707e5c7dd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c212df-81ba-43b7-a1cb-89683e415549",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14860a2-a8de-46b2-84a8-276bc348cd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffab5a58-3f13-45e0-8568-66692facfe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3642d2-f05c-4704-838e-bd2a8f930887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b04594-a16a-4891-94e8-d27e75bede0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b7167-e07d-458c-8c6a-5d6e2562e655",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22ba1e6-3ba6-40c0-a0cb-1e9bea1e1fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7093b6be-931a-4674-a4ae-7daa0f10e29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd19dcf-fe8c-46cb-aaf7-1eb9ce52bf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c23cf50-15fc-4c2b-b48f-6a7e2f84e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99358660-a246-4a67-8332-61ef6492d21e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7902a45f-70b9-468c-852c-896dec1360ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95153f70-6cf9-4078-8b96-64b0d23db2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242646f6-c764-4d14-afd7-e20ebb12741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb075be4-fee4-4d70-ab84-85f7e2a9d451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb4462-a092-4e20-bcb8-cea61f045a11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30777817-9324-4f33-82ee-2d3063a18b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db721345-a174-4c42-9b22-0fde54a7c557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71352dd2-d574-4003-b3e3-2072634b44db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6035273-dc4f-442c-a836-0260173f9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4aa9ec-0e14-4434-a7e5-5b22bb2d2fc3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b33ddb9-cb50-4245-ac7c-303b076c3c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290458de-1403-4e02-9f30-3ec903ff3293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968cc7a9-d707-41ae-a39f-a112fdf17ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0926fd-9989-4c37-b51e-a4b2dcee36ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08bd894d-2b51-4435-a34e-1e5ff7811648",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7fd725b-cd1f-4f1c-9b14-2f8fdadae525",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2ed26-d9ed-4d8d-ac68-02540c5c8442",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d53e14d-d890-4e03-ba0a-1e973ee0fac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f7bf09-b177-4661-a24b-7f7f3cd1912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce4cd90-6a46-4f18-a346-c82ddd708c82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4aef20d-ac54-44d4-9ff6-3d331c040933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a640417d-22cd-42af-a512-799696fb41fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6b9a8ef-9a81-4e21-a736-e214ad188cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d0c8780-9055-42b4-a9c0-898123d234f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a252ba03-8771-407c-b849-540b6c0503dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e21edf43-c8d9-4c50-b6e7-f7b10150e94a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfcfac47-7897-4184-8526-d001a5bc8512",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ceb668b-1a12-4099-9911-48d70a36d2d9"
            }
          }
        ]
      },
      {
        "id": "e7b6bd07-5751-41e8-9922-5a4daf72e925",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "553dff35-9d03-4578-88ec-849f6a836518",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f16227d-bae4-41e2-ba12-259269f17540",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "944aa80c-e39c-4305-b606-012db73c1542",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b417ae-bf76-479e-b2ea-6f449dc7f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194d3041-e6f8-40fb-a2f2-79abf741c747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52da6a7a-234d-4581-b9ea-c5ea30c65e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d4f244-6a1b-4142-b35d-764a6f274493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a73f152-9469-42eb-aa95-163f51493e0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ab21cd-6659-485d-8207-5a83e1ff044a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7364c206-c781-4011-9cc3-967dc6e7b54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9928bb-887a-4bdb-880a-c1c2170ba6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa8f648-d19f-43ea-aad5-53ef36ee3991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f683c25-0987-436b-8870-dc5338e65e84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d32394-b9cf-468f-8c91-43563fac79aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1708abc4-614f-4168-a872-abdca33769b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffae20b-9bb4-4e10-af0a-68bef962ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed17f4f-9c97-4be9-9376-afcbf32c45ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d76a8e1-b683-4375-b763-f970445badbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b2e2f-dee3-44c9-8d5c-dcc71d37d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6b13a4-5229-414e-8fd3-720969831d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e893de21-01c6-4b76-b5a5-09a700af3b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f9955e-4534-45f5-86cd-8a9299a9ca3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f111fd-1eef-4040-9307-1becad0db62c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa4627-8fa0-41de-a17f-9adcbb0ab4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217c8f81-08a9-4b89-88da-cf3d12d7dd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b89a585-8353-4c03-bc1a-e98cefd68d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbcac2c-5b89-47b0-94c7-eb74b4a3ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee884152-28b0-4fa8-ac45-77391fb7e28e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb233cf-d021-49d1-807d-2c66274c3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2de54f-78e8-4097-8dee-4fdb78ca1bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd64cb-03a0-4a78-a35e-7f6dcb4573b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a2bac4-3258-45f8-a74d-5dfc3452644d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ceaa06-f3e4-4821-b87f-ccc73e5bff73",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2063b81-7e24-4d78-8cb9-bfd97684c54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1028110b-cdfc-48ca-9291-f5f8510ffdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d162b512-70c5-4139-8a64-dd4e66e84cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f8f859-18f5-4e1a-a76e-0583a92f52e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf37077f-121a-405d-8441-2ceee4e582b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3bfcbe-7946-4e4f-a14a-ccc5bd4a2e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd819c-a051-4e5f-83dc-7c1925bd6012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d11c769-de0a-4b22-bbb4-6cf3ad7363aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a73d67-3d74-4fc1-a45a-457476788650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609df86c-a895-4863-8ddc-a36a4306c472",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6de89f4-1a1d-4fc1-bdd1-e01234da061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4676fb3-8ea0-4a4e-b765-acb4a5dd7e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd04d1e-36c7-4c4a-b833-6b469cd5f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da6443e-2656-4df6-b592-660e2394ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e93d30f-9ad9-4c7a-b4b3-498cea5cd01a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f37999-e7c7-4cf3-b07b-aeaa69b26b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac88d42b-85db-42af-8ef4-7a4104158528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b334a6ad-936b-4803-82d9-367f54f50369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "105f1a91-438c-4659-9c18-c8617b9462fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c027e10d-854f-43f7-a58a-21552fc37bd0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f9dd4-a8ed-4754-b825-bbb7cc914b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c939d95-9502-4a68-b069-b804a2e8cf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2039c2f-b5b4-4308-b0d9-49dcdf9698d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7307027d-40d8-4a53-9eb5-1df1b3352522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8d186d-eacc-4631-bcfb-753bb91870ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a909a-90a2-47b2-b0dc-a9a80a607242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a8d6ab-48bb-4606-942e-aea23728a823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076ac650-357d-43ac-b3ba-f121522b6950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0400114-c960-4673-a34a-24c5a48dbd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d345569a-1ed8-4176-8502-95b922b21f84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b1ad4-b4ed-4864-8878-2b50e8b64a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1f44f-c39e-419a-a783-2aa3a1d6d5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce39971-fa83-459e-903a-cc81bba02d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e569942a-9e6f-47fe-9628-b33d2774254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b096ba5-ec79-4766-890b-f7d8b9087003",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2be37e-119c-40eb-949d-8b30d2d67e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a750a8f-85f6-4874-8206-9a2771fcbc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178cdd90-f704-4c50-934f-61356a944f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b50662-88f6-4fac-a6eb-34a6d9ff49d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595d27d0-9170-40bf-8262-f6a04e332fd4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d53bf4-8b28-4a5f-a346-b03823bb7e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2eb01a5-1c3e-4904-aaf9-13b5a0752b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb1fbc8-6431-49d2-94fe-102f3864f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c06153e-2dc9-44cb-8edb-a4db3996f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb205149-8b8f-46a5-88eb-582a4fcc1fba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f216e0-710d-4ee0-a33b-6acf91d8f845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619fc269-9768-40d4-9526-114be17224d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8285043b-fc00-4119-803b-46655bc26e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7291643e-7e5d-4dd8-b953-ef1f9cbcbb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c01aec-9436-4ea2-b95d-2942a7c5ddf1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbaad6b-6bac-4a3b-86c3-407683c75bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70407aa-539c-42fc-a05c-f3ccf3875411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468aed29-72fe-41d2-944a-7bfe731deb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95883cab-3975-4209-9143-2f3cdd18402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea39becc-ce09-4e42-b682-f06606fb03c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489140df-2a66-4408-84ce-dd3afbe6dc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417d8328-eff9-4a07-aece-90b5489d3707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf9f14f-131b-46af-a703-323cc0e88143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "576dc328-dbc9-41f7-89a8-7655758a210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca6e215-16eb-459d-a08a-9202c89d1185",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66878c99-95b1-43d8-8d4e-28cd8bb3d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa77f0c-9ae7-486a-9147-547fa0b570c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8366123b-9d5a-43be-8883-42c93ce5da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc938c9-46dd-4211-bb9a-1f51f19057fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3813666-8910-490d-842a-03898952dc51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d5dbb7-1a56-4698-bdaf-c013a4979f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed999dd4-6a4c-41b2-87c8-fdeb0334b8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb10933-5903-48c3-84f1-6954d543493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7633cef5-b843-4c45-aa85-8eb2fba2f30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404e28c7-0129-4170-8186-ed7e37eef97e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672da84a-2710-4045-a5a9-501a7f070d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a866901-7fa1-4834-ab39-ad062b828521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c387f7-f7f2-40cd-a12e-2556ba512359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d09285-8f07-4d5a-9115-d2bfc2fdb48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82eafda6-30da-4417-a858-bf2a14efbda8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57bdc2b-5ce7-47f3-a978-27431b50c72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3dbda1-d86d-4a6f-948d-4fa307142afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08111ecb-d59d-437a-88b9-05b7ad313f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bc95d3-34d4-41c8-91b2-2ce8a18ec74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce7c5fe-fec6-44ad-a0ee-52a34ced30e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ca8fba-d6d4-4f48-9fe5-d8919d122d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f1befa-a582-4335-87f0-5b38f0bafcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc48db4-dd1a-493f-a936-da93c195dd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb100ea-bb7b-48b6-9fe7-622357a79dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0891cab8-4afd-44e5-b83e-d9e0f588e832",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9ee887-72b8-48c3-b76d-74576bb81b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f759cc83-8b32-4d1d-9302-23de7d7c0ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76883ab-7a0b-4d68-badb-112e3ea88389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e61320-4435-42b6-8872-26545333bf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4061d088-6a16-4445-a59c-311bb25bc3f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f489ba20-4b4a-4287-a24a-fb6cc87963ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7aa21ac-8038-4fca-9968-864284080114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb472d-c5a3-4c6c-961c-147987999c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f930488-a768-481d-898b-050f1ce8ce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd55754-ea92-4750-b3f3-a8770036aacb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387b58b3-59fc-40d4-979b-06772993e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498219f2-fbdb-4573-a040-a07ec841397d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be5b0e7-f699-4a2a-a77e-c7458e8894e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9116cbf6-74bd-4ba9-88a2-f456c959a5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04d212c-00dd-42df-980f-b140870647e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5774312-2b8a-4629-a1c7-30000e40774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577193c0-c5ee-403b-ada3-c32d49bc2452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e268da-00fa-43ea-a9ef-82ff66731542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60e927b-4bc5-4106-859a-136212b4df7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedbf6c5-bba4-41f7-ad67-ed2128f67f56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e410dc-4a7d-40cc-b53d-949d8c097c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91003089-2ee8-49bd-b0cf-43410e91fff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc070ce4-d811-46d1-8af3-9ca161de573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7c29a8-d134-4e80-b7fc-9ccaffa091d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a4fdc9-8c0e-4600-b8bd-60692b176ba3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d071aa-9c42-4727-b8a0-c61985a977ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017c2062-5176-4532-814d-97735c23086d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09f09f6-b401-44f7-97f8-8930d4f26418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a794c8f7-8799-4e66-ac7f-7cc3d6c2ed61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5868b4d0-6392-4110-bbb0-19631fd45079",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0df797-3ac8-4c9e-9562-bf95e399099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51842e33-2169-4d3d-b435-e6fffffc98f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a6cf9f-d71b-4942-9f4f-e14a0bf44254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efca9ab8-5d17-47d9-933f-8751f8388072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1ee9d-1e53-4fb5-a857-d807b497ae60",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f235db88-9881-4cd4-a966-eca9cfa5ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea1c645-13f6-4a69-b925-66aa8e3788f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01204e9-51a6-4be1-bf0a-13aeef68b149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5b082c-a938-41b3-a4b9-d57c0a8b7e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cc7979-2cab-4f9b-9702-7e8a1a4fef5c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d39b16-df20-4b0f-9dd8-b2eb283868dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c5e6e4-f9cf-4968-ba7d-4b075f773e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d435435-3e2c-42cf-a358-98528e789cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "491cc410-b0c5-4f74-a63e-70214a744296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2132ab60-4046-44a0-bcf3-bf99f55b9ff1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b643730c-9bdd-4058-ae39-64d328a1ce30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c72245-4d2a-44a5-be96-dc4026b34ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7197ddc4-6a37-4e7c-95ff-cd8747412d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bb2260-1b6f-4c72-860a-a72fd03c8ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce95264-4290-4d95-b312-45771a84acfe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2fac2c-4593-420b-b679-ac73c5743b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb336a98-83c3-4099-b4b2-263609893f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c01def1-9f34-4730-9c22-eba610ddcc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ed45f1-5ec1-4c97-b649-06c10b96770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1a2ed9-0948-4882-a8b4-3bfaf79fbbf6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dd8140-f4f3-4bf1-8046-8923b08706ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df94d201-4f9d-4cae-8b0c-a007910365ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d782d750-c515-4f05-bfc5-fc7e7fbdac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf91010-74e0-468a-b51a-245e0a550a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe008eb-a7a7-4b0b-be9f-004496a06d4d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de389a01-4681-4499-a598-bee7bfc93a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799feb8e-685b-4c3b-9b19-b30c18a9b979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cf726b-2503-4cfb-be1e-147a513f6b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e6c8b3-f3ba-44cd-844b-3cacf57137b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf998af-46c6-4b1a-96ee-b34da3dec007",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8490fe2-e7be-41ee-9850-d05ba4695411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc73232-c27a-4893-85ae-db75adb45ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a7205-2979-400a-b9ae-834fa9d3b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064e930d-e49b-47f7-a6e2-3ecbd0f469f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f4bbd96-2344-42ac-9927-6e4e5160e9f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "caba97ec-5d2f-4657-9a57-c2313fd13ed6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e017e-6dda-4068-b2c0-ea8877a69379",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6e82b9-55aa-4540-a799-3f2d9a4e612f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277ad879-25e7-406e-a3ec-c06b6ff86639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0c09a8f-26ef-4fd0-b51a-ff1d878edd09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dc09871-ccf2-42e0-8a13-1d00d41fd819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2249f15-e4eb-49e6-b071-7af3bed127bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b2850ee-d1af-467b-8ba4-410384f7fa1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c4bc461-5fd6-4b68-b9cc-a2d0d7fe25d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c8d389d-d2d3-4180-8053-6002f38a28c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95977f66-3575-4214-8777-9c4efab4b970"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2775f4e9-4041-44f1-81cc-6d43154b70fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61de800c-bd14-4419-bad2-d08c010471ef"
            }
          }
        ]
      },
      {
        "id": "638f4567-1994-489d-8db6-9c9dc2cf34f6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "86fe9372-a499-4d58-a4ce-b22e35de4e29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cf9284f-6ccb-4a22-b032-47711f31a158",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d6150cb-bbd7-4254-8ac5-e065895bdd82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d818e54-98b3-484d-89d4-f9bcd3fa8556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f65f281-dfea-4cf1-9245-2342466d012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e4a61-3f07-4817-8aa2-bcd0f06c3056",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80aa0b3-91bc-498c-bcc9-d0ca68b24ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cade07ef-cc25-4da7-b952-a1367695cf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769c146e-8bf4-4077-9d08-649f5ffb9472",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df9c22-0592-4af0-9e81-61b056b895b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a94de44-9bd8-432d-8a50-10ca23902d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198624c2-6a51-4058-9b3a-5a7b3d715b0e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf4d45-d412-4a8d-af16-f866b035582e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59154275-af5c-4882-ad90-3ef1f598d6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e57a75-bd9c-4b47-af30-0c07679e073f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26566b78-71e4-4838-bbc3-e2d9e9fb2ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba59467a-a7c6-4cf8-8b35-ed715c936dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d18711a-bfd9-4281-af47-83e4b42e5349",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a86966-e170-4d9e-9ec8-5d68a480616c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770215a3-99fc-432c-b157-faf1a314c136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b8b924-9c42-4e48-8a65-b567c454b593",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31a179c-bc45-49ea-976d-678e11810d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e2bc31-b075-47c3-9cb8-fba1280b75c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d09b59-ebea-4e67-ad1d-e672b59e58ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4c2c47-e612-4e40-92a7-8c4250ff787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e3553-da9f-43fd-8cb9-543b50f3ec2a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae07ae26-b342-4244-ba85-3a38eb68ec5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75e4fd8-b684-4469-8e62-cf8b39b6d6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b441fa6-ed2d-4745-860f-bd71348fa5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674256e9-f11a-4f86-9114-e1b92e12b73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6a4c74-3a24-4d7c-b305-2e7fc119715b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab289e8f-0ee0-4cd4-821e-d16fe66cc609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d78e657-7d05-4a3a-be9c-8e5e1ce02b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3abb34-85f0-4152-be3d-03f2ee3b3612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a252f78-2423-4999-b526-692e573c7536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4d278-e7fc-47e8-b16a-a87a8d275774",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba1d763-51cf-44bf-b11a-258293dc7053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548ba62f-9ecf-428a-9450-8c6bccc7ab8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f4d548-f6a5-43ea-80d0-e9e7b62793df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a20bba-38ce-45c2-aaeb-b43f4285c645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed937a01-cf2f-45ba-9eed-f7b6550d2f85",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70779913-f547-4fa4-8558-78a580f59065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c76e19-2363-4e1c-ae85-76cd8e3bccc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ce2ebe-4022-4404-b64d-7831c833f779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6ac878-4710-44e2-b4a6-692b97172355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedf8590-2151-4a94-adc1-24165d26f04f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23065448-8a0f-454d-b9e0-d1815fe8a105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fd8098-a922-4ea1-b3bc-0191702fb7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa7a46b-f0d0-48ab-9ca1-5b8c21a0cb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de60c333-a176-42c4-ae23-8c6fe3efe20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc932308-985d-4eb8-a123-08dd3256490c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e81fdb9-3590-460a-b6a3-83578d59bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4080ea64-8724-4700-a802-c786a169322e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f481257-9712-4020-8aa6-68213847ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc25fb1-6542-4727-a9f2-b83b3b7afd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eabfec1-de9d-45af-b19d-4e4569d32563",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a997da-a95c-4bbd-ae23-2e55a651b682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f06b83-1980-4357-bd99-2c23bbade387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efcf09a-9395-4368-868b-bb90806fdbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c55a4a-a15e-4daf-b0a2-3cbc467ad960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e93652a-89ba-43ed-becd-b41eee2306b7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ac550e-a7ff-44ae-9490-9a13f5a6c6cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9238950b-cec5-48da-b92e-834e4a94efe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632049c3-3d2d-4f3b-a50e-4ca9f7a6a59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9183f458-7f51-4b81-879f-c8aba3f4723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e336ca38-6784-41a2-8008-77d697663392",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff900e97-2add-46a8-8248-00ed5051c06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c173846-89e0-43a0-891b-b27fd8a4ec23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1e6a7-2914-48e8-8195-1290b7d9bcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d219ee92-ac2c-4953-bd6b-c8df1d9d2dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117a391-b0ba-46cc-9654-51b031f441af",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01051392-bfa3-4435-9ab7-365895c0ab5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd4dd5c-22d0-4262-adc0-91c80a92951d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defda730-3018-41bb-9fe9-278feeb5472d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c258329-987f-4089-ab10-4b70c18cd452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8495cfd8-2057-41ed-b080-4e8cb9e37650",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a6084e-3059-458f-b893-ab0581db5c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f883a571-d69e-42f0-918b-9c6e639eb916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6432e4-3b85-42f0-ba76-4f0d8f8fa94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb5a812-0456-42ec-91a2-b8f7391ff292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae27620-0e5f-4575-b268-4950efc817ce",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e742688-94ef-475a-9687-ec2672a2f429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbf1b4d-e9cf-4c83-aa96-bb18de0addb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dd4e5b-2906-4816-81be-7853f4508352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a4a25d-2b08-4458-8f68-d04e8d4abf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe976f-7241-476a-a2ae-f20b7efcc3f0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865cae8e-83dc-4b29-81ed-43459f09476c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dfd7b9-b0c9-4066-9fdc-89a6db5b38a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82f770b-6227-4100-96a2-c7751992a342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af346ef6-4431-43b3-9161-53b98ca3ca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b14cbe-25e0-463d-8060-942c0e11aaf7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eaa506-b369-4479-b13a-0609a43305a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050a7e99-279e-428b-a0f3-34bfb8d5a6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdb1ef1-ca2b-4f0d-b507-ea272ff61e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666b69c0-3062-4512-a24a-0080bbb9a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dce8c2d-fd4e-407b-981b-faa67f4c4036",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86a23da-982f-4490-b805-0d42315ecd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc07c3bc-8e23-4bb1-8efb-94fafffdcc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f19e85-9dbd-45de-9c82-5238f653ae4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5441936b-8511-47fc-b943-675613c8aa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85240898-e7aa-48d3-897d-f657dd2d2b96",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a45a00d-2734-460f-bdda-d91a9753db45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9d8991-de8c-485a-a00c-a932dc2987e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa709bf-ce4c-4dec-845d-9ccb2ae81d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33d9c1b-f5a4-473a-9be8-0b1e431aa497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fc1ee1-c699-470a-a8f9-b8a1e3019916",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65037484-692d-40cd-8d18-65f9fca7c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6229efe8-20ad-4071-bb3a-d5cd25dcc7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6121d7a-421e-4a10-bf22-b6a4e7feddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ad96ed-25f0-4df2-b858-62e02c98c765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aaffc2-a031-4b43-8a17-15fed4690b91",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95698c94-6a50-4df9-b220-fbe46228a73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8396fd-ab9f-4e06-8d64-76d7e11a30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5784e7ad-6cbb-4889-bf58-bf25f0ccbc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51a7a65-874c-4a44-a639-1a259efdea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bd259a-fe3a-42c1-ac9f-704d70b237d0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef32fa5-7ff7-41db-80df-c950db3edd99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a034f942-c87a-4202-b39f-bb05cd6e8790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f70596-abd4-4bac-927e-9004f2f567a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c5b739-2652-4c87-b827-744ed1dd0897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce742b4-eeb9-4345-bd91-7ce1921d63b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a4721-d3d4-4abb-9f2a-b2c8709b8d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463949ae-2837-4877-85a1-63c57eaed364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc49a78c-f4c5-4426-b85d-2444c34424e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8946056d-2d13-42f4-8ce4-3217d4b63668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0892e6-1559-471a-a20f-37ac07257add",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9942b9f2-0c84-43f2-99c2-cdb94bd92477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376809e5-b7a4-495b-9794-399a800c14ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76150fbc-abe8-4ada-bf68-4cc3a4959195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c3e4fd-dfe3-4988-8a0a-10171ceaed3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1edc5e-2c19-48d5-8f8c-7d756f93b972",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b25924-5025-4b1e-87ce-15db048d2ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53a301c-e22a-417b-9325-064fe49339b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b9c41-c610-408c-85c0-5564d9eb5119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11f58d5-555c-4012-9031-c73e63d42c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d6d666-2361-4f3e-b840-358063e8f8b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6485f8-a0e8-4832-ace3-f58ad1f8bbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78db438f-52f2-428a-aa83-020c76a5cc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d949aee5-57fb-402e-9a48-1703d32ade1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e64fd7-1837-4688-b1af-33183065641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b918e046-206b-449f-a90f-1a1dd923bbd6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b75c613-c087-430a-975d-67bde0ce3708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15ec36b-d207-4310-bd45-2648ba230816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50f49cf-19aa-4846-aaf1-336650339455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe970d3e-cc62-4c91-9ef8-1712fe61ec93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753f0fcc-1a99-4526-aa3b-30a707b534ac",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb638477-9f06-4176-abaf-7674fa991f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142c117f-7cb5-4e23-ad78-081765cecb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0fdf33-5e1b-4298-91be-a34c557eb884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ece3143-e274-461b-b906-849161b2f8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9395bef8-2a95-4824-961c-d92f6f6044be",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6170a6-b5e4-4437-9c34-2064f7439a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0aae70-066f-40f9-aacb-cd044428139c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b36591-fef4-4afc-92fd-80154c9a7667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494e3029-3fbe-4fa1-8b34-ae3351a7f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dda8d78-dcfa-45a6-8cd9-6e0cb0043152",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9695a0-3e09-4bab-a32c-412724b47376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26ba9dd-4a26-437b-b84b-92de98dad0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e603a0-e435-406d-9033-5ce7de2c2235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c258db3a-980f-4e3e-859c-c6c3b98fcc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672a1c3-51f0-4840-80b2-a6ab865a9ec3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de38076-7a68-4cb7-866e-3f635b3e6e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da471d08-13ba-443f-8ba2-5fe53c5d1795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226489d-39d5-48bd-948f-a42db3c285d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62f4f8d-bb64-42d9-8436-3e14416176f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a634467-f168-4de1-bb64-8b18c0171e66",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b44aed-7be1-4ff0-9a4f-82f0f87e8d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cffe4e5-c9ff-4ff7-95ab-430b7e542fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952bdfa0-1a09-47fa-bcd6-c2f9d80ae625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248e2ed0-eeae-4236-9d79-752008238eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30840cb-9e6a-4c23-9c82-7756f06b9fe3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e99a0b0-995a-4dce-ab6f-4e4d334497b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f05d910-ccd4-4e2b-9399-d7c48260b713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945da1a4-8cfc-4649-a051-5e56e128ad36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4890f35-6e6a-40ef-9280-a700cdf078b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2577da-aa33-4c86-afe0-d6a9dff2ff90",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27501a0f-5ac3-4634-b709-d76c6c085e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e8bf37-1337-4e5a-89e3-4a277a430902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dc03b6-68b8-4a39-b4da-4a90ceee4aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826bf08a-62c1-487a-9b7c-a289c6a5016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3d7265-8c78-44ff-a0ce-0fe62be17ea8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b952a1-cbdf-4c9f-9dce-b7a84f19509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af152b1d-3e5e-4b17-aad1-ae9a61f2e15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd1846e-ab05-42e2-aef5-a70a287da857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723ecc74-bc04-48ad-9016-04a25bb8a1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11d960e-9ed8-42e1-aa19-e764d6a8d09e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d627a97b-9582-433c-a710-297ecb37d36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bc1ae2-9847-4759-8b04-27eb03af66be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0dcc56-80f7-40be-b61e-5fca87f29b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d539b6-fa87-4270-bee4-a18a9ca3b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a7bcaa-eefb-4737-8d90-c17cef440793",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af7035-46c1-4f6f-abd0-e64d353696e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd64bc28-6c51-4791-86a4-2a876c063e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0c7a7f-0a60-4f9a-9e7c-8255431deacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a38ac9-0047-451e-a98b-02915cbe401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3c856b-6432-44e1-80db-753a1e4d13ac",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45a795-dac9-4d81-afb4-e4f37f04252d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a67707-486c-4f4f-953b-ad529c21f822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de4b30e-40a8-4391-8f5a-121b5069c825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa139607-87b9-4055-bc1a-4ade254420f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee892b0-6b9e-4764-8efe-67aceb09c56c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cf4433-d45f-48cf-9162-91d0d08112c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800a2b59-72b1-4252-a7bf-322c1baeb0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efca6ac9-a596-4bbf-b1a5-66b4619b638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dd2a1a-cd26-4965-a2ee-9e0254e21506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dba407-6450-4b74-88f5-be1b98397cb4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d99eea-41b9-4e97-a420-8e532cb01a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f6d7e-2a89-4376-ba5f-4863a9243258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85aac659-e35f-4e69-9db3-956e60d09b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5284184-3608-44e8-9c41-ea2a3cad01df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b03272d-c56b-44cc-8b26-f1cac415532b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79ac56-897b-44ca-bf13-5ea3dd43dd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750f5d62-b02b-47e2-9298-03ae8b95be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a77f4c-0279-428d-b61b-39b26e8d1038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee45ef4-13f0-4e61-98ae-bd9a6f57b42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfeb6c3-8feb-4c99-ab99-2d62418b60e2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b61610a-1cb4-4085-943f-3bb0245de825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad04509-2850-4737-844a-4c7c2211afe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde21ff-6255-4144-9f23-00d2eb551d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b28f5ad-1361-4db9-8154-6d88e1bb30a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b819a1-c37d-4a8f-9a04-ff13372cbd8e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc21d9-84fc-428f-9f41-e25a62955d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5658b1-87f0-4d10-a554-5eba1a78dbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ef25ff-ac62-4aa5-a91b-e537cfbe75e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d360b4-46a0-4b0e-92c5-13f9f731c2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4076b6-5d22-40cb-80cf-77cbd2e5e169",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706e9efa-9ba5-4f45-b666-860f0292edb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b871da65-40d7-4426-9af9-2b32335e3a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b383c48-9dc3-4479-b395-219d26b1f618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5988747-8d8b-4a7f-9825-8f17fcb9fcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d464db-1798-46e2-a7f8-893f0ce8972b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e02f239-03df-4d41-bc22-7cf17f17c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc1ac05-efc5-4e8d-88cd-1c9c61c8e7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3904ec5b-0190-4540-9cab-568d64d87dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4976cce2-99af-4ca2-b7b5-9fe7b81d43e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f232b6e2-dc84-472d-8964-b45f1a8d265a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130d13c9-7ea1-4edd-b1d9-1a0d14b11c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6262321c-b9f9-4f22-9eb1-c77ad3f3bf01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fc3d31-2352-4276-9b8e-25b051d47759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d0c188-76d5-409c-9d3a-2d1f3c6628b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc33282-94d4-43e9-a823-d979d792c7e0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799c32b6-c083-4728-adab-8a2013c71e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdb0acb-f3ef-4cf5-89cd-aa71c1d0c85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94dfcb3-d554-49d7-8b53-8e4974dbb545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36588175-fe7a-4d6a-af16-b2fb00cabffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dad6eb-3088-4027-bcc5-a87c18e0e506",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be1230d-ae3b-4ce3-bace-e59d66c656f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2827ad58-3ad2-4775-acd8-45ce548d5705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c8841b-83f7-4978-a804-590d9cd8b25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf69901-cc78-4638-bef9-232ca31385d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800521f9-5219-4e85-bbc2-b630e7a8050f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bd4b99-2ad2-4606-b9eb-224223c74649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a7799d-75fb-44c6-8474-7aa0a989f8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41635186-be99-4cb2-999e-508f76b1580b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2134876c-ed01-4be7-928a-223766e7da6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32334db2-d285-496a-b02d-813f8743cac3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d612b711-c5a1-4d66-bd8f-cb5cf122a80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fb25f4-f0b8-4a79-8712-0dc15bfbd0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92ecf01-15cd-4984-b204-eab918bf6b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93289ce4-b7cf-4e44-a691-076932888fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cbf82d-6eed-455c-aff0-a5e557912c6b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b36285-96a3-434a-9991-9863c80fc4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8822fcfc-ae77-4f91-931b-8ca6570226e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dee146-bdb2-4d0b-8582-a7677e0f3c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c677e4c6-4ee8-432d-8bb9-8dcbf1d19966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e35dd43-9e81-4a72-a33d-7a4b2f7830a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55a1f89-89f1-498c-a587-5b2f17c7a20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb7c876-b4e0-4113-918d-b7d99a2c3d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d180a658-ea8f-4ce9-b74d-ac4df6771096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c1bc95-b79e-4c09-85c9-eb0fa4e1f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d01e3f1-c22d-4d96-9cac-2aad310ab99f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577830d3-1127-4b1d-80bc-738ccc6a076c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0995b82-64df-4933-ba6c-791192208953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cc6820-d10a-4cf3-98d3-8963ce2f4ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f461a987-dbc3-4325-922d-f2da063e2b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cb21ab-2537-4c99-a481-8e5aaae370cf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad30a5c-198e-45f7-80d1-0ba250ea4896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619a343c-e40c-420a-b09b-8617898dd3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c472a25-2aca-47a2-950d-bde698dc7ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41846fd8-b8b8-4dc8-a419-8171307eb58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba29324-4a22-4497-8167-d7180944398a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f62fb-47cd-43d4-b21a-07367365670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354913fe-eb6d-4f27-a581-d7296d0aba18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d38538-f41f-4948-9fe2-98dbe49ebe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a14c990-da36-4257-bc07-e4b3c33bbb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a875b-01a3-4ed2-a521-19e2c27ee296",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08902b95-ac2a-4916-9901-f1ba052f9556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d2445b-cc41-4267-a242-c905419737db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5f86ff-6166-4d2a-9b61-12c3c46aa9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82195be-4da4-483f-adf5-2cbaff99002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf5954c-ec4d-410a-bf7a-872e176c9729",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c866b57d-5ec1-4797-bc4c-2f3dfbdf8460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8b9d4f-4ff0-4109-bde2-1f937637715e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa6c93-6c60-4c1a-bde9-a17e82a3d908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397e62ef-ae4a-4c55-aab9-649c2c328e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad96929-0a24-4efe-b04a-bcf068aeae53",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e37f8ed-592f-478a-a83a-bd26554958bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ddbf71-d5af-4e3a-9340-39126ae18e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c67697-bb9a-4de0-b5d1-112b0bfe9fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b9bcbc-c759-403c-91ca-f92cf363e52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd572ee-a538-497a-920b-ae00bf3a0593",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80458abf-a3e9-415e-9976-7e8d0e8c9184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dce41d0-0f28-4635-aa1e-aad576761df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c0da6d-b172-48c3-8d46-57ab973e3450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8994ab7-380e-43c8-bf74-3725623a73e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98585b8e-b60f-4922-af56-bebdbaad0389",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acd4da2-27e7-4f3d-91b5-b3ca40f55df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d19a22-ec6a-4018-ade4-d8f3c5f7727e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b48e7b-be5f-42f2-a213-45c36e12b2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b51cc9-bab8-42c8-a035-67633732a3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865af9a5-f4cb-4048-b867-f3a2bcc462c1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1206f797-2f30-4ead-808b-f43dfc7e4230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dab9dec-0020-433e-b444-04f04251b6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0799fb55-d158-4c58-bc19-a113e1e43d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebdfe7d-669e-4995-b25e-a112985b364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2439d5-a93f-4c73-a8ce-c530bb215666",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8191b7-cdea-4efe-ae66-75db2423ef68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59abd0cc-3b00-4cc5-8d05-e8c9072f5e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d17a17a-f4ad-4ac2-8fbb-0a2744a2d117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faebc2ac-f4b4-4318-861b-b80b024c00da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98754a6a-c256-4595-ba61-d0a93405df19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdf9b0a-b81f-4455-bbe3-3c6838c1e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041afd19-2fd7-4382-9da9-28872fd02c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b130bb-3c70-47d9-a079-643df7ad2012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f3b19c-e10a-4276-9146-48d5acb13371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b108df-b990-4214-8690-0107dd86b632",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2432bd-83f7-4ccf-974d-8e0693621e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c25eea6b-9129-474f-b76b-9e0562a3c7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaa89ad-0e5b-43d0-b168-d18ad0de57c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a54ecb-8b69-42c0-b6d7-44b56928aa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae67d7e-14a9-499b-9231-fb51f868f700",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cdf4f2-26e6-4e31-a79c-2a542a084be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04df3cfd-aa3c-46a9-b697-348fb9de75b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98926931-7b64-488b-bd22-4bafafab5e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06aec2e5-78ea-45d8-b707-1374991cbc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090a449b-305b-425b-a047-2c9c01cd3eee",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89ebec8-f355-46e0-b71c-78e45659398a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebee5b2-6509-4260-adbb-e64040157da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab82c5e-d77e-4c56-9a60-eac431fc1115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc5cd15-e261-4eaf-a2b2-1a8280a071dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab2e116-8ed4-4258-8754-f563407cb1c3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cb76bc-c43a-4c29-867b-bbcc8f891905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e1d193-cfb4-4b22-a148-2f551c8c78e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a803f8c-6c81-4681-9320-5f5447790282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878f4bff-29df-4d9b-8b61-9bf4c9718fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ea7303-2bbb-4318-9af7-687923733389",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3896de67-f34d-4182-a455-d2e9ad5e33e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1fe683-ef12-4924-97ac-1b8d640d7f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb11dd1-61b0-4ef0-a0c1-94f65796c35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cef826-c5b5-4acb-8fcb-6f83896331cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2d24ad-899a-4166-8fe0-6e1cba9235bc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce73f25-ee9c-4885-b072-94cca46c4d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d19a74-83db-4c66-a9ee-656cd2ce812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64de65ab-aa80-46a7-9dfc-eadd5eedd3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da40281a-9e05-4ee7-a85e-cb993e405de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e53444b-89c1-49e3-85a7-ee381f5c6965",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6144d243-050c-45d2-8714-aebff7ede783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a3191a-40dc-4bc0-be10-a65124c86568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cbb592-46f6-4978-96e8-b419f80485f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73693275-6dfa-4fb8-a952-6b041942bb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c6e8d3-410c-41d6-ba36-bc38cca58435",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fc218c-a934-4bb8-9598-d52a8aba5c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147feb69-2992-4b09-a274-14b2731b8a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a40844-7b30-4644-a596-379b70111583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c099a8a-28cd-4dd6-a261-619ece159d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e744b9-6470-4705-b627-58853cbe4998",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2dcf57-582a-4f6f-b36a-aa9f86afdd05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4729324-6a7e-49f7-9426-c899ea795843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34f9d6a-6891-4a30-85e4-d4b2b2c4a0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7a829e-507d-41c8-9235-c8d480a6e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec29b0a4-6b09-4f5f-a56f-9b9e6d0a211f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fcab77-6481-4142-8e8c-e9ae9898f52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075aec84-eb6f-4253-909e-338b445da283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350325d2-4e5e-4e84-abfe-254b8a0b9365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cceffbc-0445-45b4-9542-83bfc79b4b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a118494-b110-4b28-b9b8-df4a44cbaff0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba76667b-b6a6-49ee-bca7-284c4d207daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8a4086-7caf-4622-a683-90df94ee3fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6201b0f6-7233-4dc4-b854-caed95fcb540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2480a49-dec0-499e-a174-38a892b1e2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a1f420-885c-44ee-86f9-b0a8f077ccff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2161d4-8516-4621-b3a4-c7dee49192d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dace3aa-2fff-4de5-9b6c-45c1f4d0f840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fdf139-5bd0-4af7-8807-39490a398399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8254ce47-d7d0-47be-b97f-268cedf879d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7947a4-ec3b-4a8b-a8d4-3bb95e3e64c9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33faab89-1cca-4494-b15c-43afd1788d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418b3604-3ff8-43d8-8433-0c0dc4f43d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2471db0e-7bf1-4856-987c-769e684443cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72cfddd-0fa2-4e98-b840-5cac99c531ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68fdb7c-0dfc-4d5f-95d3-bc740396ecc0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c64f33e-c979-4e64-8cb5-16972eaa8b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc9715a-be89-441a-bac8-bccefa9f8196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aacd4d-ad94-4621-8ada-8cd356b8f5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870f9d2e-7fe8-4cb7-8945-127566f960ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c243d726-2c70-4c3b-b7e7-0c4869978f48",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4ade4f-bae2-4f6d-9b92-dd4ab32970a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cbffa8-fee9-4be2-b543-3a1bc2629889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8dfe87-0a42-4df8-a891-3ab83aa20bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b403e98-df91-4c32-b66e-c8cd6cc38e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a69900-5025-4b09-8db7-0b74e0d17ee8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78f2381-b8f9-4d3d-96ec-37b8544d502d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d00623-8099-4a1d-8ca7-f01c4c7daac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4cbc7-91f4-4aee-a61b-8e75c6066783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6dbe29-3f2e-4355-b7ec-995bb28bf504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62248442-b5d6-41d6-8d02-b3851c3fb925",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba35738a-3ec5-41fd-980e-b598ac28bd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c084d46-44f9-4912-92cc-014219386455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d66307a-f55a-4554-86d3-6f03304cdf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01afd752-ba05-455d-9ace-fc7c245fecca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5258c5b7-177a-4aca-b86e-0f14f0566f52",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332c9a75-2924-4fc5-a39a-bdf62704d076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd7ed5c-6964-42c9-b5bd-8524b43e2ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1631393-c28f-4150-abb4-e9b415b19e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb63e9d2-e60b-4a9a-b319-2b7faaa6685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca05b230-839c-4315-94c1-a7ca8e32414e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf87f1a-b073-43f8-844e-32e231b572e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31157496-773a-42d5-89f6-df50fd302c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca28689-fb33-4f1d-9b9d-0cc88ea61622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb480d-f887-4608-ad5b-b49cebdb9a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91774ce7-bccd-4890-9d03-88dc26aa199f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841a5ea0-efa8-4cc7-9473-d9ea06c96142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652ba793-3b0a-453a-82ab-e983d5518d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8662e4a0-420e-4d95-b47c-3e5e398cc5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b0c701-d44a-48f4-8533-9a90e40bf45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8640a75-1c78-4fcc-927c-835b657af183",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49a764-0156-4c7b-8a9a-17cdd5ebd345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e43f12-202e-412d-bada-f4115e52d84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686efeaa-2738-4a3e-9165-66800f355347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050d51b1-aa05-4c04-80a8-dd92e905accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b81a0e5-a515-4a75-ba38-3318e30c439b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7e1dbc-7744-4b36-a973-d48b13731c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792ce301-92a4-46df-9875-00f0b8bdb753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74694f16-87f3-4e70-b335-bd0b6d307c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4ebd70-4993-4487-b791-cd82ba904956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f75281-46d1-42f6-8155-dcd90dea7a65",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6ff02f-ad28-4a97-999b-ad92ce6c7a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cf4538-802b-4f16-8f72-a8348745415e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43027bc8-6ea7-4f74-8624-8b7bd9463b3d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a62b2f6-8c83-4024-9473-f27b4b3c26db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afecc0d-ad33-4444-aad5-b0a7589b5b7b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ad2903-345a-4652-85ac-83e3cd7e5d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5de9032-3ca4-418c-bd5d-1c5c7a03e9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096c8a32-1d08-4806-98a0-05caba9b5a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689d3fc1-0bbd-4188-b284-1cfecacfa355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb27bcea-1ecf-48a1-b8dd-bd100bc5f784",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc4aec4-d13c-40be-820f-427d082ab758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4265db37-3d67-4fa8-8093-93385093aafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43768331-ae8c-41c7-8f68-7ee5fa55e054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3194b19-47c8-4551-935a-a0a9dbc3c367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc37db9-06ca-4191-af33-85cba67a89fb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f02e1-ad6e-480a-9126-7904aef539cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5d9b4f-c1d4-422b-bb91-4e244ca9076d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4e0be8-73ae-4fdf-b2ce-5597263b962e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e876d97-4c90-49d6-9935-ff705a20d153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b51ba4c-5173-4ca3-a045-a720466cc525",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7052d95-fb7e-4793-ab74-20896bfc4f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063658b8-4017-4243-ac2d-67eb09e05270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd948ddf-bcaf-45b1-bed9-26f1ebf6538c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf648eb-966f-42e4-83af-41fcad1c3e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cd1841-89c2-4b23-a315-e6534b4595d3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a693ca-1e29-4d69-b549-d353aed9df7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76acd76d-6a4d-4d27-9e79-7bbf54609a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0621f42-ef05-4331-a16d-95c0bf25e88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d0d2ea-8605-4eab-bd9c-3e0ba4d15416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce965cb-9abc-47ec-8b3e-43a25607231a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a0ec1f-1442-4487-a179-25113aef9f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2feed83-6e5b-410b-8eb8-4cff4659341c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15c4135-0699-4a92-9cfa-147bbf5c2c81",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4230c1-791f-4f02-8260-36d472c67a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391df77f-cae3-41f3-9acc-7834412bdb7e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7d88bb-a3be-4c17-845d-8aa6d6edcafd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6562b417-9a61-411f-a49c-8633044956cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbba747-7255-4e67-b436-8329e04da22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89c7693-2c88-4648-87e8-638a78a81cd6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5567e49e-789b-4fa9-9a59-ea375ed31961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794b2cad-2213-43a8-bf13-e60bbd41ba3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "822e0169-d3a1-45ca-bdb4-d8f2a1d728d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f79a8fda-20b0-4f11-b215-9c64f9643cad"
                    }
                  }
                ]
              },
              {
                "id": "0c084392-193e-487a-a2fa-0718087d9013",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d528e32a-92c1-4431-9311-57ab6dcfcedb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82beefe5-460f-43bf-948e-36e3fd5774ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9d55a6b-c9e9-43bc-bf0c-0cbfd814c34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7977a982-5ce6-4c39-8c7d-be47c1ad7486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9def5ed2-6daa-4ac3-a41d-da7416978e4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a657f7-ff6f-41b2-bba0-5c73a9a8b6ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd73d90f-66b8-450a-b527-973ce996f6f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c4f9b4-b52c-4387-bb19-427f7089cd7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed2b61c5-8f24-4a3f-be24-10e5cb248e33"
                    }
                  }
                ]
              },
              {
                "id": "24cc6282-80f1-434e-a420-ccbb0ff87fd8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c2d835fd-d914-4d8f-9166-b5b1017a624c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2a7f09-54d5-4e87-b5a7-7fb45514a0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0e656b02-653d-4fdd-826d-57f66d3f1284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a89c1a-8502-4233-ad49-6bbbd6760cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18386bf0-e4c2-4b7f-936a-d720bed6ab81"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b397ae0d-a6b9-490c-b62b-21cc87a2f546",
            "name": "Positive Testing",
            "item": [
              {
                "id": "634e8856-d476-4fa2-a65a-ffaab508cf88",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96b216e5-0e84-4d78-935d-d258fcb3bcff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ea6fbb9-1ded-41bc-abe7-a7e6df253689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1062543-faf5-4a7e-97cb-51cb76f7de0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b53e7426-f99d-43c5-a379-80bd2a27506a"
                    }
                  }
                ]
              },
              {
                "id": "ab2bb21d-3072-48b3-a7ce-547d00eb74a5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1978017b-73ae-4220-bf01-ee71e2674db6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f01aa06-b15c-47fd-8acf-5e2209e30947"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a40d2ae4-9b1b-4982-814c-6a81daba8b93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c18eab-a873-4533-bf28-07f40cbcc2fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced7d6d7-1d14-4830-841e-d7a96de4f012",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a184d573-4f91-4ced-bc5b-fded373776b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "651d6848-8e8c-4f0a-80f0-44dbf757cb8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "addd2c88-22a3-4503-bbfd-d0ec4d17dd07"
            }
          }
        ]
      },
      {
        "id": "3bee86de-ecef-4e5c-9949-8ffd1435c8c9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "87b45513-c7c6-4a21-9386-e3aef22a4db7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec20bc98-49cf-42d0-b0f7-a580cd5096d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38779b47-b023-433b-bfa4-3e5470037018",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bba9eb5-b7b7-402b-96c5-973fb4ad4d3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d138f331-bf8c-42ab-b030-e19ddb42c5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f22c095-dbec-4a5d-9943-979b5a85c148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "933abf72-b735-4662-844a-2760b8b27981"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6caa8963-e56c-48b3-8d90-aa351cd72390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db2815a-7d49-47fd-a8f4-90d9ba4ca659"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "146aa873-32ca-40b0-9591-31b923d6860e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3d7c4fa-2273-4e2c-9579-cc618616811a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1fa6a04-5f90-44ae-a00e-91c0caa542c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "30e27f0f-80b8-4375-80fb-4c5e33b7104c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa546cb5-e15e-467d-9598-f2bb33cf8660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "150f1d97-4454-4505-833f-88fff5a653a5"
            }
          }
        ]
      },
      {
        "id": "7de6ac68-4c2d-4584-9381-7e0f5812d2f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "511b7f13-e242-4c58-bf5b-465d1717dc7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d32a09b-af83-4dd3-ab7d-e4fbeb0123e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83f46927-45cb-4aee-bc66-08469e7ef9a2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30df7b4-33d1-4385-b46a-39713ef2ac51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71ccdef9-4a4b-4097-93a7-8cd683763f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501df5cb-3e87-4f09-9e15-31e625281f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bbf53d9-5dbd-4154-90f6-a16c47d6c970"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b2bce7-cbe0-4f30-b491-88e86dfa0e3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d2ed181-6fb2-45b9-89ad-e1ace18aaf16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c285be77-9467-4ed8-a843-b046fa456398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37878851-9950-4b70-9f85-301737d7245c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1282841b-035b-4e81-95c4-4612de532c36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "286aa8a6-7b8d-425d-a2e5-e03892bc5955"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0c45c27-6b97-4b24-8da9-36ac4824f138",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f05cbcc-11e6-47f2-973c-0f1592f69d1a"
            }
          }
        ]
      },
      {
        "id": "d521cd5b-7faa-48af-80d6-95f9ba381bc1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "be4264ad-ef81-4f53-98e9-b4963258b74b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70c7273c-c86c-4bf5-a516-540eb23be379",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cc39351-34fd-4765-b495-18a3f36ade0c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19403a6-24fb-4ccc-8d10-1d693ef752d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9c423e6-938b-4fe3-b078-4de20823bef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d982a3-d1e0-408e-add3-1362571a43d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf1192e6-8dd6-4466-a92d-04cc66274098"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a6d831c-1861-4527-af99-d6adcf72decd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "753056d2-d9bb-439a-80b6-9e97f694188e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07eccbc7-a170-423d-a780-425912542257",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18c87d36-6ff9-4310-b471-19a9123b3e62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "274b2b37-7769-4fea-be7d-c3bdde80ecec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c420e6e-3d1f-4146-bdcd-a4bf281d971a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b00808-4963-433b-9d00-dc7789cce606",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4262a017-34b5-45ee-939b-56ff56cfbe25"
            }
          }
        ]
      },
      {
        "id": "8f7c7645-6539-4fb7-adc9-493f01db232a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e7a4067-ff82-4164-9915-e25e72ff24ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80b3d9a0-6f6c-4809-a67d-6d09584b283c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3026e34f-ca26-407b-a354-840e67a3c968",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2659453a-c48c-4f6d-b2ab-5aa43bd38902",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19df3179-f119-4607-bd02-f83ad6d15cf1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 104.5964912280702,
      "responseMin": 11,
      "responseMax": 9849,
      "responseSd": 623.3149315132264,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709512481709,
      "completed": 1709512520734
    },
    "executions": [
      {
        "id": "296f0f16-6a22-48ad-9acd-37d891b920d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b6e745e4-9125-46a3-ac6e-bb8060f2da48",
          "httpRequestId": "05d802b7-1a17-44c6-bd69-5a3554fad25e"
        },
        "item": {
          "id": "296f0f16-6a22-48ad-9acd-37d891b920d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a9cf3530-af5f-4acb-a97f-f98b6d2522e9",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "f82774f9-8324-4703-8c79-5812e4c73dec",
        "cursor": {
          "ref": "312b87c5-63ee-441f-acc1-767ff6404c8e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab9cc171-e859-4703-969c-511c60b723a6"
        },
        "item": {
          "id": "f82774f9-8324-4703-8c79-5812e4c73dec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "060e10fd-57a6-493f-af02-c9c7c9bdec42",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "adf8075d-8c0f-4540-9518-fb5c2a058084",
        "cursor": {
          "ref": "89a18c3c-bcb2-4287-a069-3c257bc352db",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "97983c06-a165-4e75-8de7-22f922bbc673"
        },
        "item": {
          "id": "adf8075d-8c0f-4540-9518-fb5c2a058084",
          "name": "did_json"
        },
        "response": {
          "id": "e3afab40-5c0f-4d28-8339-b00caa5c7d33",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46117b-8a9e-4a80-b26b-ed17251733fe",
        "cursor": {
          "ref": "bb992af3-115c-4573-9ee4-e3cc14e67929",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80bba3cf-c3d9-410d-ae67-28953327a963"
        },
        "item": {
          "id": "ac46117b-8a9e-4a80-b26b-ed17251733fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d3d8c2d-5343-4f38-abed-f35c39e1273e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 816,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46117b-8a9e-4a80-b26b-ed17251733fe",
        "cursor": {
          "ref": "bb992af3-115c-4573-9ee4-e3cc14e67929",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80bba3cf-c3d9-410d-ae67-28953327a963"
        },
        "item": {
          "id": "ac46117b-8a9e-4a80-b26b-ed17251733fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d3d8c2d-5343-4f38-abed-f35c39e1273e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 816,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a815122a-57c6-48ba-b89c-eb8324ea0fb0",
        "cursor": {
          "ref": "367c0b44-4f35-4fac-b286-01e0896b3103",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "76a515bb-1fb0-4aa4-a669-e0db9d2b69e7"
        },
        "item": {
          "id": "a815122a-57c6-48ba-b89c-eb8324ea0fb0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d85416ff-15b6-4cbc-8681-823317aa2c4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd42ce4-03c3-4614-a75a-4cee3d9f76d6",
        "cursor": {
          "ref": "a12721de-5781-428b-b154-0fbe8367eaf2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c1f65e15-5aaf-4b4e-b250-1e77f993f887"
        },
        "item": {
          "id": "7fd42ce4-03c3-4614-a75a-4cee3d9f76d6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0f74d3ed-9799-4bd7-ae45-b82d6600c70a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ea7e07-92cc-46cc-ae89-da6bb1d076b4",
        "cursor": {
          "ref": "93eb5574-77ba-4d3b-8445-0cd6e8f79292",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fe4c44a2-9308-48aa-a41b-bcd9aaee0036"
        },
        "item": {
          "id": "81ea7e07-92cc-46cc-ae89-da6bb1d076b4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d10aebb-e217-4683-aa96-8fa8b40356a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f655b013-22fb-4cc4-8aac-a4dcc175c636",
        "cursor": {
          "ref": "389a5480-0698-47d7-8ab5-e892432fe097",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8097d656-21f8-4825-bcaf-e819518d0bba"
        },
        "item": {
          "id": "f655b013-22fb-4cc4-8aac-a4dcc175c636",
          "name": "identifiers"
        },
        "response": {
          "id": "d33be84f-3a57-4683-a98b-0b7fbe38d489",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4bc121-7957-48e6-add5-77999bd00f4d",
        "cursor": {
          "ref": "4bc5f56a-f7c2-4c9b-a0a2-5b70ef9087a2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ddd1e84a-a9bd-4a48-819f-5cdd151ff48a"
        },
        "item": {
          "id": "ee4bc121-7957-48e6-add5-77999bd00f4d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c19195ec-7484-458c-9cbb-ed376b093c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd2df4b-9d21-4442-b38b-bdc13442f227",
        "cursor": {
          "ref": "28b6ad2f-ffe7-4b42-a775-b0bda42fef4a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "01478541-136b-495b-b32d-916ae86fc0a9"
        },
        "item": {
          "id": "6bd2df4b-9d21-4442-b38b-bdc13442f227",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4247f8f7-cbca-4b0b-b908-350b6fc6b379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3fff56-04b2-4984-9782-566525061529",
        "cursor": {
          "ref": "0a0e9f1a-2fcf-42c4-8746-1c469e3bff81",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3e04964d-8aef-498f-b671-525279a9e7d9"
        },
        "item": {
          "id": "bd3fff56-04b2-4984-9782-566525061529",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8bd2a586-738b-4b40-923e-d32bb0eadf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf5cb7-8158-499a-aabc-5082251eef1b",
        "cursor": {
          "ref": "c4902793-cd2b-43aa-9acf-553d6108f709",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af9132ee-23dd-4a10-9cb4-9b02cfd27dfe"
        },
        "item": {
          "id": "22cf5cb7-8158-499a-aabc-5082251eef1b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e177d170-3f07-4e86-9a23-a7addfac785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871afb77-f61a-45a0-bf86-89da33ae343c",
        "cursor": {
          "ref": "062badb1-93d9-42d5-bcba-94520548d92f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d10e1abe-1fc8-42df-8172-5de1a994b993"
        },
        "item": {
          "id": "871afb77-f61a-45a0-bf86-89da33ae343c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fe910bd4-d5dd-4b70-b3fc-5a89dc780c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b968caaa-55f7-4a11-8a86-a75cdd7e24e6",
        "cursor": {
          "ref": "9a486934-1bb8-48bb-921f-6441e4c7460b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00885e21-b70d-4daf-bcd3-458c90695bfd"
        },
        "item": {
          "id": "b968caaa-55f7-4a11-8a86-a75cdd7e24e6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "47733da5-bd82-4136-8ce2-c88178385614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab5cc04-fdfd-4222-b6df-126cf2da2f62",
        "cursor": {
          "ref": "ff4bd564-ae4b-4ade-b979-9bcf495a1fc4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "09cc3ae2-51a4-43ba-a33d-dae61c2bb0e3"
        },
        "item": {
          "id": "cab5cc04-fdfd-4222-b6df-126cf2da2f62",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f9f8ac9-92fb-4ac2-b254-8095644e1449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c1961-fd3b-4afb-84f1-1599bcb231f8",
        "cursor": {
          "ref": "8e43dc69-bcdb-4e87-84ce-25dc44063584",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a16da9ad-2a97-4915-91a6-51c455ae5104"
        },
        "item": {
          "id": "c92c1961-fd3b-4afb-84f1-1599bcb231f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fa0cc727-73b0-414c-914f-a2ad9945e2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5614df-c7cc-4bd6-bf72-1048cd49f919",
        "cursor": {
          "ref": "c7869c29-c14a-494b-a2e1-851c74879aad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4de8c3cb-69a3-4f80-8c47-a2dc588aaa4e"
        },
        "item": {
          "id": "4a5614df-c7cc-4bd6-bf72-1048cd49f919",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95526980-a9b1-4d7c-a41d-50695e53a11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f004ea-7e90-4664-b4c4-7c678e653a93",
        "cursor": {
          "ref": "6d351704-a46b-415a-b167-3a2dc091482a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff6f0615-b2fe-4dc2-b46f-f8aa4b19c3fa"
        },
        "item": {
          "id": "a6f004ea-7e90-4664-b4c4-7c678e653a93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1ad0246-b1a6-43a7-b67c-6ed631f7f44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5522db-cca2-40f7-896c-48c4828e43f6",
        "cursor": {
          "ref": "b623f01e-d4e0-430d-b3b8-f7d0801a3898",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d4c32c23-0da8-4c51-9c48-a7f3e2ef3d3a"
        },
        "item": {
          "id": "8b5522db-cca2-40f7-896c-48c4828e43f6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d012ec2b-d61e-40d4-8c58-0062f106b526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8416349e-3bab-4201-a15a-673ca7b13351",
        "cursor": {
          "ref": "e865eb1f-be34-4809-a445-2963e8413f39",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c3e26038-57c7-4317-a919-e64a88754fee"
        },
        "item": {
          "id": "8416349e-3bab-4201-a15a-673ca7b13351",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e0bf6be9-b58b-4e9e-8348-1cbdfaf49a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed02aab-6293-4ae9-ac83-06883c5ea319",
        "cursor": {
          "ref": "c842715c-b181-4930-bc93-00a8e930a0ab",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e328f191-95f9-4c93-9bf2-ad0a31af0d87"
        },
        "item": {
          "id": "bed02aab-6293-4ae9-ac83-06883c5ea319",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ca699cbc-9d80-423f-8dbc-c61b350b2fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c55b565-c2cc-4e67-be9f-dd0dc168c35d",
        "cursor": {
          "ref": "ffe1524e-b94b-489d-b65b-98cc99919776",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67f5c321-db1f-460f-bdf6-a5d66674d791"
        },
        "item": {
          "id": "1c55b565-c2cc-4e67-be9f-dd0dc168c35d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "81fa34d6-624c-496a-be09-195ecf25cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eb8856-e4b6-4ac9-b452-c0c9a7adf3b8",
        "cursor": {
          "ref": "cb937017-0cf8-4561-97b9-d04ad57243ab",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb6c9c0a-75ac-491f-ae0d-1fd926d1ef02"
        },
        "item": {
          "id": "13eb8856-e4b6-4ac9-b452-c0c9a7adf3b8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ed87d90b-e748-47a3-9595-298b25e84c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d1bdbc-556e-4682-a5b1-02c87bdfdcea",
        "cursor": {
          "ref": "26501f42-2adb-4dad-ae1d-aee71ad70b6a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6cc2710c-9f8d-4886-93db-6efeb9cd7833"
        },
        "item": {
          "id": "b0d1bdbc-556e-4682-a5b1-02c87bdfdcea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "22e6ba01-4795-4297-87be-62681626f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2efcf-bc94-4e1d-aaf3-1bba2f66094a",
        "cursor": {
          "ref": "ba120f94-5bc6-487f-ab9e-13d242681f5e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ba599972-86b8-4581-a1f1-b731595383bc"
        },
        "item": {
          "id": "16e2efcf-bc94-4e1d-aaf3-1bba2f66094a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0e3b5bf1-1553-4231-a577-ec333c254f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2867369d-ab60-48d0-afe3-37ec54c2ee40",
        "cursor": {
          "ref": "fc8f8de3-4ca6-4118-b46e-78a83a040479",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1b56292e-649c-4ee1-9a59-2b986355748a"
        },
        "item": {
          "id": "2867369d-ab60-48d0-afe3-37ec54c2ee40",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7197b6e3-d927-4e20-a053-2d6b737c3d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c29dc-1335-4101-b381-42cfaf7a8f23",
        "cursor": {
          "ref": "ffea5e4c-f54c-4415-afbf-4d84276a692b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "01410d94-12b2-4c98-9012-d29e2a225e6a"
        },
        "item": {
          "id": "550c29dc-1335-4101-b381-42cfaf7a8f23",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2075c712-d234-44ba-a96c-1eb58f932de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b87cd3f-c325-4d6c-8ab8-ed4931a9121c",
        "cursor": {
          "ref": "1a100f04-78df-4048-99c8-0b0bcec6257d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c900f880-f58a-4deb-96e0-41124e8d81e9"
        },
        "item": {
          "id": "7b87cd3f-c325-4d6c-8ab8-ed4931a9121c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "89d42d1d-4af3-48a9-8f5a-877bb70d3b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e55391e-9ad5-45ad-9f4a-8838c05d1596",
        "cursor": {
          "ref": "25d59111-66d3-4201-9cb8-e88cca6ba5aa",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d74296e6-e0fd-45b1-b592-0fa8f4f97bc6"
        },
        "item": {
          "id": "2e55391e-9ad5-45ad-9f4a-8838c05d1596",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "77febad7-6f92-4b7c-8a25-678574143c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b2b717-4f08-486d-89cc-ba2bf65cca6c",
        "cursor": {
          "ref": "2a3985f6-35d0-48cf-91da-e531268be96c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6f39b3b8-2538-46d4-851c-fc340a1430d2"
        },
        "item": {
          "id": "a2b2b717-4f08-486d-89cc-ba2bf65cca6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f8f16ad9-f7bc-4cef-a739-4caa19daa624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47157c65-1b33-42b8-a20e-2d677ab0c581",
        "cursor": {
          "ref": "0ec1906f-db4a-49ee-b42c-97218286e726",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cdb02761-52c5-485f-8b38-53e58eb1040e"
        },
        "item": {
          "id": "47157c65-1b33-42b8-a20e-2d677ab0c581",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "94f9d815-61e2-4f6b-b870-5fbbdad5a9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6b9781-5941-4808-823e-1f5666edf1ac",
        "cursor": {
          "ref": "655e934f-b6c1-4264-8f5d-81997aed821d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d75a8e78-7c73-4b33-9d0d-02aa794bc023"
        },
        "item": {
          "id": "ad6b9781-5941-4808-823e-1f5666edf1ac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0d5efc39-620f-457f-a0fc-5ec8a72bd4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b142599-300d-4516-b649-14c45b9c75a2",
        "cursor": {
          "ref": "c9c1d6d2-f66e-47ad-b654-953fbc5c2af9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06657e44-3a20-484c-b31e-f6ccfd22252b"
        },
        "item": {
          "id": "6b142599-300d-4516-b649-14c45b9c75a2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "291a8bde-96d9-4e7b-9a16-ba783d32c1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5891911-b9a7-4d53-9c76-e872fdd09cee",
        "cursor": {
          "ref": "2300f90e-1c34-4c08-8b2a-fac3dccaf983",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f32d517a-f9dd-471e-a1b4-6ec53d760de7"
        },
        "item": {
          "id": "c5891911-b9a7-4d53-9c76-e872fdd09cee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8eba3e73-b3a7-41ea-a424-101a9abf86a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4ac44a-bb57-43a2-8ba7-3ebabd226dc4",
        "cursor": {
          "ref": "c6624dd7-a3c5-4420-8534-90002c6e587f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3c74057-1b8d-406c-a161-20965eda0ac9"
        },
        "item": {
          "id": "df4ac44a-bb57-43a2-8ba7-3ebabd226dc4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "41fc0e09-5c3e-45be-92c4-174a7cae7033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176bdb37-1992-470e-949c-cc0848e35f68",
        "cursor": {
          "ref": "c9765a2d-74c3-47a3-8c6f-7b65f0995130",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06aa9104-931c-4523-8696-61b038426887"
        },
        "item": {
          "id": "176bdb37-1992-470e-949c-cc0848e35f68",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78efd43b-3020-47fb-b099-00d8f7dbc632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a4bf7a-e237-4bec-ab40-aa436cf4ccf8",
        "cursor": {
          "ref": "1c915fe8-fccb-4075-921c-1242c20b1a6a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e58c292f-6506-4b82-9c68-4e0b92eb1430"
        },
        "item": {
          "id": "c0a4bf7a-e237-4bec-ab40-aa436cf4ccf8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "613b7f03-2131-49be-ae31-13e65baa1e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf6cc01-ea52-4deb-befe-260ec2e0a1b2",
        "cursor": {
          "ref": "64fc3b78-ab34-4d7a-ae46-e0a5fa1e98e8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0ff91ffd-8cf2-46df-8860-44d9915b7be6"
        },
        "item": {
          "id": "bcf6cc01-ea52-4deb-befe-260ec2e0a1b2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1fee9cec-9cdf-42c7-959f-3687dc6653b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c59e4-a2b1-4b60-b46c-a34cc6252be5",
        "cursor": {
          "ref": "d03498bb-4222-4831-ae44-02ba67456bfb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "07812b58-d2c2-4e9c-8177-e060b05d1353"
        },
        "item": {
          "id": "0c5c59e4-a2b1-4b60-b46c-a34cc6252be5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1f6b63a-af4f-4193-8d5a-efd3bd660f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811bb888-f031-4f5f-8c6f-c87703933729",
        "cursor": {
          "ref": "bd160c79-4c5b-4899-8c51-48b2a2941560",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3cc49117-cb77-4585-8fb4-4d4af741bfe6"
        },
        "item": {
          "id": "811bb888-f031-4f5f-8c6f-c87703933729",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5e206e80-e662-4244-a104-ab56f8733ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad959020-f319-41f6-99a5-a5cb6064178b",
        "cursor": {
          "ref": "daa10792-0c77-4400-8cb2-7b7cb46e2b2c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a72a0b4-45eb-4f32-9725-918d8f0f2634"
        },
        "item": {
          "id": "ad959020-f319-41f6-99a5-a5cb6064178b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "539a2515-319b-4a52-9b70-c00d446e32de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354d32a-cada-4cbd-81b0-2788a08cf7c5",
        "cursor": {
          "ref": "770dc208-7297-41a1-92a0-9c9ee0870f2c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c6c9921b-9dcb-4599-a723-ada70668e76a"
        },
        "item": {
          "id": "7354d32a-cada-4cbd-81b0-2788a08cf7c5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5d5875f-c841-4bbb-aa96-2a6549163b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a3468e-a85b-43bd-a5e4-bae27adda80a",
        "cursor": {
          "ref": "94291eeb-4c51-4152-9319-5906a251ad8a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55bd4251-413e-40eb-982f-5a0fa19f2ad0"
        },
        "item": {
          "id": "67a3468e-a85b-43bd-a5e4-bae27adda80a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f1e9fe3-77dd-49ca-bce7-a42968e740d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844be8c-afbe-4f7a-b38b-2fdcb58b74f4",
        "cursor": {
          "ref": "3661200c-e557-4463-829a-eef05dc6c190",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "53a6e92d-d731-4133-8291-452923458dcb"
        },
        "item": {
          "id": "5844be8c-afbe-4f7a-b38b-2fdcb58b74f4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7ea4f1a6-1b43-4d14-b7e3-8d485cdd1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03744c-a04d-4265-8680-8ed87d6190b4",
        "cursor": {
          "ref": "b64908bb-10de-4d4d-93f9-da8288b2916b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2de274da-3271-44c3-9f6f-cae2735b24f1"
        },
        "item": {
          "id": "1c03744c-a04d-4265-8680-8ed87d6190b4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b17e9c75-ab9b-467c-9d5f-ce5ebe952c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4aa3a-b0fc-4955-a3a5-6235bad55f22",
        "cursor": {
          "ref": "9b5e9aad-7c5d-486e-a048-7e115e051760",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1fd54a0-b888-4c4c-a3d4-54a6d95a2fe8"
        },
        "item": {
          "id": "87e4aa3a-b0fc-4955-a3a5-6235bad55f22",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2758ae2c-a118-4815-92e8-96258e838b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a3306f-57b2-4808-855f-09cfd7a85938",
        "cursor": {
          "ref": "2b778a44-c295-4dd2-adb1-4a5beb9358e4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dec61c37-8c4c-4c28-ad9f-7ee0fe355b73"
        },
        "item": {
          "id": "84a3306f-57b2-4808-855f-09cfd7a85938",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f11efd7-3310-42f1-b488-b8a212230f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf9266-d9c8-4337-93a7-ede8392cd484",
        "cursor": {
          "ref": "c5eed56a-f61f-4355-91e1-ef43eaed2c26",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a31a7f67-739a-479c-a925-b85aed0feaae"
        },
        "item": {
          "id": "4adf9266-d9c8-4337-93a7-ede8392cd484",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "95e46d44-08f0-436a-9c99-ceb87df2570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79eb7cb-37a4-402c-ac7a-4129f90b4e1b",
        "cursor": {
          "ref": "80c4a3b3-1d32-4696-ae6d-2fb84839d71c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5a638560-1c4b-437a-b7bb-2d2dc5007fac"
        },
        "item": {
          "id": "a79eb7cb-37a4-402c-ac7a-4129f90b4e1b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "78ebb81d-24b6-4547-a12a-b17705dad252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1d7416-66f8-4616-9572-f9c6ed411787",
        "cursor": {
          "ref": "8eb862a4-c1b6-4cf2-8087-3d68d86829b6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "816e0403-172d-4e1b-92c4-dc41ea4360e7"
        },
        "item": {
          "id": "9f1d7416-66f8-4616-9572-f9c6ed411787",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ad0f383-f737-4d28-b37f-422822f43a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab42f1e-c7ff-4a34-8b89-58c82d02625d",
        "cursor": {
          "ref": "cbeb4360-99e8-409b-b970-8d76ab8aa067",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1c250606-f267-4ee7-ba60-be202a777d92"
        },
        "item": {
          "id": "cab42f1e-c7ff-4a34-8b89-58c82d02625d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "46252b21-25c8-432f-b521-b0577cb75d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb90ff-2ef6-49b3-bd02-85e83598c38f",
        "cursor": {
          "ref": "07339d3c-b956-4bdf-bc53-0ae7afde6b53",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "78c58d4e-bad5-4c45-921e-81157a09e36b"
        },
        "item": {
          "id": "15cb90ff-2ef6-49b3-bd02-85e83598c38f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "309e95ea-dde5-45b5-b007-e2ecb1b4050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9b8819-ff1c-4d84-b957-74724b37efcf",
        "cursor": {
          "ref": "51dce20d-6841-413c-98a9-222c9f6b1a21",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc73bc19-4d22-453f-8221-c023d7d4094a"
        },
        "item": {
          "id": "ff9b8819-ff1c-4d84-b957-74724b37efcf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fd762937-7ab0-464a-84e2-6204a2b4480c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4aa88f-401e-4035-a387-646c1eb24176",
        "cursor": {
          "ref": "fccccf2e-164a-4b7f-8a37-23bd9f86a653",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7fadf219-06aa-4bfa-b1b3-0ff72059c148"
        },
        "item": {
          "id": "ed4aa88f-401e-4035-a387-646c1eb24176",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "57474145-99b8-460d-bce5-d4b094364479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4e8f88-6f8b-4c3e-9d3e-f34b05d18f0b",
        "cursor": {
          "ref": "c047aefe-8261-4198-a637-85da34a28fe8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "83f4f1e1-fa59-4750-9a4b-3892bcae5128"
        },
        "item": {
          "id": "6f4e8f88-6f8b-4c3e-9d3e-f34b05d18f0b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0513f562-1b16-424a-ac53-cc7e2fb381dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d1bc7b-2e90-4c00-8283-a1e64ace471d",
        "cursor": {
          "ref": "220c08db-b8f1-473a-97dc-fc6b98451f5f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d9065e09-41c2-46d8-8404-434aa43bbf3f"
        },
        "item": {
          "id": "65d1bc7b-2e90-4c00-8283-a1e64ace471d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "617afb5a-5b5c-4939-975a-07549d2c98db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164be367-69a7-4857-bf3b-2265444d1575",
        "cursor": {
          "ref": "4e7a0991-77a6-496e-aac5-198423db1361",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d1303038-2023-41c6-8479-5b4115dd5e45"
        },
        "item": {
          "id": "164be367-69a7-4857-bf3b-2265444d1575",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "16f5a583-42c9-44ce-bf9c-35c0ccbf5c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270979b-a51b-48e2-8d2f-9db6e02fcf5f",
        "cursor": {
          "ref": "271ae702-df6c-45ff-822a-afb309d9d89a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c5edf99e-4eb9-41c6-a752-eda3f715f365"
        },
        "item": {
          "id": "0270979b-a51b-48e2-8d2f-9db6e02fcf5f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3fa26dc5-cb63-4dda-803c-a83ca93290f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9b6374-e48a-4037-86ec-b6416377d18e",
        "cursor": {
          "ref": "53a3b484-2192-4d89-b7c2-b13af47e1b5f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "92503f1e-d8e5-4249-ab01-2eff704979e6"
        },
        "item": {
          "id": "1b9b6374-e48a-4037-86ec-b6416377d18e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cafbe93a-7775-4c48-b4b4-37533c395128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac57b92-18f7-435a-95d6-d27b84209079",
        "cursor": {
          "ref": "7ef6b1f0-f1c0-44c6-862b-2ab0a4d27938",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "32b747a8-3ab0-4bc9-8538-a152bbc016f9"
        },
        "item": {
          "id": "2ac57b92-18f7-435a-95d6-d27b84209079",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "45119d15-883e-43b4-bfcf-118c668606c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cb893f-b13f-4230-8153-401aff67defe",
        "cursor": {
          "ref": "53a20aac-0567-4321-8d55-a8bc16e209fd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8b345699-2090-402c-868f-d1c391453fd0"
        },
        "item": {
          "id": "e1cb893f-b13f-4230-8153-401aff67defe",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "20d7acd4-f6aa-4429-8bd8-088e91f04e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a977a-a041-4e7b-a3af-a32b40f6783e",
        "cursor": {
          "ref": "f44c983b-9dac-4f4b-b038-c43b3a6af7b9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d0aa8b2b-4165-4e4d-95bb-56ac39c70604"
        },
        "item": {
          "id": "281a977a-a041-4e7b-a3af-a32b40f6783e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1686a31-e3b1-44cb-aedf-fea69d86c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf17b0d3-e983-4601-a763-bdba67106f40",
        "cursor": {
          "ref": "b77812dd-dea4-44ff-bef4-2c86d55a2d31",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a3e1e0ff-4130-4b96-b3c9-6f210b281abb"
        },
        "item": {
          "id": "cf17b0d3-e983-4601-a763-bdba67106f40",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5759ffd6-5fd3-4b58-9d1f-1cc178f8dcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b9c9a0-9c81-4005-be11-0b10b062d2b0",
        "cursor": {
          "ref": "57342f1e-e5dd-46ba-a89d-d62dcaac1777",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2454b9db-801f-40f3-81e3-ff99959ce05e"
        },
        "item": {
          "id": "c5b9c9a0-9c81-4005-be11-0b10b062d2b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84bfd4d9-a441-4bd7-a96b-e4c0d3ed1c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b99b8e-3ad1-4383-bfc4-e2474be5516c",
        "cursor": {
          "ref": "8726753f-0f0c-44d2-bd2f-af7f39f540c0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86421cfc-b4d5-49a4-8696-898751588f34"
        },
        "item": {
          "id": "f4b99b8e-3ad1-4383-bfc4-e2474be5516c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f0426818-1390-4e45-98c3-bcbde5a18527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639fb705-3511-46e0-a2d1-32a3f4ec8fba",
        "cursor": {
          "ref": "68fc344c-89fd-417a-a33f-bce2f5fa21fa",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "09b5debf-c936-4932-973a-47fafc3d5c3b"
        },
        "item": {
          "id": "639fb705-3511-46e0-a2d1-32a3f4ec8fba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "db53cd7b-0e4c-4139-bc8b-da91cab7b5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75cc88d-383d-475c-a0d5-7bd5674a083f",
        "cursor": {
          "ref": "bd9951f1-186b-49ac-8c22-18893c026a24",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "08694c35-96f2-421a-84cd-1857777ed47e"
        },
        "item": {
          "id": "c75cc88d-383d-475c-a0d5-7bd5674a083f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dbd7c41e-7115-4345-b2cc-38ddee12152e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c87e6f5-2e22-406b-8a15-b1e8aab39096",
        "cursor": {
          "ref": "af3676ce-9522-49c3-87a0-478c78785826",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4cae6e38-dabf-4690-91e5-c6f77bc78547"
        },
        "item": {
          "id": "3c87e6f5-2e22-406b-8a15-b1e8aab39096",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b9d1e4d-2a6a-4ea5-b3bf-79d9911a3fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac605280-060a-406b-98c2-6b0456d60785",
        "cursor": {
          "ref": "91d8d7cb-2622-4743-9447-af0cf9cf50ab",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "80936d7e-f2f9-4bad-aaa8-77e5779467f6"
        },
        "item": {
          "id": "ac605280-060a-406b-98c2-6b0456d60785",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1274e641-1577-42f7-ac6f-fc5840ee97f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dc2ada-e07e-4463-9a80-03071c72edbd",
        "cursor": {
          "ref": "18a446ca-e03d-4b92-877e-f004fc86c914",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b36b7a21-740a-42de-9c73-af4f27d0e684"
        },
        "item": {
          "id": "26dc2ada-e07e-4463-9a80-03071c72edbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8eca76f9-4016-4db4-b323-731e66a892ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73d475e-6b45-4ca6-88a7-5ec06affdf9c",
        "cursor": {
          "ref": "73f8c713-acd3-4e88-a584-fd952472922d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aaffb0d9-c7e0-4454-8966-80a2b656ddd6"
        },
        "item": {
          "id": "d73d475e-6b45-4ca6-88a7-5ec06affdf9c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b9ded0c7-f081-4752-a5a3-5b8dea645ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485ac64b-f21e-49e4-b8b2-980945fcd849",
        "cursor": {
          "ref": "bf862aa5-d24a-495b-a05d-ab54c1b6fd89",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "015a14ed-7464-4a96-b864-bb2ede6f91e6"
        },
        "item": {
          "id": "485ac64b-f21e-49e4-b8b2-980945fcd849",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e7631828-a82f-4b0b-8db4-86c98b47a54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bca7ecd-d7c9-42f1-a896-f636f78e987d",
        "cursor": {
          "ref": "ebcc8b9d-c95c-495f-b06b-4463ca216c01",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "43225de3-dc8d-4c6d-88bd-377fd23cacb0"
        },
        "item": {
          "id": "2bca7ecd-d7c9-42f1-a896-f636f78e987d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a32c9d41-5326-44a2-847f-811a7767fc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d41338-2c2f-46bd-9904-20ee41a92286",
        "cursor": {
          "ref": "1d103526-1663-4df8-9967-7072b55ab3bf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d4b9be95-f9f8-4d9e-8f87-9b1baad53c4c"
        },
        "item": {
          "id": "01d41338-2c2f-46bd-9904-20ee41a92286",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8e5d1353-7562-4616-8682-8abe176d8a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fbe949-82fb-4b69-b934-dcda4aeee49f",
        "cursor": {
          "ref": "c15559b4-a7f3-40c4-8f1b-e33e82133691",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1ff4aa06-1b8e-44b4-84b2-2c1890eca98e"
        },
        "item": {
          "id": "c6fbe949-82fb-4b69-b934-dcda4aeee49f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8546cb8d-6fa3-4963-a290-f1d6a3eee3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0c5e4-00e7-477f-b0e0-6eb68a0a92c3",
        "cursor": {
          "ref": "c4e6e0b3-c3e2-4c86-9388-6f2fad161855",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "365ab47d-d141-4aa8-acea-c6b0bd814294"
        },
        "item": {
          "id": "0ec0c5e4-00e7-477f-b0e0-6eb68a0a92c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "00c0abc6-663d-4bf3-9e61-763f81ee37b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbbeafb-8e7d-4473-a34d-eace25a1637c",
        "cursor": {
          "ref": "d3d9685e-f233-452f-b1f1-f2cf930d5857",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "86d00ed0-9d87-4fae-9f47-9977b2ae28ca"
        },
        "item": {
          "id": "6bbbeafb-8e7d-4473-a34d-eace25a1637c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "643818d0-08dd-48af-8458-48a0420cec77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b830d5d3-28d7-49c2-bc43-13c051bb583b",
        "cursor": {
          "ref": "59f544f7-65f7-457f-806f-0ef113828b05",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6bc71cbd-c9fe-4dde-8395-ec666726927e"
        },
        "item": {
          "id": "b830d5d3-28d7-49c2-bc43-13c051bb583b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ea157c9-b7d2-4850-aeec-7c0a1cbc2bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff66f05-bc22-4124-9143-7098dec8b24c",
        "cursor": {
          "ref": "9fe1ed66-260e-47ca-82e9-a2a998e7d675",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b89beacf-7b56-4dae-a54d-8f34d197438f"
        },
        "item": {
          "id": "6ff66f05-bc22-4124-9143-7098dec8b24c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "567a0864-a26b-4d52-a32d-bbd9f2be4ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f32eb1-e826-45b6-ab57-d518da414956",
        "cursor": {
          "ref": "a2b74bb5-272d-4992-ae14-dcd67abceeaf",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8fbbae19-8e45-41ec-9602-faa891e1fcfa"
        },
        "item": {
          "id": "33f32eb1-e826-45b6-ab57-d518da414956",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f524476b-4c20-47a5-a936-bf19c7d2784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a686d55-2d39-4ac1-9f51-90daff2f7317",
        "cursor": {
          "ref": "cbfd34e8-fe0c-4e4a-b1da-34fc02acc74c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cce7a495-d59e-41e2-aca4-debad8ef8118"
        },
        "item": {
          "id": "4a686d55-2d39-4ac1-9f51-90daff2f7317",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "594ea8e6-f0fb-4fc1-b060-a06890ad75a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b7feb8-ec3d-4fc5-a9ab-a52650ef68a4",
        "cursor": {
          "ref": "8c58d04d-1ef2-4c2f-b223-9d394ee8da18",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "883ea15f-3110-45fb-8fa4-8841bc4acafc"
        },
        "item": {
          "id": "f6b7feb8-ec3d-4fc5-a9ab-a52650ef68a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c463ae5f-d77f-4d91-90f0-98ec27a62a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f641b7be-ace4-4119-8068-40e5adf83302",
        "cursor": {
          "ref": "72ea1455-20b0-44fa-9b96-a69729423c69",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b2482f0f-dcbb-48bb-b70c-1e92ec6cf35b"
        },
        "item": {
          "id": "f641b7be-ace4-4119-8068-40e5adf83302",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c797a9d-5408-4d79-b892-efc1b9476c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d0cb76-92fb-4186-8a87-d14a2f502ac5",
        "cursor": {
          "ref": "eb2fad72-8902-4c43-a6fb-9b2533863962",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f127e838-5d5f-4b14-8e9c-737d5cf13c06"
        },
        "item": {
          "id": "b8d0cb76-92fb-4186-8a87-d14a2f502ac5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2ed61911-a2be-4300-a2d4-7e4184cefa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d23657-1a71-4e46-85f3-70734f834028",
        "cursor": {
          "ref": "6e25444b-8bca-4a40-afef-767628c82aeb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb0b973b-53c1-48e3-9033-19f9044027a6"
        },
        "item": {
          "id": "46d23657-1a71-4e46-85f3-70734f834028",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09b514de-202e-40a0-a6d7-4e5cca901d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7f4c6c-9350-46e6-86cf-2f389febf514",
        "cursor": {
          "ref": "eb8e6183-d071-4407-893d-9349552f2759",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd02d906-71d3-41c2-a7a2-de7a82ddcb73"
        },
        "item": {
          "id": "cf7f4c6c-9350-46e6-86cf-2f389febf514",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d5f7d59-33bd-4448-bdea-091274b38caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6080f3-f7ed-4ea3-9b4a-bff9f12a0546",
        "cursor": {
          "ref": "5182614f-326f-47a8-a401-37502ac187ec",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cba8224f-a7b7-4b94-9901-8ba82acb63f8"
        },
        "item": {
          "id": "8a6080f3-f7ed-4ea3-9b4a-bff9f12a0546",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5275684e-f376-4cdc-8502-9cce415bdab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8016da43-0396-4acf-8a6d-9af29850801e",
        "cursor": {
          "ref": "029385ba-6f07-4322-b881-15922e1abf9d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "41a57edd-a655-4847-af7a-8df7988c4d10"
        },
        "item": {
          "id": "8016da43-0396-4acf-8a6d-9af29850801e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e11667dd-f877-4e28-94b2-4bcdb4238ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5574a1-1855-4e28-8ab6-3150a9327549",
        "cursor": {
          "ref": "0d836062-b832-4012-9d31-3c5145be98ae",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "29dc49de-bad7-4a7b-9ecd-d9f4aee3d829"
        },
        "item": {
          "id": "dd5574a1-1855-4e28-8ab6-3150a9327549",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "835adb89-9a32-4ce3-ab8c-e02a742cd371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23a1f87-f429-42f5-a5a2-ea4974094939",
        "cursor": {
          "ref": "f7e2dcd5-c050-4776-9076-27c82f4ef386",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "441d3452-16b1-4699-a3fb-b72a52b6330b"
        },
        "item": {
          "id": "e23a1f87-f429-42f5-a5a2-ea4974094939",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5f391c77-6c5c-49cc-986c-440e65707e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69720289-ec69-463b-9dc6-72104545ebc4",
        "cursor": {
          "ref": "37ae887a-3077-40f1-b396-95f0bb6b759f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b0695710-1cdf-4e69-8532-83de62278973"
        },
        "item": {
          "id": "69720289-ec69-463b-9dc6-72104545ebc4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dbeaf72d-effb-409c-babc-cd0404d3f469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552b0c45-2bfd-4d48-9b4d-c799c1b8180f",
        "cursor": {
          "ref": "b99e8d24-7213-4550-94d5-7365430efa1a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1d870b7-2e35-481b-bf28-ab62be16e089"
        },
        "item": {
          "id": "552b0c45-2bfd-4d48-9b4d-c799c1b8180f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a932f9e-eba8-4b84-8289-b38ea2fcb246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e16eaa-2882-41ef-9672-228b6b27bf99",
        "cursor": {
          "ref": "78fd92da-ebda-46fd-8d23-3c8b55971408",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21a994ee-227b-4ea3-b40b-7277493948db"
        },
        "item": {
          "id": "66e16eaa-2882-41ef-9672-228b6b27bf99",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "990fc96c-ede0-4b42-bc3c-99797d9f6fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4971ff-f08f-418d-b2bc-3a93955b94ea",
        "cursor": {
          "ref": "63e01e1e-6efe-4acf-93a8-43254aab6c24",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6a78073d-308d-47f0-9408-9655514d1d06"
        },
        "item": {
          "id": "aa4971ff-f08f-418d-b2bc-3a93955b94ea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2b9aa78e-3d95-4335-ba88-7477f60fb77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daa32cc-0c59-4c42-8108-73670018fcef",
        "cursor": {
          "ref": "f8ff4a87-d79e-4bdf-a64b-9b9b973ad11d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9f7892c9-df01-456e-8141-74279f0b65eb"
        },
        "item": {
          "id": "8daa32cc-0c59-4c42-8108-73670018fcef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "258066b6-b2cb-4d92-84b4-76052c1e1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ff22be-20e9-4366-b960-f82e9f498f31",
        "cursor": {
          "ref": "6ab0e4b5-913b-4b46-86bd-416064d01047",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "117340e1-eca3-408c-835d-65fe116b88f7"
        },
        "item": {
          "id": "c0ff22be-20e9-4366-b960-f82e9f498f31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ac5298c4-ad57-4217-a520-6ddd60541cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf18832-f977-4f71-a17f-8288820ec4b3",
        "cursor": {
          "ref": "f2364770-5b87-4fc8-92ca-0f6f88299e7c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "029f2ed9-26a5-49fd-b37f-c3065a82e216"
        },
        "item": {
          "id": "3cf18832-f977-4f71-a17f-8288820ec4b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e9547edd-5cd2-46cf-9cc2-e88a0a902b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb55f5f-9fcb-4cd9-af66-685edca1a581",
        "cursor": {
          "ref": "e6ee0280-aa57-4565-b281-8fa3f6f4311b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3e709f28-7bf6-4f5d-883e-b4fb1505da3d"
        },
        "item": {
          "id": "6cb55f5f-9fcb-4cd9-af66-685edca1a581",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e833a64a-9692-4d97-8063-d3f7e67c3b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae74b3-5580-41e6-b12c-298919e51ff8",
        "cursor": {
          "ref": "c67a943b-46a2-418e-8bd6-6d7133dcdab1",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d9393e08-c398-400f-86f9-2e7c29b2b13f"
        },
        "item": {
          "id": "22ae74b3-5580-41e6-b12c-298919e51ff8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2420db2f-983e-422d-a274-d4d4966fd273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15fb2c8-6ff8-433b-acea-f90fa1e67cd0",
        "cursor": {
          "ref": "f81bee57-6187-46ef-a7db-2b924b6af37e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a31c7cdd-d3df-497c-9f19-505002e547f3"
        },
        "item": {
          "id": "d15fb2c8-6ff8-433b-acea-f90fa1e67cd0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c622a323-a621-4af5-9cec-018998f46925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2df3da8-1334-4d12-9752-e10d69e8ae81",
        "cursor": {
          "ref": "3ae0936a-b55d-4e39-8659-3e9816445039",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "36c43acf-d570-4fe5-9b62-faa917eae9bd"
        },
        "item": {
          "id": "c2df3da8-1334-4d12-9752-e10d69e8ae81",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f9789f05-ec0e-4896-af1c-ab3c7afb929e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720e4d0e-5dac-4907-94b8-bd7d821d13ee",
        "cursor": {
          "ref": "815c7658-5f6c-4bf3-9164-45d154f8fae2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7f939462-e1e9-4690-80c9-abd82d0befe6"
        },
        "item": {
          "id": "720e4d0e-5dac-4907-94b8-bd7d821d13ee",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8ecffc0a-fa57-4343-80b5-6552bf78505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4165a38a-b3af-48b1-b984-442a5272a4f7",
        "cursor": {
          "ref": "523c0a5b-2c91-4935-87e9-850ae7d2af65",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1c0be36-c953-4689-8f3d-0aef742bb27e"
        },
        "item": {
          "id": "4165a38a-b3af-48b1-b984-442a5272a4f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f185d79-8463-467b-ad03-2e758d0139ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e1c53f33-c403-48e5-afb5-2cca93508bdc",
        "cursor": {
          "ref": "7637697a-5e0b-4294-9e26-7c1d53f25f14",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "15170d68-e39a-4268-953c-273c098300b9"
        },
        "item": {
          "id": "e1c53f33-c403-48e5-afb5-2cca93508bdc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79b1ec7d-7243-4b6b-b3e0-9040ac4b8e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "85653515-41f9-47ff-a4b6-356ebb0b6094",
        "cursor": {
          "ref": "3b5e0da6-0321-4c18-abb3-2b3fe65285f4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4a339952-c448-482c-a49c-7f0d6047a26d"
        },
        "item": {
          "id": "85653515-41f9-47ff-a4b6-356ebb0b6094",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a0e1cbf-488c-4230-a246-0bc5c7b3d0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "61405336-9d5e-48d3-bd52-65f636cbfcf5",
        "cursor": {
          "ref": "a06d90d2-42ff-4815-ab1e-83094ead83cc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7703c9e9-e7e9-4dad-a2d9-6222ebfefa9b"
        },
        "item": {
          "id": "61405336-9d5e-48d3-bd52-65f636cbfcf5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "985db879-5690-40f6-bc35-6fd01800bd55",
          "status": "Created",
          "code": 201,
          "responseTime": 9849,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c02ba0-e6d4-41d2-94d7-e0df299f830e",
        "cursor": {
          "ref": "6acb6448-22cc-4338-b398-e508bbc92aa8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "782bb0e7-ffd2-4bfc-a349-af10213df317"
        },
        "item": {
          "id": "45c02ba0-e6d4-41d2-94d7-e0df299f830e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28a5dd23-19ae-421f-90b9-549c77e5a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "db53526f-21f8-4711-981d-dd94a7772e3f",
        "cursor": {
          "ref": "abd576d1-92b4-4c57-a7c9-055ad13b148c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e316cab6-7820-4165-a1dd-9863a24cb095"
        },
        "item": {
          "id": "db53526f-21f8-4711-981d-dd94a7772e3f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41b39c40-42c2-4dd3-b795-285d60076417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6a07e59c-8e1f-4abb-9bcb-ef13c9a4e67e",
        "cursor": {
          "ref": "3961a403-13b7-4fc5-be6f-948da025dc93",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ff78e3b-60e8-4e6e-8e5f-e8eb79c34442"
        },
        "item": {
          "id": "6a07e59c-8e1f-4abb-9bcb-ef13c9a4e67e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd6e7f88-988b-4cac-adbd-d8b46adb7aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f590bad9-ea2c-4be6-b206-8ee18dca60a4",
        "cursor": {
          "ref": "4ff51fff-9e05-4018-9c09-5f28e99968e9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9845882a-ecf2-4a24-83eb-69d6aee99694"
        },
        "item": {
          "id": "f590bad9-ea2c-4be6-b206-8ee18dca60a4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cb6531b-63a8-4bca-a1fc-9f7174ab0b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a505f8d-3f4f-4fee-b326-521dc929ce98",
        "cursor": {
          "ref": "754b8242-2eb0-4017-9f5f-df6f35aba8ba",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e861f06a-a8f4-48d4-ad92-10756a20bf5a"
        },
        "item": {
          "id": "7a505f8d-3f4f-4fee-b326-521dc929ce98",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e6df2ea1-7fdd-4f7c-89bc-c8c655c785c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eca3ee-1ae2-4260-b224-cdf748dfbe14",
        "cursor": {
          "ref": "38d90ca1-81af-48ee-bf17-0efb2193a065",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6e6d6df1-7e88-4086-af2a-e32947f7499e"
        },
        "item": {
          "id": "b7eca3ee-1ae2-4260-b224-cdf748dfbe14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9387f09c-69b5-497c-a3fc-5372f91b9afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4595d1ac-b8bf-461a-9965-72dd8da8fbd4",
        "cursor": {
          "ref": "9611a42e-5ab0-4a23-b66e-10f6ebc26e46",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "550692d4-8ad8-4e8e-ae4a-fc2c59e6233e"
        },
        "item": {
          "id": "4595d1ac-b8bf-461a-9965-72dd8da8fbd4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d18615c1-43ea-49d1-a225-8598b3a7b486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b3bfd-d3d1-42b3-92dd-244dbb2397bd",
        "cursor": {
          "ref": "a6ca4338-f10f-42d9-a705-1349b03a8c39",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50712e95-5a15-45ae-b810-b6bdef2fbff8"
        },
        "item": {
          "id": "3d1b3bfd-d3d1-42b3-92dd-244dbb2397bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "daf57d6f-c340-40d4-b165-4b0c77203e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a6c6cd-428f-4773-9870-f3b369e43c61",
        "cursor": {
          "ref": "ae6eb9c0-4f13-47ae-bc02-297d84788158",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e1e02a77-c1b3-4354-9ecd-06fa83e637df"
        },
        "item": {
          "id": "f3a6c6cd-428f-4773-9870-f3b369e43c61",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43018fed-5b67-4fde-bf96-b05a71b2e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d3915-76d7-42c1-bd01-6f31f5b402db",
        "cursor": {
          "ref": "7c777fae-3bc2-4ee7-afb4-7cc8b296b8f7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b0c6c26-4ab3-4c32-8c73-49710b085b35"
        },
        "item": {
          "id": "f66d3915-76d7-42c1-bd01-6f31f5b402db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6faab18-a090-40ba-ad3b-ed8cbf9f1586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdc5e9f-1e7c-4606-943e-71962bffd3e3",
        "cursor": {
          "ref": "8629e319-a1fa-47ea-8e3f-8cbb9ef47402",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e27c3e39-78a5-41f5-aa4c-923e6488c8df"
        },
        "item": {
          "id": "fbdc5e9f-1e7c-4606-943e-71962bffd3e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "066b1206-4ae3-4d64-9215-9aab1eb71535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02b418c-0721-476a-b2ab-3984aa379d52",
        "cursor": {
          "ref": "b55394d9-a6c5-4690-962c-542fceabbb56",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8549276b-e801-4c49-b653-6cf68132f427"
        },
        "item": {
          "id": "f02b418c-0721-476a-b2ab-3984aa379d52",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d46c362b-0179-43fb-a9fa-121dbd1df665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e51d5f2-3859-40d8-abc1-ff976aaba780",
        "cursor": {
          "ref": "8b306418-93a0-4ce7-9790-667baa78107b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c51ee765-10b4-4b17-a49c-38008242fc50"
        },
        "item": {
          "id": "5e51d5f2-3859-40d8-abc1-ff976aaba780",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e680484-dd34-424d-afc0-af3aa28a1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1d7479-4384-4e21-be7b-a36cd3ab80ed",
        "cursor": {
          "ref": "ce7f7ff0-3b40-4320-815f-dc7974af6882",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f0e3cb8-78d5-4706-ac76-e4530157841a"
        },
        "item": {
          "id": "6d1d7479-4384-4e21-be7b-a36cd3ab80ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c09fddc-1e42-4849-b7ea-f3befe627265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1e57b-8fda-479f-951b-35bd404501ab",
        "cursor": {
          "ref": "c0fb0b42-bbc2-4543-99e1-f8199ea2c094",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "822590ec-014e-4cc8-b2a5-96a2402704e8"
        },
        "item": {
          "id": "e4c1e57b-8fda-479f-951b-35bd404501ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "489803ca-77b0-4c39-98bb-6a635a247b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aeecc9-aade-403d-893f-090ec1659c51",
        "cursor": {
          "ref": "120e9b64-e9e1-431f-990d-cc6dcf6737af",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "719c3c24-f897-4555-9ef0-4117ecf27960"
        },
        "item": {
          "id": "08aeecc9-aade-403d-893f-090ec1659c51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2122930a-a186-44a1-8895-e6eb79b1a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73af6e2-b1b5-4012-91e7-f0ad2d810489",
        "cursor": {
          "ref": "e8b3ff96-38e8-47c3-94f8-34d19a0c2577",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "84e4e259-934f-4071-95fb-71c6df94b489"
        },
        "item": {
          "id": "a73af6e2-b1b5-4012-91e7-f0ad2d810489",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "febf1692-db85-40dc-a2b0-dfb9a0b29a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7380e3f6-dc2c-4c25-9722-8cf714b36875",
        "cursor": {
          "ref": "75240cfb-b179-4198-936f-b03e6152302e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ce467562-9049-4432-b549-34214a83da9e"
        },
        "item": {
          "id": "7380e3f6-dc2c-4c25-9722-8cf714b36875",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d1c0453-ab40-4041-8529-1feceacd6d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640ab17-546f-427f-bc3e-b4bdd18bdbb9",
        "cursor": {
          "ref": "93138168-9e1c-47a9-8217-a3b2f6caaaa9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "80801b63-74e9-42a3-b4cf-d7f55c1b0f84"
        },
        "item": {
          "id": "b640ab17-546f-427f-bc3e-b4bdd18bdbb9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9d182cef-dc74-4012-a278-d0de0276e440",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ad6455d2-5807-4640-83e9-fe4b3589b7f2",
        "cursor": {
          "ref": "ae9d69f8-1932-414c-a0ec-283b2cee78d8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2ae5210-d567-4e73-a53c-b90ba3d89dfe"
        },
        "item": {
          "id": "ad6455d2-5807-4640-83e9-fe4b3589b7f2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf121312-f2a0-4d80-af0b-130a9deed08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087527af-6e3f-474b-be11-0453b9eff669",
        "cursor": {
          "ref": "fe94a5a9-1028-499a-ae92-cc67befc7cc8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "71145138-b1da-4766-a8d5-8da89857e233"
        },
        "item": {
          "id": "087527af-6e3f-474b-be11-0453b9eff669",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e75f8a2-9376-4bfe-9522-b46a4c601f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f35727a-116c-46eb-aa93-c0aef9885e1b",
        "cursor": {
          "ref": "a2c7359b-59be-4ab1-af68-9445d9c800b1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e8323656-0885-4567-a1a2-30c0bb2c9f18"
        },
        "item": {
          "id": "4f35727a-116c-46eb-aa93-c0aef9885e1b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8211905b-741b-4f12-8ca5-ea969a40a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20870231-6499-41cc-899a-5942ca1408e1",
        "cursor": {
          "ref": "5d663f13-c0b3-4790-8d38-d9ce6a382b93",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "446683c2-2dbc-401a-a28b-d445919f74a8"
        },
        "item": {
          "id": "20870231-6499-41cc-899a-5942ca1408e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc68fee0-23b3-4318-bef6-f842f8de9ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c63006b-2e61-46dc-8d1f-86e86691edf7",
        "cursor": {
          "ref": "a06a838a-3870-46b9-8250-657530327971",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abd68c3e-5b59-4f52-8c66-be603f4a548e"
        },
        "item": {
          "id": "7c63006b-2e61-46dc-8d1f-86e86691edf7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c45088be-aa60-45f4-a874-1b087bf6c8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22c7d8-9193-4a7e-bede-326f9666acb3",
        "cursor": {
          "ref": "68c4fbc3-5f86-4049-8793-a5f23b492b38",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a3cacabe-f9d1-488f-b966-cf8e92e1cf44"
        },
        "item": {
          "id": "fb22c7d8-9193-4a7e-bede-326f9666acb3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "128d6a12-38fe-44b8-a198-543d7c23fc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad143cd-e629-4b00-9614-1485042d13f1",
        "cursor": {
          "ref": "9f1373a5-0d69-4520-b367-bc9da21fe0b9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7f04e9d-01a2-4b4e-a16c-e25ff238c939"
        },
        "item": {
          "id": "7ad143cd-e629-4b00-9614-1485042d13f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf51fd05-c7b2-4eb8-8923-3ba7647b514d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b688880-08db-43c7-a91a-a26415f5af57",
        "cursor": {
          "ref": "4fff80f3-011d-49b4-b19b-e8ef612770c8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "373c8976-6f49-4d26-a605-45733208bee1"
        },
        "item": {
          "id": "7b688880-08db-43c7-a91a-a26415f5af57",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5aa6763-049c-49da-b750-81d7f449ac21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a037239a-ada9-4adf-a37b-a1b384566615",
        "cursor": {
          "ref": "26402060-f655-4296-9926-fb0268615de8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6fed8fc2-a9ae-4b10-8276-a9b77d653459"
        },
        "item": {
          "id": "a037239a-ada9-4adf-a37b-a1b384566615",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0e6d7a16-83a4-4e46-94b4-3b16ea149a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5496e44-cd48-4b11-9140-f684e6cbd459",
        "cursor": {
          "ref": "d78b9dc8-d2b4-4c65-a187-342a42e69679",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "742c0416-ebdb-4ed4-a750-27629cf78ff9"
        },
        "item": {
          "id": "d5496e44-cd48-4b11-9140-f684e6cbd459",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed8e9793-90fa-4dd1-8e23-a67010274fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c212df-81ba-43b7-a1cb-89683e415549",
        "cursor": {
          "ref": "0e8fdf7a-46c8-466b-bd73-df4e5d2333dd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eac404cf-9fcd-4b52-a534-4ec55513c5f6"
        },
        "item": {
          "id": "d3c212df-81ba-43b7-a1cb-89683e415549",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "647b84a8-da24-405b-ae74-79b8c614c450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b7167-e07d-458c-8c6a-5d6e2562e655",
        "cursor": {
          "ref": "03eaae46-b2f6-4e6c-b1ab-1989ae728cc0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "12c526fb-f2c4-425c-9740-a6a340ad0ed6"
        },
        "item": {
          "id": "778b7167-e07d-458c-8c6a-5d6e2562e655",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e804f03f-5b29-4d31-9484-1724430d5e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99358660-a246-4a67-8332-61ef6492d21e",
        "cursor": {
          "ref": "f5199aef-b505-4a38-8a3b-ab0fab946731",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "decd10ae-908b-4350-8bcb-335aa75c2cc2"
        },
        "item": {
          "id": "99358660-a246-4a67-8332-61ef6492d21e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5f9e71d0-9a92-48d8-b951-19261ebada73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb4462-a092-4e20-bcb8-cea61f045a11",
        "cursor": {
          "ref": "a6a3dcb0-6dff-44e8-b48b-68192c3b4b70",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f0bc1ceb-9ab4-467d-b9ed-637bb0f74114"
        },
        "item": {
          "id": "1ceb4462-a092-4e20-bcb8-cea61f045a11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "237b2e6c-c7e2-488b-a590-68628e03c8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4aa9ec-0e14-4434-a7e5-5b22bb2d2fc3",
        "cursor": {
          "ref": "5a26270c-ba2d-456e-8066-044e2f1c4d77",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1cd0171f-2828-4ee5-b227-dcfd9ce82527"
        },
        "item": {
          "id": "9f4aa9ec-0e14-4434-a7e5-5b22bb2d2fc3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73a92a7a-f4cf-415f-833a-1e27f01d5413",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a7fd725b-cd1f-4f1c-9b14-2f8fdadae525",
        "cursor": {
          "ref": "dda8851a-daa4-4921-abe0-7c3bb5aed4f5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "62681ab4-5ace-480f-884b-4b8b6007a5c9"
        },
        "item": {
          "id": "a7fd725b-cd1f-4f1c-9b14-2f8fdadae525",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ee50885f-e9f3-4166-9771-724078f3b4d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944aa80c-e39c-4305-b606-012db73c1542",
        "cursor": {
          "ref": "caad5a46-25aa-40ca-86b0-292748e2d051",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9384d60f-b224-485e-af2f-57c78154b639"
        },
        "item": {
          "id": "944aa80c-e39c-4305-b606-012db73c1542",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "878c49f7-0881-4ceb-93bd-f5f0b9b693c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a73f152-9469-42eb-aa95-163f51493e0b",
        "cursor": {
          "ref": "f6764f2f-9952-4cba-a161-0ba460f343a7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2ab8a897-005a-4660-b5ab-67bcb1aca68c"
        },
        "item": {
          "id": "1a73f152-9469-42eb-aa95-163f51493e0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "150fdd0c-1d90-44c4-8c5f-1cf2f9d22922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f683c25-0987-436b-8870-dc5338e65e84",
        "cursor": {
          "ref": "deb31fc1-85db-458e-b241-66dc3c0292aa",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d833332a-ae63-407e-af60-113bf34c90f3"
        },
        "item": {
          "id": "0f683c25-0987-436b-8870-dc5338e65e84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3fa9a5cf-0c20-4698-a76a-da1580f211d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d76a8e1-b683-4375-b763-f970445badbd",
        "cursor": {
          "ref": "d5520802-fcae-4114-80b8-665915e66c1c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17158bad-c1f3-4e98-b40f-18bc1cf18534"
        },
        "item": {
          "id": "5d76a8e1-b683-4375-b763-f970445badbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1b54372a-5bf2-4ee5-b158-d28c2d5ada6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f111fd-1eef-4040-9307-1becad0db62c",
        "cursor": {
          "ref": "65cb517a-7d07-4dc1-a7c6-e71fd5c862e9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e891e68c-b157-48f3-9800-6080d0469e5e"
        },
        "item": {
          "id": "c4f111fd-1eef-4040-9307-1becad0db62c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2035e5e-261d-45d3-b9c9-ed7e2a8c6d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee884152-28b0-4fa8-ac45-77391fb7e28e",
        "cursor": {
          "ref": "c5e649ca-1833-4720-9571-18734b876601",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "024c0e0e-c19a-4e16-b8a3-bbe2a9644330"
        },
        "item": {
          "id": "ee884152-28b0-4fa8-ac45-77391fb7e28e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d9c381f-bb1f-403a-8532-d69fea989960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ceaa06-f3e4-4821-b87f-ccc73e5bff73",
        "cursor": {
          "ref": "c4d5eca0-b2c7-4ea8-9f86-e1feb1032d4d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "63f931c8-e117-4eae-b088-4914700f6243"
        },
        "item": {
          "id": "16ceaa06-f3e4-4821-b87f-ccc73e5bff73",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7deab42d-8722-4f86-8b6a-693151446806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf37077f-121a-405d-8441-2ceee4e582b7",
        "cursor": {
          "ref": "ff05e0ed-a676-4eb2-86ec-6eb3ba6c4853",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5f857b0c-2871-4060-a43d-89fd7e6d5981"
        },
        "item": {
          "id": "cf37077f-121a-405d-8441-2ceee4e582b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50860a95-6ee3-479b-bf3d-e3975534ad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609df86c-a895-4863-8ddc-a36a4306c472",
        "cursor": {
          "ref": "2e2ff7b2-97ee-40d0-9b27-236d38088a31",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2553efb6-ce52-41b2-a717-1885499fa908"
        },
        "item": {
          "id": "609df86c-a895-4863-8ddc-a36a4306c472",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f2590a80-b81a-45b9-99a8-493ac573e52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e93d30f-9ad9-4c7a-b4b3-498cea5cd01a",
        "cursor": {
          "ref": "8a6cea28-f92e-4b63-b609-1b28b3f66928",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5aee1d0-4f18-4821-a17d-f74aaa5bc30b"
        },
        "item": {
          "id": "7e93d30f-9ad9-4c7a-b4b3-498cea5cd01a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd5c188e-25e2-484f-8adc-88a3a37b75e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c027e10d-854f-43f7-a58a-21552fc37bd0",
        "cursor": {
          "ref": "8c435d9b-86bc-460e-b0ac-dc589a4eec9d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9a97e109-0ba0-4752-904a-bd7eec105648"
        },
        "item": {
          "id": "c027e10d-854f-43f7-a58a-21552fc37bd0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "063e3a5a-6ae0-4f34-94ba-e26e3cecdd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8d186d-eacc-4631-bcfb-753bb91870ed",
        "cursor": {
          "ref": "2c5237ac-db0a-4395-b679-2c0f26584a19",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2ce8f980-7e44-4ff1-bf7b-51e176a6f960"
        },
        "item": {
          "id": "fb8d186d-eacc-4631-bcfb-753bb91870ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e0be2616-5ec0-4ca6-82ff-bf1f6e2ebc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d345569a-1ed8-4176-8502-95b922b21f84",
        "cursor": {
          "ref": "c5255984-b530-4ff8-a1df-b551710493e2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "975834c0-9f86-4e72-99df-989519f9c2ec"
        },
        "item": {
          "id": "d345569a-1ed8-4176-8502-95b922b21f84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a28c2095-9bea-4683-8207-95776380df6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b096ba5-ec79-4766-890b-f7d8b9087003",
        "cursor": {
          "ref": "2ba63ab2-5a78-42d9-afde-9df0ef7eee73",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b11c8cd8-1ec7-4b71-882d-424abdd3fa07"
        },
        "item": {
          "id": "6b096ba5-ec79-4766-890b-f7d8b9087003",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c82805c2-d13e-4440-9f98-c1850f586a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595d27d0-9170-40bf-8262-f6a04e332fd4",
        "cursor": {
          "ref": "56f12394-eb62-45b8-87fc-5df08ada25ad",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3d2056a9-faf2-4ba7-a053-d2688c12b8aa"
        },
        "item": {
          "id": "595d27d0-9170-40bf-8262-f6a04e332fd4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "adcd5487-c44e-4dd8-aa88-535beccd294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb205149-8b8f-46a5-88eb-582a4fcc1fba",
        "cursor": {
          "ref": "275d241f-fa2d-44e2-900a-2923392fb530",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2d8a7c2d-6a7b-4bf0-b036-c931efa99b36"
        },
        "item": {
          "id": "bb205149-8b8f-46a5-88eb-582a4fcc1fba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5d4bb234-59ff-4669-86e6-e0e4d054d83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c01aec-9436-4ea2-b95d-2942a7c5ddf1",
        "cursor": {
          "ref": "f8ac981d-938c-4e2b-ab39-8cf2ce97a456",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4ca45e75-b48c-42d5-93c2-e6a5b933027b"
        },
        "item": {
          "id": "e5c01aec-9436-4ea2-b95d-2942a7c5ddf1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "69f80e96-1d6c-47b4-819a-17b21d6df78b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ea39becc-ce09-4e42-b682-f06606fb03c2",
        "cursor": {
          "ref": "58797356-31ab-43c1-8cce-2815cd98bc90",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "622b058a-2a86-45b3-87bb-c9fe8bf3a648"
        },
        "item": {
          "id": "ea39becc-ce09-4e42-b682-f06606fb03c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8dd853d5-92a7-40d1-8923-87cd088f1b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca6e215-16eb-459d-a08a-9202c89d1185",
        "cursor": {
          "ref": "39469815-c837-452c-a313-a06277c564d8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c77d621-82f9-4be5-a99a-83a881ac96d7"
        },
        "item": {
          "id": "6ca6e215-16eb-459d-a08a-9202c89d1185",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b1214071-e1e6-4a6b-ba87-8994aa640eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3813666-8910-490d-842a-03898952dc51",
        "cursor": {
          "ref": "c25dcd1a-7c40-43ca-8ef7-b3c717071736",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9e906308-c599-41f0-9c54-7b30aee84584"
        },
        "item": {
          "id": "f3813666-8910-490d-842a-03898952dc51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8a21fc4-309d-4b18-86ad-271c6d2d0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404e28c7-0129-4170-8186-ed7e37eef97e",
        "cursor": {
          "ref": "00722ba9-de3a-4a8c-acc2-426a272da400",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0cdb62af-3819-4858-b36c-6fe0b08d6c21"
        },
        "item": {
          "id": "404e28c7-0129-4170-8186-ed7e37eef97e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c4c04c1-328a-4d33-a666-68a73e357e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82eafda6-30da-4417-a858-bf2a14efbda8",
        "cursor": {
          "ref": "0110537c-02a2-4c70-b144-7b4e21ed725b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d41b5f45-9786-484a-8975-edfcfa1dc1fd"
        },
        "item": {
          "id": "82eafda6-30da-4417-a858-bf2a14efbda8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8feb04e9-f953-4097-aeda-d352754698c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce7c5fe-fec6-44ad-a0ee-52a34ced30e4",
        "cursor": {
          "ref": "9c107eb0-db01-49c9-9c1a-37d59dbd0a3e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "13cc8da8-e3b4-49a2-ba2f-77783f748d0d"
        },
        "item": {
          "id": "8ce7c5fe-fec6-44ad-a0ee-52a34ced30e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db2f8272-b938-4827-b5d0-c3271261c301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0891cab8-4afd-44e5-b83e-d9e0f588e832",
        "cursor": {
          "ref": "019b875c-5c38-4ed0-800b-5aeed332c10e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6c30612-35cb-4a95-b5e4-d04fa8a293fe"
        },
        "item": {
          "id": "0891cab8-4afd-44e5-b83e-d9e0f588e832",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b89e6c62-30e8-42f8-857f-fc6fd6818c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4061d088-6a16-4445-a59c-311bb25bc3f3",
        "cursor": {
          "ref": "ad70efbe-590e-4123-b249-109fd0dd7c09",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9ad8187b-5760-4926-8793-0283ab8d2aff"
        },
        "item": {
          "id": "4061d088-6a16-4445-a59c-311bb25bc3f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4fbc97e3-0078-40cb-a3c2-2ead2f8c35ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "9cd55754-ea92-4750-b3f3-a8770036aacb",
        "cursor": {
          "ref": "563507f3-c872-4481-b59e-069350aefcdf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6414c6ed-7835-4041-a2a3-eb381ed80925"
        },
        "item": {
          "id": "9cd55754-ea92-4750-b3f3-a8770036aacb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4ef4150-067d-4dc1-bc97-3353ab58e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04d212c-00dd-42df-980f-b140870647e2",
        "cursor": {
          "ref": "02213773-7616-482a-862c-2768b22f1b9a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3fac6592-c848-411b-8a79-a3e018392eb0"
        },
        "item": {
          "id": "a04d212c-00dd-42df-980f-b140870647e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9ada4501-ed54-4668-a15e-8afcd6777e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedbf6c5-bba4-41f7-ad67-ed2128f67f56",
        "cursor": {
          "ref": "84147843-9a9c-450b-90eb-0cafe811b9d0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b83c7d7c-8edd-485a-b4b5-7d9d708fc2c8"
        },
        "item": {
          "id": "eedbf6c5-bba4-41f7-ad67-ed2128f67f56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9414a11e-8955-40c0-9d2b-155ddac6800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a4fdc9-8c0e-4600-b8bd-60692b176ba3",
        "cursor": {
          "ref": "fb1237ec-ee79-4a29-9ad9-40c1e8d3c85d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "124ca684-8160-4007-a2bd-f354b2ff017a"
        },
        "item": {
          "id": "75a4fdc9-8c0e-4600-b8bd-60692b176ba3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "308c751d-8758-430c-8ac8-c754cd5d4ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5868b4d0-6392-4110-bbb0-19631fd45079",
        "cursor": {
          "ref": "e1b516a6-baac-4eeb-abe1-460b6509ad51",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6500db6e-b0f7-4f40-b077-3f39760691ca"
        },
        "item": {
          "id": "5868b4d0-6392-4110-bbb0-19631fd45079",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6844ebb-21b1-4867-8c18-b1853cfeaace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1ee9d-1e53-4fb5-a857-d807b497ae60",
        "cursor": {
          "ref": "28db5e58-0270-4388-b7a1-253e00bcd2be",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "36d565e0-bae0-42d4-8f77-e0e1a1efd7f0"
        },
        "item": {
          "id": "08f1ee9d-1e53-4fb5-a857-d807b497ae60",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4371877b-67e3-4a71-ae03-323079ef4d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cc7979-2cab-4f9b-9702-7e8a1a4fef5c",
        "cursor": {
          "ref": "c77d14a4-31c2-4d74-8bee-ff271523cce1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "08604b5a-b6cd-484a-9cc8-b6890abe9bb9"
        },
        "item": {
          "id": "66cc7979-2cab-4f9b-9702-7e8a1a4fef5c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f5b7578d-ac2e-4c8d-90c1-ba9ff5ccf7a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "2132ab60-4046-44a0-bcf3-bf99f55b9ff1",
        "cursor": {
          "ref": "a978406a-5baa-490e-9276-53432abdc535",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4cb7abd1-feea-49bb-accf-63982537acc7"
        },
        "item": {
          "id": "2132ab60-4046-44a0-bcf3-bf99f55b9ff1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e8884be6-7855-49eb-a209-49547cad1b50",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "fce95264-4290-4d95-b312-45771a84acfe",
        "cursor": {
          "ref": "39a37136-1a19-4e26-aa83-ab9584ccbbce",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17a11e56-ee52-41c6-a783-d18e84e0caee"
        },
        "item": {
          "id": "fce95264-4290-4d95-b312-45771a84acfe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cd710ace-5a85-4ebb-94ba-32b91f0fa84f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7e1a2ed9-0948-4882-a8b4-3bfaf79fbbf6",
        "cursor": {
          "ref": "c36ab9ed-98bf-45d8-bdee-00e75e090f63",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "800ffebb-364c-4d96-a663-d6b5dc82f3ce"
        },
        "item": {
          "id": "7e1a2ed9-0948-4882-a8b4-3bfaf79fbbf6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba9080f1-d26a-455c-89b4-cf820d2b8922",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "cbe008eb-a7a7-4b0b-be9f-004496a06d4d",
        "cursor": {
          "ref": "219ebf61-261a-4fb8-b338-1dbf145d8e8f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1d47eaf0-cf8d-4125-8fb6-ac658d71c459"
        },
        "item": {
          "id": "cbe008eb-a7a7-4b0b-be9f-004496a06d4d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1795131e-4fce-4032-964e-ddb2fb2132db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "edf998af-46c6-4b1a-96ee-b34da3dec007",
        "cursor": {
          "ref": "35bdac61-c477-417e-b425-b068910dba2f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7472275b-2d20-4e83-b934-c2b6fe890779"
        },
        "item": {
          "id": "edf998af-46c6-4b1a-96ee-b34da3dec007",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "98140845-94c2-4791-804f-e1fce988398b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "caba97ec-5d2f-4657-9a57-c2313fd13ed6",
        "cursor": {
          "ref": "2ab085f9-9fa8-4d66-9617-faa312ac9568",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ec3a77a-2246-490e-b4ef-4d8143a945e7"
        },
        "item": {
          "id": "caba97ec-5d2f-4657-9a57-c2313fd13ed6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "68ef82b3-513c-4bf6-a749-25866410a82f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6150cb-bbd7-4254-8ac5-e065895bdd82",
        "cursor": {
          "ref": "8183057c-a681-44af-9d66-f9e6d7fc8f8b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ffae792-58e5-49d7-babd-162bfc2e54e1"
        },
        "item": {
          "id": "2d6150cb-bbd7-4254-8ac5-e065895bdd82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "74acf76c-4db7-4167-8db3-79103c3e5ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e4a61-3f07-4817-8aa2-bcd0f06c3056",
        "cursor": {
          "ref": "340d5322-2b4b-4763-aa3f-c1ed51c36c9e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0a910d87-1754-434a-b19b-a66d9df2c00d"
        },
        "item": {
          "id": "a15e4a61-3f07-4817-8aa2-bcd0f06c3056",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49506f5e-e772-4088-b669-a19add0ecf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c146e-8bf4-4077-9d08-649f5ffb9472",
        "cursor": {
          "ref": "4ad8c0a0-2e43-483a-99bf-558c74edb0bd",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d83cac70-a663-445c-a890-e3db95a8ed94"
        },
        "item": {
          "id": "769c146e-8bf4-4077-9d08-649f5ffb9472",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ed2e5a1d-181e-48a2-8db6-c73e834d8feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198624c2-6a51-4058-9b3a-5a7b3d715b0e",
        "cursor": {
          "ref": "cdc5f803-e910-4d60-9b90-dafb145668e7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9f34045e-582d-4ada-85b0-c445f0d7e190"
        },
        "item": {
          "id": "198624c2-6a51-4058-9b3a-5a7b3d715b0e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fb4224f7-3550-4000-bd12-505ba25b7bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e57a75-bd9c-4b47-af30-0c07679e073f",
        "cursor": {
          "ref": "470cfdad-66f9-42da-8a01-15baea20a487",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ccf142cb-5739-44e7-9c73-6d85b95e281d"
        },
        "item": {
          "id": "44e57a75-bd9c-4b47-af30-0c07679e073f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "557bb453-a86a-4aa8-8114-c219c1703697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d18711a-bfd9-4281-af47-83e4b42e5349",
        "cursor": {
          "ref": "7f8386c0-c148-4d45-ad25-abed82fb5c71",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70dda857-27bd-4cee-b879-1ffb684b9da4"
        },
        "item": {
          "id": "7d18711a-bfd9-4281-af47-83e4b42e5349",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4929d7ae-aa0d-42c9-8aad-9d3686b3d566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b8b924-9c42-4e48-8a65-b567c454b593",
        "cursor": {
          "ref": "e37e86d6-c138-42ef-948d-8346b1858660",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eca8cbbd-fecd-4b9f-9dc5-4fc7d8b5c014"
        },
        "item": {
          "id": "b2b8b924-9c42-4e48-8a65-b567c454b593",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6bf4ab3-6214-4c17-977a-85a138d49116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e3553-da9f-43fd-8cb9-543b50f3ec2a",
        "cursor": {
          "ref": "b20faecd-0886-42a8-b830-2df063d9f83d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7264eca-d6d8-4c97-a24b-84f556dad94e"
        },
        "item": {
          "id": "2e5e3553-da9f-43fd-8cb9-543b50f3ec2a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d5c2aca7-5837-49da-b398-ebfbab53372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6a4c74-3a24-4d7c-b305-2e7fc119715b",
        "cursor": {
          "ref": "0b1266d9-425a-44c6-a012-e8cc6c885f6b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b55803f-6b0c-4f3e-aca5-ac42bf2cbc64"
        },
        "item": {
          "id": "ee6a4c74-3a24-4d7c-b305-2e7fc119715b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fa71c85a-8f08-459b-abb4-0d7152b44f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4d278-e7fc-47e8-b16a-a87a8d275774",
        "cursor": {
          "ref": "70600b34-0f80-46e9-a50c-50a4bfc35dca",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fb565108-d91c-4df7-b642-2458cf1d6441"
        },
        "item": {
          "id": "59c4d278-e7fc-47e8-b16a-a87a8d275774",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b22e91ee-9804-4b91-919d-20054a110be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed937a01-cf2f-45ba-9eed-f7b6550d2f85",
        "cursor": {
          "ref": "4d875661-4b37-4b7a-9b23-d5f0537a51f5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e79b43c-d5f9-417b-9097-4870a1f0071f"
        },
        "item": {
          "id": "ed937a01-cf2f-45ba-9eed-f7b6550d2f85",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "647f2495-7d5f-4ad7-b395-cbd79909cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedf8590-2151-4a94-adc1-24165d26f04f",
        "cursor": {
          "ref": "8db8b5a1-b7c0-49b2-a020-415b5ea89071",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e0f32597-60c7-4601-b346-3a8ab7116cbf"
        },
        "item": {
          "id": "dedf8590-2151-4a94-adc1-24165d26f04f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b5cfaebb-aa3b-4859-94d3-0f934c56b18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc932308-985d-4eb8-a123-08dd3256490c",
        "cursor": {
          "ref": "3cf42de6-938d-4412-b350-4d3d7240eff5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4024d0e-52b3-4ff8-acbc-b124145ff480"
        },
        "item": {
          "id": "cc932308-985d-4eb8-a123-08dd3256490c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cb1cd492-ff2d-4bca-8b4f-abc82d4c4929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eabfec1-de9d-45af-b19d-4e4569d32563",
        "cursor": {
          "ref": "268c4061-15da-4958-b45b-80904d1eef9d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "739369e7-9a81-48b5-8695-6b0394ce878a"
        },
        "item": {
          "id": "1eabfec1-de9d-45af-b19d-4e4569d32563",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4c071d54-cece-4612-af2d-54f7d2ec9e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e93652a-89ba-43ed-becd-b41eee2306b7",
        "cursor": {
          "ref": "b53c00ac-30b3-4d52-9188-f27d05b2ef68",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1b7486c5-b2ec-4b8a-b246-1c7492bd405b"
        },
        "item": {
          "id": "6e93652a-89ba-43ed-becd-b41eee2306b7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7511d896-d8db-4ae2-a2d4-d28924f38f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e336ca38-6784-41a2-8008-77d697663392",
        "cursor": {
          "ref": "fe788f4d-0b58-47cd-89da-bea3ecab664b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "408ca6d1-385a-417e-b3e3-6ee3d171fb79"
        },
        "item": {
          "id": "e336ca38-6784-41a2-8008-77d697663392",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f5c568a-146b-4bf9-8c38-4b096f93b47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117a391-b0ba-46cc-9654-51b031f441af",
        "cursor": {
          "ref": "8a6ca796-8542-4b34-bb43-99816e923f00",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "18b44485-e75e-4d0f-bc04-94e27200cfee"
        },
        "item": {
          "id": "7117a391-b0ba-46cc-9654-51b031f441af",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f794ff9f-d945-47eb-8ecd-664eda086fe4",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8495cfd8-2057-41ed-b080-4e8cb9e37650",
        "cursor": {
          "ref": "54b8b22e-68b7-4fc3-94b6-1a3acdfbb1e0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "078e9849-cca4-41c3-b7f9-b90027e70f60"
        },
        "item": {
          "id": "8495cfd8-2057-41ed-b080-4e8cb9e37650",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2047f437-2171-41d4-b0af-84a13371320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae27620-0e5f-4575-b268-4950efc817ce",
        "cursor": {
          "ref": "2cfd2b02-d365-4769-88f4-c5d75a42a9c2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f931d119-3b57-4b4e-a69b-a32b1f32261b"
        },
        "item": {
          "id": "7ae27620-0e5f-4575-b268-4950efc817ce",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a21e2d6c-bd70-4f24-966b-e9dc797e960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe976f-7241-476a-a2ae-f20b7efcc3f0",
        "cursor": {
          "ref": "83893ceb-43d7-4c6a-9e92-e6af41983fb8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf5c0efb-cb22-44ee-b99e-ef1bd63630c6"
        },
        "item": {
          "id": "2cbe976f-7241-476a-a2ae-f20b7efcc3f0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c6326d7a-247b-4639-aa2b-d3d8bc26e30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b14cbe-25e0-463d-8060-942c0e11aaf7",
        "cursor": {
          "ref": "b013dd59-2ff6-47b8-b3e1-27ee39979f40",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "11ce0227-6b04-40a2-ad53-e48f450e6b24"
        },
        "item": {
          "id": "99b14cbe-25e0-463d-8060-942c0e11aaf7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "937b9052-57f2-401c-9bc9-ff4ba1272ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dce8c2d-fd4e-407b-981b-faa67f4c4036",
        "cursor": {
          "ref": "e3e2eac2-c81b-4b4f-a1f4-86a0be44089a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8569a6ee-a709-40ae-8fa8-9714475f8102"
        },
        "item": {
          "id": "1dce8c2d-fd4e-407b-981b-faa67f4c4036",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cd59b907-e23f-43e1-aa7d-200536e12900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85240898-e7aa-48d3-897d-f657dd2d2b96",
        "cursor": {
          "ref": "1f1c442b-37bf-43cf-b43c-fea50e6730b6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1a9af798-be22-4be5-95ee-4a85c62c5da6"
        },
        "item": {
          "id": "85240898-e7aa-48d3-897d-f657dd2d2b96",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ab97a5f-37e3-43be-9cf8-a7b2101ea607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fc1ee1-c699-470a-a8f9-b8a1e3019916",
        "cursor": {
          "ref": "4e22890d-ac40-45e2-8e01-9587d811087d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b07a7f56-54c4-4ca4-ac3a-f1b47f885cee"
        },
        "item": {
          "id": "b4fc1ee1-c699-470a-a8f9-b8a1e3019916",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c363f458-3770-47fe-b297-33c6c13dad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aaffc2-a031-4b43-8a17-15fed4690b91",
        "cursor": {
          "ref": "d0a477f7-4507-4f91-a14c-b51b45a26cd4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7586dd4b-d7e8-4fce-9e46-6bb4674a7b8a"
        },
        "item": {
          "id": "31aaffc2-a031-4b43-8a17-15fed4690b91",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5f60a24c-478c-4183-bf97-885429b06df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd259a-fe3a-42c1-ac9f-704d70b237d0",
        "cursor": {
          "ref": "d8d07c2b-9883-40f6-87c8-71300cbd3389",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a76a3ef-c2a5-4385-ba72-64b3b19e00f6"
        },
        "item": {
          "id": "a2bd259a-fe3a-42c1-ac9f-704d70b237d0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aeabc8c9-b937-4d46-98fe-c1c64a91561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce742b4-eeb9-4345-bd91-7ce1921d63b9",
        "cursor": {
          "ref": "74f602ce-890e-4a54-9b74-56df9b212103",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "893b8356-be2d-48fc-9efd-ce176da37681"
        },
        "item": {
          "id": "bce742b4-eeb9-4345-bd91-7ce1921d63b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0c56d37f-789b-49c0-b0e4-ae735bc0d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0892e6-1559-471a-a20f-37ac07257add",
        "cursor": {
          "ref": "89bf10a2-03e5-4dad-a02a-4f18911c4abc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "89d3c789-625d-4311-8d12-53b3d29adccd"
        },
        "item": {
          "id": "ab0892e6-1559-471a-a20f-37ac07257add",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cc6d7d51-1bd6-44b9-988f-4210f7b7a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1edc5e-2c19-48d5-8f8c-7d756f93b972",
        "cursor": {
          "ref": "4eb49b66-e53c-4f65-baeb-07b0d065de17",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6ccca6cf-3162-4352-8c21-c8dd54cffdfc"
        },
        "item": {
          "id": "3f1edc5e-2c19-48d5-8f8c-7d756f93b972",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4c960224-205f-4518-94a3-1e5b838fa4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d6d666-2361-4f3e-b840-358063e8f8b1",
        "cursor": {
          "ref": "2ce063d1-eb02-44e1-b91b-2656315daada",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f0354bf0-380f-4446-9efc-a4bff7db79f0"
        },
        "item": {
          "id": "e0d6d666-2361-4f3e-b840-358063e8f8b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "42617676-01f8-4190-8422-b262bc184884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b918e046-206b-449f-a90f-1a1dd923bbd6",
        "cursor": {
          "ref": "0a4b3b36-186f-44cb-9b34-ea7bacc6a4b8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3306085b-5ad9-4846-8a4f-78ba6ac8e5ea"
        },
        "item": {
          "id": "b918e046-206b-449f-a90f-1a1dd923bbd6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da2d5652-8e7b-4f9e-8f36-a41d70ef79ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753f0fcc-1a99-4526-aa3b-30a707b534ac",
        "cursor": {
          "ref": "3f6e21d2-c485-45c3-92a5-df04a11a1198",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "987d23bb-a93d-486f-8e10-18169d3cdbbf"
        },
        "item": {
          "id": "753f0fcc-1a99-4526-aa3b-30a707b534ac",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0deb60d0-e301-4166-b852-c5c97ccf1107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9395bef8-2a95-4824-961c-d92f6f6044be",
        "cursor": {
          "ref": "d9d23a94-ef20-421c-b33e-9ed19439c45a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d79ce3ee-a2ee-48d6-a078-efc1b98bc493"
        },
        "item": {
          "id": "9395bef8-2a95-4824-961c-d92f6f6044be",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ad2ec204-1e4e-462f-a215-8300b1f6e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dda8d78-dcfa-45a6-8cd9-6e0cb0043152",
        "cursor": {
          "ref": "beacebc2-8dec-42e4-a7e4-a6b48addb146",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "638a72b2-8b8e-4294-9972-a4c26b63420f"
        },
        "item": {
          "id": "3dda8d78-dcfa-45a6-8cd9-6e0cb0043152",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79e156ae-e55f-4150-aa2d-677e8ccbf8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672a1c3-51f0-4840-80b2-a6ab865a9ec3",
        "cursor": {
          "ref": "99c56339-92e1-4d6c-ab0a-6ae43b23be04",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "385cff82-0911-4142-9eba-925f2325a344"
        },
        "item": {
          "id": "2672a1c3-51f0-4840-80b2-a6ab865a9ec3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d26fd66e-a8bb-4696-bef0-1d253c3ed160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a634467-f168-4de1-bb64-8b18c0171e66",
        "cursor": {
          "ref": "5b813dc2-c955-4cc4-9315-adeb62681044",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "02dd7581-3fef-457a-9986-d976107abb8b"
        },
        "item": {
          "id": "8a634467-f168-4de1-bb64-8b18c0171e66",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "122520b7-b7c2-48ed-8aca-f48bfd4a8539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30840cb-9e6a-4c23-9c82-7756f06b9fe3",
        "cursor": {
          "ref": "a857eff5-7a15-4467-9306-4a5eb295745a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f247c081-eade-443e-85ef-68f31f629514"
        },
        "item": {
          "id": "f30840cb-9e6a-4c23-9c82-7756f06b9fe3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c5e905c-126b-46f3-98cc-342dab00fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2577da-aa33-4c86-afe0-d6a9dff2ff90",
        "cursor": {
          "ref": "b70afe88-d1a2-4b34-8c97-05ba21d13ade",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c22fdaa3-ae7c-4747-b211-065523ec65d5"
        },
        "item": {
          "id": "7e2577da-aa33-4c86-afe0-d6a9dff2ff90",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "715f88a5-341b-4db0-a873-e599b4392cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3d7265-8c78-44ff-a0ce-0fe62be17ea8",
        "cursor": {
          "ref": "ef46456e-87aa-42a5-a1d9-8da2a6160fac",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25810acc-b782-401d-8675-78b2237a81bd"
        },
        "item": {
          "id": "8b3d7265-8c78-44ff-a0ce-0fe62be17ea8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f9cdc1a1-49ce-45c8-a074-b8eebc069a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11d960e-9ed8-42e1-aa19-e764d6a8d09e",
        "cursor": {
          "ref": "a5701944-e2ac-40b3-a535-ef334f267431",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5fa0a7ef-e984-43b9-8a4f-b6e2b0e9269f"
        },
        "item": {
          "id": "c11d960e-9ed8-42e1-aa19-e764d6a8d09e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3fffbef4-bfd1-4265-9b86-a4971e40a511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a7bcaa-eefb-4737-8d90-c17cef440793",
        "cursor": {
          "ref": "101adb95-0f6f-4174-be43-0674ca7203cf",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "641bee65-af7b-4d07-85ab-f1cf45c5b5ab"
        },
        "item": {
          "id": "73a7bcaa-eefb-4737-8d90-c17cef440793",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9d9985f6-6621-4d6f-955c-4bb2475c1a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3c856b-6432-44e1-80db-753a1e4d13ac",
        "cursor": {
          "ref": "d1e084f5-6e20-477f-92c5-b1b6ba7dd7fe",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ac4c533c-9a79-4cf9-bfab-506ec6f120a1"
        },
        "item": {
          "id": "aa3c856b-6432-44e1-80db-753a1e4d13ac",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b1952f4e-338d-4ea1-a1a4-90e7e6bc50eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee892b0-6b9e-4764-8efe-67aceb09c56c",
        "cursor": {
          "ref": "9135652c-19be-46e1-8071-42355f691b99",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "22a0dc12-cde9-4d0e-8cc9-ba63045de57e"
        },
        "item": {
          "id": "eee892b0-6b9e-4764-8efe-67aceb09c56c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a4172035-8d7b-4dda-a342-fc02d1d1b52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dba407-6450-4b74-88f5-be1b98397cb4",
        "cursor": {
          "ref": "e400937c-3edd-4cf4-a59b-df726321ea70",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "878a446c-d9ea-49e5-9d73-eb07e9d2f813"
        },
        "item": {
          "id": "99dba407-6450-4b74-88f5-be1b98397cb4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5a009229-2c55-476c-b481-5e83f138d67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b03272d-c56b-44cc-8b26-f1cac415532b",
        "cursor": {
          "ref": "4f268611-c90d-43c2-863c-dcf44a7dbfdc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bd3ed4ef-4286-4d9f-80f8-7c839107fea0"
        },
        "item": {
          "id": "7b03272d-c56b-44cc-8b26-f1cac415532b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fbed9abc-7b97-42e7-bb9f-4ba48b63b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfeb6c3-8feb-4c99-ab99-2d62418b60e2",
        "cursor": {
          "ref": "53ecd2d6-6c1b-422e-ad1c-b80aa39c83f9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4ad3829f-0620-4708-90a9-4058096a6e26"
        },
        "item": {
          "id": "3dfeb6c3-8feb-4c99-ab99-2d62418b60e2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5d95e0db-7577-4b34-b294-4ee42539657f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b819a1-c37d-4a8f-9a04-ff13372cbd8e",
        "cursor": {
          "ref": "02b65a35-ba3d-460b-ae4a-3638d9c96e12",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6868be1e-b816-4f33-8993-5891661404c9"
        },
        "item": {
          "id": "96b819a1-c37d-4a8f-9a04-ff13372cbd8e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "526cff74-766e-43d9-a686-fa5b5f93447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4076b6-5d22-40cb-80cf-77cbd2e5e169",
        "cursor": {
          "ref": "94616703-58d7-4aec-ac0a-8f8d3c256c85",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2f35c018-0477-4bd9-b521-9a6c1e411648"
        },
        "item": {
          "id": "4e4076b6-5d22-40cb-80cf-77cbd2e5e169",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "64bfe435-b1be-42e2-af45-ce3f8f31a0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d464db-1798-46e2-a7f8-893f0ce8972b",
        "cursor": {
          "ref": "fd21ff81-3543-421d-922e-701a7c428a55",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "94bdccf4-c163-4ccd-b748-5679f05c336b"
        },
        "item": {
          "id": "13d464db-1798-46e2-a7f8-893f0ce8972b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "862a7519-2fd6-4645-90e5-46a9c01081d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f232b6e2-dc84-472d-8964-b45f1a8d265a",
        "cursor": {
          "ref": "e36ab34d-d809-4d08-b801-ee7713433d2b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cbf2c874-97b3-4145-9970-00339242d2ad"
        },
        "item": {
          "id": "f232b6e2-dc84-472d-8964-b45f1a8d265a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "966a5715-bdfa-48f2-9dec-cf9e3eebfadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc33282-94d4-43e9-a823-d979d792c7e0",
        "cursor": {
          "ref": "62e7e610-d682-4284-a4f4-31d531650fd0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ca08fdba-9095-418e-97c1-82dca5a5c313"
        },
        "item": {
          "id": "3cc33282-94d4-43e9-a823-d979d792c7e0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0d291db8-3a88-4bd6-8a75-300e93b35211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dad6eb-3088-4027-bcc5-a87c18e0e506",
        "cursor": {
          "ref": "97ef7def-f77b-4cfd-87fb-e9eb206e99d8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ba1b4215-9eb8-4537-a717-d6eb36b326ae"
        },
        "item": {
          "id": "c9dad6eb-3088-4027-bcc5-a87c18e0e506",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ad95a195-957c-462c-bf85-7443ed4e8c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800521f9-5219-4e85-bbc2-b630e7a8050f",
        "cursor": {
          "ref": "a84a4d83-2328-4e7b-9f70-ca70ded31005",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9bf10b08-a988-43ea-865f-5704d48f1be7"
        },
        "item": {
          "id": "800521f9-5219-4e85-bbc2-b630e7a8050f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "76752301-4e1a-4742-bf58-9ae52ff89ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32334db2-d285-496a-b02d-813f8743cac3",
        "cursor": {
          "ref": "6c752d89-41a2-4926-a84c-5df0069ede90",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f9ebeb2-75db-45a5-8bb7-0f6771d4ab25"
        },
        "item": {
          "id": "32334db2-d285-496a-b02d-813f8743cac3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "15669e27-e51e-4c5a-ac41-b75b0f902753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbf82d-6eed-455c-aff0-a5e557912c6b",
        "cursor": {
          "ref": "53e208ed-916f-4e44-a773-96a7d969f9f9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cabd4acd-5f24-453f-b78e-ff3cfe428db1"
        },
        "item": {
          "id": "08cbf82d-6eed-455c-aff0-a5e557912c6b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "461e43c7-8223-4c6a-885e-491625fd6614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e35dd43-9e81-4a72-a33d-7a4b2f7830a9",
        "cursor": {
          "ref": "40ae457d-c0d2-47e7-b3dd-5f38abbe2af7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "df37f5b2-44ca-414d-884c-edeed75ad11d"
        },
        "item": {
          "id": "1e35dd43-9e81-4a72-a33d-7a4b2f7830a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "855e99ad-7d21-48f6-9fb9-89bcf2f8cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d01e3f1-c22d-4d96-9cac-2aad310ab99f",
        "cursor": {
          "ref": "a596210f-30e3-4470-9649-d862af7bb368",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61e4b402-f863-4d83-a0c9-8260a6025f64"
        },
        "item": {
          "id": "5d01e3f1-c22d-4d96-9cac-2aad310ab99f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f42ac729-406f-4450-8e6e-e7140ef29457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cb21ab-2537-4c99-a481-8e5aaae370cf",
        "cursor": {
          "ref": "4dfcdff7-7586-45d5-b6e7-e158e873b5c6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6c47f232-0fe6-4257-91d3-3d66510e3fff"
        },
        "item": {
          "id": "c1cb21ab-2537-4c99-a481-8e5aaae370cf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3a31bb5c-1536-4ce0-8d76-ed62c625cd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba29324-4a22-4497-8167-d7180944398a",
        "cursor": {
          "ref": "337c99bd-3390-4a63-bf42-b739b30be9af",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "76b82447-eb1f-4e8f-a904-fc0257956226"
        },
        "item": {
          "id": "eba29324-4a22-4497-8167-d7180944398a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eea6882b-f8fb-40be-af09-71df254ae91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a875b-01a3-4ed2-a521-19e2c27ee296",
        "cursor": {
          "ref": "dbbaf588-f5e5-485c-9d84-044a9f1e144c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "15d2a4e3-942d-414e-9783-ad220ac276c0"
        },
        "item": {
          "id": "148a875b-01a3-4ed2-a521-19e2c27ee296",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa855a24-7d7d-4d3d-a2bc-73918a30007b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf5954c-ec4d-410a-bf7a-872e176c9729",
        "cursor": {
          "ref": "0d1bba8c-49e3-4054-8d5f-4a5b777cf319",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "360485e4-dba0-4286-b2b7-96e63ab43c95"
        },
        "item": {
          "id": "6cf5954c-ec4d-410a-bf7a-872e176c9729",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d8635947-ce80-4bdb-8e44-1d3eee01e6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad96929-0a24-4efe-b04a-bcf068aeae53",
        "cursor": {
          "ref": "e188ed6b-cc66-466e-8dac-8ff832555818",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29ea8c1e-d4e5-471b-81aa-6d18634a332a"
        },
        "item": {
          "id": "5ad96929-0a24-4efe-b04a-bcf068aeae53",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2516d4dd-144a-4805-8731-73c3cc859f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd572ee-a538-497a-920b-ae00bf3a0593",
        "cursor": {
          "ref": "80b30887-d718-4f9a-b2ba-ced9537145fa",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aa3cabdc-7ffd-4823-9720-087b5fda9be5"
        },
        "item": {
          "id": "7dd572ee-a538-497a-920b-ae00bf3a0593",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3fd34db8-7883-4e7c-8d76-a3792ec37c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98585b8e-b60f-4922-af56-bebdbaad0389",
        "cursor": {
          "ref": "e5a26f5d-1d77-48fc-a007-48d2bf594b47",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "31573039-c152-4f7b-a824-6e1038861f04"
        },
        "item": {
          "id": "98585b8e-b60f-4922-af56-bebdbaad0389",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8936b693-f937-4911-a7ba-9235e32e917a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865af9a5-f4cb-4048-b867-f3a2bcc462c1",
        "cursor": {
          "ref": "f7317b1b-c97c-4136-8f32-b81b8505cf09",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ab407470-63d7-4a01-af01-98409a0d119f"
        },
        "item": {
          "id": "865af9a5-f4cb-4048-b867-f3a2bcc462c1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "91ecdc02-2bbb-4805-87a4-22206483ccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2439d5-a93f-4c73-a8ce-c530bb215666",
        "cursor": {
          "ref": "f1fbbd22-7133-464c-8f3f-d2f37ce041d0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0b223612-9833-4111-b2bd-4c6d362b3040"
        },
        "item": {
          "id": "eb2439d5-a93f-4c73-a8ce-c530bb215666",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ca79d245-83fe-42ba-b44f-12e74c1c3b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98754a6a-c256-4595-ba61-d0a93405df19",
        "cursor": {
          "ref": "e6345a84-c2b8-4843-ba2c-2a2090203273",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4ae8c24-09bc-47aa-80db-2a5fe1e56c2b"
        },
        "item": {
          "id": "98754a6a-c256-4595-ba61-d0a93405df19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6471280a-1d58-476a-a998-b031e2e28fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b108df-b990-4214-8690-0107dd86b632",
        "cursor": {
          "ref": "64475e5b-7616-4468-a8c0-bc7e75d60abb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1b1d0c23-7793-4347-a95b-12fbe8acf67e"
        },
        "item": {
          "id": "12b108df-b990-4214-8690-0107dd86b632",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d72105ab-9752-4251-acf6-da4126ef524d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae67d7e-14a9-499b-9231-fb51f868f700",
        "cursor": {
          "ref": "b0d59aed-b0ef-49da-b9fa-c18c4cd1be25",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06c14228-a8c0-4288-a66b-1a7270ca0eb3"
        },
        "item": {
          "id": "6ae67d7e-14a9-499b-9231-fb51f868f700",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cfcf5f4a-a92f-415e-aac2-c93715ed025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090a449b-305b-425b-a047-2c9c01cd3eee",
        "cursor": {
          "ref": "642804d8-8b33-4a66-8a34-4895698be838",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0d53cc89-e98e-4387-bf1d-fbf681bd7dd2"
        },
        "item": {
          "id": "090a449b-305b-425b-a047-2c9c01cd3eee",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6f8dbead-8bbb-44f1-9f2f-d80d4dcda5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab2e116-8ed4-4258-8754-f563407cb1c3",
        "cursor": {
          "ref": "31449621-2acb-4dee-a9f3-bca3df0d00a1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca291c45-13f0-4d2d-a717-db9a8e8ee4aa"
        },
        "item": {
          "id": "9ab2e116-8ed4-4258-8754-f563407cb1c3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "87328d08-e8df-4cd0-a509-da284ccfd36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ea7303-2bbb-4318-9af7-687923733389",
        "cursor": {
          "ref": "96ea8fb2-c355-4f1b-b41b-dc054037e05d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8d26ed05-0530-4837-9d09-02293f1d4342"
        },
        "item": {
          "id": "f7ea7303-2bbb-4318-9af7-687923733389",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0f86c8f7-91bf-41fe-8d8b-22357a45591e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2d24ad-899a-4166-8fe0-6e1cba9235bc",
        "cursor": {
          "ref": "07b95c12-213b-47de-9b46-70ebc39f26f5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "83f96b82-93f1-4a7b-b4b0-2234c128209f"
        },
        "item": {
          "id": "5a2d24ad-899a-4166-8fe0-6e1cba9235bc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ab4b088-d398-4cb0-a60f-5a5e8fab6084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e53444b-89c1-49e3-85a7-ee381f5c6965",
        "cursor": {
          "ref": "05c8228e-d248-4ca3-8948-629ba3ca198b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7a238fd1-29da-417e-b753-764c23ff548c"
        },
        "item": {
          "id": "7e53444b-89c1-49e3-85a7-ee381f5c6965",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "58cf536f-e02a-4705-bc63-f62b991435c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c6e8d3-410c-41d6-ba36-bc38cca58435",
        "cursor": {
          "ref": "6fc49e6d-dd04-410e-9a5e-d52f213311fa",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d3110b71-8fe2-4650-b843-2e2ee346cc8a"
        },
        "item": {
          "id": "89c6e8d3-410c-41d6-ba36-bc38cca58435",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dbec76b7-03c3-4b73-8254-7b8d0736743d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e744b9-6470-4705-b627-58853cbe4998",
        "cursor": {
          "ref": "fe7b58bf-7fff-44b3-9ae6-22cbafa07d9f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ce6468df-e510-434a-ad53-b72582466151"
        },
        "item": {
          "id": "91e744b9-6470-4705-b627-58853cbe4998",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fc50943b-9935-42d6-9f7d-01fb1a1a13b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec29b0a4-6b09-4f5f-a56f-9b9e6d0a211f",
        "cursor": {
          "ref": "470d832b-7306-4dec-9649-5e0b7d0a5ff0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1f145788-4955-4354-b56d-b381051ef24c"
        },
        "item": {
          "id": "ec29b0a4-6b09-4f5f-a56f-9b9e6d0a211f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f4f7661f-e220-41c9-b6b7-6e9a1949a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a118494-b110-4b28-b9b8-df4a44cbaff0",
        "cursor": {
          "ref": "322a604f-1524-417b-9cbb-5a8b42ed5c0f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ded20695-049a-419a-b81d-02409759bfa8"
        },
        "item": {
          "id": "2a118494-b110-4b28-b9b8-df4a44cbaff0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "853d126c-1e79-45c1-af84-7aef60105abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a1f420-885c-44ee-86f9-b0a8f077ccff",
        "cursor": {
          "ref": "305b2ae8-26eb-416b-967f-1310daab3670",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ced44b72-a801-44e8-a0e7-529594a42c5d"
        },
        "item": {
          "id": "b3a1f420-885c-44ee-86f9-b0a8f077ccff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d0680c0c-49af-4dd6-bee1-8242999ca376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7947a4-ec3b-4a8b-a8d4-3bb95e3e64c9",
        "cursor": {
          "ref": "0eef77b1-293d-41e2-98d8-7e95ed2d1c99",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "024d7811-04e4-4248-87ba-c8bb25666dc1"
        },
        "item": {
          "id": "4d7947a4-ec3b-4a8b-a8d4-3bb95e3e64c9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c563a34-039f-4f86-9e11-2648e45db616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68fdb7c-0dfc-4d5f-95d3-bc740396ecc0",
        "cursor": {
          "ref": "c0cacf48-77bf-49b5-9446-a3ed3371c8fa",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0edae8f6-2c9f-41ef-91f6-1578cb36adba"
        },
        "item": {
          "id": "e68fdb7c-0dfc-4d5f-95d3-bc740396ecc0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e386858e-f8fd-4f11-86d8-98b6ef52ba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c243d726-2c70-4c3b-b7e7-0c4869978f48",
        "cursor": {
          "ref": "ce896dc5-d662-44c0-8b2f-a27b320a4805",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "69d7e62b-8a17-4988-b799-a3c312b46907"
        },
        "item": {
          "id": "c243d726-2c70-4c3b-b7e7-0c4869978f48",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75cb2a66-1688-4887-86f5-9c07ea7e8a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a69900-5025-4b09-8db7-0b74e0d17ee8",
        "cursor": {
          "ref": "2f1f167b-d17a-4425-ad7a-cfc0672d9578",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "643c2200-ebe7-43cc-accc-87114403edc6"
        },
        "item": {
          "id": "a4a69900-5025-4b09-8db7-0b74e0d17ee8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2d6b98f6-9262-4d55-9c25-41b55642c703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62248442-b5d6-41d6-8d02-b3851c3fb925",
        "cursor": {
          "ref": "1c9c6e13-4c75-4c4a-b9be-9082ca764ac2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5b44ed0e-37af-4075-80c2-73bda62fa4fd"
        },
        "item": {
          "id": "62248442-b5d6-41d6-8d02-b3851c3fb925",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40e0067e-cc56-41cb-8947-b92e645bd12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5258c5b7-177a-4aca-b86e-0f14f0566f52",
        "cursor": {
          "ref": "9feda0ab-6444-40f0-bf73-706e4cfbbd54",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f8fda300-dc19-488b-b4f4-98cab407001e"
        },
        "item": {
          "id": "5258c5b7-177a-4aca-b86e-0f14f0566f52",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2ac639f-36f0-448b-9f3b-b0cc80e448cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca05b230-839c-4315-94c1-a7ca8e32414e",
        "cursor": {
          "ref": "917cb189-5ebf-4ce6-973a-444fa45c1fb2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "617a867a-9b89-44bb-9ca2-ae775f33a4d5"
        },
        "item": {
          "id": "ca05b230-839c-4315-94c1-a7ca8e32414e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "39045275-289b-4618-a1d1-d6787a2099ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91774ce7-bccd-4890-9d03-88dc26aa199f",
        "cursor": {
          "ref": "50e5fd0e-2a8f-423e-86c2-212111a8d15b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0ed44992-5645-4a2d-ae7d-a47cd5015c28"
        },
        "item": {
          "id": "91774ce7-bccd-4890-9d03-88dc26aa199f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbdadaf6-0b2b-4fdd-b40e-6be4e0fd7872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8640a75-1c78-4fcc-927c-835b657af183",
        "cursor": {
          "ref": "5d34b127-e54d-4cec-a38e-924d4ab32a37",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fb27ec44-e396-4f0c-95b9-11c9dd4ed179"
        },
        "item": {
          "id": "c8640a75-1c78-4fcc-927c-835b657af183",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d0c6184a-b2f7-4891-b88f-c7e9837bf61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b81a0e5-a515-4a75-ba38-3318e30c439b",
        "cursor": {
          "ref": "d2666dd9-4534-4349-9fed-39ae538b4735",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bacae56b-0ad4-4dfd-bbb3-1859a731f174"
        },
        "item": {
          "id": "3b81a0e5-a515-4a75-ba38-3318e30c439b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "905c2152-751e-49b1-9508-0efc9861c7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f75281-46d1-42f6-8155-dcd90dea7a65",
        "cursor": {
          "ref": "265f91de-8391-4253-8a02-b5e9efc73e95",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a1c81937-f4f3-4ad8-a23c-e8bb7d90b31b"
        },
        "item": {
          "id": "33f75281-46d1-42f6-8155-dcd90dea7a65",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2926fc87-929a-4097-a051-00dbb32ccd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afecc0d-ad33-4444-aad5-b0a7589b5b7b",
        "cursor": {
          "ref": "46ba607e-dc49-4ab4-8893-05a08696eb2f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "602c77d5-515f-496d-ab0b-46f122d8b330"
        },
        "item": {
          "id": "3afecc0d-ad33-4444-aad5-b0a7589b5b7b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae279ac2-b8b7-4f3c-ba06-c5f1609d7ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb27bcea-1ecf-48a1-b8dd-bd100bc5f784",
        "cursor": {
          "ref": "b9be6ea2-af1f-4133-9240-c6c0df237253",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f7db1d60-822c-45b8-b5a5-cc905e18d3c1"
        },
        "item": {
          "id": "bb27bcea-1ecf-48a1-b8dd-bd100bc5f784",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4f7a30aa-8cf8-4915-862b-905374788119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc37db9-06ca-4191-af33-85cba67a89fb",
        "cursor": {
          "ref": "8380dd86-2d58-42d3-b541-7a5ff461f39d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9bd05fff-d398-4562-a76a-45b9b03f1f87"
        },
        "item": {
          "id": "9bc37db9-06ca-4191-af33-85cba67a89fb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4fb86552-ac79-45c0-9b20-3863bd9010ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b51ba4c-5173-4ca3-a045-a720466cc525",
        "cursor": {
          "ref": "d01470f6-63ba-40d5-bd4f-5332e40b828b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dfbb5c52-1ff6-4266-984a-dfc8a6149dc5"
        },
        "item": {
          "id": "5b51ba4c-5173-4ca3-a045-a720466cc525",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ded69b72-bd20-4749-bb22-f1cd2fd41bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cd1841-89c2-4b23-a315-e6534b4595d3",
        "cursor": {
          "ref": "d3d4e5a2-c776-4bb9-8f94-6ef396cb1f4e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0904b4ca-5dae-49bf-9b25-cc13e708f06a"
        },
        "item": {
          "id": "b7cd1841-89c2-4b23-a315-e6534b4595d3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9e8f117-e677-4904-b872-3de9a2ef2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce965cb-9abc-47ec-8b3e-43a25607231a",
        "cursor": {
          "ref": "dd7b859f-4e85-40f5-af72-8af77be65160",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "201ed895-a59a-4636-bc39-c2324302ddd4"
        },
        "item": {
          "id": "0ce965cb-9abc-47ec-8b3e-43a25607231a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a5cf15fd-60ae-4fea-9001-a657f2476b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391df77f-cae3-41f3-9acc-7834412bdb7e",
        "cursor": {
          "ref": "e3777fef-6b64-4524-bb10-ace22c9430fc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "64e43ebb-6d05-4549-9d7d-44c41e4cb252"
        },
        "item": {
          "id": "391df77f-cae3-41f3-9acc-7834412bdb7e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3cbed828-1939-4417-8c5a-f00cdec6f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d528e32a-92c1-4431-9311-57ab6dcfcedb",
        "cursor": {
          "ref": "f41aa493-fcf4-45c4-b5e3-ff43fc989824",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8540bd2a-80e2-46ab-bf04-3e171bfb741d"
        },
        "item": {
          "id": "d528e32a-92c1-4431-9311-57ab6dcfcedb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "efad926a-3a3f-4934-8e4f-6fb8668f51e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d835fd-d914-4d8f-9166-b5b1017a624c",
        "cursor": {
          "ref": "09fe15c6-3f87-4000-bc43-3f0864ad90eb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fa27d31a-91e9-4d7b-a714-500bbb745607"
        },
        "item": {
          "id": "c2d835fd-d914-4d8f-9166-b5b1017a624c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96ef338e-3bb2-4476-9ab5-f721814907c2",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e8856-d476-4fa2-a65a-ffaab508cf88",
        "cursor": {
          "ref": "a4c9feba-72f1-4b76-ae1f-c9a82dde6252",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "94b25088-fed9-41d1-aef4-521cd7a73111"
        },
        "item": {
          "id": "634e8856-d476-4fa2-a65a-ffaab508cf88",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d4915d60-f1f3-4383-807c-ebc3294e2744",
          "status": "OK",
          "code": 200,
          "responseTime": 2059,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bb21d-3072-48b3-a7ce-547d00eb74a5",
        "cursor": {
          "ref": "c68f8022-d738-402f-9113-9df1841adcf4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "42dd9799-1ee9-45e4-a576-adfde437f778"
        },
        "item": {
          "id": "ab2bb21d-3072-48b3-a7ce-547d00eb74a5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6abda6a1-c7e3-44ce-8c3b-fdbbdd7199b6",
          "status": "OK",
          "code": 200,
          "responseTime": 2483,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38779b47-b023-433b-bfa4-3e5470037018",
        "cursor": {
          "ref": "f08998cc-8d32-49f9-afd6-198af3e217db",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a4756fb6-d534-4ef5-8b07-85b773165f2f"
        },
        "item": {
          "id": "38779b47-b023-433b-bfa4-3e5470037018",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68127be-cd8e-4e3d-a430-a8c8f5c92e4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38779b47-b023-433b-bfa4-3e5470037018",
        "cursor": {
          "ref": "f08998cc-8d32-49f9-afd6-198af3e217db",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a4756fb6-d534-4ef5-8b07-85b773165f2f"
        },
        "item": {
          "id": "38779b47-b023-433b-bfa4-3e5470037018",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68127be-cd8e-4e3d-a430-a8c8f5c92e4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f46927-45cb-4aee-bc66-08469e7ef9a2",
        "cursor": {
          "ref": "7d7ffd33-ec80-4bbf-b2d3-e0591f0ba2c5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5659fa55-b492-49b0-97bb-8678f92510bc"
        },
        "item": {
          "id": "83f46927-45cb-4aee-bc66-08469e7ef9a2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "97763522-7825-4fa8-b6e0-48a927c8e42e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc39351-34fd-4765-b495-18a3f36ade0c",
        "cursor": {
          "ref": "90b65c9a-6457-4512-8904-c650f6a20b90",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cba7d1a1-39b2-4e75-b73f-8a8e2d5a66c2"
        },
        "item": {
          "id": "3cc39351-34fd-4765-b495-18a3f36ade0c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "34f2d6b8-7a86-4960-925c-f831786e26d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}